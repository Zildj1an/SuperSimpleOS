!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A2HData	Dns4.h	/^    DNS_ADDR_TO_HOST_DATA         *A2HData;$/;"	m	union:__anon464::__anon465
A2HData	Dns6.h	/^    DNS6_ADDR_TO_HOST_DATA      *A2HData;$/;"	m	union:__anon395::__anon396
ACPI_ADR_DEVICE_PATH	DevicePath.h	/^} ACPI_ADR_DEVICE_PATH;$/;"	t	typeref:struct:__anon33
ACPI_ADR_DISPLAY_TYPE_EXTERNAL_DIGITAL	DevicePath.h	303;"	d
ACPI_ADR_DISPLAY_TYPE_INTERNAL_DIGITAL	DevicePath.h	304;"	d
ACPI_ADR_DISPLAY_TYPE_OTHER	DevicePath.h	300;"	d
ACPI_ADR_DISPLAY_TYPE_TV	DevicePath.h	302;"	d
ACPI_ADR_DISPLAY_TYPE_VGA	DevicePath.h	301;"	d
ACPI_ADR_DP	DevicePath.h	265;"	d
ACPI_DEVICE_PATH	DevicePath.h	191;"	d
ACPI_DISPLAY_ADR	DevicePath.h	306;"	d
ACPI_DP	DevicePath.h	196;"	d
ACPI_EXTENDED_DP	DevicePath.h	218;"	d
ACPI_EXTENDED_HID_DEVICE_PATH	DevicePath.h	/^} ACPI_EXTENDED_HID_DEVICE_PATH;$/;"	t	typeref:struct:__anon32
ACPI_HID_DEVICE_PATH	DevicePath.h	/^} ACPI_HID_DEVICE_PATH;$/;"	t	typeref:struct:__anon31
ACPI_NVDIMM_DEVICE_PATH	DevicePath.h	/^} ACPI_NVDIMM_DEVICE_PATH;$/;"	t	typeref:struct:__anon34
ACPI_NVDIMM_DP	DevicePath.h	288;"	d
ACPI_RESOURCE_HEADER_PTR	SuperIo.h	/^} ACPI_RESOURCE_HEADER_PTR;$/;"	t	typeref:union:__anon224
ADR	DevicePath.h	/^  UINT32                          ADR;$/;"	m	struct:__anon33
AKMSuite	WiFi2.h	/^  EFI_80211_AKM_SUITE_SELECTOR              *AKMSuite;$/;"	m	struct:__anon308
AKMSuiteCount	WiFi2.h	/^  UINT16                                    AKMSuiteCount;$/;"	m	struct:__anon306
AKMSuiteList	WiFi2.h	/^  EFI_80211_SUITE_SELECTOR                  AKMSuiteList[1];$/;"	m	struct:__anon306
ARROW_DOWN	SimpleTextOut.h	98;"	d
ARROW_LEFT	SimpleTextOut.h	95;"	d
ARROW_RIGHT	SimpleTextOut.h	97;"	d
ARROW_UP	SimpleTextOut.h	96;"	d
ATAPI_DEVICE_PATH	DevicePath.h	/^} ATAPI_DEVICE_PATH;$/;"	t	typeref:struct:__anon35
AUTH_NODE_HEADER	AuthenticationInfo.h	/^} AUTH_NODE_HEADER;$/;"	t	typeref:struct:__anon362
AUTH_PERIOD_FIELD_VALID	EapManagement.h	77;"	d
AbortOnClose	Tcp4.h	/^  BOOLEAN                   AbortOnClose;$/;"	m	struct:__anon329
AbortOnClose	Tcp6.h	/^  BOOLEAN                   AbortOnClose;$/;"	m	struct:__anon480
AbortTransfer	UsbFunctionIo.h	/^  EFI_USBFN_IO_ABORT_TRANSFER               AbortTransfer;$/;"	m	struct:_EFI_USBFN_IO_PROTOCOL
AbsoluteMaxX	AbsolutePointer.h	/^  UINT64 AbsoluteMaxX; \/\/\/< The Absolute Maximum of the device on the x-axis. If 0, and the$/;"	m	struct:__anon331
AbsoluteMaxY	AbsolutePointer.h	/^  UINT64 AbsoluteMaxY; \/\/\/< The Absolute Maximum of the device on the y -axis. If 0, and the$/;"	m	struct:__anon331
AbsoluteMaxZ	AbsolutePointer.h	/^  UINT64 AbsoluteMaxZ; \/\/\/< The Absolute Maximum of the device on the z-axis. If 0 , and the$/;"	m	struct:__anon331
AbsoluteMinX	AbsolutePointer.h	/^  UINT64 AbsoluteMinX; \/\/\/< The Absolute Minimum of the device on the x-axis$/;"	m	struct:__anon331
AbsoluteMinY	AbsolutePointer.h	/^  UINT64 AbsoluteMinY; \/\/\/< The Absolute Minimum of the device on the y axis.$/;"	m	struct:__anon331
AbsoluteMinZ	AbsolutePointer.h	/^  UINT64 AbsoluteMinZ; \/\/\/< The Absolute Minimum of the device on the z-axis$/;"	m	struct:__anon331
Acb	AtaPassThru.h	/^  EFI_ATA_COMMAND_BLOCK          *Acb;$/;"	m	struct:__anon128
Accept	Tcp4.h	/^  EFI_TCP4_ACCEPT                        Accept;$/;"	m	struct:_EFI_TCP4_PROTOCOL
Accept	Tcp6.h	/^  EFI_TCP6_ACCEPT         Accept;$/;"	m	struct:_EFI_TCP6_PROTOCOL
AcceptAnyPort	Udp4.h	/^  BOOLEAN            AcceptAnyPort;$/;"	m	struct:__anon375
AcceptAnyPort	Udp6.h	/^  BOOLEAN           AcceptAnyPort;$/;"	m	struct:__anon87
AcceptAnyProtocol	Ip4.h	/^  BOOLEAN                 AcceptAnyProtocol;$/;"	m	struct:__anon335
AcceptAnyProtocol	Ip6.h	/^  BOOLEAN                 AcceptAnyProtocol;$/;"	m	struct:__anon399
AcceptAnyResponse	PxeBaseCode.h	/^  BOOLEAN         AcceptAnyResponse;$/;"	m	struct:__anon109
AcceptBroadcast	Ip4.h	/^  BOOLEAN                 AcceptBroadcast;$/;"	m	struct:__anon335
AcceptBroadcast	Udp4.h	/^  BOOLEAN            AcceptBroadcast;$/;"	m	struct:__anon375
AcceptIcmpErrors	Ip4.h	/^  BOOLEAN                 AcceptIcmpErrors;$/;"	m	struct:__anon335
AcceptIcmpErrors	Ip6.h	/^  BOOLEAN                 AcceptIcmpErrors;$/;"	m	struct:__anon399
AcceptPromiscuous	Ip4.h	/^  BOOLEAN                 AcceptPromiscuous;$/;"	m	struct:__anon335
AcceptPromiscuous	Ip6.h	/^  BOOLEAN                 AcceptPromiscuous;$/;"	m	struct:__anon399
AcceptPromiscuous	Udp4.h	/^  BOOLEAN            AcceptPromiscuous;$/;"	m	struct:__anon375
AcceptPromiscuous	Udp6.h	/^  BOOLEAN           AcceptPromiscuous;$/;"	m	struct:__anon87
AccessNetworkType	WiFi.h	/^  EFI_80211_ACC_NET_TYPE             AccessNetworkType;$/;"	m	struct:__anon189
AccessPoint	Http.h	/^  } AccessPoint;$/;"	m	struct:__anon524	typeref:union:__anon524::__anon525
AccessPoint	Tcp4.h	/^  EFI_TCP4_ACCESS_POINT   AccessPoint;$/;"	m	struct:__anon319
AccessPoint	Tcp6.h	/^  EFI_TCP6_ACCESS_POINT AccessPoint;$/;"	m	struct:__anon470
Ack	Mtftp4.h	/^  EFI_MTFTP4_ACK_HEADER   Ack;$/;"	m	union:__anon432
Ack	Mtftp6.h	/^  EFI_MTFTP6_ACK_HEADER    Ack;    \/\/\/< Acknowledgement packet header.$/;"	m	union:__anon556
Ack8	Mtftp4.h	/^  EFI_MTFTP4_ACK8_HEADER  Ack8;$/;"	m	union:__anon432
Ack8	Mtftp6.h	/^  EFI_MTFTP6_ACK8_HEADER   Ack8;   \/\/\/< Acknowledgement header with big block number.$/;"	m	union:__anon556
Acpi	DevicePath.h	/^  ACPI_HID_DEVICE_PATH                       *Acpi;$/;"	m	union:__anon76
Acpi	DevicePath.h	/^  ACPI_HID_DEVICE_PATH                       Acpi;$/;"	m	union:__anon75
AcpiAdr	DevicePath.h	/^  ACPI_ADR_DEVICE_PATH                       *AcpiAdr;$/;"	m	union:__anon76
AcpiAdr	DevicePath.h	/^  ACPI_ADR_DEVICE_PATH                       AcpiAdr;$/;"	m	union:__anon75
AcpiVersion	AcpiSystemDescriptionTable.h	/^  EFI_ACPI_TABLE_VERSION    AcpiVersion;$/;"	m	struct:_EFI_ACPI_SDT_PROTOCOL
Acquired	EapManagement.h	/^  Acquired,$/;"	e	enum:_EFI_EAPOL_SUPPLICANT_PAE_STATE
Action	IpSecConfig.h	/^  EFI_IPSEC_ACTION                Action;$/;"	m	struct:_EFI_IPSEC_SPD_DATA
Active	Ftp4.h	/^  BOOLEAN                              Active;$/;"	m	struct:__anon443
ActiveButtons	AbsolutePointer.h	/^  UINT32 ActiveButtons;$/;"	m	struct:__anon332
ActiveFlag	Tcp4.h	/^  BOOLEAN                 ActiveFlag;$/;"	m	struct:__anon317
ActiveFlag	Tcp6.h	/^  BOOLEAN           ActiveFlag;$/;"	m	struct:__anon468
ActivePcrBanks	Tcg2Protocol.h	/^  EFI_TCG2_EVENT_ALGORITHM_BITMAP  ActivePcrBanks;$/;"	m	struct:tdEFI_TCG2_BOOT_SERVICE_CAPABILITY
AdapterId	ScsiPassThru.h	/^  UINT32  AdapterId;$/;"	m	struct:__anon167
AdapterId	ScsiPassThruExt.h	/^  UINT32 AdapterId;$/;"	m	struct:__anon438
Add	Arp.h	/^  EFI_ARP_ADD               Add;$/;"	m	struct:_EFI_ARP_PROTOCOL
Add	Smbios.h	/^  EFI_SMBIOS_ADD           Add;$/;"	m	struct:_EFI_SMBIOS_PROTOCOL
AddKey	Kms.h	/^  EFI_KMS_ADD_KEY                   AddKey;$/;"	m	struct:_EFI_KMS_PROTOCOL
AddKeyAttributes	Kms.h	/^  EFI_KMS_ADD_KEY_ATTRIBUTES        AddKeyAttributes;$/;"	m	struct:_EFI_KMS_PROTOCOL
Addr	Supplicant.h	/^  EFI_80211_MAC_ADDRESS                   Addr;$/;"	m	struct:__anon123
Addr	WiFi2.h	/^  UINT8                              Addr[6];$/;"	m	struct:__anon302
Address	DevicePath.h	/^  BLUETOOTH_LE_ADDRESS            Address;$/;"	m	struct:__anon65
Address	Ip4Config2.h	/^  EFI_IPv4_ADDRESS        Address;$/;"	m	struct:__anon7
Address	Ip6.h	/^  EFI_IPv6_ADDRESS        Address;       \/\/\/< The IPv6 address.$/;"	m	struct:__anon400
Address	Ip6Config.h	/^  EFI_IPv6_ADDRESS      Address;       \/\/\/< The IPv6 unicast address.$/;"	m	struct:__anon18
Address	IpSecConfig.h	/^  EFI_IP_ADDRESS  Address;      \/\/\/< The IPv4 or IPv6 address$/;"	m	struct:_EFI_IP_ADDRESS_INFO
Address	MmIoTrapDispatch.h	/^  UINT16                         Address;$/;"	m	struct:__anon100
AddressAbstractionGuid	NvdimmLabel.h	/^  EFI_GUID AddressAbstractionGuid;$/;"	m	struct:__anon261
AddressCount	Ip4.h	/^  UINT32                  AddressCount;$/;"	m	struct:__anon334
AddressCount	Ip6.h	/^  UINT32                  AddressCount;$/;"	m	struct:__anon398
AddressCount	Ip6.h	/^  UINT32                  AddressCount;$/;"	m	struct:__anon405
AddressInfo	Ip6Config.h	/^  EFI_IP6_ADDRESS_INFO  *AddressInfo;$/;"	m	struct:__anon14
AddressInfoCount	Ip6Config.h	/^  UINT32                AddressInfoCount;$/;"	m	struct:__anon14
AddressLength	ManagedNetwork.h	/^  UINT32        AddressLength;$/;"	m	struct:__anon174
AddressList	Ip6.h	/^  EFI_IP6_ADDRESS_INFO    *AddressList;$/;"	m	struct:__anon405
AddressPairs	Ip4.h	/^  EFI_IP4_ADDRESS_PAIR    AddressPairs[1];$/;"	m	struct:__anon334
AddressPairs	Ip6.h	/^  EFI_IP6_ADDRESS_PAIR    AddressPairs[1];$/;"	m	struct:__anon398
AdvertisementData	BluetoothAttribute.h	/^  VOID                 *AdvertisementData;$/;"	m	struct:__anon161
AdvertisementData	BluetoothLeConfig.h	/^  VOID                 *AdvertisementData;$/;"	m	struct:__anon564
AdvertisementDataSize	BluetoothAttribute.h	/^  UINTN                AdvertisementDataSize;$/;"	m	struct:__anon161
AdvertisementDataSize	BluetoothLeConfig.h	/^  UINTN                AdvertisementDataSize;$/;"	m	struct:__anon564
AdvertisementFlagFilter	BluetoothLeConfig.h	/^  UINT8                     AdvertisementFlagFilter;$/;"	m	struct:__anon563
AfterPciHostBridge	PciPlatform.h	/^  AfterPciHostBridge = 1,$/;"	e	enum:__anon246
AhAlgoInfo	IpSecConfig.h	/^  EFI_IPSEC_AH_ALGO_INFO          AhAlgoInfo;$/;"	m	union:__anon452
AlgoInfo	IpSecConfig.h	/^  EFI_IPSEC_ALGO_INFO             AlgoInfo;$/;"	m	struct:_EFI_IPSEC_SA_DATA
AlgoInfo	IpSecConfig.h	/^  EFI_IPSEC_ALGO_INFO        AlgoInfo;$/;"	m	struct:_EFI_IPSEC_SA_DATA2
Algorithm	BlockIoCrypto.h	/^  EFI_GUID       Algorithm;$/;"	m	struct:__anon348
AlgorithmID	Bis.h	/^  BIS_ALG_ID  AlgorithmID;    \/\/\/< A signature algorithm number.$/;"	m	struct:__anon172
Alignment	NvdimmLabel.h	/^  UINT8    Alignment;$/;"	m	struct:__anon261
AllocateBuffer	DeviceIo.h	/^  EFI_IO_ALLOCATE_BUFFER  AllocateBuffer;$/;"	m	struct:_EFI_DEVICE_IO_PROTOCOL
AllocateBuffer	PciIo.h	/^  EFI_PCI_IO_PROTOCOL_ALLOCATE_BUFFER     AllocateBuffer;$/;"	m	struct:_EFI_PCI_IO_PROTOCOL
AllocateBuffer	PciRootBridgeIo.h	/^  EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_ALLOCATE_BUFFER AllocateBuffer;$/;"	m	struct:_EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL
AllocateTransferBuffer	UsbFunctionIo.h	/^  EFI_USBFN_IO_ALLOCATE_TRANSFER_BUFFER     AllocateTransferBuffer;$/;"	m	struct:_EFI_USBFN_IO_PROTOCOL
AllowDuplicatePort	Udp4.h	/^  BOOLEAN            AllowDuplicatePort;$/;"	m	struct:__anon375
AllowDuplicatePort	Udp6.h	/^  BOOLEAN           AllowDuplicatePort;$/;"	m	struct:__anon87
AltDataPort	Ftp4.h	/^  UINT16                               AltDataPort;$/;"	m	struct:__anon443
AndMask	SuperIo.h	/^  UINT8 AndMask;        \/\/\/< Bitwise AND mask.$/;"	m	struct:__anon225
AntiReplayWindows	IpSecConfig.h	/^  UINT8                           AntiReplayWindows;$/;"	m	struct:_EFI_IPSEC_SA_DATA
AntiReplayWindows	IpSecConfig.h	/^  UINT8                      AntiReplayWindows;$/;"	m	struct:_EFI_IPSEC_SA_DATA2
AppVersion	TapeIo.h	/^  CHAR8      AppVersion[40];$/;"	m	struct:_EFI_TAPE_HEADER
AppendDeviceNode	DevicePathUtilities.h	/^  EFI_DEVICE_PATH_UTILS_APPEND_NODE          AppendDeviceNode;$/;"	m	struct:__anon147
AppendDevicePath	DevicePathUtilities.h	/^  EFI_DEVICE_PATH_UTILS_APPEND_PATH          AppendDevicePath;$/;"	m	struct:__anon147
AppendDevicePathInstance	DevicePathUtilities.h	/^  EFI_DEVICE_PATH_UTILS_APPEND_INSTANCE      AppendDevicePathInstance;$/;"	m	struct:__anon147
ArBsp	DebugSupport.h	/^  UINT64  ArBsp;$/;"	m	struct:__anon490
ArBspstore	DebugSupport.h	/^  UINT64  ArBspstore;$/;"	m	struct:__anon490
ArCcv	DebugSupport.h	/^  UINT64  ArCcv;$/;"	m	struct:__anon490
ArCflg	DebugSupport.h	/^  UINT64  ArCflg;$/;"	m	struct:__anon490
ArCsd	DebugSupport.h	/^  UINT64  ArCsd;$/;"	m	struct:__anon490
ArEc	DebugSupport.h	/^  UINT64  ArEc;$/;"	m	struct:__anon490
ArEflag	DebugSupport.h	/^  UINT64  ArEflag;$/;"	m	struct:__anon490
ArFcr	DebugSupport.h	/^  UINT64  ArFcr;$/;"	m	struct:__anon490
ArFdr	DebugSupport.h	/^  UINT64  ArFdr;$/;"	m	struct:__anon490
ArFir	DebugSupport.h	/^  UINT64  ArFir;$/;"	m	struct:__anon490
ArFpsr	DebugSupport.h	/^  UINT64  ArFpsr;$/;"	m	struct:__anon490
ArFsr	DebugSupport.h	/^  UINT64  ArFsr;$/;"	m	struct:__anon490
ArLc	DebugSupport.h	/^  UINT64  ArLc;$/;"	m	struct:__anon490
ArPfs	DebugSupport.h	/^  UINT64  ArPfs;$/;"	m	struct:__anon490
ArRnat	DebugSupport.h	/^  UINT64  ArRnat;$/;"	m	struct:__anon490
ArRsc	DebugSupport.h	/^  UINT64  ArRsc;$/;"	m	struct:__anon490
ArSsd	DebugSupport.h	/^  UINT64  ArSsd;$/;"	m	struct:__anon490
ArUnat	DebugSupport.h	/^  UINT64  ArUnat;$/;"	m	struct:__anon490
Argc	ShellParameters.h	/^  UINTN Argc;$/;"	m	struct:_EFI_SHELL_PARAMETERS_PROTOCOL
Argv	ShellParameters.h	/^  CHAR16 **Argv;$/;"	m	struct:_EFI_SHELL_PARAMETERS_PROTOCOL
Arp	PxeBaseCode.h	/^  EFI_PXE_BASE_CODE_ARP             Arp;$/;"	m	struct:_EFI_PXE_BASE_CODE_PROTOCOL
ArpCache	PxeBaseCode.h	/^  EFI_PXE_BASE_CODE_ARP_ENTRY   ArpCache[EFI_PXE_BASE_CODE_MAX_ARP_ENTRIES];$/;"	m	struct:__anon116
ArpCacheEntries	PxeBaseCode.h	/^  UINT32                        ArpCacheEntries;$/;"	m	struct:__anon116
ArpDevice	SmbusHc.h	/^  EFI_SMBUS_HC_PROTOCOL_ARP_DEVICE  ArpDevice;$/;"	m	struct:_EFI_SMBUS_HC_PROTOCOL
Asb	AtaPassThru.h	/^  EFI_ATA_STATUS_BLOCK           *Asb;$/;"	m	struct:__anon128
Associate	WiFi.h	/^  EFI_WIRELESS_MAC_CONNECTION_ASSOCIATE          Associate;$/;"	m	struct:_EFI_WIRELESS_MAC_CONNECTION_PROTOCOL
AssociateRefusedAPOutOfMemory	WiFi.h	/^  AssociateRefusedAPOutOfMemory,$/;"	e	enum:__anon180
AssociateRefusedBasicRatesMismatch	WiFi.h	/^  AssociateRefusedBasicRatesMismatch,$/;"	e	enum:__anon180
AssociateRefusedCapsMismatch	WiFi.h	/^  AssociateRefusedCapsMismatch,$/;"	e	enum:__anon180
AssociateRefusedExtReason	WiFi.h	/^  AssociateRefusedExtReason,$/;"	e	enum:__anon180
AssociateRefusedReasonUnspecified	WiFi.h	/^  AssociateRefusedReasonUnspecified,$/;"	e	enum:__anon180
AssociateRefusedTemporarily	WiFi.h	/^  AssociateRefusedTemporarily$/;"	e	enum:__anon180
AssociateRejectedEmergencyServicesNotSupported	WiFi.h	/^  AssociateRejectedEmergencyServicesNotSupported,$/;"	e	enum:__anon180
AssociateSuccess	WiFi.h	/^  AssociateSuccess,$/;"	e	enum:__anon180
AssociationID	WiFi.h	/^  UINT16                             AssociationID;$/;"	m	struct:__anon207
AsyncInterruptTransfer	Usb2HostController.h	/^  EFI_USB2_HC_PROTOCOL_ASYNC_INTERRUPT_TRANSFER    AsyncInterruptTransfer;$/;"	m	struct:_EFI_USB2_HC_PROTOCOL
AsyncInterruptTransfer	UsbHostController.h	/^  EFI_USB_HC_PROTOCOL_ASYNC_INTERRUPT_TRANSFER    AsyncInterruptTransfer;$/;"	m	struct:_EFI_USB_HC_PROTOCOL
AsyncIsochronousTransfer	Usb2HostController.h	/^  EFI_USB2_HC_PROTOCOL_ASYNC_ISOCHRONOUS_TRANSFER  AsyncIsochronousTransfer;$/;"	m	struct:_EFI_USB2_HC_PROTOCOL
AsyncIsochronousTransfer	UsbHostController.h	/^  EFI_USB_HC_PROTOCOL_ASYNC_ISOCHRONOUS_TRANSFER  AsyncIsochronousTransfer;$/;"	m	struct:_EFI_USB_HC_PROTOCOL
AsyncReceiveACLData	BluetoothHc.h	/^  EFI_BLUETOOTH_HC_ASYNC_RECEIVE_ACL_DATA     AsyncReceiveACLData;$/;"	m	struct:_EFI_BLUETOOTH_HC_PROTOCOL
AsyncReceiveEvent	BluetoothHc.h	/^  EFI_BLUETOOTH_HC_ASYNC_RECEIVE_EVENT        AsyncReceiveEvent;$/;"	m	struct:_EFI_BLUETOOTH_HC_PROTOCOL
AsyncReceiveSCOData	BluetoothHc.h	/^  EFI_BLUETOOTH_HC_ASYNC_RECEIVE_SCO_DATA     AsyncReceiveSCOData;$/;"	m	struct:_EFI_BLUETOOTH_HC_PROTOCOL
AtRuntime	Runtime.h	/^  BOOLEAN                 AtRuntime;    \/\/\/< Boolean that is TRUE if ExitBootServices () has been called.$/;"	m	struct:_EFI_RUNTIME_ARCH_PROTOCOL
AtaCommand	AtaPassThru.h	/^  UINT8 AtaCommand;$/;"	m	struct:_EFI_ATA_COMMAND_BLOCK
AtaCylinderHigh	AtaPassThru.h	/^  UINT8 AtaCylinderHigh;$/;"	m	struct:_EFI_ATA_COMMAND_BLOCK
AtaCylinderHigh	AtaPassThru.h	/^  UINT8 AtaCylinderHigh;$/;"	m	struct:_EFI_ATA_STATUS_BLOCK
AtaCylinderHighExp	AtaPassThru.h	/^  UINT8 AtaCylinderHighExp;$/;"	m	struct:_EFI_ATA_COMMAND_BLOCK
AtaCylinderHighExp	AtaPassThru.h	/^  UINT8 AtaCylinderHighExp;$/;"	m	struct:_EFI_ATA_STATUS_BLOCK
AtaCylinderLow	AtaPassThru.h	/^  UINT8 AtaCylinderLow;$/;"	m	struct:_EFI_ATA_COMMAND_BLOCK
AtaCylinderLow	AtaPassThru.h	/^  UINT8 AtaCylinderLow;$/;"	m	struct:_EFI_ATA_STATUS_BLOCK
AtaCylinderLowExp	AtaPassThru.h	/^  UINT8 AtaCylinderLowExp;$/;"	m	struct:_EFI_ATA_COMMAND_BLOCK
AtaCylinderLowExp	AtaPassThru.h	/^  UINT8 AtaCylinderLowExp;$/;"	m	struct:_EFI_ATA_STATUS_BLOCK
AtaData	IdeControllerInit.h	/^  EFI_ATA_IDENTIFY_DATA       AtaData;$/;"	m	union:__anon134
AtaDeviceHead	AtaPassThru.h	/^  UINT8 AtaDeviceHead;$/;"	m	struct:_EFI_ATA_COMMAND_BLOCK
AtaDeviceHead	AtaPassThru.h	/^  UINT8 AtaDeviceHead;$/;"	m	struct:_EFI_ATA_STATUS_BLOCK
AtaError	AtaPassThru.h	/^  UINT8 AtaError;$/;"	m	struct:_EFI_ATA_STATUS_BLOCK
AtaFeatures	AtaPassThru.h	/^  UINT8 AtaFeatures;$/;"	m	struct:_EFI_ATA_COMMAND_BLOCK
AtaFeaturesExp	AtaPassThru.h	/^  UINT8 AtaFeaturesExp;$/;"	m	struct:_EFI_ATA_COMMAND_BLOCK
AtaSectorCount	AtaPassThru.h	/^  UINT8 AtaSectorCount;$/;"	m	struct:_EFI_ATA_COMMAND_BLOCK
AtaSectorCount	AtaPassThru.h	/^  UINT8 AtaSectorCount;$/;"	m	struct:_EFI_ATA_STATUS_BLOCK
AtaSectorCountExp	AtaPassThru.h	/^  UINT8 AtaSectorCountExp;$/;"	m	struct:_EFI_ATA_COMMAND_BLOCK
AtaSectorCountExp	AtaPassThru.h	/^  UINT8 AtaSectorCountExp;$/;"	m	struct:_EFI_ATA_STATUS_BLOCK
AtaSectorNumber	AtaPassThru.h	/^  UINT8 AtaSectorNumber;$/;"	m	struct:_EFI_ATA_COMMAND_BLOCK
AtaSectorNumber	AtaPassThru.h	/^  UINT8 AtaSectorNumber;$/;"	m	struct:_EFI_ATA_STATUS_BLOCK
AtaSectorNumberExp	AtaPassThru.h	/^  UINT8 AtaSectorNumberExp;$/;"	m	struct:_EFI_ATA_COMMAND_BLOCK
AtaSectorNumberExp	AtaPassThru.h	/^  UINT8 AtaSectorNumberExp;$/;"	m	struct:_EFI_ATA_STATUS_BLOCK
AtaStatus	AtaPassThru.h	/^  UINT8 AtaStatus;$/;"	m	struct:_EFI_ATA_STATUS_BLOCK
Atapi	DevicePath.h	/^  ATAPI_DEVICE_PATH                          *Atapi;$/;"	m	union:__anon76
Atapi	DevicePath.h	/^  ATAPI_DEVICE_PATH                          Atapi;$/;"	m	union:__anon75
AtapiData	IdeControllerInit.h	/^  EFI_ATAPI_IDENTIFY_DATA     AtapiData;$/;"	m	union:__anon134
Attribute	LegacyRegion2.h	/^  EFI_LEGACY_REGION_ATTRIBUTE Attribute;$/;"	m	struct:__anon485
Attribute	SimpleTextOut.h	/^  INT32   Attribute;$/;"	m	struct:__anon218
AttributeHandle	BluetoothAttribute.h	/^  UINT16                             AttributeHandle;$/;"	m	struct:__anon152
AttributeHandle	BluetoothAttribute.h	/^  UINT16                    AttributeHandle;$/;"	m	struct:__anon157
AttributeHandle	BluetoothAttribute.h	/^  UINT16                    AttributeHandle;$/;"	m	struct:__anon158
AttributeOpCode	BluetoothAttribute.h	/^  UINT8                                                      AttributeOpCode;$/;"	m	struct:__anon159
AttributePermission	BluetoothAttribute.h	/^  EFI_BLUETOOTH_ATTRIBUTE_PERMISSION AttributePermission;$/;"	m	struct:__anon152
Attributes	AbsolutePointer.h	/^  UINT32 Attributes;   \/\/\/< The following bits are set as needed (or'd together) to indicate the$/;"	m	struct:__anon331
Attributes	AtaPassThru.h	/^  UINT32 Attributes;$/;"	m	struct:__anon127
Attributes	MmMp.h	/^  UINT32                            Attributes;$/;"	m	struct:_EFI_MM_MP_PROTOCOL
Attributes	NvmExpressPassthru.h	/^  UINT32          Attributes;$/;"	m	struct:__anon541
Attributes	PciIo.h	/^  EFI_PCI_IO_PROTOCOL_ATTRIBUTES          Attributes;$/;"	m	struct:_EFI_PCI_IO_PROTOCOL
Attributes	ScsiPassThru.h	/^  UINT32  Attributes;$/;"	m	struct:__anon167
Attributes	ScsiPassThruExt.h	/^  UINT32 Attributes;$/;"	m	struct:__anon438
Attributes	SpiConfiguration.h	/^  UINT32                   Attributes;$/;"	m	struct:_EFI_SPI_PERIPHERAL
Attributes	SpiHc.h	/^  UINT32                          Attributes;$/;"	m	struct:_EFI_SPI_HC_PROTOCOL
Attributes	SpiIo.h	/^  UINT32                                    Attributes;$/;"	m	struct:_EFI_SPI_IO_PROTOCOL
AttributesSetting	FirmwareManagement.h	/^  UINT64                           AttributesSetting;$/;"	m	struct:__anon10
AttributesSupported	FirmwareManagement.h	/^  UINT64                           AttributesSupported;$/;"	m	struct:__anon10
AuthAlgoId	IpSecConfig.h	/^  UINT8                           AuthAlgoId;$/;"	m	struct:_EFI_IPSEC_AH_ALGO_INFO
AuthAlgoId	IpSecConfig.h	/^  UINT8                     AuthAlgoId;$/;"	m	struct:_EFI_IPSEC_ESP_ALGO_INFO
AuthAlgoId	IpSecConfig.h	/^  UINT8                   AuthAlgoId;$/;"	m	struct:_EFI_IPSEC_PROCESS_POLICY
AuthData	IpSecConfig.h	/^  VOID                          *AuthData;$/;"	m	struct:_EFI_IPSEC_PAD_DATA
AuthDataSize	IpSecConfig.h	/^  UINTN                         AuthDataSize;$/;"	m	struct:_EFI_IPSEC_PAD_DATA
AuthInfo	FirmwareManagement.h	/^  WIN_CERTIFICATE_UEFI_GUID               AuthInfo;$/;"	m	struct:__anon11
AuthKey	IpSecConfig.h	/^  VOID                            *AuthKey;$/;"	m	struct:_EFI_IPSEC_AH_ALGO_INFO
AuthKey	IpSecConfig.h	/^  VOID                      *AuthKey;$/;"	m	struct:_EFI_IPSEC_ESP_ALGO_INFO
AuthKeyLength	IpSecConfig.h	/^  UINTN                           AuthKeyLength;$/;"	m	struct:_EFI_IPSEC_AH_ALGO_INFO
AuthKeyLength	IpSecConfig.h	/^  UINTN                     AuthKeyLength;$/;"	m	struct:_EFI_IPSEC_ESP_ALGO_INFO
AuthMethod	IpSecConfig.h	/^  EFI_IPSEC_AUTH_METHOD         AuthMethod;$/;"	m	struct:_EFI_IPSEC_PAD_DATA
AuthPeriod	EapManagement.h	/^  UINTN       AuthPeriod;$/;"	m	struct:_EFI_EAPOL_SUPPLICANT_PAE_CONFIGURATION
AuthProtocol	IpSecConfig.h	/^  EFI_IPSEC_AUTH_PROTOCOL_TYPE  AuthProtocol;$/;"	m	struct:_EFI_IPSEC_PAD_DATA
AuthType	WiFi.h	/^  EFI_80211_AUTHENTICATION_TYPE      AuthType;$/;"	m	struct:__anon211
Authenticate	WiFi.h	/^  EFI_WIRELESS_MAC_CONNECTION_AUTHENTICATE       Authenticate;$/;"	m	struct:_EFI_WIRELESS_MAC_CONNECTION_PROTOCOL
AuthenticateAnticLoggingTokenRequired	WiFi.h	/^  AuthenticateAnticLoggingTokenRequired,$/;"	e	enum:__anon185
AuthenticateFiniteCyclicGroupNotSupported	WiFi.h	/^  AuthenticateFiniteCyclicGroupNotSupported,$/;"	e	enum:__anon185
AuthenticateInvalidParameter	WiFi.h	/^  AuthenticateInvalidParameter$/;"	e	enum:__anon185
AuthenticateRefused	WiFi.h	/^  AuthenticateRefused,$/;"	e	enum:__anon185
AuthenticateSuccess	WiFi.h	/^  AuthenticateSuccess,$/;"	e	enum:__anon185
Authenticated	EapManagement.h	/^  Authenticated,$/;"	e	enum:_EFI_EAPOL_SUPPLICANT_PAE_STATE
Authenticating	EapManagement.h	/^  Authenticating,$/;"	e	enum:_EFI_EAPOL_SUPPLICANT_PAE_STATE
AuthenticationRejected	WiFi.h	/^  AuthenticationRejected,$/;"	e	enum:__anon185
AutoArp	PxeBaseCode.h	/^  BOOLEAN                       AutoArp;$/;"	m	struct:__anon116
AyncSendReceive	RestEx.h	/^  EFI_REST_EX_ASYNC_SEND_RECEIVE AyncSendReceive;$/;"	m	struct:_EFI_REST_EX_PROTOCOL
B0	DebugSupport.h	/^  UINT64  B0;$/;"	m	struct:__anon490
B1	DebugSupport.h	/^  UINT64  B1;$/;"	m	struct:__anon490
B2	DebugSupport.h	/^  UINT64  B2;$/;"	m	struct:__anon490
B3	DebugSupport.h	/^  UINT64  B3;$/;"	m	struct:__anon490
B4	DebugSupport.h	/^  UINT64  B4;$/;"	m	struct:__anon490
B5	DebugSupport.h	/^  UINT64  B5;$/;"	m	struct:__anon490
B6	DebugSupport.h	/^  UINT64  B6;$/;"	m	struct:__anon490
B7	DebugSupport.h	/^  UINT64  B7;$/;"	m	struct:__anon490
BBS_BBS_DEVICE_PATH	DevicePath.h	/^} BBS_BBS_DEVICE_PATH;$/;"	t	typeref:struct:__anon74
BBS_BBS_DP	DevicePath.h	1219;"	d
BBS_DEVICE_PATH	DevicePath.h	1214;"	d
BBS_TYPE_BEV	DevicePath.h	1249;"	d
BBS_TYPE_CDROM	DevicePath.h	1245;"	d
BBS_TYPE_EMBEDDED_NETWORK	DevicePath.h	1248;"	d
BBS_TYPE_FLOPPY	DevicePath.h	1243;"	d
BBS_TYPE_HARDDRIVE	DevicePath.h	1244;"	d
BBS_TYPE_PCMCIA	DevicePath.h	1246;"	d
BBS_TYPE_UNKNOWN	DevicePath.h	1250;"	d
BBS_TYPE_USB	DevicePath.h	1247;"	d
BDAddr	BluetoothConfig.h	/^  BLUETOOTH_ADDRESS         BDAddr;$/;"	m	struct:__anon268
BDAddr	BluetoothLeConfig.h	/^  BLUETOOTH_LE_ADDRESS BDAddr;$/;"	m	struct:__anon564
BD_ADDR	BluetoothAttribute.h	/^  BLUETOOTH_LE_ADDRESS BD_ADDR;$/;"	m	struct:__anon161
BD_ADDR	BluetoothIo.h	/^  BLUETOOTH_ADDRESS           BD_ADDR;$/;"	m	struct:__anon418
BD_ADDR	DevicePath.h	/^  BLUETOOTH_ADDRESS               BD_ADDR;$/;"	m	struct:__anon63
BIS_ALG_DSA	Bis.h	83;"	d
BIS_ALG_ID	Bis.h	/^typedef UINT16  BIS_ALG_ID;$/;"	t
BIS_ALG_RSA_MD5	Bis.h	84;"	d
BIS_APPLICATION_HANDLE	Bis.h	/^typedef VOID    *BIS_APPLICATION_HANDLE;$/;"	t
BIS_CERT_ID	Bis.h	/^typedef UINT32  BIS_CERT_ID;$/;"	t
BIS_CERT_ID_DSA	Bis.h	88;"	d
BIS_CERT_ID_MASK	Bis.h	96;"	d
BIS_CERT_ID_RSA_MD5	Bis.h	89;"	d
BIS_CURRENT_VERSION_MAJOR	Bis.h	66;"	d
BIS_GET_SIGINFO_ARRAY	Bis.h	111;"	d
BIS_GET_SIGINFO_COUNT	Bis.h	105;"	d
BIS_VERSION_1	Bis.h	67;"	d
BLBlocksize	TapeIo.h	/^  UINT32     BLBlocksize;$/;"	m	struct:_EFI_TAPE_HEADER
BLFilesize	TapeIo.h	/^  UINT32     BLFilesize;$/;"	m	struct:_EFI_TAPE_HEADER
BLLocation	TapeIo.h	/^  UINT32     BLLocation;$/;"	m	struct:_EFI_TAPE_HEADER
BLOCKELEMENT_FULL_BLOCK	SimpleTextOut.h	81;"	d
BLOCKELEMENT_LIGHT_SHADE	SimpleTextOut.h	82;"	d
BLOCK_IO_PROTOCOL	BlockIo.h	25;"	d
BLUETOOTH_DEVICE_PATH	DevicePath.h	/^} BLUETOOTH_DEVICE_PATH;$/;"	t	typeref:struct:__anon63
BLUETOOTH_IS_ATTRIBUTE_OF_TYPE	BluetoothAttribute.h	48;"	d
BLUETOOTH_LE_DEVICE_PATH	DevicePath.h	/^} BLUETOOTH_LE_DEVICE_PATH;$/;"	t	typeref:struct:__anon65
BMC_DEVICE_PATH	DevicePath.h	/^} BMC_DEVICE_PATH;$/;"	t	typeref:struct:__anon30
BOOT_OBJECT_AUTHORIZATION_PARMSET_GUID	Bis.h	27;"	d
BOOT_OBJECT_AUTHORIZATION_PARMSET_GUIDVALUE	Bis.h	116;"	d
BOXDRAW_DOUBLE_DOWN_HORIZONTAL	SimpleTextOut.h	70;"	d
BOXDRAW_DOUBLE_DOWN_LEFT	SimpleTextOut.h	55;"	d
BOXDRAW_DOUBLE_DOWN_RIGHT	SimpleTextOut.h	52;"	d
BOXDRAW_DOUBLE_HORIZONTAL	SimpleTextOut.h	48;"	d
BOXDRAW_DOUBLE_UP_HORIZONTAL	SimpleTextOut.h	73;"	d
BOXDRAW_DOUBLE_UP_LEFT	SimpleTextOut.h	61;"	d
BOXDRAW_DOUBLE_UP_RIGHT	SimpleTextOut.h	58;"	d
BOXDRAW_DOUBLE_VERTICAL	SimpleTextOut.h	49;"	d
BOXDRAW_DOUBLE_VERTICAL_HORIZONTAL	SimpleTextOut.h	76;"	d
BOXDRAW_DOUBLE_VERTICAL_LEFT	SimpleTextOut.h	67;"	d
BOXDRAW_DOUBLE_VERTICAL_RIGHT	SimpleTextOut.h	64;"	d
BOXDRAW_DOWN_DOUBLE_HORIZONTAL	SimpleTextOut.h	69;"	d
BOXDRAW_DOWN_DOUBLE_LEFT	SimpleTextOut.h	54;"	d
BOXDRAW_DOWN_DOUBLE_RIGHT	SimpleTextOut.h	51;"	d
BOXDRAW_DOWN_HORIZONTAL	SimpleTextOut.h	45;"	d
BOXDRAW_DOWN_HORIZONTAL_DOUBLE	SimpleTextOut.h	68;"	d
BOXDRAW_DOWN_LEFT	SimpleTextOut.h	40;"	d
BOXDRAW_DOWN_LEFT_DOUBLE	SimpleTextOut.h	53;"	d
BOXDRAW_DOWN_RIGHT	SimpleTextOut.h	39;"	d
BOXDRAW_DOWN_RIGHT_DOUBLE	SimpleTextOut.h	50;"	d
BOXDRAW_HORIZONTAL	SimpleTextOut.h	37;"	d
BOXDRAW_UP_DOUBLE_HORIZONTAL	SimpleTextOut.h	72;"	d
BOXDRAW_UP_DOUBLE_LEFT	SimpleTextOut.h	60;"	d
BOXDRAW_UP_DOUBLE_RIGHT	SimpleTextOut.h	57;"	d
BOXDRAW_UP_HORIZONTAL	SimpleTextOut.h	46;"	d
BOXDRAW_UP_HORIZONTAL_DOUBLE	SimpleTextOut.h	71;"	d
BOXDRAW_UP_LEFT	SimpleTextOut.h	42;"	d
BOXDRAW_UP_LEFT_DOUBLE	SimpleTextOut.h	59;"	d
BOXDRAW_UP_RIGHT	SimpleTextOut.h	41;"	d
BOXDRAW_UP_RIGHT_DOUBLE	SimpleTextOut.h	56;"	d
BOXDRAW_VERTICAL	SimpleTextOut.h	38;"	d
BOXDRAW_VERTICAL_DOUBLE_HORIZONTAL	SimpleTextOut.h	75;"	d
BOXDRAW_VERTICAL_DOUBLE_LEFT	SimpleTextOut.h	66;"	d
BOXDRAW_VERTICAL_DOUBLE_RIGHT	SimpleTextOut.h	63;"	d
BOXDRAW_VERTICAL_HORIZONTAL	SimpleTextOut.h	47;"	d
BOXDRAW_VERTICAL_HORIZONTAL_DOUBLE	SimpleTextOut.h	74;"	d
BOXDRAW_VERTICAL_LEFT	SimpleTextOut.h	44;"	d
BOXDRAW_VERTICAL_LEFT_DOUBLE	SimpleTextOut.h	65;"	d
BOXDRAW_VERTICAL_RIGHT	SimpleTextOut.h	43;"	d
BOXDRAW_VERTICAL_RIGHT_DOUBLE	SimpleTextOut.h	62;"	d
BSSBasicRateSet	WiFi.h	/^  UINT8                              *BSSBasicRateSet;$/;"	m	struct:__anon197
BSSDespFromPilotSet	WiFi.h	/^  EFI_80211_BSS_DESP_PILOT           **BSSDespFromPilotSet;$/;"	m	struct:__anon201
BSSDespSet	WiFi.h	/^  EFI_80211_BSS_DESCRIPTION          **BSSDespSet;$/;"	m	struct:__anon201
BSSId	WiFi.h	/^  EFI_80211_MAC_ADDRESS              BSSId;$/;"	m	struct:__anon189
BSSId	WiFi.h	/^  EFI_80211_MAC_ADDRESS              BSSId;$/;"	m	struct:__anon197
BSSId	WiFi.h	/^  EFI_80211_MAC_ADDRESS              BSSId;$/;"	m	struct:__anon200
BSSId	WiFi.h	/^  EFI_80211_MAC_ADDRESS              BSSId;$/;"	m	struct:__anon205
BSSId	WiFi.h	/^  EFI_80211_MAC_ADDRESS              BSSId;$/;"	m	struct:__anon207
BSSId	WiFi.h	/^  EFI_80211_MAC_ADDRESS              BSSId;$/;"	m	struct:__anon209
BSSId	WiFi.h	/^  EFI_80211_MAC_ADDRESS              BSSId;$/;"	m	struct:__anon211
BSSId	WiFi.h	/^  EFI_80211_MAC_ADDRESS              BSSId;$/;"	m	struct:__anon212
BSSId	WiFi.h	/^  EFI_80211_MAC_ADDRESS              BSSId;$/;"	m	struct:__anon214
BSSMembershipSelectorSet	WiFi.h	/^  UINT8                              *BSSMembershipSelectorSet;$/;"	m	struct:__anon197
BSSType	WiFi.h	/^  EFI_80211_BSS_TYPE                 BSSType;$/;"	m	struct:__anon189
BSSType	WiFi.h	/^  EFI_80211_BSS_TYPE                 BSSType;$/;"	m	struct:__anon197
BSSType	WiFi.h	/^  EFI_80211_BSS_TYPE                 BSSType;$/;"	m	struct:__anon200
BSSType	WiFi2.h	/^  EFI_80211_BSS_TYPE                        BSSType;$/;"	m	struct:__anon308
BackgroundColor	HiiFont.h	/^  EFI_GRAPHICS_OUTPUT_BLT_PIXEL BackgroundColor;$/;"	m	struct:_EFI_FONT_DISPLAY_INFO
BaseAddress	DevicePath.h	/^  UINT8                           BaseAddress[8];$/;"	m	struct:__anon30
BaselineOffset	HiiFont.h	/^  UINTN   BaselineOffset;$/;"	m	struct:_EFI_HII_ROW_INFO
BatchIsActive	Shell.h	/^  EFI_SHELL_BATCH_IS_ACTIVE                 BatchIsActive;$/;"	m	struct:_EFI_SHELL_PROTOCOL
BaudRate	DevicePath.h	/^  UINT64                          BaudRate;$/;"	m	struct:__anon50
BaudRate	SerialIo.h	/^  UINT64  BaudRate;$/;"	m	struct:__anon548
Bbs	DevicePath.h	/^  BBS_BBS_DEVICE_PATH                        *Bbs;$/;"	m	union:__anon76
Bbs	DevicePath.h	/^  BBS_BBS_DEVICE_PATH                        Bbs;$/;"	m	union:__anon75
BeaconPeriod	WiFi.h	/^  UINT16                             BeaconPeriod;$/;"	m	struct:__anon197
BeforePciHostBridge	PciPlatform.h	/^  BeforePciHostBridge = 0,$/;"	e	enum:__anon246
BiosBaseAddress	LegacySpiController.h	/^  EFI_LEGACY_SPI_CONTROLLER_PROTOCOL_BIOS_BASE_ADDRESS   BiosBaseAddress;$/;"	m	struct:_EFI_LEGACY_SPI_CONTROLLER_PROTOCOL
BiosBaseAddress	LegacySpiFlash.h	/^  EFI_LEGACY_SPI_FLASH_PROTOCOL_BIOS_BASE_ADDRESS  BiosBaseAddress;$/;"	m	struct:_EFI_LEGACY_SPI_FLASH_PROTOCOL
BisDetected	PxeBaseCode.h	/^  BOOLEAN                       BisDetected;$/;"	m	struct:__anon116
BisSupported	PxeBaseCode.h	/^  BOOLEAN                       BisSupported;$/;"	m	struct:__anon116
Bitmap	HiiImage.h	/^    EFI_GRAPHICS_OUTPUT_BLT_PIXEL *Bitmap;$/;"	m	union:_EFI_IMAGE_OUTPUT::__anon299
Bitmap	HiiImage.h	/^  EFI_GRAPHICS_OUTPUT_BLT_PIXEL   *Bitmap;$/;"	m	struct:_EFI_IMAGE_INPUT
Block	Mtftp4.h	/^  UINT16                  Block;$/;"	m	struct:__anon427
Block	Mtftp4.h	/^  UINT16                  Block[1];$/;"	m	struct:__anon428
Block	Mtftp4.h	/^  UINT64                  Block;$/;"	m	struct:__anon429
Block	Mtftp4.h	/^  UINT64                  Block[1];$/;"	m	struct:__anon430
Block	Mtftp6.h	/^  UINT16    Block;$/;"	m	struct:__anon551
Block	Mtftp6.h	/^  UINT16    Block[1];$/;"	m	struct:__anon552
Block	Mtftp6.h	/^  UINT64    Block;$/;"	m	struct:__anon553
Block	Mtftp6.h	/^  UINT64    Block[1];$/;"	m	struct:__anon554
BlockSize	BlockIo.h	/^  UINT32  BlockSize;$/;"	m	struct:__anon222
BlockToConfig	HiiConfigRouting.h	/^  EFI_HII_BLOCK_TO_CONFIG BlockToConfig;$/;"	m	struct:_EFI_HII_CONFIG_ROUTING_PROTOCOL
Blt	GraphicsOutput.h	/^  EFI_GRAPHICS_OUTPUT_PROTOCOL_BLT         Blt;$/;"	m	struct:_EFI_GRAPHICS_OUTPUT_PROTOCOL
Blt	UgaDraw.h	/^  EFI_UGA_DRAW_PROTOCOL_BLT       Blt;$/;"	m	struct:_EFI_UGA_DRAW_PROTOCOL
Blue	GraphicsOutput.h	/^  UINT8 Blue;$/;"	m	struct:__anon238
Blue	UgaDraw.h	/^  UINT8 Blue;$/;"	m	struct:__anon78
BlueMask	GraphicsOutput.h	/^  UINT32            BlueMask;$/;"	m	struct:__anon235
Bluetooth	DevicePath.h	/^  BLUETOOTH_DEVICE_PATH                      *Bluetooth;$/;"	m	union:__anon76
Bluetooth	DevicePath.h	/^  BLUETOOTH_DEVICE_PATH                      Bluetooth;$/;"	m	union:__anon75
Bmc	DevicePath.h	/^  BMC_DEVICE_PATH                            *Bmc;$/;"	m	union:__anon76
Bmc	DevicePath.h	/^  BMC_DEVICE_PATH                            Bmc;$/;"	m	union:__anon75
Body	Http.h	/^  VOID                          *Body;$/;"	m	struct:__anon529
BodyLength	Http.h	/^  UINTN                         BodyLength;$/;"	m	struct:__anon529
BootDescCRC	TapeIo.h	/^  UINT32     BootDescCRC;$/;"	m	struct:_EFI_TAPE_HEADER
BootDescSize	TapeIo.h	/^  UINT32     BootDescSize;$/;"	m	struct:_EFI_TAPE_HEADER
BootEntry	DevicePath.h	/^  UINT32                          BootEntry;$/;"	m	struct:__anon67
BootFileName	Dhcp4.h	/^  CHAR8             BootFileName[128];$/;"	m	struct:__anon137
BootLock	LegacyRegion2.h	/^  EFI_LEGACY_REGION2_BOOT_LOCK  BootLock;$/;"	m	struct:_EFI_LEGACY_REGION2_PROTOCOL
BootpBootFile	PxeBaseCode.h	/^  UINT8   BootpBootFile[128];$/;"	m	struct:__anon113
BootpCiAddr	PxeBaseCode.h	/^  UINT8   BootpCiAddr[4];$/;"	m	struct:__anon113
BootpFlags	PxeBaseCode.h	/^  UINT16  BootpFlags;$/;"	m	struct:__anon113
BootpGateHops	PxeBaseCode.h	/^  UINT8   BootpGateHops;$/;"	m	struct:__anon113
BootpGiAddr	PxeBaseCode.h	/^  UINT8   BootpGiAddr[4];$/;"	m	struct:__anon113
BootpHwAddr	PxeBaseCode.h	/^  UINT8   BootpHwAddr[16];$/;"	m	struct:__anon113
BootpHwAddrLen	PxeBaseCode.h	/^  UINT8   BootpHwAddrLen;$/;"	m	struct:__anon113
BootpHwType	PxeBaseCode.h	/^  UINT8   BootpHwType;$/;"	m	struct:__anon113
BootpIdent	PxeBaseCode.h	/^  UINT32  BootpIdent;$/;"	m	struct:__anon113
BootpOpcode	PxeBaseCode.h	/^  UINT8   BootpOpcode;$/;"	m	struct:__anon113
BootpSeconds	PxeBaseCode.h	/^  UINT16  BootpSeconds;$/;"	m	struct:__anon113
BootpSiAddr	PxeBaseCode.h	/^  UINT8   BootpSiAddr[4];$/;"	m	struct:__anon113
BootpSrvName	PxeBaseCode.h	/^  UINT8   BootpSrvName[64];$/;"	m	struct:__anon113
BootpYiAddr	PxeBaseCode.h	/^  UINT8   BootpYiAddr[4];$/;"	m	struct:__anon113
Both	Supplicant.h	/^  Both$/;"	e	enum:__anon121
BottomRow	FormBrowser2.h	/^  UINTN   BottomRow;$/;"	m	struct:__anon243
BroadcastAddress	SimpleNetwork.h	/^  EFI_MAC_ADDRESS BroadcastAddress;$/;"	m	struct:__anon266
BroadcastFlag	ManagedNetwork.h	/^  BOOLEAN       BroadcastFlag;$/;"	m	struct:__anon174
BroadcastProcedure	MmMp.h	/^  EFI_MM_BROADCAST_PROCEDURE        BroadcastProcedure;$/;"	m	struct:_EFI_MM_MP_PROTOCOL
BrowserCallback	FormBrowser2.h	/^  EFI_BROWSER_CALLBACK2  BrowserCallback;$/;"	m	struct:_EFI_FORM_BROWSER2_PROTOCOL
Buffer	FirmwareVolume2.h	/^  VOID                    *Buffer;$/;"	m	struct:__anon539
Buffer	Mtftp4.h	/^  VOID                        *Buffer;$/;"	m	struct:_EFI_MTFTP4_TOKEN
Buffer	Mtftp6.h	/^  VOID                        *Buffer;$/;"	m	struct:_EFI_MTFTP6_TOKEN
Buffer	SimpleFileSystem.h	/^  VOID                        *Buffer;$/;"	m	struct:__anon135
Buffer	UsbFunctionIo.h	/^  VOID                          *Buffer;$/;"	m	struct:_EFI_USBFN_TRANSFER_RESULT
BufferSize	FirmwareVolume2.h	/^  UINT32                  BufferSize;$/;"	m	struct:__anon539
BufferSize	Mtftp4.h	/^  UINT64                      BufferSize;$/;"	m	struct:_EFI_MTFTP4_TOKEN
BufferSize	Mtftp6.h	/^  UINT64                      BufferSize;$/;"	m	struct:_EFI_MTFTP6_TOKEN
BufferSize	SimpleFileSystem.h	/^  UINTN                       BufferSize;$/;"	m	struct:__anon135
Build	Dhcp4.h	/^  EFI_DHCP4_BUILD              Build;$/;"	m	struct:_EFI_DHCP4_PROTOCOL
Build	HttpUtilities.h	/^  EFI_HTTP_UTILS_BUILD          Build;$/;"	m	struct:_EFI_HTTP_UTILITIES_PROTOCOL
BuildDHAgreement	SmartCardEdge.h	/^  EFI_SMART_CARD_EDGE_BUILD_DH_AGREEMENT   BuildDHAgreement;$/;"	m	struct:_EFI_SMART_CARD_EDGE_PROTOCOL
BuildDevicePath	AtaPassThru.h	/^  EFI_ATA_PASS_THRU_BUILD_DEVICE_PATH  BuildDevicePath;$/;"	m	struct:_EFI_ATA_PASS_THRU_PROTOCOL
BuildDevicePath	NvmExpressPassthru.h	/^  EFI_NVM_EXPRESS_PASS_THRU_BUILD_DEVICE_PATH        BuildDevicePath;$/;"	m	struct:_EFI_NVM_EXPRESS_PASS_THRU_PROTOCOL
BuildDevicePath	ScsiPassThru.h	/^  EFI_SCSI_PASS_THRU_BUILD_DEVICE_PATH  BuildDevicePath;$/;"	m	struct:_EFI_SCSI_PASS_THRU_PROTOCOL
BuildDevicePath	ScsiPassThruExt.h	/^  EFI_EXT_SCSI_PASS_THRU_BUILD_DEVICE_PATH   BuildDevicePath;$/;"	m	struct:_EFI_EXT_SCSI_PASS_THRU_PROTOCOL
BuildDevicePath	SdMmcPassThru.h	/^  EFI_SD_MMC_PASS_THRU_BUILD_DEVICE_PATH     BuildDevicePath;$/;"	m	struct:_EFI_SD_MMC_PASS_THRU_PROTOCOL
BuildResponsePacket	Supplicant.h	/^  EFI_SUPPLICANT_BUILD_RESPONSE_PACKET    BuildResponsePacket;$/;"	m	struct:_EFI_SUPPLICANT_PROTOCOL
BuildResponsePacket	Tls.h	/^  EFI_TLS_BUILD_RESPONSE_PACKET      BuildResponsePacket;$/;"	m	struct:_EFI_TLS_PROTOCOL
BulkTransfer	Usb2HostController.h	/^  EFI_USB2_HC_PROTOCOL_BULK_TRANSFER               BulkTransfer;$/;"	m	struct:_EFI_USB2_HC_PROTOCOL
BulkTransfer	UsbHostController.h	/^  EFI_USB_HC_PROTOCOL_BULK_TRANSFER               BulkTransfer;$/;"	m	struct:_EFI_USB_HC_PROTOCOL
Bus	PciRootBridgeIo.h	/^  UINT8   Bus;$/;"	m	struct:__anon278
BusCount	SpiConfiguration.h	/^  UINT32                          BusCount;$/;"	m	struct:_EFI_SPI_CONFIGURATION_PROTOCOL
BusWidth	SpiIo.h	/^  UINT32                   BusWidth;$/;"	m	struct:_EFI_SPI_BUS_TRANSACTION
Buslist	SpiConfiguration.h	/^  CONST EFI_SPI_BUS *CONST *CONST Buslist;$/;"	m	struct:_EFI_SPI_CONFIGURATION_PROTOCOL
ByteCount	IpSecConfig.h	/^  UINT64        ByteCount;$/;"	m	struct:_EFI_IPSEC_SA_LIFETIME
BytesTransferred	UsbFunctionIo.h	/^  UINTN                         BytesTransferred;$/;"	m	struct:_EFI_USBFN_TRANSFER_RESULT
CD	DevicePath.h	/^  CDROM_DEVICE_PATH                          *CD;$/;"	m	union:__anon76
CD	DevicePath.h	/^  CDROM_DEVICE_PATH                          CD;$/;"	m	union:__anon75
CDROM_DEVICE_PATH	DevicePath.h	/^} CDROM_DEVICE_PATH;$/;"	t	typeref:struct:__anon67
CDW10_VALID	NvmExpressPassthru.h	69;"	d
CDW11_VALID	NvmExpressPassthru.h	70;"	d
CDW12_VALID	NvmExpressPassthru.h	71;"	d
CDW13_VALID	NvmExpressPassthru.h	72;"	d
CDW14_VALID	NvmExpressPassthru.h	73;"	d
CDW15_VALID	NvmExpressPassthru.h	74;"	d
CDW2_VALID	NvmExpressPassthru.h	67;"	d
CDW3_VALID	NvmExpressPassthru.h	68;"	d
CHAP_LOCAL_AUTH_NODE	AuthenticationInfo.h	/^} CHAP_LOCAL_AUTH_NODE;$/;"	t	typeref:struct:__anon364
CHAP_RADIUS_AUTH_NODE	AuthenticationInfo.h	/^} CHAP_RADIUS_AUTH_NODE;$/;"	t	typeref:struct:__anon363
CHAR_BACKSPACE	SimpleTextIn.h	43;"	d
CHAR_CARRIAGE_RETURN	SimpleTextIn.h	46;"	d
CHAR_LINEFEED	SimpleTextIn.h	45;"	d
CHAR_TAB	SimpleTextIn.h	44;"	d
CID	DevicePath.h	/^  UINT32                          CID;$/;"	m	struct:__anon32
CLPCmdStatus	PlatformToDriverConfiguration.h	/^  UINT8   CLPCmdStatus;       \/\/\/<  SM CLP Command Status (see DMTF SM CLP Specification 1.0 Final Standard -$/;"	m	struct:__anon245
CLPCommand	PlatformToDriverConfiguration.h	/^  CHAR8   *CLPCommand;        \/\/\/<  A pointer to the null-terminated UTF-8 string that specifies the DMTF SM CLP command$/;"	m	struct:__anon245
CLPCommandLength	PlatformToDriverConfiguration.h	/^  UINT32  CLPCommandLength;   \/\/\/< The length of the CLP Command in bytes.$/;"	m	struct:__anon245
CLPErrorValue	PlatformToDriverConfiguration.h	/^  UINT8   CLPErrorValue;      \/\/\/<  SM CLP Processing Error Value (see DMTF SM CLP Specification 1.0 Final Standard - Table 6).$/;"	m	struct:__anon245
CLPMsgCode	PlatformToDriverConfiguration.h	/^  UINT16  CLPMsgCode;         \/\/\/<  Bit 15: OEM Message Code Flag 0 = Message Code is an SM CLP Probable$/;"	m	struct:__anon245
CLPReturnString	PlatformToDriverConfiguration.h	/^  CHAR8   *CLPReturnString;   \/\/\/<  A pointer to the null-terminated UTF-8 string that indicates the CLP return status$/;"	m	struct:__anon245
CLPReturnStringLength	PlatformToDriverConfiguration.h	/^  UINT32  CLPReturnStringLength; \/\/\/< The length of the CLP return status string in bytes.$/;"	m	struct:__anon245
CM_IOCTL_GET_FEATURE_REQUEST	SmartCardReader.h	53;"	d
CONDITION_M_CONDITIONAL	Ebc.h	175;"	d
CONDITION_M_CS	Ebc.h	176;"	d
CONTROLLER_DEVICE_PATH	DevicePath.h	/^} CONTROLLER_DEVICE_PATH;$/;"	t	typeref:struct:__anon29
CPSR	DebugSupport.h	/^  UINT32  CPSR;$/;"	m	struct:__anon492
CPU_V2_EXTENDED_TOPOLOGY	MpService.h	53;"	d
CPort	PxeBaseCode.h	/^  EFI_PXE_BASE_CODE_UDP_PORT  CPort;$/;"	m	struct:__anon112
CalculateMode	IdeControllerInit.h	/^  EFI_IDE_CONTROLLER_CALCULATE_MODE      CalculateMode;$/;"	m	struct:_EFI_IDE_CONTROLLER_INIT_PROTOCOL
Callback	HiiConfigAccess.h	/^  EFI_HII_ACCESS_FORM_CALLBACK      Callback;$/;"	m	struct:_EFI_HII_CONFIG_ACCESS_PROTOCOL
Callback	HttpBootCallback.h	/^  EFI_HTTP_BOOT_CALLBACK Callback;$/;"	m	struct:_EFI_HTTP_BOOT_CALLBACK_PROTOCOL
Callback	PxeBaseCodeCallBack.h	/^  EFI_PXE_CALLBACK  Callback;$/;"	m	struct:_EFI_PXE_BASE_CODE_CALLBACK_PROTOCOL
CallbackContext	Dhcp4.h	/^  VOID                        *CallbackContext;$/;"	m	struct:__anon142
CallbackContext	Dhcp6.h	/^  VOID                         *CallbackContext;$/;"	m	struct:__anon518
CallbackOnSet	Pcd.h	/^  PCD_PROTOCOL_CALLBACK_ONSET       CallbackOnSet;$/;"	m	struct:__anon383
CallbackOnSet	PiPcd.h	/^  EFI_PCD_PROTOCOL_CALLBACK_ON_SET      CallbackOnSet;$/;"	m	struct:_EFI_PCD_PROTOCOL
Cancel	Arp.h	/^  EFI_ARP_CANCEL            Cancel;$/;"	m	struct:_EFI_ARP_PROTOCOL
Cancel	DiskIo2.h	/^  EFI_DISK_CANCEL_EX Cancel;$/;"	m	struct:_EFI_DISK_IO2_PROTOCOL
Cancel	Dns4.h	/^  EFI_DNS4_CANCEL               Cancel;$/;"	m	struct:_EFI_DNS4_PROTOCOL
Cancel	Dns6.h	/^  EFI_DNS6_CANCEL               Cancel;$/;"	m	struct:_EFI_DNS6_PROTOCOL
Cancel	Http.h	/^  EFI_HTTP_CANCEL               Cancel;$/;"	m	struct:_EFI_HTTP_PROTOCOL
Cancel	Ip4.h	/^  EFI_IP4_CANCEL               Cancel;$/;"	m	struct:_EFI_IP4_PROTOCOL
Cancel	Ip6.h	/^  EFI_IP6_CANCEL          Cancel;$/;"	m	struct:_EFI_IP6_PROTOCOL
Cancel	ManagedNetwork.h	/^  EFI_MANAGED_NETWORK_CANCEL              Cancel;$/;"	m	struct:_EFI_MANAGED_NETWORK_PROTOCOL
Cancel	Tcp4.h	/^  EFI_TCP4_CANCEL                        Cancel;$/;"	m	struct:_EFI_TCP4_PROTOCOL
Cancel	Tcp6.h	/^  EFI_TCP6_CANCEL         Cancel;$/;"	m	struct:_EFI_TCP6_PROTOCOL
Cancel	Udp4.h	/^  EFI_UDP4_CANCEL               Cancel;$/;"	m	struct:_EFI_UDP4_PROTOCOL
Cancel	Udp6.h	/^  EFI_UDP6_CANCEL         Cancel;$/;"	m	struct:_EFI_UDP6_PROTOCOL
CancelCallback	Pcd.h	/^  PCD_PROTOCOL_CANCEL_CALLBACK      CancelCallback;$/;"	m	struct:__anon383
CancelCallback	PiPcd.h	/^  EFI_PCD_PROTOCOL_CANCEL_CALLBACK      CancelCallback;$/;"	m	struct:_EFI_PCD_PROTOCOL
Capabilities	BlockIoCrypto.h	/^  EFI_BLOCK_IO_CRYPTO_CAPABILITY  Capabilities[1];$/;"	m	struct:__anon352
Capabilities	UserCredential.h	/^  EFI_CREDENTIAL_CAPABILITIES   Capabilities;$/;"	m	struct:_EFI_USER_CREDENTIAL_PROTOCOL
Capabilities	UserCredential2.h	/^  EFI_CREDENTIAL_CAPABILITIES   Capabilities;$/;"	m	struct:_EFI_USER_CREDENTIAL2_PROTOCOL
Capabilities	WiFi.h	/^  UINT8                              Capabilities[1];$/;"	m	struct:__anon196
Capability	BlockIoCrypto.h	/^  EFI_BLOCK_IO_CRYPTO_CAPABILITY  Capability;$/;"	m	struct:__anon353
Capability	BlockIoCrypto.h	/^  EFI_BLOCK_IO_CRYPTO_CAPABILITY  Capability;$/;"	m	struct:__anon354
CapabilityCount	BlockIoCrypto.h	/^  UINT64                          CapabilityCount;$/;"	m	struct:__anon352
CapabilityInfo	WiFi.h	/^  UINT16                             CapabilityInfo;$/;"	m	struct:__anon197
CapabilityInfo	WiFi.h	/^  UINT16                             CapabilityInfo;$/;"	m	struct:__anon205
CapabilityInfo	WiFi.h	/^  UINT16                             CapabilityInfo;$/;"	m	struct:__anon207
CapturePtr	RegularExpressionProtocol.h	/^  CONST CHAR16 *CapturePtr; \/\/ Pointer to the start of the captured sub-expression$/;"	m	struct:__anon361
Cdb	ScsiIo.h	/^  VOID                                *Cdb;$/;"	m	struct:__anon330
Cdb	ScsiPassThru.h	/^  VOID    *Cdb;$/;"	m	struct:__anon166
Cdb	ScsiPassThruExt.h	/^  VOID   *Cdb;$/;"	m	struct:__anon439
CdbLength	ScsiIo.h	/^  UINT8                               CdbLength;$/;"	m	struct:__anon330
CdbLength	ScsiPassThru.h	/^  UINT8   CdbLength;$/;"	m	struct:__anon166
CdbLength	ScsiPassThruExt.h	/^  UINT8  CdbLength;$/;"	m	struct:__anon439
Cdw0	NvmExpressPassthru.h	/^  NVME_CDW0                         Cdw0;$/;"	m	struct:__anon543
Cdw10	NvmExpressPassthru.h	/^  UINT32                            Cdw10;$/;"	m	struct:__anon543
Cdw11	NvmExpressPassthru.h	/^  UINT32                            Cdw11;$/;"	m	struct:__anon543
Cdw12	NvmExpressPassthru.h	/^  UINT32                            Cdw12;$/;"	m	struct:__anon543
Cdw13	NvmExpressPassthru.h	/^  UINT32                            Cdw13;$/;"	m	struct:__anon543
Cdw14	NvmExpressPassthru.h	/^  UINT32                            Cdw14;$/;"	m	struct:__anon543
Cdw15	NvmExpressPassthru.h	/^  UINT32                            Cdw15;$/;"	m	struct:__anon543
Cdw2	NvmExpressPassthru.h	/^  UINT32                            Cdw2;$/;"	m	struct:__anon543
Cdw3	NvmExpressPassthru.h	/^  UINT32                            Cdw3;$/;"	m	struct:__anon543
CertificateID	Bis.h	/^  BIS_CERT_ID CertificateID;  \/\/\/< Truncated hash of platform Boot Object$/;"	m	struct:__anon172
Channel	WiFi.h	/^  UINT8                              Channel;$/;"	m	struct:__anon200
ChannelCount	IdeControllerInit.h	/^  UINT8                                  ChannelCount;$/;"	m	struct:_EFI_IDE_CONTROLLER_INIT_PROTOCOL
ChannelList	WiFi.h	/^  UINT32                             *ChannelList;$/;"	m	struct:__anon189
ChannelName	ScsiPassThru.h	/^  CHAR16  *ChannelName;$/;"	m	struct:__anon167
Channels	HiiImageDecoder.h	/^  UINT16                                    Channels;$/;"	m	struct:_EFI_HII_IMAGE_DECODER_PNG_INFO
Channels	WiFi.h	/^  EFI_80211_ELEMENT_SUPP_CHANNEL     *Channels;$/;"	m	struct:__anon205
CharacteristicDescriptorUuid	BluetoothAttribute.h	/^  EFI_BLUETOOTH_UUID             CharacteristicDescriptorUuid;$/;"	m	struct:__anon156
CharacteristicProperties	BluetoothAttribute.h	/^  UINT8                          CharacteristicProperties;$/;"	m	struct:__anon155
CharacteristicUuid	BluetoothAttribute.h	/^  EFI_BLUETOOTH_UUID             CharacteristicUuid;$/;"	m	struct:__anon155
CharacteristicValueHandle	BluetoothAttribute.h	/^  UINT16                         CharacteristicValueHandle;$/;"	m	struct:__anon155
CheckDevice	IncompatiblePciDeviceSupport.h	/^  EFI_INCOMPATIBLE_PCI_DEVICE_SUPPORT_CHECK_DEVICE  CheckDevice;$/;"	m	struct:_EFI_INCOMPATIBLE_PCI_DEVICE_SUPPORT_PROTOCOL
CheckForProcedure	MmMp.h	/^  EFI_CHECK_FOR_PROCEDURE           CheckForProcedure;$/;"	m	struct:_EFI_MM_MP_PROTOCOL
CheckImage	FirmwareManagement.h	/^  EFI_FIRMWARE_MANAGEMENT_PROTOCOL_CHECK_IMAGE       CheckImage;$/;"	m	struct:_EFI_FIRMWARE_MANAGEMENT_PROTOCOL
CheckPacket	Mtftp4.h	/^  EFI_MTFTP4_CHECK_PACKET     CheckPacket;$/;"	m	struct:_EFI_MTFTP4_TOKEN
CheckPacket	Mtftp6.h	/^  EFI_MTFTP6_CHECK_PACKET      CheckPacket;$/;"	m	struct:_EFI_MTFTP6_TOKEN
Checksum	AcpiSystemDescriptionTable.h	/^  UINT8     Checksum;$/;"	m	struct:__anon360
Checksum	Ip4.h	/^  UINT16                  Checksum;$/;"	m	struct:__anon339
Checksum	NvdimmLabel.h	/^  UINT64   Checksum;$/;"	m	struct:__anon261
Checksum	NvdimmLabel.h	/^  UINT64 Checksum;$/;"	m	struct:__anon260
Checksum	PxeBaseCode.h	/^  UINT16  Checksum;$/;"	m	struct:__anon102
ChipSelect	SpiConfiguration.h	/^  EFI_SPI_CHIP_SELECT      ChipSelect;$/;"	m	struct:_EFI_SPI_PERIPHERAL
ChipSelect	SpiHc.h	/^  EFI_SPI_HC_PROTOCOL_CHIP_SELECT ChipSelect;$/;"	m	struct:_EFI_SPI_HC_PROTOCOL
ChipSelectParameter	SpiConfiguration.h	/^  VOID                     *ChipSelectParameter;$/;"	m	struct:_EFI_SPI_PERIPHERAL
ChipSelectPolarity	SpiConfiguration.h	/^  BOOLEAN      ChipSelectPolarity;$/;"	m	struct:_EFI_SPI_PART
ChipsetEntry	PciPlatform.h	/^  ChipsetEntry = 0,$/;"	e	enum:__anon246
ChipsetExit	PciPlatform.h	/^  ChipsetExit = 1,$/;"	e	enum:__anon246
CipherSuite	Supplicant.h	/^  EFI_80211_SUITE_SELECTOR                CipherSuite;$/;"	m	struct:__anon123
CipherSuite	WiFi2.h	/^  EFI_80211_CIPHER_SUITE_SELECTOR           *CipherSuite;$/;"	m	struct:__anon308
CipherSuiteCount	WiFi2.h	/^  UINT16                                    CipherSuiteCount;$/;"	m	struct:__anon307
CipherSuiteList	WiFi2.h	/^  EFI_80211_SUITE_SELECTOR                  CipherSuiteList[1];$/;"	m	struct:__anon307
ClassOfDevice	BluetoothConfig.h	/^  BLUETOOTH_CLASS_OF_DEVICE ClassOfDevice;$/;"	m	struct:__anon268
ClassOfDevice	BluetoothIo.h	/^  BLUETOOTH_CLASS_OF_DEVICE   ClassOfDevice;$/;"	m	struct:__anon418
Clear	MmControl.h	/^  EFI_MM_DEACTIVATE  Clear;$/;"	m	struct:_EFI_MM_CONTROL_PROTOCOL
ClearRootHubPortFeature	Usb2HostController.h	/^  EFI_USB2_HC_PROTOCOL_CLEAR_ROOTHUB_PORT_FEATURE  ClearRootHubPortFeature;$/;"	m	struct:_EFI_USB2_HC_PROTOCOL
ClearRootHubPortFeature	UsbHostController.h	/^  EFI_USB_HC_PROTOCOL_CLEAR_ROOTHUB_PORT_FEATURE  ClearRootHubPortFeature;$/;"	m	struct:_EFI_USB_HC_PROTOCOL
ClearScreen	SimpleTextOut.h	/^  EFI_TEXT_CLEAR_SCREEN         ClearScreen;$/;"	m	struct:_EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL
ClearSpiProtect	LegacySpiController.h	/^  EFI_LEGACY_SPI_CONTROLLER_PROTOCOL_CLEAR_SPI_PROTECT   ClearSpiProtect;$/;"	m	struct:_EFI_LEGACY_SPI_CONTROLLER_PROTOCOL
ClearSpiProtect	LegacySpiFlash.h	/^  EFI_LEGACY_SPI_FLASH_PROTOCOL_CLEAR_SPI_PROTECT  ClearSpiProtect;$/;"	m	struct:_EFI_LEGACY_SPI_FLASH_PROTOCOL
ClientAddr	Dhcp4.h	/^  EFI_IPv4_ADDRESS  ClientAddr;       \/\/\/< Client IP address from client.$/;"	m	struct:__anon137
ClientAddress	Dhcp4.h	/^  EFI_IPv4_ADDRESS            ClientAddress;$/;"	m	struct:__anon142
ClientAddress	Dhcp4.h	/^  EFI_IPv4_ADDRESS            ClientAddress;$/;"	m	struct:__anon143
ClientDataMaxSize	Kms.h	/^  UINTN                             ClientDataMaxSize;$/;"	m	struct:_EFI_KMS_PROTOCOL
ClientDataSupported	Kms.h	/^  BOOLEAN                           ClientDataSupported;$/;"	m	struct:_EFI_KMS_PROTOCOL
ClientHwAddr	Dhcp4.h	/^  UINT8             ClientHwAddr[16]; \/\/\/< Client hardware address.$/;"	m	struct:__anon137
ClientId	Dhcp6.h	/^  EFI_DHCP6_DUID               *ClientId;$/;"	m	struct:__anon517
ClientId	Kms.h	/^  VOID          *ClientId;$/;"	m	struct:__anon294
ClientIdMaxSize	Kms.h	/^  UINT16                            ClientIdMaxSize;$/;"	m	struct:_EFI_KMS_PROTOCOL
ClientIdRequired	Kms.h	/^  BOOLEAN                           ClientIdRequired;$/;"	m	struct:_EFI_KMS_PROTOCOL
ClientIdSize	Kms.h	/^  UINT16        ClientIdSize;$/;"	m	struct:__anon294
ClientIdSupported	Kms.h	/^  BOOLEAN                           ClientIdSupported;$/;"	m	struct:_EFI_KMS_PROTOCOL
ClientMacAddress	Dhcp4.h	/^  EFI_MAC_ADDRESS             ClientMacAddress;$/;"	m	struct:__anon143
ClientName	Kms.h	/^  VOID          *ClientName;$/;"	m	struct:__anon294
ClientNameCount	Kms.h	/^  UINT8         ClientNameCount;$/;"	m	struct:__anon294
ClientNameMaxCount	Kms.h	/^  UINT16                            ClientNameMaxCount;$/;"	m	struct:_EFI_KMS_PROTOCOL
ClientNameRequired	Kms.h	/^  BOOLEAN                           ClientNameRequired;$/;"	m	struct:_EFI_KMS_PROTOCOL
ClientNameStringTypes	Kms.h	/^  UINT8                             ClientNameStringTypes;$/;"	m	struct:_EFI_KMS_PROTOCOL
ClientNameType	Kms.h	/^  UINT8         ClientNameType;$/;"	m	struct:__anon294
Clock	SpiConfiguration.h	/^  EFI_SPI_CLOCK                  Clock;$/;"	m	struct:_EFI_SPI_BUS
Clock	SpiHc.h	/^  EFI_SPI_HC_PROTOCOL_CLOCK       Clock;$/;"	m	struct:_EFI_SPI_HC_PROTOCOL
ClockOffset	BluetoothIo.h	/^  UINT16                      ClockOffset;$/;"	m	struct:__anon418
ClockParameter	SpiConfiguration.h	/^  VOID                           *ClockParameter;$/;"	m	struct:_EFI_SPI_BUS
ClockPhase	SpiConfiguration.h	/^  BOOLEAN                  ClockPhase;$/;"	m	struct:_EFI_SPI_PERIPHERAL
ClockPolarity	SpiConfiguration.h	/^  BOOLEAN                  ClockPolarity;$/;"	m	struct:_EFI_SPI_PERIPHERAL
Close	AcpiSystemDescriptionTable.h	/^  EFI_ACPI_CLOSE            Close;$/;"	m	struct:_EFI_ACPI_SDT_PROTOCOL
Close	Ftp4.h	/^  EFI_FTP4_CLOSE             Close;$/;"	m	struct:_EFI_FTP4_PROTOCOL
Close	MmAccess.h	/^  EFI_MM_CLOSE         Close;$/;"	m	struct:_EFI_MM_ACCESS_PROTOCOL
Close	SimpleFileSystem.h	/^  EFI_FILE_CLOSE        Close;$/;"	m	struct:_EFI_FILE_PROTOCOL
Close	Tcp4.h	/^  EFI_TCP4_CLOSE                         Close;$/;"	m	struct:_EFI_TCP4_PROTOCOL
Close	Tcp6.h	/^  EFI_TCP6_CLOSE          Close;$/;"	m	struct:_EFI_TCP6_PROTOCOL
CloseFile	Shell.h	/^  EFI_SHELL_CLOSE_FILE                      CloseFile;$/;"	m	struct:_EFI_SHELL_PROTOCOL
CloseIoAperture	IsaHc.h	/^  EFI_ISA_HC_CLOSE_IO  CloseIoAperture;$/;"	m	struct:_EFI_ISA_HC_PROTOCOL
Code	Ip4.h	/^  UINT8                   Code;$/;"	m	struct:__anon337
Code	Ip6.h	/^  UINT8                   Code;   \/\/\/< The code of the ICMP message.$/;"	m	struct:__anon404
Code	PxeBaseCode.h	/^  UINT8   Code;$/;"	m	struct:__anon102
Collisions	SimpleNetwork.h	/^  UINT64  Collisions;$/;"	m	struct:__anon264
ColorDepthInBits	HiiImageDecoder.h	/^  UINT8                               ColorDepthInBits;$/;"	m	struct:_EFI_HII_IMAGE_DECODER_IMAGE_INFO_HEADER
ColorType	HiiImageDecoder.h	/^  EFI_HII_IMAGE_DECODER_COLOR_TYPE    ColorType;$/;"	m	struct:_EFI_HII_IMAGE_DECODER_IMAGE_INFO_HEADER
CommandArgument	SdMmcPassThru.h	/^  UINT32                            CommandArgument;$/;"	m	struct:_EFI_SD_MMC_COMMAND_BLOCK
CommandIndex	SdMmcPassThru.h	/^  UINT16                            CommandIndex;$/;"	m	struct:_EFI_SD_MMC_COMMAND_BLOCK
CommandName	ShellDynamicCommand.h	/^  CONST CHAR16           *CommandName;$/;"	m	struct:_EFI_SHELL_DYNAMIC_COMMAND_PROTOCOL
CommandPort	MmSwDispatch.h	/^  UINT8 CommandPort;$/;"	m	struct:__anon163
CommandPort	SmmSwDispatch2.h	/^  UINT8 CommandPort;$/;"	m	struct:__anon93
CommandTimeout	NvmExpressPassthru.h	/^  UINT64                            CommandTimeout;$/;"	m	struct:__anon545
CommandType	SdMmcPassThru.h	/^  UINT32                            CommandType;      \/\/ One of the EFI_SD_MMC_COMMAND_TYPE values$/;"	m	struct:_EFI_SD_MMC_COMMAND_BLOCK
Communicate	MmCommunication.h	/^  EFI_MM_COMMUNICATE  Communicate;$/;"	m	struct:_EFI_MM_COMMUNICATION_PROTOCOL
Communicate	MmCommunication2.h	/^  EFI_MM_COMMUNICATE2  Communicate;$/;"	m	struct:_EFI_MM_COMMUNICATION2_PROTOCOL
Compare	S3SaveState.h	/^  EFI_S3_SAVE_STATE_COMPARE Compare;$/;"	m	struct:_EFI_S3_SAVE_STATE_PROTOCOL
Compatibilities	FirmwareManagement.h	/^  UINT64                           Compatibilities;$/;"	m	struct:__anon10
Completion	MmMp.h	/^  MM_COMPLETION  Completion;$/;"	m	struct:__anon252
CompletionEvent	Dhcp4.h	/^  EFI_EVENT               CompletionEvent;$/;"	m	struct:__anon145
CompletionToken	Tcp4.h	/^  EFI_TCP4_COMPLETION_TOKEN CompletionToken;$/;"	m	struct:__anon322
CompletionToken	Tcp4.h	/^  EFI_TCP4_COMPLETION_TOKEN CompletionToken;$/;"	m	struct:__anon323
CompletionToken	Tcp4.h	/^  EFI_TCP4_COMPLETION_TOKEN CompletionToken;$/;"	m	struct:__anon327
CompletionToken	Tcp4.h	/^  EFI_TCP4_COMPLETION_TOKEN CompletionToken;$/;"	m	struct:__anon329
CompletionToken	Tcp6.h	/^  EFI_TCP6_COMPLETION_TOKEN CompletionToken;$/;"	m	struct:__anon473
CompletionToken	Tcp6.h	/^  EFI_TCP6_COMPLETION_TOKEN CompletionToken;$/;"	m	struct:__anon474
CompletionToken	Tcp6.h	/^  EFI_TCP6_COMPLETION_TOKEN CompletionToken;$/;"	m	struct:__anon478
CompletionToken	Tcp6.h	/^  EFI_TCP6_COMPLETION_TOKEN CompletionToken;$/;"	m	struct:__anon480
ConCapInfo	WiFi.h	/^  UINT8                              ConCapInfo;$/;"	m	struct:__anon200
ConCountryStr	WiFi.h	/^  UINT8                              ConCountryStr[2];$/;"	m	struct:__anon200
ConfigData	Dhcp4.h	/^  EFI_DHCP4_CONFIG_DATA       ConfigData;$/;"	m	struct:__anon143
ConfigData	Ip4.h	/^  EFI_IP4_CONFIG_DATA     ConfigData;$/;"	m	struct:__anon338
ConfigData	Ip6.h	/^  EFI_IP6_CONFIG_DATA     ConfigData;$/;"	m	struct:__anon405
ConfigData	Mtftp4.h	/^  EFI_MTFTP4_CONFIG_DATA  ConfigData;$/;"	m	struct:__anon435
ConfigData	Mtftp6.h	/^  EFI_MTFTP6_CONFIG_DATA  ConfigData;$/;"	m	struct:__anon558
ConfigDescriptor	UsbFunctionIo.h	/^  EFI_USB_CONFIG_DESCRIPTOR            *ConfigDescriptor;$/;"	m	struct:__anon409
ConfigInfoTable	UsbFunctionIo.h	/^  EFI_USB_CONFIG_INFO                  **ConfigInfoTable;$/;"	m	struct:__anon410
ConfigToBlock	HiiConfigRouting.h	/^  EFI_HII_CONFIG_TO_BLOCK ConfigToBlock;$/;"	m	struct:_EFI_HII_CONFIG_ROUTING_PROTOCOL
Configuration	PciRootBridgeIo.h	/^  EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_CONFIGURATION   Configuration;$/;"	m	struct:_EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL
ConfigurationData	SpiConfiguration.h	/^  CONST VOID               *ConfigurationData;$/;"	m	struct:_EFI_SPI_PERIPHERAL
Configure	Arp.h	/^  EFI_ARP_CONFIGURE         Configure;$/;"	m	struct:_EFI_ARP_PROTOCOL
Configure	Dhcp4.h	/^  EFI_DHCP4_CONFIGURE          Configure;$/;"	m	struct:_EFI_DHCP4_PROTOCOL
Configure	Dhcp6.h	/^  EFI_DHCP6_CONFIGURE          Configure;$/;"	m	struct:_EFI_DHCP6_PROTOCOL
Configure	Dns4.h	/^  EFI_DNS4_CONFIGURE            Configure;$/;"	m	struct:_EFI_DNS4_PROTOCOL
Configure	Dns6.h	/^  EFI_DNS6_CONFIGURE            Configure;$/;"	m	struct:_EFI_DNS6_PROTOCOL
Configure	Ftp4.h	/^  EFI_FTP4_CONFIGURE         Configure;$/;"	m	struct:_EFI_FTP4_PROTOCOL
Configure	Http.h	/^  EFI_HTTP_CONFIGURE            Configure;$/;"	m	struct:_EFI_HTTP_PROTOCOL
Configure	Ip4.h	/^  EFI_IP4_CONFIGURE            Configure;$/;"	m	struct:_EFI_IP4_PROTOCOL
Configure	Ip6.h	/^  EFI_IP6_CONFIGURE       Configure;$/;"	m	struct:_EFI_IP6_PROTOCOL
Configure	ManagedNetwork.h	/^  EFI_MANAGED_NETWORK_CONFIGURE           Configure;$/;"	m	struct:_EFI_MANAGED_NETWORK_PROTOCOL
Configure	Mtftp4.h	/^  EFI_MTFTP4_CONFIGURE         Configure;$/;"	m	struct:_EFI_MTFTP4_PROTOCOL
Configure	Mtftp6.h	/^  EFI_MTFTP6_CONFIGURE      Configure;$/;"	m	struct:_EFI_MTFTP6_PROTOCOL
Configure	RestEx.h	/^  EFI_REST_EX_CONFIGURE          Configure;$/;"	m	struct:_EFI_REST_EX_PROTOCOL
Configure	Tcp4.h	/^  EFI_TCP4_CONFIGURE                     Configure;$/;"	m	struct:_EFI_TCP4_PROTOCOL
Configure	Tcp6.h	/^  EFI_TCP6_CONFIGURE      Configure;$/;"	m	struct:_EFI_TCP6_PROTOCOL
Configure	Udp4.h	/^  EFI_UDP4_CONFIGURE            Configure;$/;"	m	struct:_EFI_UDP4_PROTOCOL
Configure	Udp6.h	/^  EFI_UDP6_CONFIGURE      Configure;$/;"	m	struct:_EFI_UDP6_PROTOCOL
ConfigureEnableEndpoints	UsbFunctionIo.h	/^  EFI_USBFN_IO_CONFIGURE_ENABLE_ENDPOINTS   ConfigureEnableEndpoints;$/;"	m	struct:_EFI_USBFN_IO_PROTOCOL
ConnIntervalMax	BluetoothLeConfig.h	/^  UINT16                    ConnIntervalMax;$/;"	m	struct:__anon565
ConnIntervalMin	BluetoothLeConfig.h	/^  UINT16                    ConnIntervalMin;$/;"	m	struct:__anon565
ConnLatency	BluetoothLeConfig.h	/^  UINT16                    ConnLatency;$/;"	m	struct:__anon565
Connect	BluetoothConfig.h	/^  EFI_BLUETOOTH_CONFIG_CONNECT                            Connect;$/;"	m	struct:_EFI_BLUETOOTH_CONFIG_PROTOCOL
Connect	BluetoothLeConfig.h	/^  EFI_BLUETOOTH_LE_CONFIG_CONNECT                            Connect;$/;"	m	struct:_EFI_BLUETOOTH_LE_CONFIG_PROTOCOL
Connect	Ftp4.h	/^  EFI_FTP4_CONNECT           Connect;$/;"	m	struct:_EFI_FTP4_PROTOCOL
Connect	SmartCardEdge.h	/^  EFI_SMART_CARD_EDGE_CONNECT              Connect;$/;"	m	struct:_EFI_SMART_CARD_EDGE_PROTOCOL
Connect	Tcp4.h	/^  EFI_TCP4_CONNECT                       Connect;$/;"	m	struct:_EFI_TCP4_PROTOCOL
Connect	Tcp6.h	/^  EFI_TCP6_CONNECT        Connect;$/;"	m	struct:_EFI_TCP6_PROTOCOL
ConnectDeviceClass	BootManagerPolicy.h	/^  EFI_BOOT_MANAGER_POLICY_CONNECT_DEVICE_CLASS ConnectDeviceClass;$/;"	m	struct:_EFI_BOOT_MANAGER_POLICY_PROTOCOL
ConnectDevicePath	BootManagerPolicy.h	/^  EFI_BOOT_MANAGER_POLICY_CONNECT_DEVICE_PATH  ConnectDevicePath;$/;"	m	struct:_EFI_BOOT_MANAGER_POLICY_PROTOCOL
ConnectFailed	WiFi2.h	/^  ConnectFailed,$/;"	e	enum:__anon301
ConnectFailedReasonUnspecified	WiFi2.h	/^  ConnectFailedReasonUnspecified$/;"	e	enum:__anon301
ConnectFailureTimeout	WiFi2.h	/^  ConnectFailureTimeout,$/;"	e	enum:__anon301
ConnectNetwork	WiFi2.h	/^  EFI_WIRELESS_MAC_CONNECTION_II_CONNECT_NETWORK      ConnectNetwork;$/;"	m	struct:_EFI_WIRELESS_MAC_CONNECTION_II_PROTOCOL
ConnectRefused	WiFi2.h	/^  ConnectRefused,$/;"	e	enum:__anon301
ConnectSuccess	WiFi2.h	/^  ConnectSuccess,$/;"	e	enum:__anon301
Connecting	EapManagement.h	/^  Connecting,$/;"	e	enum:_EFI_EAPOL_SUPPLICANT_PAE_STATE
ConnectionTimeout	Tcp4.h	/^  UINT32                  ConnectionTimeout;$/;"	m	struct:__anon318
ConnectionTimeout	Tcp6.h	/^  UINT32   ConnectionTimeout;$/;"	m	struct:__anon469
Context	Ftp4.h	/^  VOID                                  *Context;$/;"	m	struct:_EFI_FTP4_COMMAND_TOKEN
Context	Mtftp4.h	/^  VOID                        *Context;$/;"	m	struct:_EFI_MTFTP4_TOKEN
Context	Mtftp6.h	/^  VOID                        *Context;$/;"	m	struct:_EFI_MTFTP6_TOKEN
ControlFlags	DebugSupport.h	/^  UINT64  ControlFlags;$/;"	m	struct:__anon491
ControlMask	SerialIo.h	/^  UINT32  ControlMask;$/;"	m	struct:__anon548
ControlOption	Tcp4.h	/^  EFI_TCP4_OPTION         *ControlOption;$/;"	m	struct:__anon319
ControlOption	Tcp6.h	/^  EFI_TCP6_OPTION       *ControlOption;$/;"	m	struct:__anon470
ControlTransfer	Usb2HostController.h	/^  EFI_USB2_HC_PROTOCOL_CONTROL_TRANSFER            ControlTransfer;$/;"	m	struct:_EFI_USB2_HC_PROTOCOL
ControlTransfer	UsbHostController.h	/^  EFI_USB_HC_PROTOCOL_CONTROL_TRANSFER            ControlTransfer;$/;"	m	struct:_EFI_USB_HC_PROTOCOL
Controller	DevicePath.h	/^  CONTROLLER_DEVICE_PATH                     *Controller;$/;"	m	union:__anon76
Controller	DevicePath.h	/^  CONTROLLER_DEVICE_PATH                     Controller;$/;"	m	union:__anon75
ControllerName	ScsiPassThru.h	/^  CHAR16  *ControllerName;$/;"	m	struct:__anon167
ControllerNumber	DevicePath.h	/^  UINT32                          ControllerNumber;$/;"	m	struct:__anon29
ControllerPath	SpiConfiguration.h	/^  CONST EFI_DEVICE_PATH_PROTOCOL *ControllerPath;$/;"	m	struct:_EFI_SPI_BUS
ConvertDeviceNodeToText	DevicePathToText.h	/^  EFI_DEVICE_PATH_TO_TEXT_NODE        ConvertDeviceNodeToText;$/;"	m	struct:__anon249
ConvertDevicePathToText	DevicePathToText.h	/^  EFI_DEVICE_PATH_TO_TEXT_PATH        ConvertDevicePathToText;$/;"	m	struct:__anon249
ConvertTextToDeviceNode	DevicePathFromText.h	/^  EFI_DEVICE_PATH_FROM_TEXT_NODE  ConvertTextToDeviceNode;$/;"	m	struct:__anon94
ConvertTextToDevicePath	DevicePathFromText.h	/^  EFI_DEVICE_PATH_FROM_TEXT_PATH  ConvertTextToDevicePath;$/;"	m	struct:__anon94
CopyMem	PciIo.h	/^  EFI_PCI_IO_PROTOCOL_COPY_MEM            CopyMem;$/;"	m	struct:_EFI_PCI_IO_PROTOCOL
CopyMem	PciRootBridgeIo.h	/^  EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_COPY_MEM        CopyMem;$/;"	m	struct:_EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL
Core	MpService.h	/^  UINT32  Core;$/;"	m	struct:__anon497
Core	MpService.h	/^UINT32  Core;$/;"	m	struct:__anon498
Country	WiFi.h	/^  EFI_80211_ELEMENT_COUNTRY          *Country;$/;"	m	struct:__anon197
CountryStr	WiFi.h	/^  UINT8                              CountryStr[3];$/;"	m	struct:__anon193
CountryTriplet	WiFi.h	/^  EFI_80211_COUNTRY_TRIPLET          CountryTriplet[1];$/;"	m	struct:__anon193
CoverageClass	WiFi.h	/^  UINT8                              CoverageClass;$/;"	m	struct:__anon191
Cr0	DebugSupport.h	/^  UINT32                 Cr0;$/;"	m	struct:__anon487
Cr0	DebugSupport.h	/^  UINT64                Cr0;$/;"	m	struct:__anon489
Cr1	DebugSupport.h	/^  UINT32                 Cr1;  \/* Reserved *\/$/;"	m	struct:__anon487
Cr1	DebugSupport.h	/^  UINT64                Cr1;  \/* Reserved *\/$/;"	m	struct:__anon489
Cr2	DebugSupport.h	/^  UINT32                 Cr2;$/;"	m	struct:__anon487
Cr2	DebugSupport.h	/^  UINT64                Cr2;$/;"	m	struct:__anon489
Cr3	DebugSupport.h	/^  UINT32                 Cr3;$/;"	m	struct:__anon487
Cr3	DebugSupport.h	/^  UINT64                Cr3;$/;"	m	struct:__anon489
Cr4	DebugSupport.h	/^  UINT32                 Cr4;$/;"	m	struct:__anon487
Cr4	DebugSupport.h	/^  UINT64                Cr4;$/;"	m	struct:__anon489
Cr8	DebugSupport.h	/^  UINT64                Cr8;$/;"	m	struct:__anon489
CrDcr	DebugSupport.h	/^  UINT64  CrDcr;$/;"	m	struct:__anon490
CrIfa	DebugSupport.h	/^  UINT64  CrIfa;$/;"	m	struct:__anon490
CrIfs	DebugSupport.h	/^  UINT64  CrIfs;$/;"	m	struct:__anon490
CrIha	DebugSupport.h	/^  UINT64  CrIha;$/;"	m	struct:__anon490
CrIim	DebugSupport.h	/^  UINT64  CrIim;$/;"	m	struct:__anon490
CrIip	DebugSupport.h	/^  UINT64  CrIip;$/;"	m	struct:__anon490
CrIipa	DebugSupport.h	/^  UINT64  CrIipa;$/;"	m	struct:__anon490
CrIpsr	DebugSupport.h	/^  UINT64  CrIpsr;$/;"	m	struct:__anon490
CrIsr	DebugSupport.h	/^  UINT64  CrIsr;$/;"	m	struct:__anon490
CrItir	DebugSupport.h	/^  UINT64  CrItir;$/;"	m	struct:__anon490
CrItm	DebugSupport.h	/^  UINT64  CrItm;$/;"	m	struct:__anon490
CrIva	DebugSupport.h	/^  UINT64  CrIva;$/;"	m	struct:__anon490
CrPta	DebugSupport.h	/^  UINT64  CrPta;$/;"	m	struct:__anon490
Create	UserManager.h	/^  EFI_USER_PROFILE_CREATE         Create;$/;"	m	struct:_EFI_USER_MANAGER_PROTOCOL
CreateChild	ServiceBinding.h	/^  EFI_SERVICE_BINDING_CREATE_CHILD         CreateChild;$/;"	m	struct:_EFI_SERVICE_BINDING_PROTOCOL
CreateDevice	UgaIo.h	/^  EFI_UGA_IO_PROTOCOL_CREATE_DEVICE CreateDevice;$/;"	m	struct:_EFI_UGA_IO_PROTOCOL
CreateDeviceNode	DevicePathUtilities.h	/^  EFI_DEVICE_PATH_UTILS_CREATE_NODE          CreateDeviceNode;$/;"	m	struct:__anon147
CreateFile	Shell.h	/^  EFI_SHELL_CREATE_FILE                     CreateFile;$/;"	m	struct:_EFI_SHELL_PROTOCOL
CreateKey	Kms.h	/^  EFI_KMS_CREATE_KEY                CreateKey;$/;"	m	struct:_EFI_KMS_PROTOCOL
CreatePopup	HiiPopup.h	/^  EFI_HII_CREATE_POPUP  CreatePopup;$/;"	m	struct:_EFI_HII_POPUP_PROTOCOL
CreateThunk	Ebc.h	/^  EFI_EBC_CREATE_THUNK          CreateThunk;$/;"	m	struct:_EFI_EBC_PROTOCOL
CreationDate	TapeIo.h	/^  CHAR8      CreationDate[10];$/;"	m	struct:_EFI_TAPE_HEADER
CreationTime	TapeIo.h	/^  CHAR8      CreationTime[10];$/;"	m	struct:_EFI_TAPE_HEADER
CreatorId	AcpiSystemDescriptionTable.h	/^  UINT32    CreatorId;$/;"	m	struct:__anon360
CreatorRevision	AcpiSystemDescriptionTable.h	/^  UINT32    CreatorRevision;$/;"	m	struct:__anon360
Credential	UserManager.h	/^  EFI_GUID               Credential;$/;"	m	struct:__anon253
CryptoBlockByteOffset	BlockIoCrypto.h	/^  UINT64                        CryptoBlockByteOffset;$/;"	m	struct:__anon351
CryptoBlockByteSize	BlockIoCrypto.h	/^  UINT64                        CryptoBlockByteSize;$/;"	m	struct:__anon351
CryptoBlockByteSize	BlockIoCrypto.h	/^  UINT64                       CryptoBlockByteSize;$/;"	m	struct:__anon350
CryptoBlockNumber	BlockIoCrypto.h	/^  UINT64                       CryptoBlockNumber;$/;"	m	struct:__anon350
CryptoBlockSizeBitMask	BlockIoCrypto.h	/^  UINT64         CryptoBlockSizeBitMask;$/;"	m	struct:__anon348
CryptoKey	BlockIoCrypto.h	/^  VOID                            *CryptoKey;$/;"	m	struct:__anon353
Cs	DebugSupport.h	/^  UINT16  Cs;$/;"	m	struct:__anon486
Cs	DebugSupport.h	/^  UINT32                 Cs;$/;"	m	struct:__anon487
Cs	DebugSupport.h	/^  UINT64                Cs;$/;"	m	struct:__anon489
Current	UserManager.h	/^  EFI_USER_PROFILE_CURRENT        Current;$/;"	m	struct:_EFI_USER_MANAGER_PROTOCOL
CurrentAddress	SimpleNetwork.h	/^  EFI_MAC_ADDRESS CurrentAddress;$/;"	m	struct:__anon266
CurrentX	AbsolutePointer.h	/^  UINT64 CurrentX;$/;"	m	struct:__anon332
CurrentY	AbsolutePointer.h	/^  UINT64 CurrentY;$/;"	m	struct:__anon332
CurrentZ	AbsolutePointer.h	/^  UINT64 CurrentZ;$/;"	m	struct:__anon332
CursorColumn	SimpleTextOut.h	/^  INT32   CursorColumn;$/;"	m	struct:__anon218
CursorRow	SimpleTextOut.h	/^  INT32   CursorRow;$/;"	m	struct:__anon218
CursorVisible	SimpleTextOut.h	/^  BOOLEAN CursorVisible;$/;"	m	struct:__anon218
DATAMANIP_M_64	Ebc.h	114;"	d
DATAMANIP_M_IMMDATA	Ebc.h	115;"	d
DEBUGPORT_DEVICE_PATH	DebugPort.h	/^} DEBUGPORT_DEVICE_PATH;$/;"	t	typeref:struct:__anon259
DEFAULT_TTL	PxeBaseCode.h	35;"	d
DEFAULT_ToS	PxeBaseCode.h	36;"	d
DEVICE_IO_PROTOCOL	DeviceIo.h	25;"	d
DEVICE_LOGICAL_UNIT_DEVICE_PATH	DevicePath.h	/^} DEVICE_LOGICAL_UNIT_DEVICE_PATH;$/;"	t	typeref:struct:__anon43
DEVICE_PATH_MESSAGING_DEBUGPORT	DebugPort.h	131;"	d
DEVICE_PATH_MESSAGING_PC_ANSI	DevicePath.h	748;"	d
DEVICE_PATH_MESSAGING_SAS	DevicePath.h	775;"	d
DEVICE_PATH_MESSAGING_VT_100	DevicePath.h	749;"	d
DEVICE_PATH_MESSAGING_VT_100_PLUS	DevicePath.h	750;"	d
DEVICE_PATH_MESSAGING_VT_UTF8	DevicePath.h	751;"	d
DEVICE_PATH_PROTOCOL	DevicePath.h	31;"	d
DF	IpSecConfig.h	/^  EFI_IPSEC_TUNNEL_DF_OPTION  DF;$/;"	m	struct:_EFI_IPSEC_TUNNEL_OPTION
DFAR	DebugSupport.h	/^  UINT32  DFAR;$/;"	m	struct:__anon492
DFSR	DebugSupport.h	/^  UINT32  DFSR;$/;"	m	struct:__anon492
DISK_IO_PROTOCOL	DiskIo.h	24;"	d
DNS6_ADDR_TO_HOST_DATA	Dns6.h	/^} DNS6_ADDR_TO_HOST_DATA;$/;"	t	typeref:struct:__anon392
DNS6_GENERAL_LOOKUP_DATA	Dns6.h	/^} DNS6_GENERAL_LOOKUP_DATA;$/;"	t	typeref:struct:__anon394
DNS6_HOST_TO_ADDR_DATA	Dns6.h	/^} DNS6_HOST_TO_ADDR_DATA;$/;"	t	typeref:struct:__anon391
DNS6_RESOURCE_RECORD	Dns6.h	/^} DNS6_RESOURCE_RECORD;$/;"	t	typeref:struct:__anon393
DNS_ADDR_TO_HOST_DATA	Dns4.h	/^} DNS_ADDR_TO_HOST_DATA;$/;"	t	typeref:struct:__anon461
DNS_DEVICE_PATH	DevicePath.h	/^} DNS_DEVICE_PATH;$/;"	t	typeref:struct:__anon56
DNS_GENERAL_LOOKUP_DATA	Dns4.h	/^} DNS_GENERAL_LOOKUP_DATA;$/;"	t	typeref:struct:__anon463
DNS_HOST_TO_ADDR_DATA	Dns4.h	/^} DNS_HOST_TO_ADDR_DATA;$/;"	t	typeref:struct:__anon460
DNS_RESOURCE_RECORD	Dns4.h	/^} DNS_RESOURCE_RECORD;$/;"	t	typeref:struct:__anon462
DW0	NvmExpressPassthru.h	/^  UINT32                            DW0;$/;"	m	struct:__anon544
DW1	NvmExpressPassthru.h	/^  UINT32                            DW1;$/;"	m	struct:__anon544
DW2	NvmExpressPassthru.h	/^  UINT32                            DW2;$/;"	m	struct:__anon544
DW3	NvmExpressPassthru.h	/^  UINT32                            DW3;$/;"	m	struct:__anon544
Data	Bis.h	/^  UINT8   *Data;  \/\/\/< 32 Bit Flat Address of data.$/;"	m	struct:__anon170
Data	BluetoothAttribute.h	/^  } Data;$/;"	m	struct:__anon148	typeref:union:__anon148::__anon149
Data	Dhcp4.h	/^  UINT8               Data[1];$/;"	m	struct:__anon136
Data	Dhcp6.h	/^  UINT8                        Data[1];$/;"	m	struct:__anon508
Data	Http.h	/^  } Data;$/;"	m	struct:__anon529	typeref:union:__anon529::__anon530
Data	MmCommunication.h	/^  UINT8     Data[1];$/;"	m	struct:__anon346
Data	Mtftp4.h	/^  EFI_MTFTP4_DATA_HEADER  Data;$/;"	m	union:__anon432
Data	Mtftp4.h	/^  UINT8                   Data[1];$/;"	m	struct:__anon426
Data	Mtftp4.h	/^  UINT8                   Data[1];$/;"	m	struct:__anon427
Data	Mtftp4.h	/^  UINT8                   Data[1];$/;"	m	struct:__anon429
Data	Mtftp6.h	/^  EFI_MTFTP6_DATA_HEADER   Data;   \/\/\/< Data packet header.$/;"	m	union:__anon556
Data	Mtftp6.h	/^  UINT8     Data[1];$/;"	m	struct:__anon550
Data	Mtftp6.h	/^  UINT8     Data[1];$/;"	m	struct:__anon551
Data	Mtftp6.h	/^  UINT8     Data[1];$/;"	m	struct:__anon553
Data	PxeBaseCode.h	/^  UINT8 Data[494];$/;"	m	struct:__anon102
Data	Tls.h	/^  UINT8                         Data[1];$/;"	m	struct:__anon284
Data	Tls.h	/^  UINT8                         Data[48];$/;"	m	struct:__anon287
Data	Tls.h	/^  UINT8                         Data[MAX_TLS_SESSION_ID_LENGTH];$/;"	m	struct:__anon288
Data	WiFi.h	/^  EFI_80211_ASSOCIATE_DATA           *Data;$/;"	m	struct:__anon208
Data	WiFi.h	/^  EFI_80211_AUTHENTICATE_DATA        *Data;$/;"	m	struct:__anon213
Data	WiFi.h	/^  EFI_80211_DEAUTHENTICATE_DATA      *Data;$/;"	m	struct:__anon215
Data	WiFi.h	/^  EFI_80211_DISASSOCIATE_DATA        *Data;$/;"	m	struct:__anon210
Data	WiFi.h	/^  EFI_80211_ELEMENT_DATA_RSN         *Data;$/;"	m	struct:__anon195
Data	WiFi.h	/^  EFI_80211_SCAN_DATA                *Data;$/;"	m	struct:__anon202
Data	WiFi.h	/^  UINT8                              Data[1];$/;"	m	struct:__anon198
Data	WiFi2.h	/^  EFI_80211_CONNECT_NETWORK_DATA            *Data;$/;"	m	struct:__anon313
Data	WiFi2.h	/^  EFI_80211_GET_NETWORKS_DATA               *Data;$/;"	m	struct:__anon311
Data1	Tls.h	/^  UINT8                         Data1;$/;"	m	struct:__anon283
Data2	Tls.h	/^  UINT8                         Data2;$/;"	m	struct:__anon283
Data32	BluetoothAttribute.h	/^  UINT32  Data32;$/;"	m	union:__anon150
Data8	Mtftp4.h	/^  EFI_MTFTP4_DATA8_HEADER Data8;$/;"	m	union:__anon432
Data8	Mtftp6.h	/^  EFI_MTFTP6_DATA8_HEADER  Data8;  \/\/\/< Data packet header with big block number.$/;"	m	union:__anon556
DataBits	DevicePath.h	/^  UINT8                           DataBits;$/;"	m	struct:__anon50
DataBits	SerialIo.h	/^  UINT32  DataBits;$/;"	m	struct:__anon548
DataBuffer	Ftp4.h	/^  VOID                                  *DataBuffer;$/;"	m	struct:_EFI_FTP4_COMMAND_TOKEN
DataBuffer	ScsiPassThru.h	/^  VOID    *DataBuffer;$/;"	m	struct:__anon166
DataBufferSize	Ftp4.h	/^  UINT64                                DataBufferSize;$/;"	m	struct:_EFI_FTP4_COMMAND_TOKEN
DataCallback	Ftp4.h	/^  EFI_FTP4_DATA_CALLBACK                DataCallback;$/;"	m	struct:_EFI_FTP4_COMMAND_TOKEN
DataDirection	ScsiIo.h	/^  UINT8                               DataDirection;$/;"	m	struct:__anon330
DataDirection	ScsiPassThru.h	/^  UINT8   DataDirection;$/;"	m	struct:__anon166
DataDirection	ScsiPassThruExt.h	/^  UINT8  DataDirection;$/;"	m	struct:__anon439
DataLength	Dns4.h	/^  UINT16                        DataLength;$/;"	m	struct:__anon462
DataLength	Dns6.h	/^  UINT16                        DataLength;$/;"	m	struct:__anon393
DataLength	Ip4.h	/^  UINT32                 DataLength;$/;"	m	struct:__anon341
DataLength	Ip6.h	/^  UINT32                  DataLength;$/;"	m	struct:_EFI_IP6_RECEIVE_DATA
DataLength	Ip6.h	/^  UINT32                  DataLength;$/;"	m	struct:_EFI_IP6_TRANSMIT_DATA
DataLength	ManagedNetwork.h	/^  UINT32                            DataLength;$/;"	m	struct:__anon176
DataLength	ManagedNetwork.h	/^  UINT32        DataLength;$/;"	m	struct:__anon174
DataLength	Tcp4.h	/^  UINT32                    DataLength;$/;"	m	struct:__anon325
DataLength	Tcp4.h	/^  UINT32                    DataLength;$/;"	m	struct:__anon326
DataLength	Tcp6.h	/^  UINT32                  DataLength;$/;"	m	struct:__anon476
DataLength	Tcp6.h	/^  UINT32                  DataLength;$/;"	m	struct:__anon477
DataLength	Udp4.h	/^  UINT32                    DataLength;$/;"	m	struct:__anon376
DataLength	Udp4.h	/^  UINT32                    DataLength;$/;"	m	struct:__anon377
DataLength	Udp6.h	/^  UINT32                    DataLength;$/;"	m	struct:__anon88
DataLength	Udp6.h	/^  UINT32                    DataLength;$/;"	m	struct:__anon89
DataOffset	DebugSupport.h	/^  UINT32  DataOffset;$/;"	m	struct:__anon486
DataOffset	DebugSupport.h	/^  UINT64  DataOffset;$/;"	m	struct:__anon488
DataPort	MmSwDispatch.h	/^  UINT8 DataPort;$/;"	m	struct:__anon163
DataPort	SmmSwDispatch2.h	/^  UINT8 DataPort;$/;"	m	struct:__anon93
DataRetries	Tcp4.h	/^  UINT32                  DataRetries;$/;"	m	struct:__anon318
DataRetries	Tcp6.h	/^  UINT32   DataRetries;$/;"	m	struct:__anon469
DataType	RestJsonStructure.h	/^  EFI_REST_JSON_RESOURCE_TYPE_DATATYPE DataType;   \/\/\/< Name of data type declared in this$/;"	m	struct:_EFI_REST_JSON_RESOURCE_TYPE_IDENTIFIER
Dbr0	DebugSupport.h	/^  UINT64  Dbr0;$/;"	m	struct:__anon490
Dbr1	DebugSupport.h	/^  UINT64  Dbr1;$/;"	m	struct:__anon490
Dbr2	DebugSupport.h	/^  UINT64  Dbr2;$/;"	m	struct:__anon490
Dbr3	DebugSupport.h	/^  UINT64  Dbr3;$/;"	m	struct:__anon490
Dbr4	DebugSupport.h	/^  UINT64  Dbr4;$/;"	m	struct:__anon490
Dbr5	DebugSupport.h	/^  UINT64  Dbr5;$/;"	m	struct:__anon490
Dbr6	DebugSupport.h	/^  UINT64  Dbr6;$/;"	m	struct:__anon490
Dbr7	DebugSupport.h	/^  UINT64  Dbr7;$/;"	m	struct:__anon490
Deauthenticate	WiFi.h	/^  EFI_WIRELESS_MAC_CONNECTION_DEAUTHENTICATE     Deauthenticate;$/;"	m	struct:_EFI_WIRELESS_MAC_CONNECTION_PROTOCOL
DebugTransaction	SpiIo.h	/^  BOOLEAN                  DebugTransaction;$/;"	m	struct:_EFI_SPI_BUS_TRANSACTION
Decline	Dhcp6.h	/^  EFI_DHCP6_DECLINE            Decline;$/;"	m	struct:_EFI_DHCP6_PROTOCOL
Decode	LegacyRegion2.h	/^  EFI_LEGACY_REGION2_DECODE     Decode;$/;"	m	struct:_EFI_LEGACY_REGION2_PROTOCOL
DecodeImage	HiiImageDecoder.h	/^  EFI_HII_IMAGE_DECODER_DECODE            DecodeImage;$/;"	m	struct:_EFI_HII_IMAGE_DECODER_PROTOCOL
DecoderName	HiiImageDecoder.h	/^  EFI_GUID                            DecoderName;$/;"	m	struct:_EFI_HII_IMAGE_DECODER_IMAGE_INFO_HEADER
Decompress	Decompress.h	/^  EFI_DECOMPRESS_DECOMPRESS Decompress;$/;"	m	struct:_EFI_DECOMPRESS_PROTOCOL
DecryptData	SmartCardEdge.h	/^  EFI_SMART_CARD_EDGE_DECRYPT_DATA         DecryptData;$/;"	m	struct:_EFI_SMART_CARD_EDGE_PROTOCOL
Default	UserCredential.h	/^  EFI_CREDENTIAL_DEFAULT        Default;$/;"	m	struct:_EFI_USER_CREDENTIAL_PROTOCOL
Default	UserCredential2.h	/^  EFI_CREDENTIAL2_DEFAULT       Default;$/;"	m	struct:_EFI_USER_CREDENTIAL2_PROTOCOL
DefaultParity	SerialIo.h	/^  DefaultParity,$/;"	e	enum:__anon546
DefaultProtocol	Ip4.h	/^  UINT8                   DefaultProtocol;$/;"	m	struct:__anon335
DefaultProtocol	Ip6.h	/^  UINT8                   DefaultProtocol;$/;"	m	struct:__anon399
DefaultStopBits	SerialIo.h	/^  DefaultStopBits,$/;"	e	enum:__anon547
Delete	Arp.h	/^  EFI_ARP_DELETE            Delete;$/;"	m	struct:_EFI_ARP_PROTOCOL
Delete	SimpleFileSystem.h	/^  EFI_FILE_DELETE       Delete;$/;"	m	struct:_EFI_FILE_PROTOCOL
Delete	UserCredential2.h	/^  EFI_CREDENTIAL2_DELETE        Delete;$/;"	m	struct:_EFI_USER_CREDENTIAL2_PROTOCOL
Delete	UserManager.h	/^  EFI_USER_PROFILE_DELETE         Delete;$/;"	m	struct:_EFI_USER_MANAGER_PROTOCOL
DeleteDevice	UgaIo.h	/^  EFI_UGA_IO_PROTOCOL_DELETE_DEVICE DeleteDevice;$/;"	m	struct:_EFI_UGA_IO_PROTOCOL
DeleteFile	Shell.h	/^  EFI_SHELL_DELETE_FILE                     DeleteFile;$/;"	m	struct:_EFI_SHELL_PROTOCOL
DeleteFileByName	Shell.h	/^  EFI_SHELL_DELETE_FILE_BY_NAME             DeleteFileByName;$/;"	m	struct:_EFI_SHELL_PROTOCOL
DeleteInfo	UserManager.h	/^  EFI_USER_PROFILE_DELETE_INFO    DeleteInfo;$/;"	m	struct:_EFI_USER_MANAGER_PROTOCOL
DeleteKey	Kms.h	/^  EFI_KMS_DELETE_KEY                DeleteKey;$/;"	m	struct:_EFI_KMS_PROTOCOL
DeleteKeyAttributes	Kms.h	/^  EFI_KMS_DELETE_KEY_ATTRIBUTES     DeleteKeyAttributes;$/;"	m	struct:_EFI_KMS_PROTOCOL
DenyFlag	Arp.h	/^  BOOLEAN                     DenyFlag;$/;"	m	struct:__anon81
Dependencies	FirmwareManagement.h	/^  EFI_FIRMWARE_IMAGE_DEP           *Dependencies;$/;"	m	struct:__anon10
Dependencies	FirmwareManagement.h	/^  UINT8 Dependencies[1];$/;"	m	struct:__anon9
Descriptor	Dhcp6.h	/^  EFI_DHCP6_IA_DESCRIPTOR      Descriptor;$/;"	m	struct:__anon516
Deselect	UserCredential.h	/^  EFI_CREDENTIAL_DESELECT       Deselect;$/;"	m	struct:_EFI_USER_CREDENTIAL_PROTOCOL
Deselect	UserCredential2.h	/^  EFI_CREDENTIAL2_DESELECT      Deselect;$/;"	m	struct:_EFI_USER_CREDENTIAL2_PROTOCOL
DestAddress	IpSecConfig.h	/^  EFI_IP_ADDRESS                  DestAddress;$/;"	m	struct:_EFI_IPSEC_SA_ID
Destination	Ip6.h	/^  EFI_IPv6_ADDRESS        Destination;$/;"	m	struct:__anon401
DestinationAddress	Ip4.h	/^  EFI_IPv4_ADDRESS        DestinationAddress;$/;"	m	struct:__anon339
DestinationAddress	Ip4.h	/^  EFI_IPv4_ADDRESS       DestinationAddress;$/;"	m	struct:__anon343
DestinationAddress	Ip6.h	/^  EFI_IPv6_ADDRESS        DestinationAddress;$/;"	m	struct:_EFI_IP6_HEADER
DestinationAddress	Ip6.h	/^  EFI_IPv6_ADDRESS        DestinationAddress;$/;"	m	struct:_EFI_IP6_TRANSMIT_DATA
DestinationAddress	Ip6.h	/^  EFI_IPv6_ADDRESS        DestinationAddress;$/;"	m	struct:__anon399
DestinationAddress	ManagedNetwork.h	/^  EFI_MAC_ADDRESS                   *DestinationAddress; \/\/OPTIONAL$/;"	m	struct:__anon176
DestinationAddress	ManagedNetwork.h	/^  VOID          *DestinationAddress;$/;"	m	struct:__anon174
DestinationAddress	Udp4.h	/^  EFI_IPv4_ADDRESS   DestinationAddress;$/;"	m	struct:__anon374
DestinationAddress	Udp6.h	/^  EFI_IPv6_ADDRESS   DestinationAddress;$/;"	m	struct:__anon86
DestinationPort	Udp4.h	/^  UINT16             DestinationPort;$/;"	m	struct:__anon374
DestinationPort	Udp6.h	/^  UINT16             DestinationPort;$/;"	m	struct:__anon86
DestoryStructure	RestJsonStructure.h	/^  EFI_REST_JSON_STRUCTURE_DESTORY_STRUCTURE  DestoryStructure;  \/\/\/< Destory C structure.$/;"	m	struct:_EFI_REST_JSON_STRUCTURE_PROTOCOL
DestroyChild	ServiceBinding.h	/^  EFI_SERVICE_BINDING_DESTROY_CHILD        DestroyChild;$/;"	m	struct:_EFI_SERVICE_BINDING_PROTOCOL
DetectPort	UsbFunctionIo.h	/^  EFI_USBFN_IO_DETECT_PORT                  DetectPort;$/;"	m	struct:_EFI_USBFN_IO_PROTOCOL
DevPath	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL                   *DevPath;$/;"	m	union:__anon76
DevPath	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL                   DevPath;$/;"	m	union:__anon75
Device	DevicePath.h	/^  UINT8                           Device;$/;"	m	struct:__anon25
Device	MmUsbDispatch.h	/^  EFI_DEVICE_PATH_PROTOCOL  *Device;$/;"	m	struct:__anon251
Device	PciRootBridgeIo.h	/^  UINT8   Device;$/;"	m	struct:__anon278
DeviceClass	DevicePath.h	/^  UINT8                         DeviceClass;$/;"	m	struct:__anon41
DeviceDescriptor	UsbFunctionIo.h	/^  EFI_USB_DEVICE_DESCRIPTOR            *DeviceDescriptor;$/;"	m	struct:__anon410
DeviceGuid	I2cIo.h	/^  CONST EFI_GUID                            *DeviceGuid;$/;"	m	struct:_EFI_I2C_IO_PROTOCOL
DeviceHandle	LoadedImage.h	/^  EFI_HANDLE        DeviceHandle;   \/\/\/< The device handle that the EFI Image was loaded from.$/;"	m	struct:__anon359
DeviceId	DevicePath.h	/^  UINT64                          DeviceId;$/;"	m	struct:__anon49
DeviceIndex	I2cIo.h	/^  UINT32                                    DeviceIndex;$/;"	m	struct:_EFI_I2C_IO_PROTOCOL
DevicePath	UgaIo.h	/^  EFI_DEVICE_PATH_PROTOCOL  *DevicePath;$/;"	m	struct:__anon538
DevicePathPointer	NetworkInterfaceIdentifier.h	/^    VOID             *DevicePathPointer;    \/\/\/< Pointer to the device path for this NIC.$/;"	m	struct:undiconfig_table::__anon3
DeviceProtocol	DevicePath.h	/^  UINT8                         DeviceProtocol;$/;"	m	struct:__anon41
DeviceSubClass	DevicePath.h	/^  UINT8                         DeviceSubClass;$/;"	m	struct:__anon41
DeviceTopology	DevicePath.h	/^  UINT16                          DeviceTopology;$/;"	m	struct:__anon53
DeviceTopology	DevicePath.h	/^  UINT16                          DeviceTopology;$/;"	m	struct:__anon54
DeviceType	DevicePath.h	/^  UINT16                          DeviceType;$/;"	m	struct:__anon74
DeviceTypeGuid	SerialIo.h	/^  CONST EFI_GUID              *DeviceTypeGuid; \/\/ Revision 1.1$/;"	m	struct:_EFI_SERIAL_IO_PROTOCOL
Deviceid	SpiNorFlash.h	/^  UINT8                                   Deviceid[3];$/;"	m	struct:_EFI_SPI_NOR_FLASH_PROTOCOL
Dhcp	PxeBaseCode.h	/^  EFI_PXE_BASE_CODE_DHCP            Dhcp;$/;"	m	struct:_EFI_PXE_BASE_CODE_PROTOCOL
Dhcp4	Dhcp4.h	/^  } Dhcp4;$/;"	m	struct:__anon138	typeref:struct:__anon138::__anon139
Dhcp4AddressLost	Dhcp4.h	/^  Dhcp4AddressLost    = 0x0b,$/;"	e	enum:__anon141
Dhcp4Bound	Dhcp4.h	/^  Dhcp4Bound          = 0x4,$/;"	e	enum:__anon140
Dhcp4BoundCompleted	Dhcp4.h	/^  Dhcp4BoundCompleted = 0x08,$/;"	e	enum:__anon141
Dhcp4Callback	Dhcp4.h	/^  EFI_DHCP4_CALLBACK          Dhcp4Callback;$/;"	m	struct:__anon142
Dhcp4EnterRebinding	Dhcp4.h	/^  Dhcp4EnterRebinding = 0x0a,$/;"	e	enum:__anon141
Dhcp4EnterRenewing	Dhcp4.h	/^  Dhcp4EnterRenewing  = 0x09,$/;"	e	enum:__anon141
Dhcp4Fail	Dhcp4.h	/^  Dhcp4Fail           = 0x0c$/;"	e	enum:__anon141
Dhcp4Init	Dhcp4.h	/^  Dhcp4Init           = 0x1,$/;"	e	enum:__anon140
Dhcp4InitReboot	Dhcp4.h	/^  Dhcp4InitReboot     = 0x7,$/;"	e	enum:__anon140
Dhcp4RcvdAck	Dhcp4.h	/^  Dhcp4RcvdAck        = 0x05,$/;"	e	enum:__anon141
Dhcp4RcvdNak	Dhcp4.h	/^  Dhcp4RcvdNak        = 0x06,$/;"	e	enum:__anon141
Dhcp4RcvdOffer	Dhcp4.h	/^  Dhcp4RcvdOffer      = 0x02,$/;"	e	enum:__anon141
Dhcp4Rebinding	Dhcp4.h	/^  Dhcp4Rebinding      = 0x6,$/;"	e	enum:__anon140
Dhcp4Rebooting	Dhcp4.h	/^  Dhcp4Rebooting      = 0x8$/;"	e	enum:__anon140
Dhcp4Renewing	Dhcp4.h	/^  Dhcp4Renewing       = 0x5,$/;"	e	enum:__anon140
Dhcp4Requesting	Dhcp4.h	/^  Dhcp4Requesting     = 0x3,$/;"	e	enum:__anon140
Dhcp4SelectOffer	Dhcp4.h	/^  Dhcp4SelectOffer    = 0x03,$/;"	e	enum:__anon141
Dhcp4Selecting	Dhcp4.h	/^  Dhcp4Selecting      = 0x2,$/;"	e	enum:__anon140
Dhcp4SendDecline	Dhcp4.h	/^  Dhcp4SendDecline    = 0x07,$/;"	e	enum:__anon141
Dhcp4SendDiscover	Dhcp4.h	/^  Dhcp4SendDiscover   = 0x01,$/;"	e	enum:__anon141
Dhcp4SendRequest	Dhcp4.h	/^  Dhcp4SendRequest    = 0x04,$/;"	e	enum:__anon141
Dhcp4Stopped	Dhcp4.h	/^  Dhcp4Stopped        = 0x0,$/;"	e	enum:__anon140
Dhcp6	Dhcp6.h	/^  } Dhcp6;$/;"	m	struct:__anon510	typeref:struct:__anon510::__anon511
Dhcp6Bound	Dhcp6.h	/^  Dhcp6Bound                   = 0x6,$/;"	e	enum:__anon506
Dhcp6Callback	Dhcp6.h	/^  EFI_DHCP6_CALLBACK           Dhcp6Callback;$/;"	m	struct:__anon518
Dhcp6Confirming	Dhcp6.h	/^  Dhcp6Confirming              = 0x4,$/;"	e	enum:__anon506
Dhcp6Declining	Dhcp6.h	/^  Dhcp6Declining               = 0x3,$/;"	e	enum:__anon506
Dhcp6EnterRebinding	Dhcp6.h	/^  Dhcp6EnterRebinding          = 0xa$/;"	e	enum:__anon507
Dhcp6EnterRenewing	Dhcp6.h	/^  Dhcp6EnterRenewing           = 0x9,$/;"	e	enum:__anon507
Dhcp6Init	Dhcp6.h	/^  Dhcp6Init                    = 0x0,$/;"	e	enum:__anon506
Dhcp6RcvdAdvertise	Dhcp6.h	/^  Dhcp6RcvdAdvertise           = 0x1,$/;"	e	enum:__anon507
Dhcp6RcvdReconfigure	Dhcp6.h	/^  Dhcp6RcvdReconfigure         = 0x5,$/;"	e	enum:__anon507
Dhcp6RcvdReply	Dhcp6.h	/^  Dhcp6RcvdReply               = 0x4,$/;"	e	enum:__anon507
Dhcp6Rebinding	Dhcp6.h	/^  Dhcp6Rebinding               = 0x8$/;"	e	enum:__anon506
Dhcp6Releasing	Dhcp6.h	/^  Dhcp6Releasing               = 0x5,$/;"	e	enum:__anon506
Dhcp6Renewing	Dhcp6.h	/^  Dhcp6Renewing                = 0x7,$/;"	e	enum:__anon506
Dhcp6Requesting	Dhcp6.h	/^  Dhcp6Requesting              = 0x2,$/;"	e	enum:__anon506
Dhcp6SelectAdvertise	Dhcp6.h	/^  Dhcp6SelectAdvertise         = 0x2,$/;"	e	enum:__anon507
Dhcp6Selecting	Dhcp6.h	/^  Dhcp6Selecting               = 0x1,$/;"	e	enum:__anon506
Dhcp6SendConfirm	Dhcp6.h	/^  Dhcp6SendConfirm             = 0x7,$/;"	e	enum:__anon507
Dhcp6SendDecline	Dhcp6.h	/^  Dhcp6SendDecline             = 0x6,$/;"	e	enum:__anon507
Dhcp6SendRelease	Dhcp6.h	/^  Dhcp6SendRelease             = 0x8,$/;"	e	enum:__anon507
Dhcp6SendRequest	Dhcp6.h	/^  Dhcp6SendRequest             = 0x3,$/;"	e	enum:__anon507
Dhcp6SendSolicit	Dhcp6.h	/^  Dhcp6SendSolicit             = 0x0,$/;"	e	enum:__anon507
DhcpAck	PxeBaseCode.h	/^  EFI_PXE_BASE_CODE_PACKET      DhcpAck;$/;"	m	struct:__anon116
DhcpAckReceived	PxeBaseCode.h	/^  BOOLEAN                       DhcpAckReceived;$/;"	m	struct:__anon116
DhcpDiscover	PxeBaseCode.h	/^  EFI_PXE_BASE_CODE_PACKET      DhcpDiscover;$/;"	m	struct:__anon116
DhcpDiscoverValid	PxeBaseCode.h	/^  BOOLEAN                       DhcpDiscoverValid;$/;"	m	struct:__anon116
DhcpMagik	PxeBaseCode.h	/^  UINT32  DhcpMagik;$/;"	m	struct:__anon113
DhcpOptions	PxeBaseCode.h	/^  UINT8   DhcpOptions[1024];$/;"	m	struct:__anon114
DhcpOptions	PxeBaseCode.h	/^  UINT8   DhcpOptions[56];$/;"	m	struct:__anon113
Dhcpv4	PxeBaseCode.h	/^  EFI_PXE_BASE_CODE_DHCPV4_PACKET Dhcpv4;$/;"	m	union:__anon115
Dhcpv6	PxeBaseCode.h	/^  EFI_PXE_BASE_CODE_DHCPV6_PACKET Dhcpv6;$/;"	m	union:__anon115
Die	MpService.h	/^UINT32  Die;$/;"	m	struct:__anon498
DirectAddress	BluetoothAttribute.h	/^  BLUETOOTH_LE_ADDRESS DirectAddress;$/;"	m	struct:__anon161
DirectAddress	BluetoothLeConfig.h	/^  BLUETOOTH_LE_ADDRESS DirectAddress;$/;"	m	struct:__anon564
Direction	Supplicant.h	/^  EFI_SUPPLICANT_KEY_DIRECTION            Direction;$/;"	m	struct:__anon123
Direction	UsbFunctionIo.h	/^  EFI_USBFN_ENDPOINT_DIRECTION  Direction;$/;"	m	struct:_EFI_USBFN_TRANSFER_RESULT
DisableBackgroundPolling	ManagedNetwork.h	/^  BOOLEAN    DisableBackgroundPolling;$/;"	m	struct:__anon173
DisableDevice	SuperIoControl.h	/^  EFI_SIO_CONTROL_DISABLE DisableDevice;$/;"	m	struct:_EFI_SIO_CONTROL_PROTOCOL
DisableInterrupt	Cpu.h	/^  EFI_CPU_DISABLE_INTERRUPT           DisableInterrupt;$/;"	m	struct:_EFI_CPU_ARCH_PROTOCOL
DisablePageBreak	Shell.h	/^  EFI_SHELL_DISABLE_PAGE_BREAK              DisablePageBreak;$/;"	m	struct:_EFI_SHELL_PROTOCOL
DisabledEvent	IpSec.h	/^  EFI_EVENT              DisabledEvent;     \/\/\/< Event signaled when the interface is disabled.$/;"	m	struct:_EFI_IPSEC_PROTOCOL
DisabledEvent	IpSec.h	/^EFI_EVENT            DisabledEvent;$/;"	m	struct:_EFI_IPSEC2_PROTOCOL
DisabledFlag	IpSec.h	/^  BOOLEAN                DisabledFlag;      \/\/\/< State of the interface.$/;"	m	struct:_EFI_IPSEC_PROTOCOL
DisabledFlag	IpSec.h	/^BOOLEAN              DisabledFlag;$/;"	m	struct:_EFI_IPSEC2_PROTOCOL
Disassociate	WiFi.h	/^  EFI_WIRELESS_MAC_CONNECTION_DISASSOCIATE       Disassociate;$/;"	m	struct:_EFI_WIRELESS_MAC_CONNECTION_PROTOCOL
DisassociateInvalidParameters	WiFi.h	/^  DisassociateInvalidParameters$/;"	e	enum:__anon183
DisassociateSuccess	WiFi.h	/^  DisassociateSuccess,$/;"	e	enum:__anon183
Disconnect	BluetoothConfig.h	/^  EFI_BLUETOOTH_CONFIG_DISCONNECT                         Disconnect;$/;"	m	struct:_EFI_BLUETOOTH_CONFIG_PROTOCOL
Disconnect	BluetoothLeConfig.h	/^  EFI_BLUETOOTH_LE_CONFIG_DISCONNECT                         Disconnect;$/;"	m	struct:_EFI_BLUETOOTH_LE_CONFIG_PROTOCOL
Disconnect	SmartCardEdge.h	/^  EFI_SMART_CARD_EDGE_DISCONNECT           Disconnect;$/;"	m	struct:_EFI_SMART_CARD_EDGE_PROTOCOL
DisconnectNetwork	WiFi2.h	/^  EFI_WIRELESS_MAC_CONNECTION_II_DISCONNECT_NETWORK   DisconnectNetwork;$/;"	m	struct:_EFI_WIRELESS_MAC_CONNECTION_II_PROTOCOL
Disconnected	EapManagement.h	/^  Disconnected,$/;"	e	enum:_EFI_EAPOL_SUPPLICANT_PAE_STATE
Discover	PxeBaseCode.h	/^  EFI_PXE_BASE_CODE_DISCOVER        Discover;$/;"	m	struct:_EFI_PXE_BASE_CODE_PROTOCOL
DiscoverTimeout	Dhcp4.h	/^  UINT32                      *DiscoverTimeout;$/;"	m	struct:__anon142
DiscoverTryCount	Dhcp4.h	/^  UINT32                      DiscoverTryCount;$/;"	m	struct:__anon142
DispatchProcedure	MmMp.h	/^  EFI_MM_DISPATCH_PROCEDURE         DispatchProcedure;$/;"	m	struct:_EFI_MM_MP_PROTOCOL
DispatchService	UgaIo.h	/^  PUGA_FW_SERVICE_DISPATCH          DispatchService;$/;"	m	struct:_EFI_UGA_IO_PROTOCOL
DisqualifyMode	IdeControllerInit.h	/^  EFI_IDE_CONTROLLER_DISQUALIFY_MODE     DisqualifyMode;$/;"	m	struct:_EFI_IDE_CONTROLLER_INIT_PROTOCOL
DmaBufferAlignment	Cpu.h	/^  UINT32                              DmaBufferAlignment;$/;"	m	struct:_EFI_CPU_ARCH_PROTOCOL
Dns	DevicePath.h	/^  DNS_DEVICE_PATH                            *Dns;$/;"	m	union:__anon76
Dns	DevicePath.h	/^  DNS_DEVICE_PATH                            Dns;$/;"	m	union:__anon75
DnsCacheCount	Dns4.h	/^  UINT32                        DnsCacheCount;$/;"	m	struct:__anon459
DnsCacheCount	Dns6.h	/^  UINT32                        DnsCacheCount;$/;"	m	struct:__anon390
DnsCacheList	Dns4.h	/^  EFI_DNS4_CACHE_ENTRY          *DnsCacheList;$/;"	m	struct:__anon459
DnsCacheList	Dns6.h	/^  EFI_DNS6_CACHE_ENTRY          *DnsCacheList;$/;"	m	struct:__anon390
DnsConfigData	Dns4.h	/^  EFI_DNS4_CONFIG_DATA          DnsConfigData;$/;"	m	struct:__anon459
DnsConfigData	Dns6.h	/^  EFI_DNS6_CONFIG_DATA          DnsConfigData;$/;"	m	struct:__anon390
DnsServerCount	Dns4.h	/^  UINT32                        DnsServerCount;$/;"	m	struct:__anon459
DnsServerCount	Dns6.h	/^  UINT32                         DnsServerCount;$/;"	m	struct:__anon390
DnsServerCount	Dns6.h	/^  UINT32                        DnsServerCount;$/;"	m	struct:__anon388
DnsServerIp	DevicePath.h	/^  EFI_IP_ADDRESS                  DnsServerIp[];$/;"	m	struct:__anon56
DnsServerList	Dns4.h	/^  EFI_IPv4_ADDRESS              *DnsServerList;$/;"	m	struct:__anon457
DnsServerList	Dns4.h	/^  EFI_IPv4_ADDRESS              *DnsServerList;$/;"	m	struct:__anon459
DnsServerList	Dns6.h	/^  EFI_IPv6_ADDRESS               *DnsServerList;$/;"	m	struct:__anon390
DnsServerList	Dns6.h	/^  EFI_IPv6_ADDRESS              *DnsServerList;$/;"	m	struct:__anon388
DnsServerListCount	Dns4.h	/^  UINTN                         DnsServerListCount;$/;"	m	struct:__anon457
DoNotFragment	Ip4.h	/^  BOOLEAN                 DoNotFragment;$/;"	m	struct:__anon335
DoNotFragment	Ip4.h	/^  BOOLEAN                DoNotFragment;$/;"	m	struct:__anon342
DoNotFragment	Udp4.h	/^  BOOLEAN            DoNotFragment;$/;"	m	struct:__anon375
Dpa	NvdimmLabel.h	/^  UINT64   Dpa;$/;"	m	struct:__anon261
Dr0	DebugSupport.h	/^  UINT32                 Dr0;$/;"	m	struct:__anon487
Dr0	DebugSupport.h	/^  UINT64                Dr0;$/;"	m	struct:__anon489
Dr1	DebugSupport.h	/^  UINT32                 Dr1;$/;"	m	struct:__anon487
Dr1	DebugSupport.h	/^  UINT64                Dr1;$/;"	m	struct:__anon489
Dr2	DebugSupport.h	/^  UINT32                 Dr2;$/;"	m	struct:__anon487
Dr2	DebugSupport.h	/^  UINT64                Dr2;$/;"	m	struct:__anon489
Dr3	DebugSupport.h	/^  UINT32                 Dr3;$/;"	m	struct:__anon487
Dr3	DebugSupport.h	/^  UINT64                Dr3;$/;"	m	struct:__anon489
Dr6	DebugSupport.h	/^  UINT32                 Dr6;$/;"	m	struct:__anon487
Dr6	DebugSupport.h	/^  UINT64                Dr6;$/;"	m	struct:__anon489
Dr7	DebugSupport.h	/^  UINT32                 Dr7;$/;"	m	struct:__anon487
Dr7	DebugSupport.h	/^  UINT64                Dr7;$/;"	m	struct:__anon489
DrawImage	HiiImage.h	/^  EFI_HII_DRAW_IMAGE    DrawImage;$/;"	m	struct:_EFI_HII_IMAGE_PROTOCOL
DrawImageEx	HiiImageEx.h	/^  EFI_HII_DRAW_IMAGE_EX     DrawImageEx;$/;"	m	struct:_EFI_HII_IMAGE_EX_PROTOCOL
DrawImageId	HiiImage.h	/^  EFI_HII_DRAW_IMAGE_ID DrawImageId;$/;"	m	struct:_EFI_HII_IMAGE_PROTOCOL
DrawImageIdEx	HiiImageEx.h	/^  EFI_HII_DRAW_IMAGE_ID_EX  DrawImageIdEx;$/;"	m	struct:_EFI_HII_IMAGE_EX_PROTOCOL
DriverBindingHandle	DriverBinding.h	/^  EFI_HANDLE                    DriverBindingHandle;$/;"	m	struct:_EFI_DRIVER_BINDING_PROTOCOL
DriverHandle	Ip4.h	/^  EFI_HANDLE              DriverHandle;$/;"	m	struct:__anon334
DriverHandle	Ip6.h	/^  EFI_HANDLE              DriverHandle;$/;"	m	struct:__anon398
DriverHandle	Tcp4.h	/^  EFI_HANDLE              DriverHandle;$/;"	m	struct:__anon316
DriverHandle	Tcp6.h	/^  EFI_HANDLE             DriverHandle; \/\/\/< The handle of the driver that creates this entry.$/;"	m	struct:__anon467
DriverHandle	Udp4.h	/^  EFI_HANDLE              DriverHandle;$/;"	m	struct:__anon372
DriverHandle	Udp6.h	/^  EFI_HANDLE              DriverHandle;$/;"	m	struct:__anon84
DriverLoaded	PlatformDriverOverride.h	/^  EFI_PLATFORM_DRIVER_OVERRIDE_DRIVER_LOADED    DriverLoaded;$/;"	m	struct:_EFI_PLATFORM_DRIVER_OVERRIDE_PROTOCOL
Ds	DebugSupport.h	/^  UINT16  Ds;$/;"	m	struct:__anon486
Ds	DebugSupport.h	/^  UINT32                 Ds;$/;"	m	struct:__anon487
Ds	DebugSupport.h	/^  UINT64                Ds;$/;"	m	struct:__anon489
Duid	Dhcp6.h	/^  UINT8                        Duid[1];$/;"	m	struct:__anon512
DupAddrDetectTransmits	Ip6Config.h	/^  UINT32    DupAddrDetectTransmits;  \/\/\/< The number of consecutive Neighbor Solicitation messages sent.$/;"	m	struct:__anon17
DuplicateDevicePath	DevicePathUtilities.h	/^  EFI_DEVICE_PATH_UTILS_DUP_DEVICE_PATH      DuplicateDevicePath;$/;"	m	struct:__anon147
EBC_ICACHE_FLUSH	Ebc.h	/^(EFIAPI *EBC_ICACHE_FLUSH)($/;"	t
EFI_80211_ACC_NET_TYPE	WiFi.h	/^} EFI_80211_ACC_NET_TYPE;$/;"	t	typeref:enum:__anon179
EFI_80211_AKM_SUITE_SELECTOR	WiFi2.h	/^} EFI_80211_AKM_SUITE_SELECTOR;$/;"	t	typeref:struct:__anon306
EFI_80211_ASSOCIATE_DATA	WiFi.h	/^} EFI_80211_ASSOCIATE_DATA;$/;"	t	typeref:struct:__anon205
EFI_80211_ASSOCIATE_DATA_TOKEN	WiFi.h	/^} EFI_80211_ASSOCIATE_DATA_TOKEN;$/;"	t	typeref:struct:__anon208
EFI_80211_ASSOCIATE_RESULT	WiFi.h	/^} EFI_80211_ASSOCIATE_RESULT;$/;"	t	typeref:struct:__anon207
EFI_80211_ASSOCIATE_RESULT_CODE	WiFi.h	/^} EFI_80211_ASSOCIATE_RESULT_CODE;$/;"	t	typeref:enum:__anon180
EFI_80211_AUTHENTICATE_DATA	WiFi.h	/^} EFI_80211_AUTHENTICATE_DATA;$/;"	t	typeref:struct:__anon211
EFI_80211_AUTHENTICATE_DATA_TOKEN	WiFi.h	/^} EFI_80211_AUTHENTICATE_DATA_TOKEN;$/;"	t	typeref:struct:__anon213
EFI_80211_AUTHENTICATE_RESULT	WiFi.h	/^} EFI_80211_AUTHENTICATE_RESULT;$/;"	t	typeref:struct:__anon212
EFI_80211_AUTHENTICATE_RESULT_CODE	WiFi.h	/^} EFI_80211_AUTHENTICATE_RESULT_CODE;$/;"	t	typeref:enum:__anon185
EFI_80211_AUTHENTICATION_TYPE	WiFi.h	/^} EFI_80211_AUTHENTICATION_TYPE;$/;"	t	typeref:enum:__anon184
EFI_80211_BSS_DESCRIPTION	WiFi.h	/^} EFI_80211_BSS_DESCRIPTION;$/;"	t	typeref:struct:__anon197
EFI_80211_BSS_DESP_PILOT	WiFi.h	/^} EFI_80211_BSS_DESP_PILOT;$/;"	t	typeref:struct:__anon200
EFI_80211_BSS_TYPE	WiFi2.h	/^} EFI_80211_BSS_TYPE;$/;"	t	typeref:enum:__anon300
EFI_80211_CIPHER_SUITE_SELECTOR	WiFi2.h	/^} EFI_80211_CIPHER_SUITE_SELECTOR;$/;"	t	typeref:struct:__anon307
EFI_80211_CONNECT_NETWORK_DATA	WiFi2.h	/^} EFI_80211_CONNECT_NETWORK_DATA;$/;"	t	typeref:struct:__anon312
EFI_80211_CONNECT_NETWORK_RESULT_CODE	WiFi2.h	/^} EFI_80211_CONNECT_NETWORK_RESULT_CODE;$/;"	t	typeref:enum:__anon301
EFI_80211_CONNECT_NETWORK_TOKEN	WiFi2.h	/^} EFI_80211_CONNECT_NETWORK_TOKEN;$/;"	t	typeref:struct:__anon313
EFI_80211_COUNTRY_TRIPLET	WiFi.h	/^} EFI_80211_COUNTRY_TRIPLET;$/;"	t	typeref:union:__anon192
EFI_80211_COUNTRY_TRIPLET_OPERATE	WiFi.h	/^} EFI_80211_COUNTRY_TRIPLET_OPERATE;$/;"	t	typeref:struct:__anon191
EFI_80211_COUNTRY_TRIPLET_SUBBAND	WiFi.h	/^} EFI_80211_COUNTRY_TRIPLET_SUBBAND;$/;"	t	typeref:struct:__anon190
EFI_80211_DEAUTHENTICATE_DATA	WiFi.h	/^} EFI_80211_DEAUTHENTICATE_DATA;$/;"	t	typeref:struct:__anon214
EFI_80211_DEAUTHENTICATE_DATA_TOKEN	WiFi.h	/^} EFI_80211_DEAUTHENTICATE_DATA_TOKEN;$/;"	t	typeref:struct:__anon215
EFI_80211_DISASSOCIATE_DATA	WiFi.h	/^} EFI_80211_DISASSOCIATE_DATA;$/;"	t	typeref:struct:__anon209
EFI_80211_DISASSOCIATE_DATA_TOKEN	WiFi.h	/^} EFI_80211_DISASSOCIATE_DATA_TOKEN;$/;"	t	typeref:struct:__anon210
EFI_80211_DISASSOCIATE_RESULT_CODE	WiFi.h	/^} EFI_80211_DISASSOCIATE_RESULT_CODE;$/;"	t	typeref:enum:__anon183
EFI_80211_DISCONNECT_NETWORK_TOKEN	WiFi2.h	/^} EFI_80211_DISCONNECT_NETWORK_TOKEN;$/;"	t	typeref:struct:__anon314
EFI_80211_ELEMENT_COUNTRY	WiFi.h	/^} EFI_80211_ELEMENT_COUNTRY;$/;"	t	typeref:struct:__anon193
EFI_80211_ELEMENT_DATA_RSN	WiFi.h	/^} EFI_80211_ELEMENT_DATA_RSN;$/;"	t	typeref:struct:__anon194
EFI_80211_ELEMENT_EXT_CAP	WiFi.h	/^} EFI_80211_ELEMENT_EXT_CAP;$/;"	t	typeref:struct:__anon196
EFI_80211_ELEMENT_HEADER	WiFi.h	/^} EFI_80211_ELEMENT_HEADER;$/;"	t	typeref:struct:__anon186
EFI_80211_ELEMENT_REQ	WiFi.h	/^} EFI_80211_ELEMENT_REQ;$/;"	t	typeref:struct:__anon187
EFI_80211_ELEMENT_RSN	WiFi.h	/^} EFI_80211_ELEMENT_RSN;$/;"	t	typeref:struct:__anon195
EFI_80211_ELEMENT_SSID	WiFi.h	/^} EFI_80211_ELEMENT_SSID;$/;"	t	typeref:struct:__anon188
EFI_80211_ELEMENT_SUPP_CHANNEL	WiFi.h	/^} EFI_80211_ELEMENT_SUPP_CHANNEL;$/;"	t	typeref:struct:__anon204
EFI_80211_ELEMENT_SUPP_CHANNEL_TUPLE	WiFi.h	/^} EFI_80211_ELEMENT_SUPP_CHANNEL_TUPLE;$/;"	t	typeref:struct:__anon203
EFI_80211_ELEMENT_TIMEOUT_VAL	WiFi.h	/^} EFI_80211_ELEMENT_TIMEOUT_VAL;$/;"	t	typeref:struct:__anon206
EFI_80211_GET_NETWORKS_DATA	WiFi2.h	/^} EFI_80211_GET_NETWORKS_DATA;$/;"	t	typeref:struct:__anon304
EFI_80211_GET_NETWORKS_RESULT	WiFi2.h	/^} EFI_80211_GET_NETWORKS_RESULT;$/;"	t	typeref:struct:__anon310
EFI_80211_GET_NETWORKS_TOKEN	WiFi2.h	/^} EFI_80211_GET_NETWORKS_TOKEN;$/;"	t	typeref:struct:__anon311
EFI_80211_LINK_STATE	Supplicant.h	/^} EFI_80211_LINK_STATE;$/;"	t	typeref:enum:__anon119
EFI_80211_MAC_ADDRESS	WiFi2.h	/^} EFI_80211_MAC_ADDRESS;$/;"	t	typeref:struct:__anon302
EFI_80211_MULTIPLE_BSSID	WiFi.h	/^} EFI_80211_MULTIPLE_BSSID;$/;"	t	typeref:struct:__anon199
EFI_80211_NETWORK	WiFi2.h	/^} EFI_80211_NETWORK;$/;"	t	typeref:struct:__anon308
EFI_80211_NETWORK_DESCRIPTION	WiFi2.h	/^} EFI_80211_NETWORK_DESCRIPTION;$/;"	t	typeref:struct:__anon309
EFI_80211_REASON_CODE	WiFi.h	/^} EFI_80211_REASON_CODE;$/;"	t	typeref:enum:__anon182
EFI_80211_SCAN_DATA	WiFi.h	/^} EFI_80211_SCAN_DATA;$/;"	t	typeref:struct:__anon189
EFI_80211_SCAN_DATA_TOKEN	WiFi.h	/^} EFI_80211_SCAN_DATA_TOKEN;$/;"	t	typeref:struct:__anon202
EFI_80211_SCAN_RESULT	WiFi.h	/^} EFI_80211_SCAN_RESULT;$/;"	t	typeref:struct:__anon201
EFI_80211_SCAN_RESULT_CODE	WiFi.h	/^} EFI_80211_SCAN_RESULT_CODE;$/;"	t	typeref:enum:__anon181
EFI_80211_SSID	WiFi2.h	/^} EFI_80211_SSID;$/;"	t	typeref:struct:__anon303
EFI_80211_SUBELEMENT_INFO	WiFi.h	/^} EFI_80211_SUBELEMENT_INFO;$/;"	t	typeref:struct:__anon198
EFI_80211_SUITE_SELECTOR	WiFi2.h	/^} EFI_80211_SUITE_SELECTOR;$/;"	t	typeref:struct:__anon305
EFI_ABSOLUTE_POINTER_GET_STATE	AbsolutePointer.h	/^(EFIAPI *EFI_ABSOLUTE_POINTER_GET_STATE)($/;"	t
EFI_ABSOLUTE_POINTER_MODE	AbsolutePointer.h	/^} EFI_ABSOLUTE_POINTER_MODE;$/;"	t	typeref:struct:__anon331
EFI_ABSOLUTE_POINTER_PROTOCOL	AbsolutePointer.h	/^typedef struct _EFI_ABSOLUTE_POINTER_PROTOCOL EFI_ABSOLUTE_POINTER_PROTOCOL;$/;"	t	typeref:struct:_EFI_ABSOLUTE_POINTER_PROTOCOL
EFI_ABSOLUTE_POINTER_PROTOCOL_GUID	AbsolutePointer.h	17;"	d
EFI_ABSOLUTE_POINTER_RESET	AbsolutePointer.h	/^(EFIAPI *EFI_ABSOLUTE_POINTER_RESET)($/;"	t
EFI_ABSOLUTE_POINTER_STATE	AbsolutePointer.h	/^} EFI_ABSOLUTE_POINTER_STATE;$/;"	t	typeref:struct:__anon332
EFI_ABSP_SupportsAltActive	AbsolutePointer.h	52;"	d
EFI_ABSP_SupportsPressureAsZ	AbsolutePointer.h	57;"	d
EFI_ABSP_TouchActive	AbsolutePointer.h	95;"	d
EFI_ABS_AltActive	AbsolutePointer.h	100;"	d
EFI_ACPI_CLOSE	AcpiSystemDescriptionTable.h	/^(EFIAPI *EFI_ACPI_CLOSE)($/;"	t
EFI_ACPI_DATA_TYPE	AcpiSystemDescriptionTable.h	/^typedef UINT32 EFI_ACPI_DATA_TYPE;$/;"	t
EFI_ACPI_DATA_TYPE_CHILD	AcpiSystemDescriptionTable.h	35;"	d
EFI_ACPI_DATA_TYPE_NAME_STRING	AcpiSystemDescriptionTable.h	31;"	d
EFI_ACPI_DATA_TYPE_NONE	AcpiSystemDescriptionTable.h	29;"	d
EFI_ACPI_DATA_TYPE_OP	AcpiSystemDescriptionTable.h	32;"	d
EFI_ACPI_DATA_TYPE_OPCODE	AcpiSystemDescriptionTable.h	30;"	d
EFI_ACPI_DATA_TYPE_STRING	AcpiSystemDescriptionTable.h	34;"	d
EFI_ACPI_DATA_TYPE_UINT	AcpiSystemDescriptionTable.h	33;"	d
EFI_ACPI_FIND_PATH	AcpiSystemDescriptionTable.h	/^(EFIAPI *EFI_ACPI_FIND_PATH)($/;"	t
EFI_ACPI_GET_ACPI_TABLE2	AcpiSystemDescriptionTable.h	/^(EFIAPI *EFI_ACPI_GET_ACPI_TABLE2)($/;"	t
EFI_ACPI_GET_CHILD	AcpiSystemDescriptionTable.h	/^(EFIAPI *EFI_ACPI_GET_CHILD)($/;"	t
EFI_ACPI_GET_OPTION	AcpiSystemDescriptionTable.h	/^(EFIAPI *EFI_ACPI_GET_OPTION)($/;"	t
EFI_ACPI_HANDLE	AcpiSystemDescriptionTable.h	/^typedef VOID    *EFI_ACPI_HANDLE;$/;"	t
EFI_ACPI_NOTIFICATION_FN	AcpiSystemDescriptionTable.h	/^(EFIAPI *EFI_ACPI_NOTIFICATION_FN)($/;"	t
EFI_ACPI_OPEN	AcpiSystemDescriptionTable.h	/^(EFIAPI *EFI_ACPI_OPEN)($/;"	t
EFI_ACPI_OPEN_SDT	AcpiSystemDescriptionTable.h	/^(EFIAPI *EFI_ACPI_OPEN_SDT)($/;"	t
EFI_ACPI_REGISTER_NOTIFY	AcpiSystemDescriptionTable.h	/^(EFIAPI *EFI_ACPI_REGISTER_NOTIFY)($/;"	t
EFI_ACPI_SDT_HEADER	AcpiSystemDescriptionTable.h	/^} EFI_ACPI_SDT_HEADER;$/;"	t	typeref:struct:__anon360
EFI_ACPI_SDT_PROTOCOL	AcpiSystemDescriptionTable.h	/^} EFI_ACPI_SDT_PROTOCOL;$/;"	t	typeref:struct:_EFI_ACPI_SDT_PROTOCOL
EFI_ACPI_SDT_PROTOCOL_GUID	AcpiSystemDescriptionTable.h	15;"	d
EFI_ACPI_SET_OPTION	AcpiSystemDescriptionTable.h	/^(EFIAPI *EFI_ACPI_SET_OPTION)($/;"	t
EFI_ACPI_TABLE_INSTALL_ACPI_TABLE	AcpiTable.h	/^(EFIAPI *EFI_ACPI_TABLE_INSTALL_ACPI_TABLE)($/;"	t
EFI_ACPI_TABLE_PROTOCOL	AcpiTable.h	/^typedef struct _EFI_ACPI_TABLE_PROTOCOL EFI_ACPI_TABLE_PROTOCOL;$/;"	t	typeref:struct:_EFI_ACPI_TABLE_PROTOCOL
EFI_ACPI_TABLE_PROTOCOL_GUID	AcpiTable.h	16;"	d
EFI_ACPI_TABLE_UNINSTALL_ACPI_TABLE	AcpiTable.h	/^(EFIAPI *EFI_ACPI_TABLE_UNINSTALL_ACPI_TABLE)($/;"	t
EFI_ACPI_TABLE_VERSION	AcpiSystemDescriptionTable.h	/^typedef UINT32  EFI_ACPI_TABLE_VERSION;$/;"	t
EFI_ACPI_TABLE_VERSION_1_0B	AcpiSystemDescriptionTable.h	22;"	d
EFI_ACPI_TABLE_VERSION_2_0	AcpiSystemDescriptionTable.h	23;"	d
EFI_ACPI_TABLE_VERSION_3_0	AcpiSystemDescriptionTable.h	24;"	d
EFI_ACPI_TABLE_VERSION_4_0	AcpiSystemDescriptionTable.h	25;"	d
EFI_ACPI_TABLE_VERSION_5_0	AcpiSystemDescriptionTable.h	26;"	d
EFI_ACPI_TABLE_VERSION_NONE	AcpiSystemDescriptionTable.h	21;"	d
EFI_ADAPTER_INFORMATION_PROTOCOL	AdapterInformation.h	/^typedef struct _EFI_ADAPTER_INFORMATION_PROTOCOL EFI_ADAPTER_INFORMATION_PROTOCOL;$/;"	t	typeref:struct:_EFI_ADAPTER_INFORMATION_PROTOCOL
EFI_ADAPTER_INFORMATION_PROTOCOL_GUID	AdapterInformation.h	18;"	d
EFI_ADAPTER_INFO_GET_INFO	AdapterInformation.h	/^(EFIAPI *EFI_ADAPTER_INFO_GET_INFO)($/;"	t
EFI_ADAPTER_INFO_GET_SUPPORTED_TYPES	AdapterInformation.h	/^(EFIAPI *EFI_ADAPTER_INFO_GET_SUPPORTED_TYPES)($/;"	t
EFI_ADAPTER_INFO_MEDIA_STATE	AdapterInformation.h	/^} EFI_ADAPTER_INFO_MEDIA_STATE;$/;"	t	typeref:struct:__anon419
EFI_ADAPTER_INFO_MEDIA_STATE_GUID	AdapterInformation.h	23;"	d
EFI_ADAPTER_INFO_MEDIA_TYPE	AdapterInformation.h	/^} EFI_ADAPTER_INFO_MEDIA_TYPE;$/;"	t	typeref:struct:__anon420
EFI_ADAPTER_INFO_MEDIA_TYPE_GUID	AdapterInformation.h	43;"	d
EFI_ADAPTER_INFO_NETWORK_BOOT	AdapterInformation.h	/^} EFI_ADAPTER_INFO_NETWORK_BOOT;$/;"	t	typeref:struct:__anon421
EFI_ADAPTER_INFO_NETWORK_BOOT_GUID	AdapterInformation.h	28;"	d
EFI_ADAPTER_INFO_SAN_MAC_ADDRESS	AdapterInformation.h	/^} EFI_ADAPTER_INFO_SAN_MAC_ADDRESS;$/;"	t	typeref:struct:__anon422
EFI_ADAPTER_INFO_SAN_MAC_ADDRESS_GUID	AdapterInformation.h	33;"	d
EFI_ADAPTER_INFO_SET_INFO	AdapterInformation.h	/^(EFIAPI *EFI_ADAPTER_INFO_SET_INFO)($/;"	t
EFI_ADAPTER_INFO_UNDI_IPV6_SUPPORT	AdapterInformation.h	/^} EFI_ADAPTER_INFO_UNDI_IPV6_SUPPORT;$/;"	t	typeref:struct:__anon423
EFI_ADAPTER_INFO_UNDI_IPV6_SUPPORT_GUID	AdapterInformation.h	38;"	d
EFI_ARP_ADD	Arp.h	/^(EFIAPI *EFI_ARP_ADD)($/;"	t
EFI_ARP_CANCEL	Arp.h	/^(EFIAPI *EFI_ARP_CANCEL)($/;"	t
EFI_ARP_CONFIGURE	Arp.h	/^(EFIAPI *EFI_ARP_CONFIGURE)($/;"	t
EFI_ARP_CONFIG_DATA	Arp.h	/^} EFI_ARP_CONFIG_DATA;$/;"	t	typeref:struct:__anon82
EFI_ARP_DELETE	Arp.h	/^(EFIAPI *EFI_ARP_DELETE)($/;"	t
EFI_ARP_FIND	Arp.h	/^(EFIAPI *EFI_ARP_FIND)($/;"	t
EFI_ARP_FIND_DATA	Arp.h	/^} EFI_ARP_FIND_DATA;$/;"	t	typeref:struct:__anon81
EFI_ARP_FLUSH	Arp.h	/^(EFIAPI *EFI_ARP_FLUSH)($/;"	t
EFI_ARP_PROTOCOL	Arp.h	/^typedef struct _EFI_ARP_PROTOCOL EFI_ARP_PROTOCOL;$/;"	t	typeref:struct:_EFI_ARP_PROTOCOL
EFI_ARP_PROTOCOL_GUID	Arp.h	26;"	d
EFI_ARP_REQUEST	Arp.h	/^(EFIAPI *EFI_ARP_REQUEST)($/;"	t
EFI_ARP_SERVICE_BINDING_PROTOCOL_GUID	Arp.h	21;"	d
EFI_ASYNC_USB_TRANSFER_CALLBACK	UsbIo.h	/^(EFIAPI *EFI_ASYNC_USB_TRANSFER_CALLBACK)($/;"	t
EFI_ATAPI_DEVICE_IDENTIFY_DATA	IdeControllerInit.h	215;"	d
EFI_ATAPI_IDENTIFY_DATA	IdeControllerInit.h	/^typedef ATAPI_IDENTIFY_DATA EFI_ATAPI_IDENTIFY_DATA;$/;"	t
EFI_ATA_COLLECTIVE_MODE	IdeControllerInit.h	/^} EFI_ATA_COLLECTIVE_MODE;$/;"	t	typeref:struct:__anon133
EFI_ATA_COMMAND_BLOCK	AtaPassThru.h	/^} EFI_ATA_COMMAND_BLOCK;$/;"	t	typeref:struct:_EFI_ATA_COMMAND_BLOCK
EFI_ATA_EXTENDED_MODE	IdeControllerInit.h	/^} EFI_ATA_EXTENDED_MODE;$/;"	t	typeref:struct:__anon132
EFI_ATA_EXT_TRANSFER_PROTOCOL	IdeControllerInit.h	/^} EFI_ATA_EXT_TRANSFER_PROTOCOL;$/;"	t	typeref:enum:__anon130
EFI_ATA_IDENTIFY_DATA	IdeControllerInit.h	/^typedef ATA_IDENTIFY_DATA   EFI_ATA_IDENTIFY_DATA;$/;"	t
EFI_ATA_MODE	IdeControllerInit.h	/^} EFI_ATA_MODE;$/;"	t	typeref:struct:__anon131
EFI_ATA_PASS_THRU_ATTRIBUTES_LOGICAL	AtaPassThru.h	38;"	d
EFI_ATA_PASS_THRU_ATTRIBUTES_NONBLOCKIO	AtaPassThru.h	44;"	d
EFI_ATA_PASS_THRU_ATTRIBUTES_PHYSICAL	AtaPassThru.h	33;"	d
EFI_ATA_PASS_THRU_BUILD_DEVICE_PATH	AtaPassThru.h	/^(EFIAPI *EFI_ATA_PASS_THRU_BUILD_DEVICE_PATH)($/;"	t
EFI_ATA_PASS_THRU_CMD_PROTOCOL	AtaPassThru.h	/^typedef UINT8 EFI_ATA_PASS_THRU_CMD_PROTOCOL;$/;"	t
EFI_ATA_PASS_THRU_COMMAND_PACKET	AtaPassThru.h	/^} EFI_ATA_PASS_THRU_COMMAND_PACKET;$/;"	t	typeref:struct:__anon128
EFI_ATA_PASS_THRU_GET_DEVICE	AtaPassThru.h	/^(EFIAPI *EFI_ATA_PASS_THRU_GET_DEVICE)($/;"	t
EFI_ATA_PASS_THRU_GET_NEXT_DEVICE	AtaPassThru.h	/^(EFIAPI *EFI_ATA_PASS_THRU_GET_NEXT_DEVICE)($/;"	t
EFI_ATA_PASS_THRU_GET_NEXT_PORT	AtaPassThru.h	/^(EFIAPI *EFI_ATA_PASS_THRU_GET_NEXT_PORT)($/;"	t
EFI_ATA_PASS_THRU_LENGTH	AtaPassThru.h	/^typedef UINT8 EFI_ATA_PASS_THRU_LENGTH;$/;"	t
EFI_ATA_PASS_THRU_LENGTH_BYTES	AtaPassThru.h	98;"	d
EFI_ATA_PASS_THRU_LENGTH_COUNT	AtaPassThru.h	107;"	d
EFI_ATA_PASS_THRU_LENGTH_FEATURES	AtaPassThru.h	103;"	d
EFI_ATA_PASS_THRU_LENGTH_MASK	AtaPassThru.h	101;"	d
EFI_ATA_PASS_THRU_LENGTH_NO_DATA_TRANSFER	AtaPassThru.h	102;"	d
EFI_ATA_PASS_THRU_LENGTH_SECTOR_COUNT	AtaPassThru.h	104;"	d
EFI_ATA_PASS_THRU_LENGTH_TPSIU	AtaPassThru.h	105;"	d
EFI_ATA_PASS_THRU_MODE	AtaPassThru.h	/^} EFI_ATA_PASS_THRU_MODE;$/;"	t	typeref:struct:__anon127
EFI_ATA_PASS_THRU_PASSTHRU	AtaPassThru.h	/^(EFIAPI *EFI_ATA_PASS_THRU_PASSTHRU)($/;"	t
EFI_ATA_PASS_THRU_PROTOCOL	AtaPassThru.h	/^typedef struct _EFI_ATA_PASS_THRU_PROTOCOL EFI_ATA_PASS_THRU_PROTOCOL;$/;"	t	typeref:struct:_EFI_ATA_PASS_THRU_PROTOCOL
EFI_ATA_PASS_THRU_PROTOCOL_ATA_HARDWARE_RESET	AtaPassThru.h	82;"	d
EFI_ATA_PASS_THRU_PROTOCOL_ATA_NON_DATA	AtaPassThru.h	84;"	d
EFI_ATA_PASS_THRU_PROTOCOL_ATA_SOFTWARE_RESET	AtaPassThru.h	83;"	d
EFI_ATA_PASS_THRU_PROTOCOL_DEVICE_DIAGNOSTIC	AtaPassThru.h	89;"	d
EFI_ATA_PASS_THRU_PROTOCOL_DEVICE_RESET	AtaPassThru.h	90;"	d
EFI_ATA_PASS_THRU_PROTOCOL_DMA	AtaPassThru.h	87;"	d
EFI_ATA_PASS_THRU_PROTOCOL_DMA_QUEUED	AtaPassThru.h	88;"	d
EFI_ATA_PASS_THRU_PROTOCOL_FPDMA	AtaPassThru.h	93;"	d
EFI_ATA_PASS_THRU_PROTOCOL_GUID	AtaPassThru.h	17;"	d
EFI_ATA_PASS_THRU_PROTOCOL_PIO_DATA_IN	AtaPassThru.h	85;"	d
EFI_ATA_PASS_THRU_PROTOCOL_PIO_DATA_OUT	AtaPassThru.h	86;"	d
EFI_ATA_PASS_THRU_PROTOCOL_RETURN_RESPONSE	AtaPassThru.h	94;"	d
EFI_ATA_PASS_THRU_PROTOCOL_UDMA_DATA_IN	AtaPassThru.h	91;"	d
EFI_ATA_PASS_THRU_PROTOCOL_UDMA_DATA_OUT	AtaPassThru.h	92;"	d
EFI_ATA_PASS_THRU_RESET_DEVICE	AtaPassThru.h	/^(EFIAPI *EFI_ATA_PASS_THRU_RESET_DEVICE)($/;"	t
EFI_ATA_PASS_THRU_RESET_PORT	AtaPassThru.h	/^(EFIAPI *EFI_ATA_PASS_THRU_RESET_PORT)($/;"	t
EFI_ATA_STATUS_BLOCK	AtaPassThru.h	/^} EFI_ATA_STATUS_BLOCK;$/;"	t	typeref:struct:_EFI_ATA_STATUS_BLOCK
EFI_AUTHENTICATION_CHAP_LOCAL_GUID	AuthenticationInfo.h	24;"	d
EFI_AUTHENTICATION_CHAP_RADIUS_GUID	AuthenticationInfo.h	19;"	d
EFI_AUTHENTICATION_INFO_PROTOCOL	AuthenticationInfo.h	/^typedef struct _EFI_AUTHENTICATION_INFO_PROTOCOL EFI_AUTHENTICATION_INFO_PROTOCOL;$/;"	t	typeref:struct:_EFI_AUTHENTICATION_INFO_PROTOCOL
EFI_AUTHENTICATION_INFO_PROTOCOL_GET	AuthenticationInfo.h	/^(EFIAPI *EFI_AUTHENTICATION_INFO_PROTOCOL_GET)($/;"	t
EFI_AUTHENTICATION_INFO_PROTOCOL_GUID	AuthenticationInfo.h	14;"	d
EFI_AUTHENTICATION_INFO_PROTOCOL_SET	AuthenticationInfo.h	/^(EFIAPI *EFI_AUTHENTICATION_INFO_PROTOCOL_SET)($/;"	t
EFI_BACKGROUND_BLACK	SimpleTextOut.h	134;"	d
EFI_BACKGROUND_BLUE	SimpleTextOut.h	135;"	d
EFI_BACKGROUND_BROWN	SimpleTextOut.h	140;"	d
EFI_BACKGROUND_CYAN	SimpleTextOut.h	137;"	d
EFI_BACKGROUND_GREEN	SimpleTextOut.h	136;"	d
EFI_BACKGROUND_LIGHTGRAY	SimpleTextOut.h	141;"	d
EFI_BACKGROUND_MAGENTA	SimpleTextOut.h	139;"	d
EFI_BACKGROUND_RED	SimpleTextOut.h	138;"	d
EFI_BDS_ARCH_PROTOCOL	Bds.h	/^typedef struct _EFI_BDS_ARCH_PROTOCOL   EFI_BDS_ARCH_PROTOCOL;$/;"	t	typeref:struct:_EFI_BDS_ARCH_PROTOCOL
EFI_BDS_ARCH_PROTOCOL_GUID	Bds.h	17;"	d
EFI_BDS_ENTRY	Bds.h	/^(EFIAPI *EFI_BDS_ENTRY)($/;"	t
EFI_BIS_DATA	Bis.h	/^} EFI_BIS_DATA;$/;"	t	typeref:struct:__anon170
EFI_BIS_FREE	Bis.h	/^(EFIAPI *EFI_BIS_FREE)($/;"	t
EFI_BIS_GET_BOOT_OBJECT_AUTHORIZATION_CERTIFICATE	Bis.h	/^(EFIAPI *EFI_BIS_GET_BOOT_OBJECT_AUTHORIZATION_CERTIFICATE)($/;"	t
EFI_BIS_GET_BOOT_OBJECT_AUTHORIZATION_CHECKFLAG	Bis.h	/^(EFIAPI *EFI_BIS_GET_BOOT_OBJECT_AUTHORIZATION_CHECKFLAG)($/;"	t
EFI_BIS_GET_BOOT_OBJECT_AUTHORIZATION_UPDATE_TOKEN	Bis.h	/^(EFIAPI *EFI_BIS_GET_BOOT_OBJECT_AUTHORIZATION_UPDATE_TOKEN)($/;"	t
EFI_BIS_GET_SIGNATURE_INFO	Bis.h	/^(EFIAPI *EFI_BIS_GET_SIGNATURE_INFO)($/;"	t
EFI_BIS_INITIALIZE	Bis.h	/^(EFIAPI *EFI_BIS_INITIALIZE)($/;"	t
EFI_BIS_PROTOCOL	Bis.h	/^typedef struct _EFI_BIS_PROTOCOL  EFI_BIS_PROTOCOL;$/;"	t	typeref:struct:_EFI_BIS_PROTOCOL
EFI_BIS_PROTOCOL_GUID	Bis.h	16;"	d
EFI_BIS_SHUTDOWN	Bis.h	/^(EFIAPI *EFI_BIS_SHUTDOWN)($/;"	t
EFI_BIS_SIGNATURE_INFO	Bis.h	/^} EFI_BIS_SIGNATURE_INFO;$/;"	t	typeref:struct:__anon172
EFI_BIS_UPDATE_BOOT_OBJECT_AUTHORIZATION	Bis.h	/^(EFIAPI *EFI_BIS_UPDATE_BOOT_OBJECT_AUTHORIZATION)($/;"	t
EFI_BIS_VERIFY_BOOT_OBJECT	Bis.h	/^(EFIAPI *EFI_BIS_VERIFY_BOOT_OBJECT)($/;"	t
EFI_BIS_VERIFY_OBJECT_WITH_CREDENTIAL	Bis.h	/^(EFIAPI *EFI_BIS_VERIFY_OBJECT_WITH_CREDENTIAL)($/;"	t
EFI_BIS_VERSION	Bis.h	/^} EFI_BIS_VERSION;$/;"	t	typeref:struct:__anon171
EFI_BLACK	SimpleTextOut.h	103;"	d
EFI_BLOCK_ERASE	EraseBlock.h	/^(EFIAPI *EFI_BLOCK_ERASE) ($/;"	t
EFI_BLOCK_FLUSH	BlockIo.h	/^(EFIAPI *EFI_BLOCK_FLUSH)($/;"	t
EFI_BLOCK_FLUSH_EX	BlockIo2.h	/^(EFIAPI *EFI_BLOCK_FLUSH_EX) ($/;"	t
EFI_BLOCK_IO	BlockIo.h	/^typedef EFI_BLOCK_IO_PROTOCOL   EFI_BLOCK_IO;$/;"	t
EFI_BLOCK_IO2_PROTOCOL	BlockIo2.h	/^typedef struct _EFI_BLOCK_IO2_PROTOCOL  EFI_BLOCK_IO2_PROTOCOL;$/;"	t	typeref:struct:_EFI_BLOCK_IO2_PROTOCOL
EFI_BLOCK_IO2_PROTOCOL_GUID	BlockIo2.h	18;"	d
EFI_BLOCK_IO2_TOKEN	BlockIo2.h	/^} EFI_BLOCK_IO2_TOKEN;$/;"	t	typeref:struct:__anon1
EFI_BLOCK_IO_CRYPTO_ALGO_GUID_AES_CBC_MICROSOFT_BITLOCKER	BlockIoCrypto.h	82;"	d
EFI_BLOCK_IO_CRYPTO_ALGO_GUID_AES_XTS	BlockIoCrypto.h	69;"	d
EFI_BLOCK_IO_CRYPTO_CAPABILITIES	BlockIoCrypto.h	/^} EFI_BLOCK_IO_CRYPTO_CAPABILITIES;$/;"	t	typeref:struct:__anon352
EFI_BLOCK_IO_CRYPTO_CAPABILITY	BlockIoCrypto.h	/^} EFI_BLOCK_IO_CRYPTO_CAPABILITY;$/;"	t	typeref:struct:__anon348
EFI_BLOCK_IO_CRYPTO_CONFIGURATION_TABLE_ENTRY	BlockIoCrypto.h	/^} EFI_BLOCK_IO_CRYPTO_CONFIGURATION_TABLE_ENTRY;$/;"	t	typeref:struct:__anon353
EFI_BLOCK_IO_CRYPTO_FLUSH	BlockIoCrypto.h	/^(EFIAPI *EFI_BLOCK_IO_CRYPTO_FLUSH) ($/;"	t
EFI_BLOCK_IO_CRYPTO_GET_CAPABILITIES	BlockIoCrypto.h	/^(EFIAPI *EFI_BLOCK_IO_CRYPTO_GET_CAPABILITIES) ($/;"	t
EFI_BLOCK_IO_CRYPTO_GET_CONFIGURATION	BlockIoCrypto.h	/^(EFIAPI *EFI_BLOCK_IO_CRYPTO_GET_CONFIGURATION) ($/;"	t
EFI_BLOCK_IO_CRYPTO_INDEX_ANY	BlockIoCrypto.h	95;"	d
EFI_BLOCK_IO_CRYPTO_IV_INPUT	BlockIoCrypto.h	/^} EFI_BLOCK_IO_CRYPTO_IV_INPUT;$/;"	t	typeref:struct:__anon349
EFI_BLOCK_IO_CRYPTO_IV_INPUT_AES_CBC_MICROSOFT_BITLOCKER	BlockIoCrypto.h	/^} EFI_BLOCK_IO_CRYPTO_IV_INPUT_AES_CBC_MICROSOFT_BITLOCKER;$/;"	t	typeref:struct:__anon351
EFI_BLOCK_IO_CRYPTO_IV_INPUT_AES_XTS	BlockIoCrypto.h	/^} EFI_BLOCK_IO_CRYPTO_IV_INPUT_AES_XTS;$/;"	t	typeref:struct:__anon350
EFI_BLOCK_IO_CRYPTO_PROTOCOL	BlockIoCrypto.h	/^typedef struct _EFI_BLOCK_IO_CRYPTO_PROTOCOL  EFI_BLOCK_IO_CRYPTO_PROTOCOL;$/;"	t	typeref:struct:_EFI_BLOCK_IO_CRYPTO_PROTOCOL
EFI_BLOCK_IO_CRYPTO_PROTOCOL_GUID	BlockIoCrypto.h	18;"	d
EFI_BLOCK_IO_CRYPTO_READ_EXTENDED	BlockIoCrypto.h	/^(EFIAPI *EFI_BLOCK_IO_CRYPTO_READ_EXTENDED) ($/;"	t
EFI_BLOCK_IO_CRYPTO_RESET	BlockIoCrypto.h	/^(EFIAPI *EFI_BLOCK_IO_CRYPTO_RESET) ($/;"	t
EFI_BLOCK_IO_CRYPTO_RESPONSE_CONFIGURATION_ENTRY	BlockIoCrypto.h	/^} EFI_BLOCK_IO_CRYPTO_RESPONSE_CONFIGURATION_ENTRY;$/;"	t	typeref:struct:__anon354
EFI_BLOCK_IO_CRYPTO_SET_CONFIGURATION	BlockIoCrypto.h	/^(EFIAPI *EFI_BLOCK_IO_CRYPTO_SET_CONFIGURATION) ($/;"	t
EFI_BLOCK_IO_CRYPTO_TOKEN	BlockIoCrypto.h	/^} EFI_BLOCK_IO_CRYPTO_TOKEN;$/;"	t	typeref:struct:__anon347
EFI_BLOCK_IO_CRYPTO_WRITE_EXTENDED	BlockIoCrypto.h	/^(EFIAPI *EFI_BLOCK_IO_CRYPTO_WRITE_EXTENDED) ($/;"	t
EFI_BLOCK_IO_INTERFACE_REVISION	BlockIo.h	209;"	d
EFI_BLOCK_IO_MEDIA	BlockIo.h	/^} EFI_BLOCK_IO_MEDIA;$/;"	t	typeref:struct:__anon222
EFI_BLOCK_IO_PROTOCOL	BlockIo.h	/^typedef struct _EFI_BLOCK_IO_PROTOCOL  EFI_BLOCK_IO_PROTOCOL;$/;"	t	typeref:struct:_EFI_BLOCK_IO_PROTOCOL
EFI_BLOCK_IO_PROTOCOL_GUID	BlockIo.h	15;"	d
EFI_BLOCK_IO_PROTOCOL_REVISION	BlockIo.h	202;"	d
EFI_BLOCK_IO_PROTOCOL_REVISION2	BlockIo.h	203;"	d
EFI_BLOCK_IO_PROTOCOL_REVISION3	BlockIo.h	204;"	d
EFI_BLOCK_READ	BlockIo.h	/^(EFIAPI *EFI_BLOCK_READ)($/;"	t
EFI_BLOCK_READ_EX	BlockIo2.h	/^(EFIAPI *EFI_BLOCK_READ_EX) ($/;"	t
EFI_BLOCK_RESET	BlockIo.h	/^(EFIAPI *EFI_BLOCK_RESET)($/;"	t
EFI_BLOCK_RESET_EX	BlockIo2.h	/^(EFIAPI *EFI_BLOCK_RESET_EX) ($/;"	t
EFI_BLOCK_WRITE	BlockIo.h	/^(EFIAPI *EFI_BLOCK_WRITE)($/;"	t
EFI_BLOCK_WRITE_EX	BlockIo2.h	/^(EFIAPI *EFI_BLOCK_WRITE_EX) ($/;"	t
EFI_BLUE	SimpleTextOut.h	104;"	d
EFI_BLUETOOTH_ATTRIBUTE_CALLBACK_FUNCTION	BluetoothAttribute.h	/^(EFIAPI *EFI_BLUETOOTH_ATTRIBUTE_CALLBACK_FUNCTION) ($/;"	t
EFI_BLUETOOTH_ATTRIBUTE_CALLBACK_PARAMETER	BluetoothAttribute.h	/^} EFI_BLUETOOTH_ATTRIBUTE_CALLBACK_PARAMETER;$/;"	t	typeref:struct:__anon159
EFI_BLUETOOTH_ATTRIBUTE_CALLBACK_PARAMETER_INDICATION	BluetoothAttribute.h	/^} EFI_BLUETOOTH_ATTRIBUTE_CALLBACK_PARAMETER_INDICATION;$/;"	t	typeref:struct:__anon158
EFI_BLUETOOTH_ATTRIBUTE_CALLBACK_PARAMETER_NOTIFICATION	BluetoothAttribute.h	/^} EFI_BLUETOOTH_ATTRIBUTE_CALLBACK_PARAMETER_NOTIFICATION;$/;"	t	typeref:struct:__anon157
EFI_BLUETOOTH_ATTRIBUTE_GET_DEVICE_INFO	BluetoothAttribute.h	/^(EFIAPI *EFI_BLUETOOTH_ATTRIBUTE_GET_DEVICE_INFO)($/;"	t
EFI_BLUETOOTH_ATTRIBUTE_GET_SERVICE_INFO	BluetoothAttribute.h	/^(EFIAPI *EFI_BLUETOOTH_ATTRIBUTE_GET_SERVICE_INFO)($/;"	t
EFI_BLUETOOTH_ATTRIBUTE_HEADER	BluetoothAttribute.h	/^} EFI_BLUETOOTH_ATTRIBUTE_HEADER;$/;"	t	typeref:struct:__anon152
EFI_BLUETOOTH_ATTRIBUTE_PERMISSION	BluetoothAttribute.h	/^} EFI_BLUETOOTH_ATTRIBUTE_PERMISSION;$/;"	t	typeref:union:__anon150
EFI_BLUETOOTH_ATTRIBUTE_PROTOCOL	BluetoothAttribute.h	/^typedef struct _EFI_BLUETOOTH_ATTRIBUTE_PROTOCOL EFI_BLUETOOTH_ATTRIBUTE_PROTOCOL;$/;"	t	typeref:struct:_EFI_BLUETOOTH_ATTRIBUTE_PROTOCOL
EFI_BLUETOOTH_ATTRIBUTE_PROTOCOL_GUID	BluetoothAttribute.h	22;"	d
EFI_BLUETOOTH_ATTRIBUTE_REGISTER_FOR_SERVER_NOTIFICATION	BluetoothAttribute.h	/^(EFIAPI *EFI_BLUETOOTH_ATTRIBUTE_REGISTER_FOR_SERVER_NOTIFICATION)($/;"	t
EFI_BLUETOOTH_ATTRIBUTE_SEND_REQUEST	BluetoothAttribute.h	/^(EFIAPI *EFI_BLUETOOTH_ATTRIBUTE_SEND_REQUEST) ($/;"	t
EFI_BLUETOOTH_ATTRIBUTE_SERVICE_BINDING_PROTOCOL_GUID	BluetoothAttribute.h	17;"	d
EFI_BLUETOOTH_CONFIG_CONNECT	BluetoothConfig.h	/^(EFIAPI *EFI_BLUETOOTH_CONFIG_CONNECT)($/;"	t
EFI_BLUETOOTH_CONFIG_DATA_TYPE	BluetoothConfig.h	/^} EFI_BLUETOOTH_CONFIG_DATA_TYPE;$/;"	t	typeref:enum:__anon269
EFI_BLUETOOTH_CONFIG_DISCONNECT	BluetoothConfig.h	/^(EFIAPI *EFI_BLUETOOTH_CONFIG_DISCONNECT)($/;"	t
EFI_BLUETOOTH_CONFIG_GET_DATA	BluetoothConfig.h	/^(EFIAPI *EFI_BLUETOOTH_CONFIG_GET_DATA)($/;"	t
EFI_BLUETOOTH_CONFIG_GET_REMOTE_DATA	BluetoothConfig.h	/^(EFIAPI *EFI_BLUETOOTH_CONFIG_GET_REMOTE_DATA)($/;"	t
EFI_BLUETOOTH_CONFIG_INIT	BluetoothConfig.h	/^(EFIAPI *EFI_BLUETOOTH_CONFIG_INIT)($/;"	t
EFI_BLUETOOTH_CONFIG_PROTOCOL	BluetoothConfig.h	/^typedef struct _EFI_BLUETOOTH_CONFIG_PROTOCOL EFI_BLUETOOTH_CONFIG_PROTOCOL;$/;"	t	typeref:struct:_EFI_BLUETOOTH_CONFIG_PROTOCOL
EFI_BLUETOOTH_CONFIG_PROTOCOL_GUID	BluetoothConfig.h	18;"	d
EFI_BLUETOOTH_CONFIG_REGISTER_CONNECT_COMPLETE_CALLBACK	BluetoothConfig.h	/^(EFIAPI *EFI_BLUETOOTH_CONFIG_REGISTER_CONNECT_COMPLETE_CALLBACK)($/;"	t
EFI_BLUETOOTH_CONFIG_REGISTER_CONNECT_COMPLETE_CALLBACK_FUNCTION	BluetoothConfig.h	/^(EFIAPI *EFI_BLUETOOTH_CONFIG_REGISTER_CONNECT_COMPLETE_CALLBACK_FUNCTION)($/;"	t
EFI_BLUETOOTH_CONFIG_REGISTER_GET_LINK_KEY_CALLBACK	BluetoothConfig.h	/^(EFIAPI *EFI_BLUETOOTH_CONFIG_REGISTER_GET_LINK_KEY_CALLBACK)($/;"	t
EFI_BLUETOOTH_CONFIG_REGISTER_GET_LINK_KEY_CALLBACK_FUNCTION	BluetoothConfig.h	/^(EFIAPI *EFI_BLUETOOTH_CONFIG_REGISTER_GET_LINK_KEY_CALLBACK_FUNCTION)($/;"	t
EFI_BLUETOOTH_CONFIG_REGISTER_PIN_CALLBACK	BluetoothConfig.h	/^(EFIAPI *EFI_BLUETOOTH_CONFIG_REGISTER_PIN_CALLBACK)($/;"	t
EFI_BLUETOOTH_CONFIG_REGISTER_PIN_CALLBACK_FUNCTION	BluetoothConfig.h	/^(EFIAPI *EFI_BLUETOOTH_CONFIG_REGISTER_PIN_CALLBACK_FUNCTION)($/;"	t
EFI_BLUETOOTH_CONFIG_REGISTER_SET_LINK_KEY_CALLBACK	BluetoothConfig.h	/^(EFIAPI *EFI_BLUETOOTH_CONFIG_REGISTER_SET_LINK_KEY_CALLBACK)($/;"	t
EFI_BLUETOOTH_CONFIG_REGISTER_SET_LINK_KEY_CALLBACK_FUNCTION	BluetoothConfig.h	/^(EFIAPI *EFI_BLUETOOTH_CONFIG_REGISTER_SET_LINK_KEY_CALLBACK_FUNCTION)($/;"	t
EFI_BLUETOOTH_CONFIG_REMOTE_DEVICE_STATE_CONNECTED	BluetoothConfig.h	26;"	d
EFI_BLUETOOTH_CONFIG_REMOTE_DEVICE_STATE_PAIRED	BluetoothConfig.h	27;"	d
EFI_BLUETOOTH_CONFIG_REMOTE_DEVICE_STATE_TYPE	BluetoothConfig.h	/^typedef UINT32      EFI_BLUETOOTH_CONFIG_REMOTE_DEVICE_STATE_TYPE;$/;"	t
EFI_BLUETOOTH_CONFIG_SCAN	BluetoothConfig.h	/^(EFIAPI *EFI_BLUETOOTH_CONFIG_SCAN)($/;"	t
EFI_BLUETOOTH_CONFIG_SCAN_CALLBACK_FUNCTION	BluetoothConfig.h	/^(EFIAPI *EFI_BLUETOOTH_CONFIG_SCAN_CALLBACK_FUNCTION) ($/;"	t
EFI_BLUETOOTH_CONFIG_SET_DATA	BluetoothConfig.h	/^(EFIAPI *EFI_BLUETOOTH_CONFIG_SET_DATA)($/;"	t
EFI_BLUETOOTH_CONNECT_COMPLETE_CALLBACK_TYPE	BluetoothConfig.h	/^} EFI_BLUETOOTH_CONNECT_COMPLETE_CALLBACK_TYPE;$/;"	t	typeref:enum:__anon271
EFI_BLUETOOTH_DEVICE_INFO	BluetoothIo.h	/^} EFI_BLUETOOTH_DEVICE_INFO;$/;"	t	typeref:struct:__anon418
EFI_BLUETOOTH_GATT_CHARACTERISTIC_DESCRIPTOR_INFO	BluetoothAttribute.h	/^} EFI_BLUETOOTH_GATT_CHARACTERISTIC_DESCRIPTOR_INFO;$/;"	t	typeref:struct:__anon156
EFI_BLUETOOTH_GATT_CHARACTERISTIC_INFO	BluetoothAttribute.h	/^} EFI_BLUETOOTH_GATT_CHARACTERISTIC_INFO;$/;"	t	typeref:struct:__anon155
EFI_BLUETOOTH_GATT_INCLUDE_SERVICE_INFO	BluetoothAttribute.h	/^} EFI_BLUETOOTH_GATT_INCLUDE_SERVICE_INFO;$/;"	t	typeref:struct:__anon154
EFI_BLUETOOTH_GATT_PRIMARY_SERVICE_INFO	BluetoothAttribute.h	/^} EFI_BLUETOOTH_GATT_PRIMARY_SERVICE_INFO;$/;"	t	typeref:struct:__anon153
EFI_BLUETOOTH_HC_ASYNC_FUNC_CALLBACK	BluetoothHc.h	/^(EFIAPI *EFI_BLUETOOTH_HC_ASYNC_FUNC_CALLBACK) ($/;"	t
EFI_BLUETOOTH_HC_ASYNC_RECEIVE_ACL_DATA	BluetoothHc.h	/^(EFIAPI *EFI_BLUETOOTH_HC_ASYNC_RECEIVE_ACL_DATA) ($/;"	t
EFI_BLUETOOTH_HC_ASYNC_RECEIVE_EVENT	BluetoothHc.h	/^(EFIAPI *EFI_BLUETOOTH_HC_ASYNC_RECEIVE_EVENT) ($/;"	t
EFI_BLUETOOTH_HC_ASYNC_RECEIVE_SCO_DATA	BluetoothHc.h	/^(EFIAPI *EFI_BLUETOOTH_HC_ASYNC_RECEIVE_SCO_DATA) ($/;"	t
EFI_BLUETOOTH_HC_PROTOCOL	BluetoothHc.h	/^typedef struct _EFI_BLUETOOTH_HC_PROTOCOL EFI_BLUETOOTH_HC_PROTOCOL;$/;"	t	typeref:struct:_EFI_BLUETOOTH_HC_PROTOCOL
EFI_BLUETOOTH_HC_PROTOCOL_GUID	BluetoothHc.h	16;"	d
EFI_BLUETOOTH_HC_RECEIVE_ACL_DATA	BluetoothHc.h	/^(EFIAPI *EFI_BLUETOOTH_HC_RECEIVE_ACL_DATA)($/;"	t
EFI_BLUETOOTH_HC_RECEIVE_EVENT	BluetoothHc.h	/^(EFIAPI *EFI_BLUETOOTH_HC_RECEIVE_EVENT)($/;"	t
EFI_BLUETOOTH_HC_RECEIVE_SCO_DATA	BluetoothHc.h	/^(EFIAPI *EFI_BLUETOOTH_HC_RECEIVE_SCO_DATA)($/;"	t
EFI_BLUETOOTH_HC_SEND_ACL_DATA	BluetoothHc.h	/^(EFIAPI *EFI_BLUETOOTH_HC_SEND_ACL_DATA)($/;"	t
EFI_BLUETOOTH_HC_SEND_COMMAND	BluetoothHc.h	/^(EFIAPI *EFI_BLUETOOTH_HC_SEND_COMMAND)($/;"	t
EFI_BLUETOOTH_HC_SEND_SCO_DATA	BluetoothHc.h	/^(EFIAPI *EFI_BLUETOOTH_HC_SEND_SCO_DATA)($/;"	t
EFI_BLUETOOTH_IO_ASYNC_FUNC_CALLBACK	BluetoothIo.h	/^(EFIAPI *EFI_BLUETOOTH_IO_ASYNC_FUNC_CALLBACK) ($/;"	t
EFI_BLUETOOTH_IO_CHANNEL_SERVICE_CALLBACK	BluetoothIo.h	/^(EFIAPI *EFI_BLUETOOTH_IO_CHANNEL_SERVICE_CALLBACK) ($/;"	t
EFI_BLUETOOTH_IO_GET_DEVICE_INFO	BluetoothIo.h	/^(EFIAPI *EFI_BLUETOOTH_IO_GET_DEVICE_INFO)($/;"	t
EFI_BLUETOOTH_IO_GET_SDP_INFO	BluetoothIo.h	/^(EFIAPI *EFI_BLUETOOTH_IO_GET_SDP_INFO)($/;"	t
EFI_BLUETOOTH_IO_L2CAP_ASYNC_RECEIVE	BluetoothIo.h	/^(EFIAPI *EFI_BLUETOOTH_IO_L2CAP_ASYNC_RECEIVE)($/;"	t
EFI_BLUETOOTH_IO_L2CAP_CONNECT	BluetoothIo.h	/^(EFIAPI *EFI_BLUETOOTH_IO_L2CAP_CONNECT)($/;"	t
EFI_BLUETOOTH_IO_L2CAP_DISCONNECT	BluetoothIo.h	/^(EFIAPI *EFI_BLUETOOTH_IO_L2CAP_DISCONNECT)($/;"	t
EFI_BLUETOOTH_IO_L2CAP_RAW_ASYNC_RECEIVE	BluetoothIo.h	/^(EFIAPI *EFI_BLUETOOTH_IO_L2CAP_RAW_ASYNC_RECEIVE)($/;"	t
EFI_BLUETOOTH_IO_L2CAP_RAW_RECEIVE	BluetoothIo.h	/^(EFIAPI *EFI_BLUETOOTH_IO_L2CAP_RAW_RECEIVE)($/;"	t
EFI_BLUETOOTH_IO_L2CAP_RAW_SEND	BluetoothIo.h	/^(EFIAPI *EFI_BLUETOOTH_IO_L2CAP_RAW_SEND)($/;"	t
EFI_BLUETOOTH_IO_L2CAP_RECEIVE	BluetoothIo.h	/^(EFIAPI *EFI_BLUETOOTH_IO_L2CAP_RECEIVE)($/;"	t
EFI_BLUETOOTH_IO_L2CAP_REGISTER_SERVICE	BluetoothIo.h	/^(EFIAPI *EFI_BLUETOOTH_IO_L2CAP_REGISTER_SERVICE)($/;"	t
EFI_BLUETOOTH_IO_L2CAP_SEND	BluetoothIo.h	/^(EFIAPI *EFI_BLUETOOTH_IO_L2CAP_SEND)($/;"	t
EFI_BLUETOOTH_IO_PROTOCOL	BluetoothIo.h	/^typedef struct _EFI_BLUETOOTH_IO_PROTOCOL EFI_BLUETOOTH_IO_PROTOCOL;$/;"	t	typeref:struct:_EFI_BLUETOOTH_IO_PROTOCOL
EFI_BLUETOOTH_IO_PROTOCOL_GUID	BluetoothIo.h	25;"	d
EFI_BLUETOOTH_IO_SERVICE_BINDING_PROTOCOL_GUID	BluetoothIo.h	20;"	d
EFI_BLUETOOTH_LE_CONFIG_CONNECT	BluetoothLeConfig.h	/^(EFIAPI *EFI_BLUETOOTH_LE_CONFIG_CONNECT)($/;"	t
EFI_BLUETOOTH_LE_CONFIG_CONNECT_COMPLETE_CALLBACK	BluetoothLeConfig.h	/^(EFIAPI *EFI_BLUETOOTH_LE_CONFIG_CONNECT_COMPLETE_CALLBACK) ($/;"	t
EFI_BLUETOOTH_LE_CONFIG_CONNECT_PARAMETER	BluetoothLeConfig.h	/^} EFI_BLUETOOTH_LE_CONFIG_CONNECT_PARAMETER;$/;"	t	typeref:struct:__anon565
EFI_BLUETOOTH_LE_CONFIG_DISCONNECT	BluetoothLeConfig.h	/^(EFIAPI *EFI_BLUETOOTH_LE_CONFIG_DISCONNECT)($/;"	t
EFI_BLUETOOTH_LE_CONFIG_GET_DATA	BluetoothLeConfig.h	/^(EFIAPI *EFI_BLUETOOTH_LE_CONFIG_GET_DATA) ($/;"	t
EFI_BLUETOOTH_LE_CONFIG_GET_REMOTE_DATA	BluetoothLeConfig.h	/^(EFIAPI *EFI_BLUETOOTH_LE_CONFIG_GET_REMOTE_DATA) ($/;"	t
EFI_BLUETOOTH_LE_CONFIG_INIT	BluetoothLeConfig.h	/^(EFIAPI *EFI_BLUETOOTH_LE_CONFIG_INIT)($/;"	t
EFI_BLUETOOTH_LE_CONFIG_PROTOCOL	BluetoothLeConfig.h	/^typedef struct _EFI_BLUETOOTH_LE_CONFIG_PROTOCOL EFI_BLUETOOTH_LE_CONFIG_PROTOCOL;$/;"	t	typeref:struct:_EFI_BLUETOOTH_LE_CONFIG_PROTOCOL
EFI_BLUETOOTH_LE_CONFIG_PROTOCOL_GUID	BluetoothLeConfig.h	19;"	d
EFI_BLUETOOTH_LE_CONFIG_REGISTER_CONNECT_COMPLETE_CALLBACK	BluetoothLeConfig.h	/^(EFIAPI *EFI_BLUETOOTH_LE_CONFIG_REGISTER_CONNECT_COMPLETE_CALLBACK) ($/;"	t
EFI_BLUETOOTH_LE_CONFIG_REGISTER_SMP_GET_DATA_CALLBACK	BluetoothLeConfig.h	/^(EFIAPI * EFI_BLUETOOTH_LE_CONFIG_REGISTER_SMP_GET_DATA_CALLBACK) ($/;"	t
EFI_BLUETOOTH_LE_CONFIG_REGISTER_SMP_SET_DATA_CALLBACK	BluetoothLeConfig.h	/^(EFIAPI * EFI_BLUETOOTH_LE_CONFIG_REGISTER_SMP_SET_DATA_CALLBACK) ($/;"	t
EFI_BLUETOOTH_LE_CONFIG_SCAN	BluetoothLeConfig.h	/^(EFIAPI *EFI_BLUETOOTH_LE_CONFIG_SCAN)($/;"	t
EFI_BLUETOOTH_LE_CONFIG_SCAN_CALLBACK_FUNCTION	BluetoothLeConfig.h	/^(EFIAPI *EFI_BLUETOOTH_LE_CONFIG_SCAN_CALLBACK_FUNCTION) ($/;"	t
EFI_BLUETOOTH_LE_CONFIG_SCAN_PARAMETER	BluetoothLeConfig.h	/^} EFI_BLUETOOTH_LE_CONFIG_SCAN_PARAMETER;$/;"	t	typeref:struct:__anon563
EFI_BLUETOOTH_LE_CONFIG_SET_DATA	BluetoothLeConfig.h	/^(EFIAPI *EFI_BLUETOOTH_LE_CONFIG_SET_DATA) ($/;"	t
EFI_BLUETOOTH_LE_CONFIG_SMP_GET_DATA_CALLBACK	BluetoothLeConfig.h	/^(EFIAPI * EFI_BLUETOOTH_LE_CONFIG_SMP_GET_DATA_CALLBACK) ($/;"	t
EFI_BLUETOOTH_LE_CONFIG_SMP_SET_DATA_CALLBACK	BluetoothLeConfig.h	/^(EFIAPI * EFI_BLUETOOTH_LE_CONFIG_SMP_SET_DATA_CALLBACK) ($/;"	t
EFI_BLUETOOTH_LE_DEVICE_INFO	BluetoothAttribute.h	/^} EFI_BLUETOOTH_LE_DEVICE_INFO;$/;"	t	typeref:struct:__anon161
EFI_BLUETOOTH_LE_REGISTER_SMP_AUTH_CALLBACK	BluetoothLeConfig.h	/^(EFIAPI *EFI_BLUETOOTH_LE_REGISTER_SMP_AUTH_CALLBACK) ($/;"	t
EFI_BLUETOOTH_LE_SCAN_CALLBACK_INFORMATION	BluetoothLeConfig.h	/^} EFI_BLUETOOTH_LE_SCAN_CALLBACK_INFORMATION;$/;"	t	typeref:struct:__anon564
EFI_BLUETOOTH_LE_SEND_SMP_AUTH_DATA	BluetoothLeConfig.h	/^(EFIAPI *EFI_BLUETOOTH_LE_SEND_SMP_AUTH_DATA) ($/;"	t
EFI_BLUETOOTH_LE_SMP_CALLBACK	BluetoothLeConfig.h	/^(EFIAPI *EFI_BLUETOOTH_LE_SMP_CALLBACK) ($/;"	t
EFI_BLUETOOTH_LE_SMP_DATA_TYPE	BluetoothLeConfig.h	/^} EFI_BLUETOOTH_LE_SMP_DATA_TYPE;$/;"	t	typeref:enum:__anon567
EFI_BLUETOOTH_LE_SMP_EVENT_DATA_TYPE	BluetoothLeConfig.h	/^} EFI_BLUETOOTH_LE_SMP_EVENT_DATA_TYPE;$/;"	t	typeref:enum:__anon566
EFI_BLUETOOTH_PIN_CALLBACK_TYPE	BluetoothConfig.h	/^} EFI_BLUETOOTH_PIN_CALLBACK_TYPE;$/;"	t	typeref:enum:__anon270
EFI_BLUETOOTH_SCAN_CALLBACK_INFORMATION	BluetoothConfig.h	/^} EFI_BLUETOOTH_SCAN_CALLBACK_INFORMATION;$/;"	t	typeref:struct:__anon268
EFI_BLUETOOTH_UUID	BluetoothAttribute.h	/^} EFI_BLUETOOTH_UUID;$/;"	t	typeref:struct:__anon148
EFI_BOOT_MANAGER_POLICY_CONNECT_ALL_GUID	BootManagerPolicy.h	29;"	d
EFI_BOOT_MANAGER_POLICY_CONNECT_DEVICE_CLASS	BootManagerPolicy.h	/^(EFIAPI *EFI_BOOT_MANAGER_POLICY_CONNECT_DEVICE_CLASS)($/;"	t
EFI_BOOT_MANAGER_POLICY_CONNECT_DEVICE_PATH	BootManagerPolicy.h	/^(EFIAPI *EFI_BOOT_MANAGER_POLICY_CONNECT_DEVICE_PATH)($/;"	t
EFI_BOOT_MANAGER_POLICY_CONSOLE_GUID	BootManagerPolicy.h	19;"	d
EFI_BOOT_MANAGER_POLICY_NETWORK_GUID	BootManagerPolicy.h	24;"	d
EFI_BOOT_MANAGER_POLICY_PROTOCOL	BootManagerPolicy.h	/^typedef struct _EFI_BOOT_MANAGER_POLICY_PROTOCOL EFI_BOOT_MANAGER_POLICY_PROTOCOL;$/;"	t	typeref:struct:_EFI_BOOT_MANAGER_POLICY_PROTOCOL
EFI_BOOT_MANAGER_POLICY_PROTOCOL_GUID	BootManagerPolicy.h	14;"	d
EFI_BOOT_MANAGER_POLICY_PROTOCOL_REVISION	BootManagerPolicy.h	36;"	d
EFI_BRIGHT	SimpleTextOut.h	111;"	d
EFI_BROWN	SimpleTextOut.h	109;"	d
EFI_BROWSER_ACTION	HiiConfigAccess.h	/^typedef UINTN EFI_BROWSER_ACTION;$/;"	t
EFI_BROWSER_ACTION_CHANGED	HiiConfigAccess.h	30;"	d
EFI_BROWSER_ACTION_CHANGING	HiiConfigAccess.h	29;"	d
EFI_BROWSER_ACTION_DEFAULT_FIRMWARE	HiiConfigAccess.h	40;"	d
EFI_BROWSER_ACTION_DEFAULT_HARDWARE	HiiConfigAccess.h	39;"	d
EFI_BROWSER_ACTION_DEFAULT_MANUFACTURING	HiiConfigAccess.h	36;"	d
EFI_BROWSER_ACTION_DEFAULT_PLATFORM	HiiConfigAccess.h	38;"	d
EFI_BROWSER_ACTION_DEFAULT_SAFE	HiiConfigAccess.h	37;"	d
EFI_BROWSER_ACTION_DEFAULT_STANDARD	HiiConfigAccess.h	35;"	d
EFI_BROWSER_ACTION_FORM_CLOSE	HiiConfigAccess.h	33;"	d
EFI_BROWSER_ACTION_FORM_OPEN	HiiConfigAccess.h	32;"	d
EFI_BROWSER_ACTION_REQUEST	FormBrowser2.h	/^typedef UINTN EFI_BROWSER_ACTION_REQUEST;$/;"	t
EFI_BROWSER_ACTION_REQUEST_EXIT	FormBrowser2.h	55;"	d
EFI_BROWSER_ACTION_REQUEST_FORM_APPLY	FormBrowser2.h	58;"	d
EFI_BROWSER_ACTION_REQUEST_FORM_DISCARD	FormBrowser2.h	59;"	d
EFI_BROWSER_ACTION_REQUEST_FORM_DISCARD_EXIT	FormBrowser2.h	57;"	d
EFI_BROWSER_ACTION_REQUEST_FORM_SUBMIT_EXIT	FormBrowser2.h	56;"	d
EFI_BROWSER_ACTION_REQUEST_NONE	FormBrowser2.h	52;"	d
EFI_BROWSER_ACTION_REQUEST_RECONNECT	FormBrowser2.h	60;"	d
EFI_BROWSER_ACTION_REQUEST_RESET	FormBrowser2.h	53;"	d
EFI_BROWSER_ACTION_REQUEST_SUBMIT	FormBrowser2.h	54;"	d
EFI_BROWSER_ACTION_RETRIEVE	HiiConfigAccess.h	31;"	d
EFI_BROWSER_ACTION_SUBMITTED	HiiConfigAccess.h	34;"	d
EFI_BROWSER_CALLBACK2	FormBrowser2.h	/^(EFIAPI *EFI_BROWSER_CALLBACK2)($/;"	t
EFI_BUS_SPECIFIC_DRIVER_OVERRIDE_GET_DRIVER	BusSpecificDriverOverride.h	/^(EFIAPI *EFI_BUS_SPECIFIC_DRIVER_OVERRIDE_GET_DRIVER)($/;"	t
EFI_BUS_SPECIFIC_DRIVER_OVERRIDE_PROTOCOL	BusSpecificDriverOverride.h	/^typedef struct _EFI_BUS_SPECIFIC_DRIVER_OVERRIDE_PROTOCOL  EFI_BUS_SPECIFIC_DRIVER_OVERRIDE_PROTOCOL;$/;"	t	typeref:struct:_EFI_BUS_SPECIFIC_DRIVER_OVERRIDE_PROTOCOL
EFI_BUS_SPECIFIC_DRIVER_OVERRIDE_PROTOCOL_GUID	BusSpecificDriverOverride.h	20;"	d
EFI_CAPSULE_ARCH_PROTOCOL_GUID	Capsule.h	24;"	d
EFI_CAPS_LOCK_ACTIVE	SimpleTextInEx.h	117;"	d
EFI_CHECK_FOR_PROCEDURE	MmMp.h	/^(EFIAPI *EFI_CHECK_FOR_PROCEDURE) ($/;"	t
EFI_COMPONENT_NAME2_GET_CONTROLLER_NAME	ComponentName2.h	/^(EFIAPI *EFI_COMPONENT_NAME2_GET_CONTROLLER_NAME)($/;"	t
EFI_COMPONENT_NAME2_GET_DRIVER_NAME	ComponentName2.h	/^(EFIAPI *EFI_COMPONENT_NAME2_GET_DRIVER_NAME)($/;"	t
EFI_COMPONENT_NAME2_PROTOCOL	ComponentName2.h	/^typedef struct _EFI_COMPONENT_NAME2_PROTOCOL  EFI_COMPONENT_NAME2_PROTOCOL;$/;"	t	typeref:struct:_EFI_COMPONENT_NAME2_PROTOCOL
EFI_COMPONENT_NAME2_PROTOCOL_GUID	ComponentName2.h	17;"	d
EFI_COMPONENT_NAME_GET_CONTROLLER_NAME	ComponentName.h	/^(EFIAPI *EFI_COMPONENT_NAME_GET_CONTROLLER_NAME)($/;"	t
EFI_COMPONENT_NAME_GET_DRIVER_NAME	ComponentName.h	/^(EFIAPI *EFI_COMPONENT_NAME_GET_DRIVER_NAME)($/;"	t
EFI_COMPONENT_NAME_PROTOCOL	ComponentName.h	/^typedef struct _EFI_COMPONENT_NAME_PROTOCOL  EFI_COMPONENT_NAME_PROTOCOL;$/;"	t	typeref:struct:_EFI_COMPONENT_NAME_PROTOCOL
EFI_COMPONENT_NAME_PROTOCOL_GUID	ComponentName.h	17;"	d
EFI_CONFIGURE_CLP_PARAMETER_BLK	PlatformToDriverConfiguration.h	/^} EFI_CONFIGURE_CLP_PARAMETER_BLK;$/;"	t	typeref:struct:__anon245
EFI_CONFIG_KEYWORD_HANDLER_GET_DATA	HiiConfigKeyword.h	/^(EFIAPI *EFI_CONFIG_KEYWORD_HANDLER_GET_DATA) ($/;"	t
EFI_CONFIG_KEYWORD_HANDLER_PROTOCOL	HiiConfigKeyword.h	/^typedef struct _EFI_CONFIG_KEYWORD_HANDLER_PROTOCOL EFI_CONFIG_KEYWORD_HANDLER_PROTOCOL;$/;"	t	typeref:struct:_EFI_CONFIG_KEYWORD_HANDLER_PROTOCOL
EFI_CONFIG_KEYWORD_HANDLER_PROTOCOL_GUID	HiiConfigKeyword.h	18;"	d
EFI_CONFIG_KEYWORD_HANDLER_SET_DATA	HiiConfigKeyword.h	/^(EFIAPI *EFI_CONFIG_KEYWORD_HANDLER_SET_DATA) ($/;"	t
EFI_CPU_ARCH_PROTOCOL	Cpu.h	/^typedef struct _EFI_CPU_ARCH_PROTOCOL   EFI_CPU_ARCH_PROTOCOL;$/;"	t	typeref:struct:_EFI_CPU_ARCH_PROTOCOL
EFI_CPU_ARCH_PROTOCOL_GUID	Cpu.h	16;"	d
EFI_CPU_DISABLE_INTERRUPT	Cpu.h	/^(EFIAPI *EFI_CPU_DISABLE_INTERRUPT)($/;"	t
EFI_CPU_ENABLE_INTERRUPT	Cpu.h	/^(EFIAPI *EFI_CPU_ENABLE_INTERRUPT)($/;"	t
EFI_CPU_FLUSH_DATA_CACHE	Cpu.h	/^(EFIAPI *EFI_CPU_FLUSH_DATA_CACHE)($/;"	t
EFI_CPU_FLUSH_TYPE	Cpu.h	/^} EFI_CPU_FLUSH_TYPE;$/;"	t	typeref:enum:__anon274
EFI_CPU_GET_INTERRUPT_STATE	Cpu.h	/^(EFIAPI *EFI_CPU_GET_INTERRUPT_STATE)($/;"	t
EFI_CPU_GET_TIMER_VALUE	Cpu.h	/^(EFIAPI *EFI_CPU_GET_TIMER_VALUE)($/;"	t
EFI_CPU_INIT	Cpu.h	/^(EFIAPI *EFI_CPU_INIT)($/;"	t
EFI_CPU_INIT_TYPE	Cpu.h	/^} EFI_CPU_INIT_TYPE;$/;"	t	typeref:enum:__anon275
EFI_CPU_INTERRUPT_HANDLER	Cpu.h	/^(EFIAPI *EFI_CPU_INTERRUPT_HANDLER)($/;"	t
EFI_CPU_IO2_PROTOCOL	CpuIo2.h	/^typedef struct _EFI_CPU_IO2_PROTOCOL EFI_CPU_IO2_PROTOCOL;$/;"	t	typeref:struct:_EFI_CPU_IO2_PROTOCOL
EFI_CPU_IO2_PROTOCOL_GUID	CpuIo2.h	27;"	d
EFI_CPU_IO_PROTOCOL_ACCESS	CpuIo2.h	/^} EFI_CPU_IO_PROTOCOL_ACCESS;$/;"	t	typeref:struct:__anon381
EFI_CPU_IO_PROTOCOL_IO_MEM	CpuIo2.h	/^(EFIAPI *EFI_CPU_IO_PROTOCOL_IO_MEM)($/;"	t
EFI_CPU_IO_PROTOCOL_WIDTH	CpuIo2.h	/^} EFI_CPU_IO_PROTOCOL_WIDTH;$/;"	t	typeref:enum:__anon380
EFI_CPU_PHYSICAL_LOCATION	MpService.h	/^} EFI_CPU_PHYSICAL_LOCATION;$/;"	t	typeref:struct:__anon497
EFI_CPU_PHYSICAL_LOCATION2	MpService.h	/^} EFI_CPU_PHYSICAL_LOCATION2;$/;"	t	typeref:struct:__anon498
EFI_CPU_REGISTER_INTERRUPT_HANDLER	Cpu.h	/^(EFIAPI *EFI_CPU_REGISTER_INTERRUPT_HANDLER)($/;"	t
EFI_CPU_SET_MEMORY_ATTRIBUTES	Cpu.h	/^(EFIAPI *EFI_CPU_SET_MEMORY_ATTRIBUTES)($/;"	t
EFI_CREDENTIAL2_DEFAULT	UserCredential2.h	/^(EFIAPI *EFI_CREDENTIAL2_DEFAULT)($/;"	t
EFI_CREDENTIAL2_DELETE	UserCredential2.h	/^(EFIAPI *EFI_CREDENTIAL2_DELETE)($/;"	t
EFI_CREDENTIAL2_DESELECT	UserCredential2.h	/^(EFIAPI *EFI_CREDENTIAL2_DESELECT)($/;"	t
EFI_CREDENTIAL2_ENROLL	UserCredential2.h	/^(EFIAPI *EFI_CREDENTIAL2_ENROLL)($/;"	t
EFI_CREDENTIAL2_FORM	UserCredential2.h	/^(EFIAPI *EFI_CREDENTIAL2_FORM)($/;"	t
EFI_CREDENTIAL2_GET_INFO	UserCredential2.h	/^(EFIAPI *EFI_CREDENTIAL2_GET_INFO)($/;"	t
EFI_CREDENTIAL2_GET_NEXT_INFO	UserCredential2.h	/^(EFIAPI *EFI_CREDENTIAL2_GET_NEXT_INFO)($/;"	t
EFI_CREDENTIAL2_SELECT	UserCredential2.h	/^(EFIAPI *EFI_CREDENTIAL2_SELECT)($/;"	t
EFI_CREDENTIAL2_TILE	UserCredential2.h	/^(EFIAPI *EFI_CREDENTIAL2_TILE)($/;"	t
EFI_CREDENTIAL2_TITLE	UserCredential2.h	/^(EFIAPI *EFI_CREDENTIAL2_TITLE)($/;"	t
EFI_CREDENTIAL2_USER	UserCredential2.h	/^(EFIAPI *EFI_CREDENTIAL2_USER)($/;"	t
EFI_CREDENTIAL_CAPABILITIES	UserManager.h	/^typedef UINT64   EFI_CREDENTIAL_CAPABILITIES;$/;"	t
EFI_CREDENTIAL_CAPABILITIES_ENROLL	UserManager.h	89;"	d
EFI_CREDENTIAL_DEFAULT	UserCredential.h	/^(EFIAPI *EFI_CREDENTIAL_DEFAULT)($/;"	t
EFI_CREDENTIAL_DESELECT	UserCredential.h	/^(EFIAPI *EFI_CREDENTIAL_DESELECT)($/;"	t
EFI_CREDENTIAL_ENROLL	UserCredential.h	/^(EFIAPI *EFI_CREDENTIAL_ENROLL)($/;"	t
EFI_CREDENTIAL_FORM	UserCredential.h	/^(EFIAPI *EFI_CREDENTIAL_FORM)($/;"	t
EFI_CREDENTIAL_GET_INFO	UserCredential.h	/^(EFIAPI *EFI_CREDENTIAL_GET_INFO)($/;"	t
EFI_CREDENTIAL_GET_NEXT_INFO	UserCredential.h	/^(EFIAPI *EFI_CREDENTIAL_GET_NEXT_INFO)($/;"	t
EFI_CREDENTIAL_LOGON_FLAGS	UserManager.h	/^typedef UINT32 EFI_CREDENTIAL_LOGON_FLAGS;$/;"	t
EFI_CREDENTIAL_LOGON_FLAG_AUTO	UserManager.h	95;"	d
EFI_CREDENTIAL_LOGON_FLAG_DEFAULT	UserManager.h	96;"	d
EFI_CREDENTIAL_SELECT	UserCredential.h	/^(EFIAPI *EFI_CREDENTIAL_SELECT)($/;"	t
EFI_CREDENTIAL_TILE	UserCredential.h	/^(EFIAPI *EFI_CREDENTIAL_TILE)($/;"	t
EFI_CREDENTIAL_TITLE	UserCredential.h	/^(EFIAPI *EFI_CREDENTIAL_TITLE)($/;"	t
EFI_CREDENTIAL_USER	UserCredential.h	/^(EFIAPI *EFI_CREDENTIAL_USER)($/;"	t
EFI_CYAN	SimpleTextOut.h	106;"	d
EFI_DARKGRAY	SimpleTextOut.h	112;"	d
EFI_DEBUGPORT_POLL	DebugPort.h	/^(EFIAPI *EFI_DEBUGPORT_POLL)($/;"	t
EFI_DEBUGPORT_PROTOCOL	DebugPort.h	/^typedef struct _EFI_DEBUGPORT_PROTOCOL EFI_DEBUGPORT_PROTOCOL;$/;"	t	typeref:struct:_EFI_DEBUGPORT_PROTOCOL
EFI_DEBUGPORT_PROTOCOL_GUID	DebugPort.h	19;"	d
EFI_DEBUGPORT_READ	DebugPort.h	/^(EFIAPI *EFI_DEBUGPORT_READ)($/;"	t
EFI_DEBUGPORT_RESET	DebugPort.h	/^(EFIAPI *EFI_DEBUGPORT_RESET)($/;"	t
EFI_DEBUGPORT_VARIABLE_GUID	DebugPort.h	124;"	d
EFI_DEBUGPORT_VARIABLE_NAME	DebugPort.h	123;"	d
EFI_DEBUGPORT_WRITE	DebugPort.h	/^(EFIAPI *EFI_DEBUGPORT_WRITE)($/;"	t
EFI_DEBUG_SUPPORT_PROTOCOL	DebugSupport.h	/^typedef struct _EFI_DEBUG_SUPPORT_PROTOCOL EFI_DEBUG_SUPPORT_PROTOCOL;$/;"	t	typeref:struct:_EFI_DEBUG_SUPPORT_PROTOCOL
EFI_DEBUG_SUPPORT_PROTOCOL_GUID	DebugSupport.h	26;"	d
EFI_DECOMPRESS_DECOMPRESS	Decompress.h	/^(EFIAPI *EFI_DECOMPRESS_DECOMPRESS)($/;"	t
EFI_DECOMPRESS_GET_INFO	Decompress.h	/^(EFIAPI *EFI_DECOMPRESS_GET_INFO)($/;"	t
EFI_DECOMPRESS_PROTOCOL	Decompress.h	/^typedef struct _EFI_DECOMPRESS_PROTOCOL  EFI_DECOMPRESS_PROTOCOL;$/;"	t	typeref:struct:_EFI_DECOMPRESS_PROTOCOL
EFI_DECOMPRESS_PROTOCOL_GUID	Decompress.h	12;"	d
EFI_DEFERRED_IMAGE_INFO	DeferredImageLoad.h	/^(EFIAPI *EFI_DEFERRED_IMAGE_INFO)($/;"	t
EFI_DEFERRED_IMAGE_LOAD_PROTOCOL	DeferredImageLoad.h	/^typedef struct _EFI_DEFERRED_IMAGE_LOAD_PROTOCOL  EFI_DEFERRED_IMAGE_LOAD_PROTOCOL;$/;"	t	typeref:struct:_EFI_DEFERRED_IMAGE_LOAD_PROTOCOL
EFI_DEFERRED_IMAGE_LOAD_PROTOCOL_GUID	DeferredImageLoad.h	20;"	d
EFI_DEVICE_IO	DeviceIo.h	/^(EFIAPI *EFI_DEVICE_IO)($/;"	t
EFI_DEVICE_IO_INTERFACE	DeviceIo.h	/^typedef EFI_DEVICE_IO_PROTOCOL  EFI_DEVICE_IO_INTERFACE;$/;"	t
EFI_DEVICE_IO_PROTOCOL	DeviceIo.h	/^typedef struct _EFI_DEVICE_IO_PROTOCOL EFI_DEVICE_IO_PROTOCOL;$/;"	t	typeref:struct:_EFI_DEVICE_IO_PROTOCOL
EFI_DEVICE_IO_PROTOCOL_GUID	DeviceIo.h	15;"	d
EFI_DEVICE_NAME_USE_COMPONENT_NAME	Shell.h	436;"	d
EFI_DEVICE_NAME_USE_DEVICE_PATH	Shell.h	437;"	d
EFI_DEVICE_PATH	DevicePath.h	/^typedef EFI_DEVICE_PATH_PROTOCOL  EFI_DEVICE_PATH;$/;"	t
EFI_DEVICE_PATH_FROM_TEXT_NODE	DevicePathFromText.h	/^(EFIAPI *EFI_DEVICE_PATH_FROM_TEXT_NODE)($/;"	t
EFI_DEVICE_PATH_FROM_TEXT_PATH	DevicePathFromText.h	/^(EFIAPI *EFI_DEVICE_PATH_FROM_TEXT_PATH)($/;"	t
EFI_DEVICE_PATH_FROM_TEXT_PROTOCOL	DevicePathFromText.h	/^} EFI_DEVICE_PATH_FROM_TEXT_PROTOCOL;$/;"	t	typeref:struct:__anon94
EFI_DEVICE_PATH_FROM_TEXT_PROTOCOL_GUID	DevicePathFromText.h	16;"	d
EFI_DEVICE_PATH_PROTOCOL	DevicePath.h	/^} EFI_DEVICE_PATH_PROTOCOL;$/;"	t	typeref:struct:__anon24
EFI_DEVICE_PATH_PROTOCOL_GUID	DevicePath.h	23;"	d
EFI_DEVICE_PATH_TO_TEXT_NODE	DevicePathToText.h	/^(EFIAPI *EFI_DEVICE_PATH_TO_TEXT_NODE)($/;"	t
EFI_DEVICE_PATH_TO_TEXT_PATH	DevicePathToText.h	/^(EFIAPI *EFI_DEVICE_PATH_TO_TEXT_PATH)($/;"	t
EFI_DEVICE_PATH_TO_TEXT_PROTOCOL	DevicePathToText.h	/^} EFI_DEVICE_PATH_TO_TEXT_PROTOCOL;$/;"	t	typeref:struct:__anon249
EFI_DEVICE_PATH_TO_TEXT_PROTOCOL_GUID	DevicePathToText.h	16;"	d
EFI_DEVICE_PATH_UTILITIES_PROTOCOL	DevicePathUtilities.h	/^} EFI_DEVICE_PATH_UTILITIES_PROTOCOL;$/;"	t	typeref:struct:__anon147
EFI_DEVICE_PATH_UTILITIES_PROTOCOL_GUID	DevicePathUtilities.h	16;"	d
EFI_DEVICE_PATH_UTILS_APPEND_INSTANCE	DevicePathUtilities.h	/^(EFIAPI *EFI_DEVICE_PATH_UTILS_APPEND_INSTANCE)($/;"	t
EFI_DEVICE_PATH_UTILS_APPEND_NODE	DevicePathUtilities.h	/^(EFIAPI *EFI_DEVICE_PATH_UTILS_APPEND_NODE)($/;"	t
EFI_DEVICE_PATH_UTILS_APPEND_PATH	DevicePathUtilities.h	/^(EFIAPI *EFI_DEVICE_PATH_UTILS_APPEND_PATH)($/;"	t
EFI_DEVICE_PATH_UTILS_CREATE_NODE	DevicePathUtilities.h	/^(EFIAPI *EFI_DEVICE_PATH_UTILS_CREATE_NODE)($/;"	t
EFI_DEVICE_PATH_UTILS_DUP_DEVICE_PATH	DevicePathUtilities.h	/^(EFIAPI *EFI_DEVICE_PATH_UTILS_DUP_DEVICE_PATH)($/;"	t
EFI_DEVICE_PATH_UTILS_GET_DEVICE_PATH_SIZE	DevicePathUtilities.h	/^(EFIAPI *EFI_DEVICE_PATH_UTILS_GET_DEVICE_PATH_SIZE)($/;"	t
EFI_DEVICE_PATH_UTILS_GET_NEXT_INSTANCE	DevicePathUtilities.h	/^(EFIAPI *EFI_DEVICE_PATH_UTILS_GET_NEXT_INSTANCE)($/;"	t
EFI_DEVICE_PATH_UTILS_IS_MULTI_INSTANCE	DevicePathUtilities.h	/^(EFIAPI *EFI_DEVICE_PATH_UTILS_IS_MULTI_INSTANCE)($/;"	t
EFI_DEV_PATH	DevicePath.h	/^} EFI_DEV_PATH;$/;"	t	typeref:union:__anon75
EFI_DEV_PATH_PTR	DevicePath.h	/^} EFI_DEV_PATH_PTR;$/;"	t	typeref:union:__anon76
EFI_DHCP4_BUILD	Dhcp4.h	/^(EFIAPI *EFI_DHCP4_BUILD)($/;"	t
EFI_DHCP4_CALLBACK	Dhcp4.h	/^(EFIAPI *EFI_DHCP4_CALLBACK)($/;"	t
EFI_DHCP4_CONFIGURE	Dhcp4.h	/^(EFIAPI *EFI_DHCP4_CONFIGURE)($/;"	t
EFI_DHCP4_CONFIG_DATA	Dhcp4.h	/^} EFI_DHCP4_CONFIG_DATA;$/;"	t	typeref:struct:__anon142
EFI_DHCP4_EVENT	Dhcp4.h	/^} EFI_DHCP4_EVENT;$/;"	t	typeref:enum:__anon141
EFI_DHCP4_GET_MODE_DATA	Dhcp4.h	/^(EFIAPI *EFI_DHCP4_GET_MODE_DATA)($/;"	t
EFI_DHCP4_HEADER	Dhcp4.h	/^}EFI_DHCP4_HEADER;$/;"	t	typeref:struct:__anon137
EFI_DHCP4_LISTEN_POINT	Dhcp4.h	/^} EFI_DHCP4_LISTEN_POINT;$/;"	t	typeref:struct:__anon144
EFI_DHCP4_MODE_DATA	Dhcp4.h	/^} EFI_DHCP4_MODE_DATA;$/;"	t	typeref:struct:__anon143
EFI_DHCP4_PACKET	Dhcp4.h	/^} EFI_DHCP4_PACKET;$/;"	t	typeref:struct:__anon138
EFI_DHCP4_PACKET_OPTION	Dhcp4.h	/^} EFI_DHCP4_PACKET_OPTION;$/;"	t	typeref:struct:__anon136
EFI_DHCP4_PARSE	Dhcp4.h	/^(EFIAPI *EFI_DHCP4_PARSE)($/;"	t
EFI_DHCP4_PROTOCOL	Dhcp4.h	/^typedef struct _EFI_DHCP4_PROTOCOL EFI_DHCP4_PROTOCOL;$/;"	t	typeref:struct:_EFI_DHCP4_PROTOCOL
EFI_DHCP4_PROTOCOL_GUID	Dhcp4.h	18;"	d
EFI_DHCP4_RELEASE	Dhcp4.h	/^(EFIAPI *EFI_DHCP4_RELEASE)($/;"	t
EFI_DHCP4_RENEW_REBIND	Dhcp4.h	/^(EFIAPI *EFI_DHCP4_RENEW_REBIND)($/;"	t
EFI_DHCP4_SERVICE_BINDING_PROTOCOL_GUID	Dhcp4.h	23;"	d
EFI_DHCP4_START	Dhcp4.h	/^(EFIAPI *EFI_DHCP4_START)($/;"	t
EFI_DHCP4_STATE	Dhcp4.h	/^} EFI_DHCP4_STATE;$/;"	t	typeref:enum:__anon140
EFI_DHCP4_STOP	Dhcp4.h	/^(EFIAPI *EFI_DHCP4_STOP)($/;"	t
EFI_DHCP4_TRANSMIT_RECEIVE	Dhcp4.h	/^(EFIAPI *EFI_DHCP4_TRANSMIT_RECEIVE)($/;"	t
EFI_DHCP4_TRANSMIT_RECEIVE_TOKEN	Dhcp4.h	/^} EFI_DHCP4_TRANSMIT_RECEIVE_TOKEN;$/;"	t	typeref:struct:__anon145
EFI_DHCP6_CALLBACK	Dhcp6.h	/^(EFIAPI *EFI_DHCP6_CALLBACK)($/;"	t
EFI_DHCP6_CONFIGURE	Dhcp6.h	/^(EFIAPI *EFI_DHCP6_CONFIGURE)($/;"	t
EFI_DHCP6_CONFIG_DATA	Dhcp6.h	/^} EFI_DHCP6_CONFIG_DATA;$/;"	t	typeref:struct:__anon518
EFI_DHCP6_DECLINE	Dhcp6.h	/^(EFIAPI *EFI_DHCP6_DECLINE)($/;"	t
EFI_DHCP6_DUID	Dhcp6.h	/^} EFI_DHCP6_DUID;$/;"	t	typeref:struct:__anon512
EFI_DHCP6_EVENT	Dhcp6.h	/^} EFI_DHCP6_EVENT;$/;"	t	typeref:enum:__anon507
EFI_DHCP6_GET_MODE_DATA	Dhcp6.h	/^(EFIAPI *EFI_DHCP6_GET_MODE_DATA)($/;"	t
EFI_DHCP6_HEADER	Dhcp6.h	/^} EFI_DHCP6_HEADER;$/;"	t	typeref:struct:__anon509
EFI_DHCP6_IA	Dhcp6.h	/^} EFI_DHCP6_IA;$/;"	t	typeref:struct:__anon516
EFI_DHCP6_IA_ADDRESS	Dhcp6.h	/^} EFI_DHCP6_IA_ADDRESS;$/;"	t	typeref:struct:__anon514
EFI_DHCP6_IA_DESCRIPTOR	Dhcp6.h	/^} EFI_DHCP6_IA_DESCRIPTOR;$/;"	t	typeref:struct:__anon515
EFI_DHCP6_IA_TYPE_NA	Dhcp6.h	134;"	d
EFI_DHCP6_IA_TYPE_TA	Dhcp6.h	138;"	d
EFI_DHCP6_INFO_CALLBACK	Dhcp6.h	/^(EFIAPI *EFI_DHCP6_INFO_CALLBACK)($/;"	t
EFI_DHCP6_INFO_REQUEST	Dhcp6.h	/^(EFIAPI *EFI_DHCP6_INFO_REQUEST)($/;"	t
EFI_DHCP6_MODE_DATA	Dhcp6.h	/^} EFI_DHCP6_MODE_DATA;$/;"	t	typeref:struct:__anon517
EFI_DHCP6_PACKET	Dhcp6.h	/^} EFI_DHCP6_PACKET;$/;"	t	typeref:struct:__anon510
EFI_DHCP6_PACKET_OPTION	Dhcp6.h	/^} EFI_DHCP6_PACKET_OPTION;$/;"	t	typeref:struct:__anon508
EFI_DHCP6_PARSE	Dhcp6.h	/^(EFIAPI *EFI_DHCP6_PARSE)($/;"	t
EFI_DHCP6_PROTOCOL	Dhcp6.h	/^typedef struct _EFI_DHCP6_PROTOCOL EFI_DHCP6_PROTOCOL;$/;"	t	typeref:struct:_EFI_DHCP6_PROTOCOL
EFI_DHCP6_PROTOCOL_GUID	Dhcp6.h	16;"	d
EFI_DHCP6_RELEASE	Dhcp6.h	/^(EFIAPI *EFI_DHCP6_RELEASE)($/;"	t
EFI_DHCP6_RENEW_REBIND	Dhcp6.h	/^(EFIAPI *EFI_DHCP6_RENEW_REBIND)($/;"	t
EFI_DHCP6_RETRANSMISSION	Dhcp6.h	/^} EFI_DHCP6_RETRANSMISSION;$/;"	t	typeref:struct:__anon513
EFI_DHCP6_SERVICE_BINDING_PROTOCOL_GUID	Dhcp6.h	21;"	d
EFI_DHCP6_START	Dhcp6.h	/^(EFIAPI *EFI_DHCP6_START)($/;"	t
EFI_DHCP6_STATE	Dhcp6.h	/^} EFI_DHCP6_STATE;$/;"	t	typeref:enum:__anon506
EFI_DHCP6_STOP	Dhcp6.h	/^(EFIAPI *EFI_DHCP6_STOP)($/;"	t
EFI_DISK_CANCEL_EX	DiskIo2.h	/^(EFIAPI *EFI_DISK_CANCEL_EX) ($/;"	t
EFI_DISK_FLUSH_EX	DiskIo2.h	/^(EFIAPI *EFI_DISK_FLUSH_EX) ($/;"	t
EFI_DISK_INFO_AHCI_INTERFACE_GUID	DiskInfo.h	57;"	d
EFI_DISK_INFO_IDENTIFY	DiskInfo.h	/^(EFIAPI *EFI_DISK_INFO_IDENTIFY)($/;"	t
EFI_DISK_INFO_IDE_INTERFACE_GUID	DiskInfo.h	33;"	d
EFI_DISK_INFO_INQUIRY	DiskInfo.h	/^(EFIAPI *EFI_DISK_INFO_INQUIRY)($/;"	t
EFI_DISK_INFO_NVME_INTERFACE_GUID	DiskInfo.h	65;"	d
EFI_DISK_INFO_PROTOCOL	DiskInfo.h	/^typedef struct _EFI_DISK_INFO_PROTOCOL  EFI_DISK_INFO_PROTOCOL;$/;"	t	typeref:struct:_EFI_DISK_INFO_PROTOCOL
EFI_DISK_INFO_PROTOCOL_GUID	DiskInfo.h	20;"	d
EFI_DISK_INFO_SCSI_INTERFACE_GUID	DiskInfo.h	41;"	d
EFI_DISK_INFO_SD_MMC_INTERFACE_GUID	DiskInfo.h	81;"	d
EFI_DISK_INFO_SENSE_DATA	DiskInfo.h	/^(EFIAPI *EFI_DISK_INFO_SENSE_DATA)($/;"	t
EFI_DISK_INFO_UFS_INTERFACE_GUID	DiskInfo.h	73;"	d
EFI_DISK_INFO_USB_INTERFACE_GUID	DiskInfo.h	49;"	d
EFI_DISK_INFO_WHICH_IDE	DiskInfo.h	/^(EFIAPI *EFI_DISK_INFO_WHICH_IDE)($/;"	t
EFI_DISK_IO	DiskIo.h	/^typedef EFI_DISK_IO_PROTOCOL  EFI_DISK_IO;$/;"	t
EFI_DISK_IO2_PROTOCOL	DiskIo2.h	/^typedef struct _EFI_DISK_IO2_PROTOCOL EFI_DISK_IO2_PROTOCOL;$/;"	t	typeref:struct:_EFI_DISK_IO2_PROTOCOL
EFI_DISK_IO2_PROTOCOL_GUID	DiskIo2.h	15;"	d
EFI_DISK_IO2_PROTOCOL_REVISION	DiskIo2.h	146;"	d
EFI_DISK_IO2_TOKEN	DiskIo2.h	/^} EFI_DISK_IO2_TOKEN;$/;"	t	typeref:struct:__anon540
EFI_DISK_IO_INTERFACE_REVISION	DiskIo.h	93;"	d
EFI_DISK_IO_PROTOCOL	DiskIo.h	/^typedef struct _EFI_DISK_IO_PROTOCOL EFI_DISK_IO_PROTOCOL;$/;"	t	typeref:struct:_EFI_DISK_IO_PROTOCOL
EFI_DISK_IO_PROTOCOL_GUID	DiskIo.h	16;"	d
EFI_DISK_IO_PROTOCOL_REVISION	DiskIo.h	88;"	d
EFI_DISK_READ	DiskIo.h	/^(EFIAPI *EFI_DISK_READ)($/;"	t
EFI_DISK_READ_EX	DiskIo2.h	/^(EFIAPI *EFI_DISK_READ_EX) ($/;"	t
EFI_DISK_WRITE	DiskIo.h	/^(EFIAPI *EFI_DISK_WRITE)($/;"	t
EFI_DISK_WRITE_EX	DiskIo2.h	/^(EFIAPI *EFI_DISK_WRITE_EX) ($/;"	t
EFI_DNS4_CACHE_ENTRY	Dns4.h	/^} EFI_DNS4_CACHE_ENTRY;$/;"	t	typeref:struct:__anon458
EFI_DNS4_CANCEL	Dns4.h	/^(EFIAPI *EFI_DNS4_CANCEL) ($/;"	t
EFI_DNS4_COMPLETION_TOKEN	Dns4.h	/^} EFI_DNS4_COMPLETION_TOKEN;$/;"	t	typeref:struct:__anon464
EFI_DNS4_CONFIGURE	Dns4.h	/^(EFIAPI *EFI_DNS4_CONFIGURE) ($/;"	t
EFI_DNS4_CONFIG_DATA	Dns4.h	/^} EFI_DNS4_CONFIG_DATA;$/;"	t	typeref:struct:__anon457
EFI_DNS4_GENERAL_LOOKUP	Dns4.h	/^(EFIAPI *EFI_DNS4_GENERAL_LOOKUP) ($/;"	t
EFI_DNS4_GET_MODE_DATA	Dns4.h	/^(EFIAPI *EFI_DNS4_GET_MODE_DATA) ($/;"	t
EFI_DNS4_HOST_NAME_TO_IP	Dns4.h	/^(EFIAPI *EFI_DNS4_HOST_NAME_TO_IP) ($/;"	t
EFI_DNS4_IP_TO_HOST_NAME	Dns4.h	/^(EFIAPI *EFI_DNS4_IP_TO_HOST_NAME) ($/;"	t
EFI_DNS4_MODE_DATA	Dns4.h	/^} EFI_DNS4_MODE_DATA;$/;"	t	typeref:struct:__anon459
EFI_DNS4_POLL	Dns4.h	/^(EFIAPI *EFI_DNS4_POLL) ($/;"	t
EFI_DNS4_PROTOCOL	Dns4.h	/^typedef struct _EFI_DNS4_PROTOCOL EFI_DNS4_PROTOCOL;$/;"	t	typeref:struct:_EFI_DNS4_PROTOCOL
EFI_DNS4_PROTOCOL_GUID	Dns4.h	23;"	d
EFI_DNS4_SERVICE_BINDING_PROTOCOL_GUID	Dns4.h	18;"	d
EFI_DNS4_UPDATE_DNS_CACHE	Dns4.h	/^(EFIAPI *EFI_DNS4_UPDATE_DNS_CACHE) ($/;"	t
EFI_DNS6_CACHE_ENTRY	Dns6.h	/^} EFI_DNS6_CACHE_ENTRY;$/;"	t	typeref:struct:__anon389
EFI_DNS6_CANCEL	Dns6.h	/^(EFIAPI *EFI_DNS6_CANCEL) ($/;"	t
EFI_DNS6_COMPLETION_TOKEN	Dns6.h	/^} EFI_DNS6_COMPLETION_TOKEN;$/;"	t	typeref:struct:__anon395
EFI_DNS6_CONFIGURE	Dns6.h	/^(EFIAPI * EFI_DNS6_CONFIGURE)($/;"	t
EFI_DNS6_CONFIG_DATA	Dns6.h	/^} EFI_DNS6_CONFIG_DATA;$/;"	t	typeref:struct:__anon388
EFI_DNS6_GENERAL_LOOKUP	Dns6.h	/^(EFIAPI *EFI_DNS6_GENERAL_LOOKUP) ($/;"	t
EFI_DNS6_GET_MODE_DATA	Dns6.h	/^(EFIAPI * EFI_DNS6_GET_MODE_DATA)($/;"	t
EFI_DNS6_HOST_NAME_TO_IP	Dns6.h	/^(EFIAPI *EFI_DNS6_HOST_NAME_TO_IP) ($/;"	t
EFI_DNS6_IP_TO_HOST_NAME	Dns6.h	/^(EFIAPI *EFI_DNS6_IP_TO_HOST_NAME) ($/;"	t
EFI_DNS6_MODE_DATA	Dns6.h	/^} EFI_DNS6_MODE_DATA;$/;"	t	typeref:struct:__anon390
EFI_DNS6_POLL	Dns6.h	/^(EFIAPI *EFI_DNS6_POLL) ($/;"	t
EFI_DNS6_PROTOCOL	Dns6.h	/^typedef struct _EFI_DNS6_PROTOCOL EFI_DNS6_PROTOCOL;$/;"	t	typeref:struct:_EFI_DNS6_PROTOCOL
EFI_DNS6_PROTOCOL_GUID	Dns6.h	23;"	d
EFI_DNS6_SERVICE_BINDING_PROTOCOL_GUID	Dns6.h	18;"	d
EFI_DNS6_UPDATE_DNS_CACHE	Dns6.h	/^(EFIAPI *EFI_DNS6_UPDATE_DNS_CACHE) ($/;"	t
EFI_DRIVER_BINDING_PROTOCOL	DriverBinding.h	/^typedef struct _EFI_DRIVER_BINDING_PROTOCOL  EFI_DRIVER_BINDING_PROTOCOL;$/;"	t	typeref:struct:_EFI_DRIVER_BINDING_PROTOCOL
EFI_DRIVER_BINDING_PROTOCOL_GUID	DriverBinding.h	18;"	d
EFI_DRIVER_BINDING_START	DriverBinding.h	/^(EFIAPI *EFI_DRIVER_BINDING_START)($/;"	t
EFI_DRIVER_BINDING_STOP	DriverBinding.h	/^(EFIAPI *EFI_DRIVER_BINDING_STOP)($/;"	t
EFI_DRIVER_BINDING_SUPPORTED	DriverBinding.h	/^(EFIAPI *EFI_DRIVER_BINDING_SUPPORTED)($/;"	t
EFI_DRIVER_CONFIGURATION2_FORCE_DEFAULTS	DriverConfiguration2.h	/^(EFIAPI *EFI_DRIVER_CONFIGURATION2_FORCE_DEFAULTS)($/;"	t
EFI_DRIVER_CONFIGURATION2_OPTIONS_VALID	DriverConfiguration2.h	/^(EFIAPI *EFI_DRIVER_CONFIGURATION2_OPTIONS_VALID)($/;"	t
EFI_DRIVER_CONFIGURATION2_PROTOCOL	DriverConfiguration2.h	/^typedef struct _EFI_DRIVER_CONFIGURATION2_PROTOCOL  EFI_DRIVER_CONFIGURATION2_PROTOCOL;$/;"	t	typeref:struct:_EFI_DRIVER_CONFIGURATION2_PROTOCOL
EFI_DRIVER_CONFIGURATION2_PROTOCOL_GUID	DriverConfiguration2.h	15;"	d
EFI_DRIVER_CONFIGURATION2_SET_OPTIONS	DriverConfiguration2.h	/^(EFIAPI *EFI_DRIVER_CONFIGURATION2_SET_OPTIONS)($/;"	t
EFI_DRIVER_CONFIGURATION_ACTION_REQUIRED	DriverConfiguration2.h	/^} EFI_DRIVER_CONFIGURATION_ACTION_REQUIRED;$/;"	t	typeref:enum:__anon216
EFI_DRIVER_CONFIGURATION_CUSTOM_DEFAULTS	DriverConfiguration2.h	48;"	d
EFI_DRIVER_CONFIGURATION_FORCE_DEFAULTS	DriverConfiguration.h	/^(EFIAPI *EFI_DRIVER_CONFIGURATION_FORCE_DEFAULTS)($/;"	t
EFI_DRIVER_CONFIGURATION_MANUFACTURING_DEFAULTS	DriverConfiguration2.h	47;"	d
EFI_DRIVER_CONFIGURATION_OPTIONS_VALID	DriverConfiguration.h	/^(EFIAPI *EFI_DRIVER_CONFIGURATION_OPTIONS_VALID)($/;"	t
EFI_DRIVER_CONFIGURATION_PERORMANCE_DEFAULTS	DriverConfiguration2.h	49;"	d
EFI_DRIVER_CONFIGURATION_PROTOCOL	DriverConfiguration.h	/^typedef struct _EFI_DRIVER_CONFIGURATION_PROTOCOL  EFI_DRIVER_CONFIGURATION_PROTOCOL;$/;"	t	typeref:struct:_EFI_DRIVER_CONFIGURATION_PROTOCOL
EFI_DRIVER_CONFIGURATION_PROTOCOL_GUID	DriverConfiguration.h	17;"	d
EFI_DRIVER_CONFIGURATION_SAFE_DEFAULTS	DriverConfiguration2.h	46;"	d
EFI_DRIVER_CONFIGURATION_SET_OPTIONS	DriverConfiguration.h	/^(EFIAPI *EFI_DRIVER_CONFIGURATION_SET_OPTIONS)($/;"	t
EFI_DRIVER_DIAGNOSTICS2_PROTOCOL	DriverDiagnostics2.h	/^typedef struct _EFI_DRIVER_DIAGNOSTICS2_PROTOCOL  EFI_DRIVER_DIAGNOSTICS2_PROTOCOL;$/;"	t	typeref:struct:_EFI_DRIVER_DIAGNOSTICS2_PROTOCOL
EFI_DRIVER_DIAGNOSTICS2_PROTOCOL_GUID	DriverDiagnostics2.h	14;"	d
EFI_DRIVER_DIAGNOSTICS2_RUN_DIAGNOSTICS	DriverDiagnostics2.h	/^(EFIAPI *EFI_DRIVER_DIAGNOSTICS2_RUN_DIAGNOSTICS)($/;"	t
EFI_DRIVER_DIAGNOSTICS_PROTOCOL	DriverDiagnostics.h	/^typedef struct _EFI_DRIVER_DIAGNOSTICS_PROTOCOL  EFI_DRIVER_DIAGNOSTICS_PROTOCOL;$/;"	t	typeref:struct:_EFI_DRIVER_DIAGNOSTICS_PROTOCOL
EFI_DRIVER_DIAGNOSTICS_PROTOCOL_GUID	DriverDiagnostics.h	15;"	d
EFI_DRIVER_DIAGNOSTICS_RUN_DIAGNOSTICS	DriverDiagnostics.h	/^(EFIAPI *EFI_DRIVER_DIAGNOSTICS_RUN_DIAGNOSTICS)($/;"	t
EFI_DRIVER_DIAGNOSTIC_TYPE	DriverDiagnostics.h	/^} EFI_DRIVER_DIAGNOSTIC_TYPE;$/;"	t	typeref:enum:__anon126
EFI_DRIVER_FAMILY_OVERRIDE_GET_VERSION	DriverFamilyOverride.h	/^(EFIAPI *EFI_DRIVER_FAMILY_OVERRIDE_GET_VERSION)($/;"	t
EFI_DRIVER_FAMILY_OVERRIDE_PROTOCOL	DriverFamilyOverride.h	/^typedef struct _EFI_DRIVER_FAMILY_OVERRIDE_PROTOCOL  EFI_DRIVER_FAMILY_OVERRIDE_PROTOCOL;$/;"	t	typeref:struct:_EFI_DRIVER_FAMILY_OVERRIDE_PROTOCOL
EFI_DRIVER_FAMILY_OVERRIDE_PROTOCOL_GUID	DriverFamilyOverride.h	12;"	d
EFI_DRIVER_HANOFF_ENUM	UgaIo.h	/^} EFI_DRIVER_HANOFF_ENUM;$/;"	t	typeref:enum:__anon537
EFI_DRIVER_HEALTH_GET_HEALTH_STATUS	DriverHealth.h	/^(EFIAPI *EFI_DRIVER_HEALTH_GET_HEALTH_STATUS)($/;"	t
EFI_DRIVER_HEALTH_HII_MESSAGE	DriverHealth.h	/^} EFI_DRIVER_HEALTH_HII_MESSAGE;$/;"	t	typeref:struct:__anon441
EFI_DRIVER_HEALTH_PROTOCOL	DriverHealth.h	/^typedef struct _EFI_DRIVER_HEALTH_PROTOCOL  EFI_DRIVER_HEALTH_PROTOCOL;$/;"	t	typeref:struct:_EFI_DRIVER_HEALTH_PROTOCOL
EFI_DRIVER_HEALTH_PROTOCOL_GUID	DriverHealth.h	35;"	d
EFI_DRIVER_HEALTH_REPAIR	DriverHealth.h	/^(EFIAPI *EFI_DRIVER_HEALTH_REPAIR)($/;"	t
EFI_DRIVER_HEALTH_REPAIR_NOTIFY	DriverHealth.h	/^(EFIAPI *EFI_DRIVER_HEALTH_REPAIR_NOTIFY)($/;"	t
EFI_DRIVER_HEALTH_STATUS	DriverHealth.h	/^} EFI_DRIVER_HEALTH_STATUS;$/;"	t	typeref:enum:__anon440
EFI_DRIVER_OS_HANDOFF	UgaIo.h	/^} EFI_DRIVER_OS_HANDOFF;$/;"	t	typeref:struct:__anon538
EFI_DRIVER_OS_HANDOFF_HEADER	UgaIo.h	/^} EFI_DRIVER_OS_HANDOFF_HEADER;$/;"	t	typeref:struct:__anon536
EFI_DRIVER_SUPPORTED_EFI_VERSION_PROTOCOL	DriverSupportedEfiVersion.h	/^} EFI_DRIVER_SUPPORTED_EFI_VERSION_PROTOCOL;$/;"	t	typeref:struct:_EFI_DRIVER_SUPPORTED_EFI_VERSION_PROTOCOL
EFI_DRIVER_SUPPORTED_EFI_VERSION_PROTOCOL_GUID	DriverSupportedEfiVersion.h	15;"	d
EFI_DXE_MM_READY_TO_LOCK_PROTOCOL_GUID	DxeMmReadyToLock.h	12;"	d
EFI_DXE_SMM_READY_TO_LOCK_PROTOCOL_GUID	DxeSmmReadyToLock.h	30;"	d
EFI_EAPOL_PORT_INFO	EapManagement.h	/^} EFI_EAPOL_PORT_INFO;$/;"	t	typeref:struct:_EFI_EAPOL_PORT_INFO
EFI_EAPOL_SUPPLICANT_PAE_CONFIGURATION	EapManagement.h	/^} EFI_EAPOL_SUPPLICANT_PAE_CONFIGURATION;$/;"	t	typeref:struct:_EFI_EAPOL_SUPPLICANT_PAE_CONFIGURATION
EFI_EAPOL_SUPPLICANT_PAE_STATE	EapManagement.h	/^} EFI_EAPOL_SUPPLICANT_PAE_STATE;$/;"	t	typeref:enum:_EFI_EAPOL_SUPPLICANT_PAE_STATE
EFI_EAPOL_SUPPLICANT_PAE_STATISTICS	EapManagement.h	/^} EFI_EAPOL_SUPPLICANT_PAE_STATISTICS;$/;"	t	typeref:struct:_EFI_EAPOL_SUPPLICANT_PAE_STATISTICS
EFI_EAP_BUILD_RESPONSE_PACKET	Eap.h	/^(EFIAPI *EFI_EAP_BUILD_RESPONSE_PACKET)($/;"	t
EFI_EAP_CONFIGURATION_GET_DATA	EapConfiguration.h	/^(EFIAPI *EFI_EAP_CONFIGURATION_GET_DATA) ($/;"	t
EFI_EAP_CONFIGURATION_PROTOCOL	EapConfiguration.h	/^typedef struct _EFI_EAP_CONFIGURATION_PROTOCOL EFI_EAP_CONFIGURATION_PROTOCOL;$/;"	t	typeref:struct:_EFI_EAP_CONFIGURATION_PROTOCOL
EFI_EAP_CONFIGURATION_PROTOCOL_GUID	EapConfiguration.h	18;"	d
EFI_EAP_CONFIGURATION_SET_DATA	EapConfiguration.h	/^(EFIAPI *EFI_EAP_CONFIGURATION_SET_DATA) ($/;"	t
EFI_EAP_CONFIG_DATA_TYPE	EapConfiguration.h	/^} EFI_EAP_CONFIG_DATA_TYPE;$/;"	t	typeref:enum:__anon437
EFI_EAP_GET_KEY	EapManagement2.h	/^(EFIAPI *EFI_EAP_GET_KEY) ($/;"	t
EFI_EAP_GET_SUPPLICANT_STATISTICS	EapManagement.h	/^(EFIAPI *EFI_EAP_GET_SUPPLICANT_STATISTICS)($/;"	t
EFI_EAP_GET_SUPPLICANT_STATUS	EapManagement.h	/^(EFIAPI *EFI_EAP_GET_SUPPLICANT_STATUS)($/;"	t
EFI_EAP_GET_SYSTEM_CONFIGURATION	EapManagement.h	/^(EFIAPI *EFI_EAP_GET_SYSTEM_CONFIGURATION)($/;"	t
EFI_EAP_INITIALIZE_PORT	EapManagement.h	/^(EFIAPI *EFI_EAP_INITIALIZE_PORT)($/;"	t
EFI_EAP_MANAGEMENT2_PROTOCOL	EapManagement2.h	/^typedef struct _EFI_EAP_MANAGEMENT2_PROTOCOL EFI_EAP_MANAGEMENT2_PROTOCOL;$/;"	t	typeref:struct:_EFI_EAP_MANAGEMENT2_PROTOCOL
EFI_EAP_MANAGEMENT2_PROTOCOL_GUID	EapManagement2.h	22;"	d
EFI_EAP_MANAGEMENT_PROTOCOL	EapManagement.h	/^typedef struct _EFI_EAP_MANAGEMENT_PROTOCOL EFI_EAP_MANAGEMENT_PROTOCOL;$/;"	t	typeref:struct:_EFI_EAP_MANAGEMENT_PROTOCOL
EFI_EAP_MANAGEMENT_PROTOCOL_GUID	EapManagement.h	22;"	d
EFI_EAP_PROTOCOL	Eap.h	/^typedef struct _EFI_EAP_PROTOCOL EFI_EAP_PROTOCOL;$/;"	t	typeref:struct:_EFI_EAP_PROTOCOL
EFI_EAP_PROTOCOL_GUID	Eap.h	20;"	d
EFI_EAP_REGISTER_AUTHENTICATION_METHOD	Eap.h	/^(EFIAPI *EFI_EAP_REGISTER_AUTHENTICATION_METHOD)($/;"	t
EFI_EAP_SET_DESIRED_AUTHENTICATION_METHOD	Eap.h	/^(EFIAPI *EFI_EAP_SET_DESIRED_AUTHENTICATION_METHOD)($/;"	t
EFI_EAP_SET_SUPPLICANT_CONFIGURATION	EapManagement.h	/^(EFIAPI *EFI_EAP_SET_SUPPLICANT_CONFIGURATION)($/;"	t
EFI_EAP_SET_SYSTEM_CONFIGURATION	EapManagement.h	/^(EFIAPI *EFI_EAP_SET_SYSTEM_CONFIGURATION)($/;"	t
EFI_EAP_TYPE	EapConfiguration.h	/^typedef UINT8 EFI_EAP_TYPE;$/;"	t
EFI_EAP_TYPE_ATTRIBUTE	EapConfiguration.h	28;"	d
EFI_EAP_TYPE_ATTRIBUTE	EapConfiguration.h	66;"	d
EFI_EAP_TYPE_EAPSIM	EapConfiguration.h	74;"	d
EFI_EAP_TYPE_EAPTLS	EapConfiguration.h	73;"	d
EFI_EAP_TYPE_EAP_EXTENSION	EapConfiguration.h	78;"	d
EFI_EAP_TYPE_GTC	EapConfiguration.h	72;"	d
EFI_EAP_TYPE_IDENTITY	EapConfiguration.h	67;"	d
EFI_EAP_TYPE_MD5	Eap.h	43;"	d
EFI_EAP_TYPE_MD5CHALLENGE	EapConfiguration.h	70;"	d
EFI_EAP_TYPE_MSCHAPV2	EapConfiguration.h	77;"	d
EFI_EAP_TYPE_NAK	EapConfiguration.h	69;"	d
EFI_EAP_TYPE_NOTIFICATION	EapConfiguration.h	68;"	d
EFI_EAP_TYPE_OTP	Eap.h	44;"	d
EFI_EAP_TYPE_OTP	EapConfiguration.h	71;"	d
EFI_EAP_TYPE_PEAP	EapConfiguration.h	76;"	d
EFI_EAP_TYPE_TLS	Eap.h	36;"	d
EFI_EAP_TYPE_TOKEN_CARD	Eap.h	45;"	d
EFI_EAP_TYPE_TTLS	EapConfiguration.h	75;"	d
EFI_EAP_USER_LOGOFF	EapManagement.h	/^(EFIAPI *EFI_EAP_USER_LOGOFF)($/;"	t
EFI_EAP_USER_LOGON	EapManagement.h	/^(EFIAPI *EFI_EAP_USER_LOGON)($/;"	t
EFI_EBC_CREATE_THUNK	Ebc.h	/^(EFIAPI *EFI_EBC_CREATE_THUNK)($/;"	t
EFI_EBC_GET_VERSION	Ebc.h	/^(EFIAPI *EFI_EBC_GET_VERSION)($/;"	t
EFI_EBC_INTERPRETER_PROTOCOL_GUID	Ebc.h	12;"	d
EFI_EBC_PROTOCOL	Ebc.h	/^typedef struct _EFI_EBC_PROTOCOL EFI_EBC_PROTOCOL;$/;"	t	typeref:struct:_EFI_EBC_PROTOCOL
EFI_EBC_PROTOCOL_GUID	Ebc.h	181;"	d
EFI_EBC_REGISTER_ICACHE_FLUSH	Ebc.h	/^(EFIAPI *EFI_EBC_REGISTER_ICACHE_FLUSH)($/;"	t
EFI_EBC_UNLOAD_IMAGE	Ebc.h	/^(EFIAPI *EFI_EBC_UNLOAD_IMAGE)($/;"	t
EFI_EDID_ACTIVE_PROTOCOL	EdidActive.h	/^} EFI_EDID_ACTIVE_PROTOCOL;$/;"	t	typeref:struct:__anon267
EFI_EDID_ACTIVE_PROTOCOL_GUID	EdidActive.h	14;"	d
EFI_EDID_DISCOVERED_PROTOCOL	EdidDiscovered.h	/^} EFI_EDID_DISCOVERED_PROTOCOL;$/;"	t	typeref:struct:__anon242
EFI_EDID_DISCOVERED_PROTOCOL_GUID	EdidDiscovered.h	15;"	d
EFI_EDID_OVERRIDE_DONT_OVERRIDE	EdidOverride.h	22;"	d
EFI_EDID_OVERRIDE_ENABLE_HOT_PLUG	EdidOverride.h	23;"	d
EFI_EDID_OVERRIDE_PROTOCOL	EdidOverride.h	/^typedef struct _EFI_EDID_OVERRIDE_PROTOCOL EFI_EDID_OVERRIDE_PROTOCOL;$/;"	t	typeref:struct:_EFI_EDID_OVERRIDE_PROTOCOL
EFI_EDID_OVERRIDE_PROTOCOL_GET_EDID	EdidOverride.h	/^(EFIAPI *EFI_EDID_OVERRIDE_PROTOCOL_GET_EDID)($/;"	t
EFI_EDID_OVERRIDE_PROTOCOL_GUID	EdidOverride.h	15;"	d
EFI_ERASE_BLOCK_PROTOCOL	EraseBlock.h	/^typedef struct _EFI_ERASE_BLOCK_PROTOCOL EFI_ERASE_BLOCK_PROTOCOL;$/;"	t	typeref:struct:_EFI_ERASE_BLOCK_PROTOCOL
EFI_ERASE_BLOCK_PROTOCOL_GUID	EraseBlock.h	15;"	d
EFI_ERASE_BLOCK_PROTOCOL_REVISION	EraseBlock.h	22;"	d
EFI_ERASE_BLOCK_TOKEN	EraseBlock.h	/^} EFI_ERASE_BLOCK_TOKEN;$/;"	t	typeref:struct:__anon368
EFI_EVENT_GROUP_USER_PROFILE_CHANGED	UserManager.h	22;"	d
EFI_EXCEPTION_CALLBACK	DebugSupport.h	/^(EFIAPI *EFI_EXCEPTION_CALLBACK)($/;"	t
EFI_EXCEPTION_TYPE	DebugSupport.h	/^typedef INTN  EFI_EXCEPTION_TYPE;$/;"	t
EFI_EXTRACT_GUIDED_SECTION	GuidedSectionExtraction.h	/^(EFIAPI *EFI_EXTRACT_GUIDED_SECTION)($/;"	t
EFI_EXT_SCSI_DATA_DIRECTION_BIDIRECTIONAL	ScsiPassThruExt.h	32;"	d
EFI_EXT_SCSI_DATA_DIRECTION_READ	ScsiPassThruExt.h	30;"	d
EFI_EXT_SCSI_DATA_DIRECTION_WRITE	ScsiPassThruExt.h	31;"	d
EFI_EXT_SCSI_PASS_THRU_ATTRIBUTES_LOGICAL	ScsiPassThruExt.h	24;"	d
EFI_EXT_SCSI_PASS_THRU_ATTRIBUTES_NONBLOCKIO	ScsiPassThruExt.h	25;"	d
EFI_EXT_SCSI_PASS_THRU_ATTRIBUTES_PHYSICAL	ScsiPassThruExt.h	23;"	d
EFI_EXT_SCSI_PASS_THRU_BUILD_DEVICE_PATH	ScsiPassThruExt.h	/^(EFIAPI *EFI_EXT_SCSI_PASS_THRU_BUILD_DEVICE_PATH)($/;"	t
EFI_EXT_SCSI_PASS_THRU_GET_NEXT_TARGET	ScsiPassThruExt.h	/^(EFIAPI *EFI_EXT_SCSI_PASS_THRU_GET_NEXT_TARGET)($/;"	t
EFI_EXT_SCSI_PASS_THRU_GET_NEXT_TARGET_LUN	ScsiPassThruExt.h	/^(EFIAPI *EFI_EXT_SCSI_PASS_THRU_GET_NEXT_TARGET_LUN)($/;"	t
EFI_EXT_SCSI_PASS_THRU_GET_TARGET_LUN	ScsiPassThruExt.h	/^(EFIAPI *EFI_EXT_SCSI_PASS_THRU_GET_TARGET_LUN)($/;"	t
EFI_EXT_SCSI_PASS_THRU_MODE	ScsiPassThruExt.h	/^} EFI_EXT_SCSI_PASS_THRU_MODE;$/;"	t	typeref:struct:__anon438
EFI_EXT_SCSI_PASS_THRU_PASSTHRU	ScsiPassThruExt.h	/^(EFIAPI *EFI_EXT_SCSI_PASS_THRU_PASSTHRU)($/;"	t
EFI_EXT_SCSI_PASS_THRU_PROTOCOL	ScsiPassThruExt.h	/^typedef struct _EFI_EXT_SCSI_PASS_THRU_PROTOCOL EFI_EXT_SCSI_PASS_THRU_PROTOCOL;$/;"	t	typeref:struct:_EFI_EXT_SCSI_PASS_THRU_PROTOCOL
EFI_EXT_SCSI_PASS_THRU_PROTOCOL_GUID	ScsiPassThruExt.h	14;"	d
EFI_EXT_SCSI_PASS_THRU_RESET_CHANNEL	ScsiPassThruExt.h	/^(EFIAPI *EFI_EXT_SCSI_PASS_THRU_RESET_CHANNEL)($/;"	t
EFI_EXT_SCSI_PASS_THRU_RESET_TARGET_LUN	ScsiPassThruExt.h	/^(EFIAPI *EFI_EXT_SCSI_PASS_THRU_RESET_TARGET_LUN)($/;"	t
EFI_EXT_SCSI_PASS_THRU_SCSI_REQUEST_PACKET	ScsiPassThruExt.h	/^} EFI_EXT_SCSI_PASS_THRU_SCSI_REQUEST_PACKET;$/;"	t	typeref:struct:__anon439
EFI_EXT_SCSI_STATUS_HOST_ADAPTER_BUS_FREE	ScsiPassThruExt.h	45;"	d
EFI_EXT_SCSI_STATUS_HOST_ADAPTER_BUS_RESET	ScsiPassThruExt.h	40;"	d
EFI_EXT_SCSI_STATUS_HOST_ADAPTER_DATA_OVERRUN_UNDERRUN	ScsiPassThruExt.h	44;"	d
EFI_EXT_SCSI_STATUS_HOST_ADAPTER_MESSAGE_REJECT	ScsiPassThruExt.h	39;"	d
EFI_EXT_SCSI_STATUS_HOST_ADAPTER_OK	ScsiPassThruExt.h	36;"	d
EFI_EXT_SCSI_STATUS_HOST_ADAPTER_OTHER	ScsiPassThruExt.h	47;"	d
EFI_EXT_SCSI_STATUS_HOST_ADAPTER_PARITY_ERROR	ScsiPassThruExt.h	41;"	d
EFI_EXT_SCSI_STATUS_HOST_ADAPTER_PHASE_ERROR	ScsiPassThruExt.h	46;"	d
EFI_EXT_SCSI_STATUS_HOST_ADAPTER_REQUEST_SENSE_FAILED	ScsiPassThruExt.h	42;"	d
EFI_EXT_SCSI_STATUS_HOST_ADAPTER_SELECTION_TIMEOUT	ScsiPassThruExt.h	43;"	d
EFI_EXT_SCSI_STATUS_HOST_ADAPTER_TIMEOUT	ScsiPassThruExt.h	38;"	d
EFI_EXT_SCSI_STATUS_HOST_ADAPTER_TIMEOUT_COMMAND	ScsiPassThruExt.h	37;"	d
EFI_EXT_SCSI_STATUS_TARGET_ACA_ACTIVE	ScsiPassThruExt.h	59;"	d
EFI_EXT_SCSI_STATUS_TARGET_BUSY	ScsiPassThruExt.h	54;"	d
EFI_EXT_SCSI_STATUS_TARGET_CHECK_CONDITION	ScsiPassThruExt.h	52;"	d
EFI_EXT_SCSI_STATUS_TARGET_CONDITION_MET	ScsiPassThruExt.h	53;"	d
EFI_EXT_SCSI_STATUS_TARGET_GOOD	ScsiPassThruExt.h	51;"	d
EFI_EXT_SCSI_STATUS_TARGET_INTERMEDIATE	ScsiPassThruExt.h	55;"	d
EFI_EXT_SCSI_STATUS_TARGET_INTERMEDIATE_CONDITION_MET	ScsiPassThruExt.h	56;"	d
EFI_EXT_SCSI_STATUS_TARGET_RESERVATION_CONFLICT	ScsiPassThruExt.h	57;"	d
EFI_EXT_SCSI_STATUS_TARGET_TASK_ABORTED	ScsiPassThruExt.h	60;"	d
EFI_EXT_SCSI_STATUS_TARGET_TASK_SET_FULL	ScsiPassThruExt.h	58;"	d
EFI_FILE	SimpleFileSystem.h	/^typedef EFI_FILE_PROTOCOL                 EFI_FILE;$/;"	t
EFI_FILE_ARCHIVE	SimpleFileSystem.h	138;"	d
EFI_FILE_CLOSE	SimpleFileSystem.h	/^(EFIAPI *EFI_FILE_CLOSE)($/;"	t
EFI_FILE_DELETE	SimpleFileSystem.h	/^(EFIAPI *EFI_FILE_DELETE)($/;"	t
EFI_FILE_DIRECTORY	SimpleFileSystem.h	137;"	d
EFI_FILE_FLUSH	SimpleFileSystem.h	/^(EFIAPI *EFI_FILE_FLUSH)($/;"	t
EFI_FILE_FLUSH_EX	SimpleFileSystem.h	/^(EFIAPI *EFI_FILE_FLUSH_EX) ($/;"	t
EFI_FILE_GET_INFO	SimpleFileSystem.h	/^(EFIAPI *EFI_FILE_GET_INFO)($/;"	t
EFI_FILE_GET_POSITION	SimpleFileSystem.h	/^(EFIAPI *EFI_FILE_GET_POSITION)($/;"	t
EFI_FILE_HANDLE	SimpleFileSystem.h	/^typedef struct _EFI_FILE_PROTOCOL         *EFI_FILE_HANDLE;$/;"	t	typeref:struct:_EFI_FILE_PROTOCOL
EFI_FILE_HIDDEN	SimpleFileSystem.h	134;"	d
EFI_FILE_IO_INTERFACE	SimpleFileSystem.h	/^typedef EFI_SIMPLE_FILE_SYSTEM_PROTOCOL   EFI_FILE_IO_INTERFACE;$/;"	t
EFI_FILE_IO_INTERFACE_REVISION	SimpleFileSystem.h	71;"	d
EFI_FILE_IO_TOKEN	SimpleFileSystem.h	/^} EFI_FILE_IO_TOKEN;$/;"	t	typeref:struct:__anon135
EFI_FILE_MODE_CREATE	SimpleFileSystem.h	128;"	d
EFI_FILE_MODE_READ	SimpleFileSystem.h	126;"	d
EFI_FILE_MODE_WRITE	SimpleFileSystem.h	127;"	d
EFI_FILE_OPEN	SimpleFileSystem.h	/^(EFIAPI *EFI_FILE_OPEN)($/;"	t
EFI_FILE_OPEN_EX	SimpleFileSystem.h	/^(EFIAPI *EFI_FILE_OPEN_EX)($/;"	t
EFI_FILE_PROTOCOL	SimpleFileSystem.h	/^typedef struct _EFI_FILE_PROTOCOL         EFI_FILE_PROTOCOL;$/;"	t	typeref:struct:_EFI_FILE_PROTOCOL
EFI_FILE_PROTOCOL_LATEST_REVISION	SimpleFileSystem.h	516;"	d
EFI_FILE_PROTOCOL_REVISION	SimpleFileSystem.h	514;"	d
EFI_FILE_PROTOCOL_REVISION2	SimpleFileSystem.h	515;"	d
EFI_FILE_READ	SimpleFileSystem.h	/^(EFIAPI *EFI_FILE_READ)($/;"	t
EFI_FILE_READ_EX	SimpleFileSystem.h	/^(EFIAPI *EFI_FILE_READ_EX) ($/;"	t
EFI_FILE_READ_ONLY	SimpleFileSystem.h	133;"	d
EFI_FILE_RESERVED	SimpleFileSystem.h	136;"	d
EFI_FILE_REVISION	SimpleFileSystem.h	521;"	d
EFI_FILE_SET_INFO	SimpleFileSystem.h	/^(EFIAPI *EFI_FILE_SET_INFO)($/;"	t
EFI_FILE_SET_POSITION	SimpleFileSystem.h	/^(EFIAPI *EFI_FILE_SET_POSITION)($/;"	t
EFI_FILE_SYSTEM	SimpleFileSystem.h	135;"	d
EFI_FILE_VALID_ATTR	SimpleFileSystem.h	139;"	d
EFI_FILE_WRITE	SimpleFileSystem.h	/^(EFIAPI *EFI_FILE_WRITE)($/;"	t
EFI_FILE_WRITE_EX	SimpleFileSystem.h	/^(EFIAPI *EFI_FILE_WRITE_EX) ($/;"	t
EFI_FIRMWARE_IMAGE_AUTHENTICATION	FirmwareManagement.h	/^} EFI_FIRMWARE_IMAGE_AUTHENTICATION;$/;"	t	typeref:struct:__anon11
EFI_FIRMWARE_IMAGE_DEP	FirmwareManagement.h	/^} EFI_FIRMWARE_IMAGE_DEP;$/;"	t	typeref:struct:__anon9
EFI_FIRMWARE_IMAGE_DESCRIPTOR	FirmwareManagement.h	/^} EFI_FIRMWARE_IMAGE_DESCRIPTOR;$/;"	t	typeref:struct:__anon10
EFI_FIRMWARE_IMAGE_DESCRIPTOR_VERSION	FirmwareManagement.h	192;"	d
EFI_FIRMWARE_MANAGEMENT_PROTOCOL	FirmwareManagement.h	/^typedef struct _EFI_FIRMWARE_MANAGEMENT_PROTOCOL EFI_FIRMWARE_MANAGEMENT_PROTOCOL;$/;"	t	typeref:struct:_EFI_FIRMWARE_MANAGEMENT_PROTOCOL
EFI_FIRMWARE_MANAGEMENT_PROTOCOL_CHECK_IMAGE	FirmwareManagement.h	/^(EFIAPI *EFI_FIRMWARE_MANAGEMENT_PROTOCOL_CHECK_IMAGE)($/;"	t
EFI_FIRMWARE_MANAGEMENT_PROTOCOL_GET_IMAGE	FirmwareManagement.h	/^(EFIAPI *EFI_FIRMWARE_MANAGEMENT_PROTOCOL_GET_IMAGE)($/;"	t
EFI_FIRMWARE_MANAGEMENT_PROTOCOL_GET_IMAGE_INFO	FirmwareManagement.h	/^(EFIAPI *EFI_FIRMWARE_MANAGEMENT_PROTOCOL_GET_IMAGE_INFO)($/;"	t
EFI_FIRMWARE_MANAGEMENT_PROTOCOL_GET_PACKAGE_INFO	FirmwareManagement.h	/^(EFIAPI *EFI_FIRMWARE_MANAGEMENT_PROTOCOL_GET_PACKAGE_INFO)($/;"	t
EFI_FIRMWARE_MANAGEMENT_PROTOCOL_GUID	FirmwareManagement.h	24;"	d
EFI_FIRMWARE_MANAGEMENT_PROTOCOL_SET_IMAGE	FirmwareManagement.h	/^(EFIAPI *EFI_FIRMWARE_MANAGEMENT_PROTOCOL_SET_IMAGE)($/;"	t
EFI_FIRMWARE_MANAGEMENT_PROTOCOL_SET_PACKAGE_INFO	FirmwareManagement.h	/^(EFIAPI *EFI_FIRMWARE_MANAGEMENT_PROTOCOL_SET_PACKAGE_INFO)($/;"	t
EFI_FIRMWARE_MANAGEMENT_UPDATE_IMAGE_PROGRESS	FirmwareManagement.h	/^(EFIAPI *EFI_FIRMWARE_MANAGEMENT_UPDATE_IMAGE_PROGRESS)($/;"	t
EFI_FIRMWARE_VOLUME2_PROTOCOL	FirmwareVolume2.h	/^typedef struct _EFI_FIRMWARE_VOLUME2_PROTOCOL EFI_FIRMWARE_VOLUME2_PROTOCOL;$/;"	t	typeref:struct:_EFI_FIRMWARE_VOLUME2_PROTOCOL
EFI_FIRMWARE_VOLUME2_PROTOCOL_GUID	FirmwareVolume2.h	19;"	d
EFI_FIRMWARE_VOLUME_BLOCK2_PROTOCOL	FirmwareVolumeBlock.h	/^typedef EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL EFI_FIRMWARE_VOLUME_BLOCK2_PROTOCOL;$/;"	t
EFI_FIRMWARE_VOLUME_BLOCK2_PROTOCOL_GUID	FirmwareVolumeBlock.h	23;"	d
EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL	FirmwareVolumeBlock.h	/^typedef struct _EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL;$/;"	t	typeref:struct:_EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL
EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL_GUID	FirmwareVolumeBlock.h	20;"	d
EFI_FMP_DEP_AND	FirmwareManagement.h	37;"	d
EFI_FMP_DEP_END	FirmwareManagement.h	47;"	d
EFI_FMP_DEP_EQ	FirmwareManagement.h	42;"	d
EFI_FMP_DEP_FALSE	FirmwareManagement.h	41;"	d
EFI_FMP_DEP_GT	FirmwareManagement.h	43;"	d
EFI_FMP_DEP_GTE	FirmwareManagement.h	44;"	d
EFI_FMP_DEP_LT	FirmwareManagement.h	45;"	d
EFI_FMP_DEP_LTE	FirmwareManagement.h	46;"	d
EFI_FMP_DEP_NOT	FirmwareManagement.h	39;"	d
EFI_FMP_DEP_OR	FirmwareManagement.h	38;"	d
EFI_FMP_DEP_PUSH_GUID	FirmwareManagement.h	34;"	d
EFI_FMP_DEP_PUSH_VERSION	FirmwareManagement.h	35;"	d
EFI_FMP_DEP_TRUE	FirmwareManagement.h	40;"	d
EFI_FMP_DEP_VERSION_STR	FirmwareManagement.h	36;"	d
EFI_FONT_DISPLAY_INFO	HiiFont.h	/^} EFI_FONT_DISPLAY_INFO;$/;"	t	typeref:struct:_EFI_FONT_DISPLAY_INFO
EFI_FONT_HANDLE	HiiFont.h	/^typedef VOID    *EFI_FONT_HANDLE;$/;"	t
EFI_FONT_INFO	HiiFont.h	/^} EFI_FONT_INFO;$/;"	t	typeref:struct:__anon217
EFI_FONT_INFO_ANY_FONT	HiiFont.h	74;"	d
EFI_FONT_INFO_ANY_SIZE	HiiFont.h	75;"	d
EFI_FONT_INFO_ANY_STYLE	HiiFont.h	76;"	d
EFI_FONT_INFO_MASK	HiiFont.h	/^typedef UINT32  EFI_FONT_INFO_MASK;$/;"	t
EFI_FONT_INFO_RESIZE	HiiFont.h	72;"	d
EFI_FONT_INFO_RESTYLE	HiiFont.h	73;"	d
EFI_FONT_INFO_SYS_BACK_COLOR	HiiFont.h	71;"	d
EFI_FONT_INFO_SYS_FONT	HiiFont.h	67;"	d
EFI_FONT_INFO_SYS_FORE_COLOR	HiiFont.h	70;"	d
EFI_FONT_INFO_SYS_SIZE	HiiFont.h	68;"	d
EFI_FONT_INFO_SYS_STYLE	HiiFont.h	69;"	d
EFI_FORM_BROWSER2_PROTOCOL	FormBrowser2.h	/^typedef struct _EFI_FORM_BROWSER2_PROTOCOL   EFI_FORM_BROWSER2_PROTOCOL;$/;"	t	typeref:struct:_EFI_FORM_BROWSER2_PROTOCOL
EFI_FORM_BROWSER2_PROTOCOL_GUID	FormBrowser2.h	17;"	d
EFI_FTP4_CLOSE	Ftp4.h	/^(EFIAPI *EFI_FTP4_CLOSE)($/;"	t
EFI_FTP4_COMMAND_TOKEN	Ftp4.h	/^typedef struct _EFI_FTP4_COMMAND_TOKEN EFI_FTP4_COMMAND_TOKEN;$/;"	t	typeref:struct:_EFI_FTP4_COMMAND_TOKEN
EFI_FTP4_CONFIGURE	Ftp4.h	/^(EFIAPI *EFI_FTP4_CONFIGURE)($/;"	t
EFI_FTP4_CONFIG_DATA	Ftp4.h	/^} EFI_FTP4_CONFIG_DATA;$/;"	t	typeref:struct:__anon443
EFI_FTP4_CONNECT	Ftp4.h	/^(EFIAPI *EFI_FTP4_CONNECT)($/;"	t
EFI_FTP4_CONNECTION_TOKEN	Ftp4.h	/^} EFI_FTP4_CONNECTION_TOKEN;$/;"	t	typeref:struct:__anon442
EFI_FTP4_DATA_CALLBACK	Ftp4.h	/^(EFIAPI *EFI_FTP4_DATA_CALLBACK)($/;"	t
EFI_FTP4_GET_MODE_DATA	Ftp4.h	/^(EFIAPI *EFI_FTP4_GET_MODE_DATA)($/;"	t
EFI_FTP4_POLL	Ftp4.h	/^(EFIAPI *EFI_FTP4_POLL)($/;"	t
EFI_FTP4_PROTOCOL	Ftp4.h	/^typedef struct _EFI_FTP4_PROTOCOL EFI_FTP4_PROTOCOL;$/;"	t	typeref:struct:_EFI_FTP4_PROTOCOL
EFI_FTP4_PROTOCOL_GUID	Ftp4.h	27;"	d
EFI_FTP4_READ_DIRECTORY	Ftp4.h	/^(EFIAPI *EFI_FTP4_READ_DIRECTORY)($/;"	t
EFI_FTP4_READ_FILE	Ftp4.h	/^(EFIAPI *EFI_FTP4_READ_FILE)($/;"	t
EFI_FTP4_SERVICE_BINDING_PROTOCOL_GUID	Ftp4.h	22;"	d
EFI_FTP4_WRITE_FILE	Ftp4.h	/^(EFIAPI *EFI_FTP4_WRITE_FILE)($/;"	t
EFI_FV2_ALIGNMENT	FirmwareVolume2.h	47;"	d
EFI_FV2_ALIGNMENT_1	FirmwareVolume2.h	48;"	d
EFI_FV2_ALIGNMENT_128	FirmwareVolume2.h	55;"	d
EFI_FV2_ALIGNMENT_128K	FirmwareVolume2.h	65;"	d
EFI_FV2_ALIGNMENT_128M	FirmwareVolume2.h	75;"	d
EFI_FV2_ALIGNMENT_16	FirmwareVolume2.h	52;"	d
EFI_FV2_ALIGNMENT_16K	FirmwareVolume2.h	62;"	d
EFI_FV2_ALIGNMENT_16M	FirmwareVolume2.h	72;"	d
EFI_FV2_ALIGNMENT_1G	FirmwareVolume2.h	78;"	d
EFI_FV2_ALIGNMENT_1K	FirmwareVolume2.h	58;"	d
EFI_FV2_ALIGNMENT_1M	FirmwareVolume2.h	68;"	d
EFI_FV2_ALIGNMENT_2	FirmwareVolume2.h	49;"	d
EFI_FV2_ALIGNMENT_256	FirmwareVolume2.h	56;"	d
EFI_FV2_ALIGNMENT_256K	FirmwareVolume2.h	66;"	d
EFI_FV2_ALIGNMENT_256M	FirmwareVolume2.h	76;"	d
EFI_FV2_ALIGNMENT_2G	FirmwareVolume2.h	79;"	d
EFI_FV2_ALIGNMENT_2K	FirmwareVolume2.h	59;"	d
EFI_FV2_ALIGNMENT_2M	FirmwareVolume2.h	69;"	d
EFI_FV2_ALIGNMENT_32	FirmwareVolume2.h	53;"	d
EFI_FV2_ALIGNMENT_32K	FirmwareVolume2.h	63;"	d
EFI_FV2_ALIGNMENT_32M	FirmwareVolume2.h	73;"	d
EFI_FV2_ALIGNMENT_4	FirmwareVolume2.h	50;"	d
EFI_FV2_ALIGNMENT_4K	FirmwareVolume2.h	60;"	d
EFI_FV2_ALIGNMENT_4M	FirmwareVolume2.h	70;"	d
EFI_FV2_ALIGNMENT_512	FirmwareVolume2.h	57;"	d
EFI_FV2_ALIGNMENT_512K	FirmwareVolume2.h	67;"	d
EFI_FV2_ALIGNMENT_512M	FirmwareVolume2.h	77;"	d
EFI_FV2_ALIGNMENT_64	FirmwareVolume2.h	54;"	d
EFI_FV2_ALIGNMENT_64K	FirmwareVolume2.h	64;"	d
EFI_FV2_ALIGNMENT_64M	FirmwareVolume2.h	74;"	d
EFI_FV2_ALIGNMENT_8	FirmwareVolume2.h	51;"	d
EFI_FV2_ALIGNMENT_8K	FirmwareVolume2.h	61;"	d
EFI_FV2_ALIGNMENT_8M	FirmwareVolume2.h	71;"	d
EFI_FV2_LOCK_CAP	FirmwareVolume2.h	40;"	d
EFI_FV2_LOCK_STATUS	FirmwareVolume2.h	41;"	d
EFI_FV2_READ_DISABLE_CAP	FirmwareVolume2.h	34;"	d
EFI_FV2_READ_ENABLE_CAP	FirmwareVolume2.h	35;"	d
EFI_FV2_READ_LOCK_CAP	FirmwareVolume2.h	43;"	d
EFI_FV2_READ_LOCK_STATUS	FirmwareVolume2.h	44;"	d
EFI_FV2_READ_STATUS	FirmwareVolume2.h	36;"	d
EFI_FV2_WRITE_DISABLE_CAP	FirmwareVolume2.h	37;"	d
EFI_FV2_WRITE_ENABLE_CAP	FirmwareVolume2.h	38;"	d
EFI_FV2_WRITE_LOCK_CAP	FirmwareVolume2.h	45;"	d
EFI_FV2_WRITE_LOCK_STATUS	FirmwareVolume2.h	46;"	d
EFI_FV2_WRITE_POLICY_RELIABLE	FirmwareVolume2.h	42;"	d
EFI_FV2_WRITE_STATUS	FirmwareVolume2.h	39;"	d
EFI_FVB_ERASE_BLOCKS	FirmwareVolumeBlock.h	/^(EFIAPI * EFI_FVB_ERASE_BLOCKS)($/;"	t
EFI_FVB_GET_ATTRIBUTES	FirmwareVolumeBlock.h	/^(EFIAPI * EFI_FVB_GET_ATTRIBUTES)($/;"	t
EFI_FVB_GET_BLOCK_SIZE	FirmwareVolumeBlock.h	/^(EFIAPI * EFI_FVB_GET_BLOCK_SIZE)($/;"	t
EFI_FVB_GET_PHYSICAL_ADDRESS	FirmwareVolumeBlock.h	/^(EFIAPI * EFI_FVB_GET_PHYSICAL_ADDRESS)($/;"	t
EFI_FVB_READ	FirmwareVolumeBlock.h	/^(EFIAPI *EFI_FVB_READ)($/;"	t
EFI_FVB_SET_ATTRIBUTES	FirmwareVolumeBlock.h	/^(EFIAPI * EFI_FVB_SET_ATTRIBUTES)($/;"	t
EFI_FVB_WRITE	FirmwareVolumeBlock.h	/^(EFIAPI * EFI_FVB_WRITE)($/;"	t
EFI_FV_ATTRIBUTES	FirmwareVolume2.h	/^typedef UINT64  EFI_FV_ATTRIBUTES;$/;"	t
EFI_FV_GET_ATTRIBUTES	FirmwareVolume2.h	/^(EFIAPI * EFI_FV_GET_ATTRIBUTES)($/;"	t
EFI_FV_GET_INFO	FirmwareVolume2.h	/^(EFIAPI *EFI_FV_GET_INFO)($/;"	t
EFI_FV_GET_NEXT_FILE	FirmwareVolume2.h	/^(EFIAPI * EFI_FV_GET_NEXT_FILE)($/;"	t
EFI_FV_READ_FILE	FirmwareVolume2.h	/^(EFIAPI * EFI_FV_READ_FILE)($/;"	t
EFI_FV_READ_SECTION	FirmwareVolume2.h	/^(EFIAPI * EFI_FV_READ_SECTION)($/;"	t
EFI_FV_RELIABLE_WRITE	FirmwareVolume2.h	420;"	d
EFI_FV_SET_ATTRIBUTES	FirmwareVolume2.h	/^(EFIAPI * EFI_FV_SET_ATTRIBUTES)($/;"	t
EFI_FV_SET_INFO	FirmwareVolume2.h	/^(EFIAPI *EFI_FV_SET_INFO)($/;"	t
EFI_FV_UNRELIABLE_WRITE	FirmwareVolume2.h	419;"	d
EFI_FV_WRITE_FILE	FirmwareVolume2.h	/^(EFIAPI * EFI_FV_WRITE_FILE)($/;"	t
EFI_FV_WRITE_FILE_DATA	FirmwareVolume2.h	/^} EFI_FV_WRITE_FILE_DATA;$/;"	t	typeref:struct:__anon539
EFI_FV_WRITE_POLICY	FirmwareVolume2.h	/^typedef UINT32 EFI_FV_WRITE_POLICY;$/;"	t
EFI_FX_SAVE_STATE_IA32	DebugSupport.h	/^} EFI_FX_SAVE_STATE_IA32;$/;"	t	typeref:struct:__anon486
EFI_FX_SAVE_STATE_X64	DebugSupport.h	/^} EFI_FX_SAVE_STATE_X64;$/;"	t	typeref:struct:__anon488
EFI_GET_HOT_PLUG_PADDING	PciHotPlugInit.h	/^(EFIAPI *EFI_GET_HOT_PLUG_PADDING)($/;"	t
EFI_GET_MAXIMUM_PROCESSOR_INDEX	DebugSupport.h	/^(EFIAPI *EFI_GET_MAXIMUM_PROCESSOR_INDEX)($/;"	t
EFI_GET_PCD_INFO_PROTOCOL	PiPcdInfo.h	/^typedef struct _EFI_GET_PCD_INFO_PROTOCOL  EFI_GET_PCD_INFO_PROTOCOL;$/;"	t	typeref:struct:_EFI_GET_PCD_INFO_PROTOCOL
EFI_GET_PCD_INFO_PROTOCOL_GET_INFO	PiPcdInfo.h	/^(EFIAPI *EFI_GET_PCD_INFO_PROTOCOL_GET_INFO) ($/;"	t
EFI_GET_PCD_INFO_PROTOCOL_GET_SKU	PiPcdInfo.h	/^(EFIAPI *EFI_GET_PCD_INFO_PROTOCOL_GET_SKU) ($/;"	t
EFI_GET_PCD_INFO_PROTOCOL_GUID	PiPcdInfo.h	18;"	d
EFI_GET_ROOT_HPC_LIST	PciHotPlugInit.h	/^(EFIAPI *EFI_GET_ROOT_HPC_LIST)($/;"	t
EFI_GRAPHICS_OUTPUT_BLT_OPERATION	GraphicsOutput.h	/^} EFI_GRAPHICS_OUTPUT_BLT_OPERATION;$/;"	t	typeref:enum:__anon240
EFI_GRAPHICS_OUTPUT_BLT_PIXEL	GraphicsOutput.h	/^} EFI_GRAPHICS_OUTPUT_BLT_PIXEL;$/;"	t	typeref:struct:__anon238
EFI_GRAPHICS_OUTPUT_BLT_PIXEL_UNION	GraphicsOutput.h	/^} EFI_GRAPHICS_OUTPUT_BLT_PIXEL_UNION;$/;"	t	typeref:union:__anon239
EFI_GRAPHICS_OUTPUT_MODE_INFORMATION	GraphicsOutput.h	/^} EFI_GRAPHICS_OUTPUT_MODE_INFORMATION;$/;"	t	typeref:struct:__anon237
EFI_GRAPHICS_OUTPUT_PROTOCOL	GraphicsOutput.h	/^typedef struct _EFI_GRAPHICS_OUTPUT_PROTOCOL EFI_GRAPHICS_OUTPUT_PROTOCOL;$/;"	t	typeref:struct:_EFI_GRAPHICS_OUTPUT_PROTOCOL
EFI_GRAPHICS_OUTPUT_PROTOCOL_BLT	GraphicsOutput.h	/^(EFIAPI *EFI_GRAPHICS_OUTPUT_PROTOCOL_BLT)($/;"	t
EFI_GRAPHICS_OUTPUT_PROTOCOL_GUID	GraphicsOutput.h	14;"	d
EFI_GRAPHICS_OUTPUT_PROTOCOL_MODE	GraphicsOutput.h	/^} EFI_GRAPHICS_OUTPUT_PROTOCOL_MODE;$/;"	t	typeref:struct:__anon241
EFI_GRAPHICS_OUTPUT_PROTOCOL_QUERY_MODE	GraphicsOutput.h	/^(EFIAPI *EFI_GRAPHICS_OUTPUT_PROTOCOL_QUERY_MODE)($/;"	t
EFI_GRAPHICS_OUTPUT_PROTOCOL_SET_MODE	GraphicsOutput.h	/^(EFIAPI *EFI_GRAPHICS_OUTPUT_PROTOCOL_SET_MODE)($/;"	t
EFI_GRAPHICS_PIXEL_FORMAT	GraphicsOutput.h	/^} EFI_GRAPHICS_PIXEL_FORMAT;$/;"	t	typeref:enum:__anon236
EFI_GREEN	SimpleTextOut.h	105;"	d
EFI_GUIDED_SECTION_EXTRACTION_PROTOCOL	GuidedSectionExtraction.h	/^typedef struct _EFI_GUIDED_SECTION_EXTRACTION_PROTOCOL EFI_GUIDED_SECTION_EXTRACTION_PROTOCOL;$/;"	t	typeref:struct:_EFI_GUIDED_SECTION_EXTRACTION_PROTOCOL
EFI_HASH2_GET_HASH_SIZE	Hash2.h	/^(EFIAPI *EFI_HASH2_GET_HASH_SIZE)($/;"	t
EFI_HASH2_HASH	Hash2.h	/^(EFIAPI *EFI_HASH2_HASH)($/;"	t
EFI_HASH2_HASH_FINAL	Hash2.h	/^(EFIAPI *EFI_HASH2_HASH_FINAL)($/;"	t
EFI_HASH2_HASH_INIT	Hash2.h	/^(EFIAPI *EFI_HASH2_HASH_INIT)($/;"	t
EFI_HASH2_HASH_UPDATE	Hash2.h	/^(EFIAPI *EFI_HASH2_HASH_UPDATE)($/;"	t
EFI_HASH2_OUTPUT	Hash2.h	/^} EFI_HASH2_OUTPUT;$/;"	t	typeref:union:__anon97
EFI_HASH2_PROTOCOL	Hash2.h	/^typedef struct _EFI_HASH2_PROTOCOL EFI_HASH2_PROTOCOL;$/;"	t	typeref:struct:_EFI_HASH2_PROTOCOL
EFI_HASH2_PROTOCOL_GUID	Hash2.h	23;"	d
EFI_HASH2_SERVICE_BINDING_PROTOCOL_GUID	Hash2.h	18;"	d
EFI_HASH_ALGORITHM_SHA1_GUID	Hash.h	26;"	d
EFI_HASH_ALGORITHM_SHA1_NOPAD_GUID	Hash.h	56;"	d
EFI_HASH_ALGORITHM_SHA224_GUID	Hash.h	31;"	d
EFI_HASH_ALGORITHM_SHA256_GUID	Hash.h	36;"	d
EFI_HASH_ALGORITHM_SHA256_NOPAD_GUID	Hash.h	61;"	d
EFI_HASH_ALGORITHM_SHA384_GUID	Hash.h	41;"	d
EFI_HASH_ALGORITHM_SHA512_GUID	Hash.h	46;"	d
EFI_HASH_ALGORTIHM_MD5_GUID	Hash.h	51;"	d
EFI_HASH_GET_HASH_SIZE	Hash.h	/^(EFIAPI *EFI_HASH_GET_HASH_SIZE)($/;"	t
EFI_HASH_HASH	Hash.h	/^(EFIAPI *EFI_HASH_HASH)($/;"	t
EFI_HASH_OUTPUT	Hash.h	/^} EFI_HASH_OUTPUT;$/;"	t	typeref:union:__anon481
EFI_HASH_PROTOCOL	Hash.h	/^typedef struct _EFI_HASH_PROTOCOL EFI_HASH_PROTOCOL;$/;"	t	typeref:struct:_EFI_HASH_PROTOCOL
EFI_HASH_PROTOCOL_GUID	Hash.h	21;"	d
EFI_HASH_SERVICE_BINDING_PROTOCOL_GUID	Hash.h	16;"	d
EFI_HII_ACCESS_EXTRACT_CONFIG	HiiConfigAccess.h	/^(EFIAPI * EFI_HII_ACCESS_EXTRACT_CONFIG)($/;"	t
EFI_HII_ACCESS_FORM_CALLBACK	HiiConfigAccess.h	/^(EFIAPI *EFI_HII_ACCESS_FORM_CALLBACK)($/;"	t
EFI_HII_ACCESS_ROUTE_CONFIG	HiiConfigAccess.h	/^(EFIAPI * EFI_HII_ACCESS_ROUTE_CONFIG)($/;"	t
EFI_HII_BLOCK_TO_CONFIG	HiiConfigRouting.h	/^(EFIAPI * EFI_HII_BLOCK_TO_CONFIG)($/;"	t
EFI_HII_CONFIG_ACCESS_PROTOCOL	HiiConfigAccess.h	/^typedef struct _EFI_HII_CONFIG_ACCESS_PROTOCOL  EFI_HII_CONFIG_ACCESS_PROTOCOL;$/;"	t	typeref:struct:_EFI_HII_CONFIG_ACCESS_PROTOCOL
EFI_HII_CONFIG_ACCESS_PROTOCOL_GUID	HiiConfigAccess.h	22;"	d
EFI_HII_CONFIG_ROUTING_PROTOCOL	HiiConfigRouting.h	/^typedef struct _EFI_HII_CONFIG_ROUTING_PROTOCOL EFI_HII_CONFIG_ROUTING_PROTOCOL;$/;"	t	typeref:struct:_EFI_HII_CONFIG_ROUTING_PROTOCOL
EFI_HII_CONFIG_ROUTING_PROTOCOL_GUID	HiiConfigRouting.h	20;"	d
EFI_HII_CONFIG_TO_BLOCK	HiiConfigRouting.h	/^(EFIAPI * EFI_HII_CONFIG_TO_BLOCK)($/;"	t
EFI_HII_CREATE_POPUP	HiiPopup.h	/^(EFIAPI * EFI_HII_CREATE_POPUP) ($/;"	t
EFI_HII_DATABASE_EXPORT_PACKS	HiiDatabase.h	/^(EFIAPI *EFI_HII_DATABASE_EXPORT_PACKS)($/;"	t
EFI_HII_DATABASE_GET_PACK_HANDLE	HiiDatabase.h	/^(EFIAPI *EFI_HII_DATABASE_GET_PACK_HANDLE)($/;"	t
EFI_HII_DATABASE_LIST_PACKS	HiiDatabase.h	/^(EFIAPI *EFI_HII_DATABASE_LIST_PACKS)($/;"	t
EFI_HII_DATABASE_NEW_PACK	HiiDatabase.h	/^(EFIAPI *EFI_HII_DATABASE_NEW_PACK)($/;"	t
EFI_HII_DATABASE_NOTIFY	HiiDatabase.h	/^(EFIAPI *EFI_HII_DATABASE_NOTIFY)($/;"	t
EFI_HII_DATABASE_NOTIFY_ADD_PACK	HiiDatabase.h	31;"	d
EFI_HII_DATABASE_NOTIFY_EXPORT_PACK	HiiDatabase.h	30;"	d
EFI_HII_DATABASE_NOTIFY_NEW_PACK	HiiDatabase.h	28;"	d
EFI_HII_DATABASE_NOTIFY_REMOVE_PACK	HiiDatabase.h	29;"	d
EFI_HII_DATABASE_NOTIFY_TYPE	HiiDatabase.h	/^typedef UINTN   EFI_HII_DATABASE_NOTIFY_TYPE;$/;"	t
EFI_HII_DATABASE_PROTOCOL	HiiDatabase.h	/^typedef struct _EFI_HII_DATABASE_PROTOCOL EFI_HII_DATABASE_PROTOCOL;$/;"	t	typeref:struct:_EFI_HII_DATABASE_PROTOCOL
EFI_HII_DATABASE_PROTOCOL_GUID	HiiDatabase.h	16;"	d
EFI_HII_DATABASE_REGISTER_NOTIFY	HiiDatabase.h	/^(EFIAPI *EFI_HII_DATABASE_REGISTER_NOTIFY)($/;"	t
EFI_HII_DATABASE_REMOVE_PACK	HiiDatabase.h	/^(EFIAPI *EFI_HII_DATABASE_REMOVE_PACK)($/;"	t
EFI_HII_DATABASE_UNREGISTER_NOTIFY	HiiDatabase.h	/^(EFIAPI *EFI_HII_DATABASE_UNREGISTER_NOTIFY)($/;"	t
EFI_HII_DATABASE_UPDATE_PACK	HiiDatabase.h	/^(EFIAPI *EFI_HII_DATABASE_UPDATE_PACK)($/;"	t
EFI_HII_DIRECT_TO_SCREEN	HiiFont.h	37;"	d
EFI_HII_DIRECT_TO_SCREEN	HiiImage.h	173;"	d
EFI_HII_DRAW_FLAGS	HiiImage.h	/^typedef UINT32  EFI_HII_DRAW_FLAGS;$/;"	t
EFI_HII_DRAW_FLAG_CLIP	HiiImage.h	168;"	d
EFI_HII_DRAW_FLAG_DEFAULT	HiiImage.h	170;"	d
EFI_HII_DRAW_FLAG_FORCE_OPAQUE	HiiImage.h	172;"	d
EFI_HII_DRAW_FLAG_FORCE_TRANS	HiiImage.h	171;"	d
EFI_HII_DRAW_FLAG_TRANSPARENT	HiiImage.h	169;"	d
EFI_HII_DRAW_IMAGE	HiiImage.h	/^(EFIAPI *EFI_HII_DRAW_IMAGE)($/;"	t
EFI_HII_DRAW_IMAGE_EX	HiiImageEx.h	/^(EFIAPI *EFI_HII_DRAW_IMAGE_EX)($/;"	t
EFI_HII_DRAW_IMAGE_ID	HiiImage.h	/^(EFIAPI *EFI_HII_DRAW_IMAGE_ID)($/;"	t
EFI_HII_DRAW_IMAGE_ID_EX	HiiImageEx.h	/^(EFIAPI *EFI_HII_DRAW_IMAGE_ID_EX)($/;"	t
EFI_HII_EXPORT_CONFIG	HiiConfigRouting.h	/^(EFIAPI * EFI_HII_EXPORT_CONFIG)($/;"	t
EFI_HII_EXTRACT_CONFIG	HiiConfigRouting.h	/^(EFIAPI * EFI_HII_EXTRACT_CONFIG)($/;"	t
EFI_HII_FIND_KEYBOARD_LAYOUTS	HiiDatabase.h	/^(EFIAPI *EFI_HII_FIND_KEYBOARD_LAYOUTS)($/;"	t
EFI_HII_FONT_PROTOCOL	HiiFont.h	/^typedef struct _EFI_HII_FONT_PROTOCOL EFI_HII_FONT_PROTOCOL;$/;"	t	typeref:struct:_EFI_HII_FONT_PROTOCOL
EFI_HII_FONT_PROTOCOL_GUID	HiiFont.h	18;"	d
EFI_HII_GET_2ND_LANGUAGES	HiiString.h	/^(EFIAPI *EFI_HII_GET_2ND_LANGUAGES)($/;"	t
EFI_HII_GET_ALT_CFG	HiiConfigRouting.h	/^(EFIAPI * EFI_HII_GET_ALT_CFG)($/;"	t
EFI_HII_GET_FONT_INFO	HiiFont.h	/^(EFIAPI *EFI_HII_GET_FONT_INFO)($/;"	t
EFI_HII_GET_GLYPH	HiiFont.h	/^(EFIAPI *EFI_HII_GET_GLYPH)($/;"	t
EFI_HII_GET_IMAGE	HiiImage.h	/^(EFIAPI *EFI_HII_GET_IMAGE)($/;"	t
EFI_HII_GET_IMAGE_EX	HiiImageEx.h	/^(EFIAPI *EFI_HII_GET_IMAGE_EX)($/;"	t
EFI_HII_GET_IMAGE_INFO	HiiImageEx.h	/^(EFIAPI *EFI_HII_GET_IMAGE_INFO)($/;"	t
EFI_HII_GET_KEYBOARD_LAYOUT	HiiDatabase.h	/^(EFIAPI *EFI_HII_GET_KEYBOARD_LAYOUT)($/;"	t
EFI_HII_GET_LANGUAGES	HiiString.h	/^(EFIAPI *EFI_HII_GET_LANGUAGES)($/;"	t
EFI_HII_GET_STRING	HiiString.h	/^(EFIAPI *EFI_HII_GET_STRING)($/;"	t
EFI_HII_IGNORE_IF_NO_GLYPH	HiiFont.h	35;"	d
EFI_HII_IGNORE_LINE_BREAK	HiiFont.h	36;"	d
EFI_HII_IMAGE_DECODER_COLOR_TYPE	HiiImageDecoder.h	/^} EFI_HII_IMAGE_DECODER_COLOR_TYPE;$/;"	t	typeref:enum:__anon424
EFI_HII_IMAGE_DECODER_COLOR_TYPE_CMYK	HiiImageDecoder.h	/^  EFI_HII_IMAGE_DECODER_COLOR_TYPE_CMYK    = 0x2,$/;"	e	enum:__anon424
EFI_HII_IMAGE_DECODER_COLOR_TYPE_RGB	HiiImageDecoder.h	/^  EFI_HII_IMAGE_DECODER_COLOR_TYPE_RGB     = 0x0,$/;"	e	enum:__anon424
EFI_HII_IMAGE_DECODER_COLOR_TYPE_RGBA	HiiImageDecoder.h	/^  EFI_HII_IMAGE_DECODER_COLOR_TYPE_RGBA    = 0x1,$/;"	e	enum:__anon424
EFI_HII_IMAGE_DECODER_COLOR_TYPE_UNKNOWN	HiiImageDecoder.h	/^  EFI_HII_IMAGE_DECODER_COLOR_TYPE_UNKNOWN = 0xFF$/;"	e	enum:__anon424
EFI_HII_IMAGE_DECODER_DECODE	HiiImageDecoder.h	/^(EFIAPI *EFI_HII_IMAGE_DECODER_DECODE)($/;"	t
EFI_HII_IMAGE_DECODER_GET_IMAGE_INFO	HiiImageDecoder.h	/^(EFIAPI *EFI_HII_IMAGE_DECODER_GET_IMAGE_INFO)($/;"	t
EFI_HII_IMAGE_DECODER_GET_NAME	HiiImageDecoder.h	/^(EFIAPI *EFI_HII_IMAGE_DECODER_GET_NAME)($/;"	t
EFI_HII_IMAGE_DECODER_IMAGE_INFO_HEADER	HiiImageDecoder.h	/^} EFI_HII_IMAGE_DECODER_IMAGE_INFO_HEADER;$/;"	t	typeref:struct:_EFI_HII_IMAGE_DECODER_IMAGE_INFO_HEADER
EFI_HII_IMAGE_DECODER_JPEG_INFO	HiiImageDecoder.h	/^} EFI_HII_IMAGE_DECODER_JPEG_INFO;$/;"	t	typeref:struct:_EFI_HII_IMAGE_DECODER_JPEG_INFO
EFI_HII_IMAGE_DECODER_NAME_JPEG_GUID	HiiImageDecoder.h	22;"	d
EFI_HII_IMAGE_DECODER_NAME_PNG_GUID	HiiImageDecoder.h	25;"	d
EFI_HII_IMAGE_DECODER_OTHER_INFO	HiiImageDecoder.h	/^} EFI_HII_IMAGE_DECODER_OTHER_INFO;$/;"	t	typeref:struct:_EFI_HII_IMAGE_DECODER_OTHER_INFO
EFI_HII_IMAGE_DECODER_PNG_INFO	HiiImageDecoder.h	/^} EFI_HII_IMAGE_DECODER_PNG_INFO;$/;"	t	typeref:struct:_EFI_HII_IMAGE_DECODER_PNG_INFO
EFI_HII_IMAGE_DECODER_PROTOCOL	HiiImageDecoder.h	/^typedef struct _EFI_HII_IMAGE_DECODER_PROTOCOL EFI_HII_IMAGE_DECODER_PROTOCOL;$/;"	t	typeref:struct:_EFI_HII_IMAGE_DECODER_PROTOCOL
EFI_HII_IMAGE_DECODER_PROTOCOL_GUID	HiiImageDecoder.h	18;"	d
EFI_HII_IMAGE_EX_PROTOCOL	HiiImageEx.h	/^typedef struct _EFI_HII_IMAGE_EX_PROTOCOL EFI_HII_IMAGE_EX_PROTOCOL;$/;"	t	typeref:struct:_EFI_HII_IMAGE_EX_PROTOCOL
EFI_HII_IMAGE_EX_PROTOCOL_GUID	HiiImageEx.h	21;"	d
EFI_HII_IMAGE_PROTOCOL	HiiImage.h	/^typedef struct _EFI_HII_IMAGE_PROTOCOL EFI_HII_IMAGE_PROTOCOL;$/;"	t	typeref:struct:_EFI_HII_IMAGE_PROTOCOL
EFI_HII_IMAGE_PROTOCOL_GUID	HiiImage.h	17;"	d
EFI_HII_NEW_IMAGE	HiiImage.h	/^(EFIAPI *EFI_HII_NEW_IMAGE)($/;"	t
EFI_HII_NEW_IMAGE_EX	HiiImageEx.h	/^(EFIAPI *EFI_HII_NEW_IMAGE_EX)($/;"	t
EFI_HII_NEW_STRING	HiiString.h	/^(EFIAPI *EFI_HII_NEW_STRING)($/;"	t
EFI_HII_OUT_FLAGS	HiiFont.h	/^typedef UINT32  EFI_HII_OUT_FLAGS;$/;"	t
EFI_HII_OUT_FLAG_CLIP	HiiFont.h	30;"	d
EFI_HII_OUT_FLAG_CLIP_CLEAN_X	HiiFont.h	33;"	d
EFI_HII_OUT_FLAG_CLIP_CLEAN_Y	HiiFont.h	32;"	d
EFI_HII_OUT_FLAG_TRANSPARENT	HiiFont.h	34;"	d
EFI_HII_OUT_FLAG_WRAP	HiiFont.h	31;"	d
EFI_HII_PACKAGE_LIST_PROTOCOL	HiiPackageList.h	/^typedef EFI_HII_PACKAGE_LIST_HEADER *    EFI_HII_PACKAGE_LIST_PROTOCOL;$/;"	t
EFI_HII_PACKAGE_LIST_PROTOCOL_GUID	HiiPackageList.h	16;"	d
EFI_HII_POPUP_PROTOCOL	HiiPopup.h	/^typedef struct _EFI_HII_POPUP_PROTOCOL EFI_HII_POPUP_PROTOCOL;$/;"	t	typeref:struct:_EFI_HII_POPUP_PROTOCOL
EFI_HII_POPUP_PROTOCOL	HiiPopup.h	/^} EFI_HII_POPUP_PROTOCOL;$/;"	t	typeref:struct:_EFI_HII_POPUP_PROTOCOL
EFI_HII_POPUP_PROTOCOL_GUID	HiiPopup.h	16;"	d
EFI_HII_POPUP_PROTOCOL_REVISION	HiiPopup.h	19;"	d
EFI_HII_POPUP_SELECTION	HiiPopup.h	/^} EFI_HII_POPUP_SELECTION;$/;"	t	typeref:enum:__anon417
EFI_HII_POPUP_STYLE	HiiPopup.h	/^} EFI_HII_POPUP_STYLE;$/;"	t	typeref:enum:__anon415
EFI_HII_POPUP_TYPE	HiiPopup.h	/^} EFI_HII_POPUP_TYPE;$/;"	t	typeref:enum:__anon416
EFI_HII_ROUTE_CONFIG	HiiConfigRouting.h	/^(EFIAPI * EFI_HII_ROUTE_CONFIG)($/;"	t
EFI_HII_ROW_INFO	HiiFont.h	/^} EFI_HII_ROW_INFO;$/;"	t	typeref:struct:_EFI_HII_ROW_INFO
EFI_HII_SET_IMAGE	HiiImage.h	/^(EFIAPI *EFI_HII_SET_IMAGE)($/;"	t
EFI_HII_SET_IMAGE_EX	HiiImageEx.h	/^(EFIAPI *EFI_HII_SET_IMAGE_EX)($/;"	t
EFI_HII_SET_KEYBOARD_LAYOUT	HiiDatabase.h	/^(EFIAPI *EFI_HII_SET_KEYBOARD_LAYOUT)($/;"	t
EFI_HII_SET_STRING	HiiString.h	/^(EFIAPI *EFI_HII_SET_STRING)($/;"	t
EFI_HII_STRING_ID_TO_IMAGE	HiiFont.h	/^(EFIAPI *EFI_HII_STRING_ID_TO_IMAGE)($/;"	t
EFI_HII_STRING_PROTOCOL	HiiString.h	/^typedef struct _EFI_HII_STRING_PROTOCOL EFI_HII_STRING_PROTOCOL;$/;"	t	typeref:struct:_EFI_HII_STRING_PROTOCOL
EFI_HII_STRING_PROTOCOL_GUID	HiiString.h	17;"	d
EFI_HII_STRING_TO_IMAGE	HiiFont.h	/^(EFIAPI *EFI_HII_STRING_TO_IMAGE)($/;"	t
EFI_HPC_LOCATION	PciHotPlugInit.h	/^} EFI_HPC_LOCATION;$/;"	t	typeref:struct:__anon355
EFI_HPC_PADDING_ATTRIBUTES	PciHotPlugInit.h	/^} EFI_HPC_PADDING_ATTRIBUTES;$/;"	t	typeref:enum:__anon356
EFI_HPC_STATE	PciHotPlugInit.h	/^typedef UINT16 EFI_HPC_STATE;$/;"	t
EFI_HPC_STATE_ENABLED	PciHotPlugInit.h	85;"	d
EFI_HPC_STATE_INITIALIZED	PciHotPlugInit.h	79;"	d
EFI_HTTP_BOOT_CALLBACK	HttpBootCallback.h	/^(EFIAPI * EFI_HTTP_BOOT_CALLBACK) ($/;"	t
EFI_HTTP_BOOT_CALLBACK_DATA_TYPE	HttpBootCallback.h	/^} EFI_HTTP_BOOT_CALLBACK_DATA_TYPE;$/;"	t	typeref:enum:__anon292
EFI_HTTP_BOOT_CALLBACK_PROTOCOL	HttpBootCallback.h	/^typedef struct _EFI_HTTP_BOOT_CALLBACK_PROTOCOL  EFI_HTTP_BOOT_CALLBACK_PROTOCOL;$/;"	t	typeref:struct:_EFI_HTTP_BOOT_CALLBACK_PROTOCOL
EFI_HTTP_BOOT_CALLBACK_PROTOCOL_GUID	HttpBootCallback.h	15;"	d
EFI_HTTP_CANCEL	Http.h	/^(EFIAPI *EFI_HTTP_CANCEL)($/;"	t
EFI_HTTP_CONFIGURE	Http.h	/^(EFIAPI *EFI_HTTP_CONFIGURE)($/;"	t
EFI_HTTP_CONFIG_DATA	Http.h	/^} EFI_HTTP_CONFIG_DATA;$/;"	t	typeref:struct:__anon524
EFI_HTTP_GET_MODE_DATA	Http.h	/^(EFIAPI *EFI_HTTP_GET_MODE_DATA)($/;"	t
EFI_HTTP_HEADER	Http.h	/^} EFI_HTTP_HEADER;$/;"	t	typeref:struct:__anon528
EFI_HTTP_MESSAGE	Http.h	/^} EFI_HTTP_MESSAGE;$/;"	t	typeref:struct:__anon529
EFI_HTTP_METHOD	Http.h	/^} EFI_HTTP_METHOD;$/;"	t	typeref:enum:__anon520
EFI_HTTP_POLL	Http.h	/^(EFIAPI *EFI_HTTP_POLL) ($/;"	t
EFI_HTTP_PROTOCOL	Http.h	/^typedef struct _EFI_HTTP_PROTOCOL EFI_HTTP_PROTOCOL;$/;"	t	typeref:struct:_EFI_HTTP_PROTOCOL
EFI_HTTP_PROTOCOL_GUID	Http.h	24;"	d
EFI_HTTP_REQUEST	Http.h	/^(EFIAPI *EFI_HTTP_REQUEST) ($/;"	t
EFI_HTTP_REQUEST_DATA	Http.h	/^} EFI_HTTP_REQUEST_DATA;$/;"	t	typeref:struct:__anon526
EFI_HTTP_RESPONSE	Http.h	/^(EFIAPI *EFI_HTTP_RESPONSE) ($/;"	t
EFI_HTTP_RESPONSE_DATA	Http.h	/^} EFI_HTTP_RESPONSE_DATA;$/;"	t	typeref:struct:__anon527
EFI_HTTP_SERVICE_BINDING_PROTOCOL_GUID	Http.h	19;"	d
EFI_HTTP_STATUS_CODE	Http.h	/^} EFI_HTTP_STATUS_CODE;$/;"	t	typeref:enum:__anon521
EFI_HTTP_TOKEN	Http.h	/^} EFI_HTTP_TOKEN;$/;"	t	typeref:struct:__anon531
EFI_HTTP_UTILITIES_PROTOCOL	HttpUtilities.h	/^typedef struct _EFI_HTTP_UTILITIES_PROTOCOL EFI_HTTP_UTILITIES_PROTOCOL;$/;"	t	typeref:struct:_EFI_HTTP_UTILITIES_PROTOCOL
EFI_HTTP_UTILITIES_PROTOCOL_GUID	HttpUtilities.h	18;"	d
EFI_HTTP_UTILS_BUILD	HttpUtilities.h	/^(EFIAPI *EFI_HTTP_UTILS_BUILD) ($/;"	t
EFI_HTTP_UTILS_PARSE	HttpUtilities.h	/^(EFIAPI *EFI_HTTP_UTILS_PARSE) ($/;"	t
EFI_HTTP_VERSION	Http.h	/^} EFI_HTTP_VERSION;$/;"	t	typeref:enum:__anon519
EFI_HTTPv4_ACCESS_POINT	Http.h	/^} EFI_HTTPv4_ACCESS_POINT;$/;"	t	typeref:struct:__anon522
EFI_HTTPv6_ACCESS_POINT	Http.h	/^} EFI_HTTPv6_ACCESS_POINT;$/;"	t	typeref:struct:__anon523
EFI_I2C_BUS_CONFIGURATION_MANAGEMENT_PROTOCOL	I2cBusConfigurationManagement.h	/^typedef struct _EFI_I2C_BUS_CONFIGURATION_MANAGEMENT_PROTOCOL EFI_I2C_BUS_CONFIGURATION_MANAGEMENT_PROTOCOL;$/;"	t	typeref:struct:_EFI_I2C_BUS_CONFIGURATION_MANAGEMENT_PROTOCOL
EFI_I2C_BUS_CONFIGURATION_MANAGEMENT_PROTOCOL_ENABLE_I2C_BUS_CONFIGURATION	I2cBusConfigurationManagement.h	/^(EFIAPI *EFI_I2C_BUS_CONFIGURATION_MANAGEMENT_PROTOCOL_ENABLE_I2C_BUS_CONFIGURATION) ($/;"	t
EFI_I2C_BUS_CONFIGURATION_MANAGEMENT_PROTOCOL_GUID	I2cBusConfigurationManagement.h	20;"	d
EFI_I2C_ENUMERATE_PROTOCOL	I2cEnumerate.h	/^typedef struct _EFI_I2C_ENUMERATE_PROTOCOL  EFI_I2C_ENUMERATE_PROTOCOL;$/;"	t	typeref:struct:_EFI_I2C_ENUMERATE_PROTOCOL
EFI_I2C_ENUMERATE_PROTOCOL_ENUMERATE	I2cEnumerate.h	/^(EFIAPI *EFI_I2C_ENUMERATE_PROTOCOL_ENUMERATE) ($/;"	t
EFI_I2C_ENUMERATE_PROTOCOL_GET_BUS_FREQUENCY	I2cEnumerate.h	/^(EFIAPI *EFI_I2C_ENUMERATE_PROTOCOL_GET_BUS_FREQUENCY) ($/;"	t
EFI_I2C_ENUMERATE_PROTOCOL_GUID	I2cEnumerate.h	19;"	d
EFI_I2C_HOST_PROTOCOL	I2cHost.h	/^typedef struct _EFI_I2C_HOST_PROTOCOL EFI_I2C_HOST_PROTOCOL;$/;"	t	typeref:struct:_EFI_I2C_HOST_PROTOCOL
EFI_I2C_HOST_PROTOCOL_GUID	I2cHost.h	20;"	d
EFI_I2C_HOST_PROTOCOL_QUEUE_REQUEST	I2cHost.h	/^(EFIAPI *EFI_I2C_HOST_PROTOCOL_QUEUE_REQUEST) ($/;"	t
EFI_I2C_IO_PROTOCOL	I2cIo.h	/^typedef struct _EFI_I2C_IO_PROTOCOL  EFI_I2C_IO_PROTOCOL;$/;"	t	typeref:struct:_EFI_I2C_IO_PROTOCOL
EFI_I2C_IO_PROTOCOL_GUID	I2cIo.h	20;"	d
EFI_I2C_IO_PROTOCOL_QUEUE_REQUEST	I2cIo.h	/^(EFIAPI *EFI_I2C_IO_PROTOCOL_QUEUE_REQUEST) ($/;"	t
EFI_I2C_MASTER_PROTOCOL	I2cMaster.h	/^typedef struct _EFI_I2C_MASTER_PROTOCOL EFI_I2C_MASTER_PROTOCOL;$/;"	t	typeref:struct:_EFI_I2C_MASTER_PROTOCOL
EFI_I2C_MASTER_PROTOCOL_GUID	I2cMaster.h	20;"	d
EFI_I2C_MASTER_PROTOCOL_RESET	I2cMaster.h	/^(EFIAPI *EFI_I2C_MASTER_PROTOCOL_RESET) ($/;"	t
EFI_I2C_MASTER_PROTOCOL_SET_BUS_FREQUENCY	I2cMaster.h	/^(EFIAPI *EFI_I2C_MASTER_PROTOCOL_SET_BUS_FREQUENCY) ($/;"	t
EFI_I2C_MASTER_PROTOCOL_START_REQUEST	I2cMaster.h	/^(EFIAPI *EFI_I2C_MASTER_PROTOCOL_START_REQUEST) ($/;"	t
EFI_IDENTIFY_DATA	IdeControllerInit.h	/^} EFI_IDENTIFY_DATA;$/;"	t	typeref:union:__anon134
EFI_IDE_CONTROLLER_CALCULATE_MODE	IdeControllerInit.h	/^(EFIAPI *EFI_IDE_CONTROLLER_CALCULATE_MODE)($/;"	t
EFI_IDE_CONTROLLER_DISQUALIFY_MODE	IdeControllerInit.h	/^(EFIAPI *EFI_IDE_CONTROLLER_DISQUALIFY_MODE)($/;"	t
EFI_IDE_CONTROLLER_ENUM_PHASE	IdeControllerInit.h	/^} EFI_IDE_CONTROLLER_ENUM_PHASE;$/;"	t	typeref:enum:__anon129
EFI_IDE_CONTROLLER_GET_CHANNEL_INFO	IdeControllerInit.h	/^(EFIAPI *EFI_IDE_CONTROLLER_GET_CHANNEL_INFO)($/;"	t
EFI_IDE_CONTROLLER_INIT_PROTOCOL	IdeControllerInit.h	/^typedef struct _EFI_IDE_CONTROLLER_INIT_PROTOCOL  EFI_IDE_CONTROLLER_INIT_PROTOCOL;$/;"	t	typeref:struct:_EFI_IDE_CONTROLLER_INIT_PROTOCOL
EFI_IDE_CONTROLLER_INIT_PROTOCOL_GUID	IdeControllerInit.h	33;"	d
EFI_IDE_CONTROLLER_NOTIFY_PHASE	IdeControllerInit.h	/^(EFIAPI *EFI_IDE_CONTROLLER_NOTIFY_PHASE)($/;"	t
EFI_IDE_CONTROLLER_SET_TIMING	IdeControllerInit.h	/^(EFIAPI *EFI_IDE_CONTROLLER_SET_TIMING)($/;"	t
EFI_IDE_CONTROLLER_SUBMIT_DATA	IdeControllerInit.h	/^(EFIAPI *EFI_IDE_CONTROLLER_SUBMIT_DATA)($/;"	t
EFI_IMAGE_INPUT	HiiImage.h	/^} EFI_IMAGE_INPUT;$/;"	t	typeref:struct:_EFI_IMAGE_INPUT
EFI_IMAGE_JPEG_SCANTYPE_INTERLACED	HiiImageDecoder.h	57;"	d
EFI_IMAGE_JPEG_SCANTYPE_PROGREESSIVE	HiiImageDecoder.h	56;"	d
EFI_IMAGE_OUTPUT	HiiImage.h	/^} EFI_IMAGE_OUTPUT;$/;"	t	typeref:struct:_EFI_IMAGE_OUTPUT
EFI_IMAGE_TRANSPARENT	HiiImage.h	26;"	d
EFI_INCOMPATIBLE_PCI_DEVICE_SUPPORT_CHECK_DEVICE	IncompatiblePciDeviceSupport.h	/^(EFIAPI *EFI_INCOMPATIBLE_PCI_DEVICE_SUPPORT_CHECK_DEVICE)($/;"	t
EFI_INCOMPATIBLE_PCI_DEVICE_SUPPORT_PROTOCOL	IncompatiblePciDeviceSupport.h	/^typedef struct _EFI_INCOMPATIBLE_PCI_DEVICE_SUPPORT_PROTOCOL EFI_INCOMPATIBLE_PCI_DEVICE_SUPPORT_PROTOCOL;$/;"	t	typeref:struct:_EFI_INCOMPATIBLE_PCI_DEVICE_SUPPORT_PROTOCOL
EFI_INCOMPATIBLE_PCI_DEVICE_SUPPORT_PROTOCOL_GUID	IncompatiblePciDeviceSupport.h	76;"	d
EFI_INITIALIZE_ROOT_HPC	PciHotPlugInit.h	/^(EFIAPI *EFI_INITIALIZE_ROOT_HPC)($/;"	t
EFI_INPUT_KEY	SimpleTextIn.h	/^} EFI_INPUT_KEY;$/;"	t	typeref:struct:__anon358
EFI_INPUT_READ_KEY	SimpleTextIn.h	/^(EFIAPI *EFI_INPUT_READ_KEY)($/;"	t
EFI_INPUT_READ_KEY_EX	SimpleTextInEx.h	/^(EFIAPI *EFI_INPUT_READ_KEY_EX)($/;"	t
EFI_INPUT_RESET	SimpleTextIn.h	/^(EFIAPI *EFI_INPUT_RESET)($/;"	t
EFI_INPUT_RESET_EX	SimpleTextInEx.h	/^(EFIAPI *EFI_INPUT_RESET_EX)($/;"	t
EFI_INSTRUCTION_SET_ARCHITECTURE	DebugSupport.h	/^} EFI_INSTRUCTION_SET_ARCHITECTURE;$/;"	t	typeref:enum:__anon496
EFI_INVALIDATE_INSTRUCTION_CACHE	DebugSupport.h	/^(EFIAPI *EFI_INVALIDATE_INSTRUCTION_CACHE)($/;"	t
EFI_IO_ACCESS	DeviceIo.h	/^} EFI_IO_ACCESS;$/;"	t	typeref:struct:__anon504
EFI_IO_ALLOCATE_BUFFER	DeviceIo.h	/^(EFIAPI *EFI_IO_ALLOCATE_BUFFER)($/;"	t
EFI_IO_FLUSH	DeviceIo.h	/^(EFIAPI *EFI_IO_FLUSH)($/;"	t
EFI_IO_FREE_BUFFER	DeviceIo.h	/^(EFIAPI *EFI_IO_FREE_BUFFER)($/;"	t
EFI_IO_MAP	DeviceIo.h	/^(EFIAPI *EFI_IO_MAP)($/;"	t
EFI_IO_OPERATION_TYPE	DeviceIo.h	/^} EFI_IO_OPERATION_TYPE;$/;"	t	typeref:enum:__anon505
EFI_IO_UNMAP	DeviceIo.h	/^(EFIAPI *EFI_IO_UNMAP)($/;"	t
EFI_IO_WIDTH	DeviceIo.h	/^} EFI_IO_WIDTH;$/;"	t	typeref:enum:__anon503
EFI_IP4_ADDRESS_PAIR	Ip4.h	/^} EFI_IP4_ADDRESS_PAIR;$/;"	t	typeref:struct:__anon333
EFI_IP4_CANCEL	Ip4.h	/^(EFIAPI *EFI_IP4_CANCEL)($/;"	t
EFI_IP4_COMPLETION_TOKEN	Ip4.h	/^} EFI_IP4_COMPLETION_TOKEN;$/;"	t	typeref:struct:__anon344
EFI_IP4_CONFIG2_DATA_TYPE	Ip4Config2.h	/^} EFI_IP4_CONFIG2_DATA_TYPE;$/;"	t	typeref:enum:__anon4
EFI_IP4_CONFIG2_GET_DATA	Ip4Config2.h	/^(EFIAPI *EFI_IP4_CONFIG2_GET_DATA) ($/;"	t
EFI_IP4_CONFIG2_INTERFACE_INFO	Ip4Config2.h	/^} EFI_IP4_CONFIG2_INTERFACE_INFO;$/;"	t	typeref:struct:__anon5
EFI_IP4_CONFIG2_INTERFACE_INFO_NAME_SIZE	Ip4Config2.h	81;"	d
EFI_IP4_CONFIG2_MANUAL_ADDRESS	Ip4Config2.h	/^} EFI_IP4_CONFIG2_MANUAL_ADDRESS;$/;"	t	typeref:struct:__anon7
EFI_IP4_CONFIG2_POLICY	Ip4Config2.h	/^} EFI_IP4_CONFIG2_POLICY;$/;"	t	typeref:enum:__anon6
EFI_IP4_CONFIG2_PROTOCOL	Ip4Config2.h	/^typedef struct _EFI_IP4_CONFIG2_PROTOCOL EFI_IP4_CONFIG2_PROTOCOL;$/;"	t	typeref:struct:_EFI_IP4_CONFIG2_PROTOCOL
EFI_IP4_CONFIG2_PROTOCOL_GUID	Ip4Config2.h	17;"	d
EFI_IP4_CONFIG2_REGISTER_NOTIFY	Ip4Config2.h	/^(EFIAPI *EFI_IP4_CONFIG2_REGISTER_NOTIFY) ($/;"	t
EFI_IP4_CONFIG2_SET_DATA	Ip4Config2.h	/^(EFIAPI *EFI_IP4_CONFIG2_SET_DATA) ($/;"	t
EFI_IP4_CONFIG2_UNREGISTER_NOTIFY	Ip4Config2.h	/^(EFIAPI *EFI_IP4_CONFIG2_UNREGISTER_NOTIFY) ($/;"	t
EFI_IP4_CONFIGURE	Ip4.h	/^(EFIAPI *EFI_IP4_CONFIGURE)($/;"	t
EFI_IP4_CONFIG_DATA	Ip4.h	/^} EFI_IP4_CONFIG_DATA;$/;"	t	typeref:struct:__anon335
EFI_IP4_CONFIG_GET_DATA	Ip4Config.h	/^(EFIAPI *EFI_IP4_CONFIG_GET_DATA)($/;"	t
EFI_IP4_CONFIG_PROTOCOL	Ip4Config.h	/^typedef struct _EFI_IP4_CONFIG_PROTOCOL EFI_IP4_CONFIG_PROTOCOL;$/;"	t	typeref:struct:_EFI_IP4_CONFIG_PROTOCOL
EFI_IP4_CONFIG_PROTOCOL_GUID	Ip4Config.h	17;"	d
EFI_IP4_CONFIG_START	Ip4Config.h	/^(EFIAPI *EFI_IP4_CONFIG_START)($/;"	t
EFI_IP4_CONFIG_STOP	Ip4Config.h	/^(EFIAPI *EFI_IP4_CONFIG_STOP)($/;"	t
EFI_IP4_FRAGMENT_DATA	Ip4.h	/^} EFI_IP4_FRAGMENT_DATA;$/;"	t	typeref:struct:__anon340
EFI_IP4_GET_MODE_DATA	Ip4.h	/^(EFIAPI *EFI_IP4_GET_MODE_DATA)($/;"	t
EFI_IP4_GROUPS	Ip4.h	/^(EFIAPI *EFI_IP4_GROUPS)($/;"	t
EFI_IP4_HEADER	Ip4.h	/^} EFI_IP4_HEADER;$/;"	t	typeref:struct:__anon339
EFI_IP4_ICMP_TYPE	Ip4.h	/^} EFI_IP4_ICMP_TYPE;$/;"	t	typeref:struct:__anon337
EFI_IP4_IPCONFIG_DATA	Ip4Config.h	/^} EFI_IP4_IPCONFIG_DATA;$/;"	t	typeref:struct:__anon386
EFI_IP4_MODE_DATA	Ip4.h	/^} EFI_IP4_MODE_DATA;$/;"	t	typeref:struct:__anon338
EFI_IP4_OVERRIDE_DATA	Ip4.h	/^} EFI_IP4_OVERRIDE_DATA;$/;"	t	typeref:struct:__anon342
EFI_IP4_POLL	Ip4.h	/^(EFIAPI *EFI_IP4_POLL)($/;"	t
EFI_IP4_PROTOCOL	Ip4.h	/^typedef struct _EFI_IP4_PROTOCOL EFI_IP4_PROTOCOL;$/;"	t	typeref:struct:_EFI_IP4_PROTOCOL
EFI_IP4_PROTOCOL_GUID	Ip4.h	31;"	d
EFI_IP4_RECEIVE	Ip4.h	/^(EFIAPI *EFI_IP4_RECEIVE)($/;"	t
EFI_IP4_RECEIVE_DATA	Ip4.h	/^} EFI_IP4_RECEIVE_DATA;$/;"	t	typeref:struct:__anon341
EFI_IP4_ROUTES	Ip4.h	/^(EFIAPI *EFI_IP4_ROUTES)($/;"	t
EFI_IP4_ROUTE_TABLE	Ip4.h	/^} EFI_IP4_ROUTE_TABLE;$/;"	t	typeref:struct:__anon336
EFI_IP4_SERVICE_BINDING_PROTOCOL_GUID	Ip4.h	26;"	d
EFI_IP4_TRANSMIT	Ip4.h	/^(EFIAPI *EFI_IP4_TRANSMIT)($/;"	t
EFI_IP4_TRANSMIT_DATA	Ip4.h	/^} EFI_IP4_TRANSMIT_DATA;$/;"	t	typeref:struct:__anon343
EFI_IP4_VARIABLE_DATA	Ip4.h	/^} EFI_IP4_VARIABLE_DATA;$/;"	t	typeref:struct:__anon334
EFI_IP6_ADDRESS_INFO	Ip6.h	/^} EFI_IP6_ADDRESS_INFO;$/;"	t	typeref:struct:__anon400
EFI_IP6_ADDRESS_PAIR	Ip6.h	/^} EFI_IP6_ADDRESS_PAIR;$/;"	t	typeref:struct:__anon397
EFI_IP6_CANCEL	Ip6.h	/^(EFIAPI *EFI_IP6_CANCEL)($/;"	t
EFI_IP6_COMPLETION_TOKEN	Ip6.h	/^} EFI_IP6_COMPLETION_TOKEN;$/;"	t	typeref:struct:__anon406
EFI_IP6_CONFIGURE	Ip6.h	/^(EFIAPI *EFI_IP6_CONFIGURE)($/;"	t
EFI_IP6_CONFIG_DATA	Ip6.h	/^} EFI_IP6_CONFIG_DATA;$/;"	t	typeref:struct:__anon399
EFI_IP6_CONFIG_DATA_TYPE	Ip6Config.h	/^} EFI_IP6_CONFIG_DATA_TYPE;$/;"	t	typeref:enum:__anon13
EFI_IP6_CONFIG_DUP_ADDR_DETECT_TRANSMITS	Ip6Config.h	/^} EFI_IP6_CONFIG_DUP_ADDR_DETECT_TRANSMITS;$/;"	t	typeref:struct:__anon17
EFI_IP6_CONFIG_GET_DATA	Ip6Config.h	/^(EFIAPI *EFI_IP6_CONFIG_GET_DATA)($/;"	t
EFI_IP6_CONFIG_INTERFACE_ID	Ip6Config.h	/^} EFI_IP6_CONFIG_INTERFACE_ID;$/;"	t	typeref:struct:__anon15
EFI_IP6_CONFIG_INTERFACE_INFO	Ip6Config.h	/^} EFI_IP6_CONFIG_INTERFACE_INFO;$/;"	t	typeref:struct:__anon14
EFI_IP6_CONFIG_MANUAL_ADDRESS	Ip6Config.h	/^} EFI_IP6_CONFIG_MANUAL_ADDRESS;$/;"	t	typeref:struct:__anon18
EFI_IP6_CONFIG_POLICY	Ip6Config.h	/^} EFI_IP6_CONFIG_POLICY;$/;"	t	typeref:enum:__anon16
EFI_IP6_CONFIG_PROTOCOL	Ip6Config.h	/^typedef struct _EFI_IP6_CONFIG_PROTOCOL EFI_IP6_CONFIG_PROTOCOL;$/;"	t	typeref:struct:_EFI_IP6_CONFIG_PROTOCOL
EFI_IP6_CONFIG_PROTOCOL_GUID	Ip6Config.h	14;"	d
EFI_IP6_CONFIG_REGISTER_NOTIFY	Ip6Config.h	/^(EFIAPI *EFI_IP6_CONFIG_REGISTER_NOTIFY)($/;"	t
EFI_IP6_CONFIG_SET_DATA	Ip6Config.h	/^(EFIAPI *EFI_IP6_CONFIG_SET_DATA)($/;"	t
EFI_IP6_CONFIG_UNREGISTER_NOTIFY	Ip6Config.h	/^(EFIAPI *EFI_IP6_CONFIG_UNREGISTER_NOTIFY)($/;"	t
EFI_IP6_FRAGMENT_DATA	Ip6.h	/^} EFI_IP6_FRAGMENT_DATA;$/;"	t	typeref:struct:_EFI_IP6_FRAGMENT_DATA
EFI_IP6_GET_MODE_DATA	Ip6.h	/^(EFIAPI *EFI_IP6_GET_MODE_DATA)($/;"	t
EFI_IP6_GROUPS	Ip6.h	/^(EFIAPI *EFI_IP6_GROUPS)($/;"	t
EFI_IP6_HEADER	Ip6.h	/^} EFI_IP6_HEADER;$/;"	t	typeref:struct:_EFI_IP6_HEADER
EFI_IP6_ICMP_TYPE	Ip6.h	/^} EFI_IP6_ICMP_TYPE;$/;"	t	typeref:struct:__anon404
EFI_IP6_MODE_DATA	Ip6.h	/^} EFI_IP6_MODE_DATA;$/;"	t	typeref:struct:__anon405
EFI_IP6_NEIGHBORS	Ip6.h	/^(EFIAPI *EFI_IP6_NEIGHBORS)($/;"	t
EFI_IP6_NEIGHBOR_CACHE	Ip6.h	/^} EFI_IP6_NEIGHBOR_CACHE;$/;"	t	typeref:struct:__anon403
EFI_IP6_NEIGHBOR_STATE	Ip6.h	/^} EFI_IP6_NEIGHBOR_STATE;$/;"	t	typeref:enum:__anon402
EFI_IP6_OVERRIDE_DATA	Ip6.h	/^} EFI_IP6_OVERRIDE_DATA;$/;"	t	typeref:struct:_EFI_IP6_OVERRIDE_DATA
EFI_IP6_POLL	Ip6.h	/^(EFIAPI *EFI_IP6_POLL)($/;"	t
EFI_IP6_PROTOCOL	Ip6.h	/^typedef struct _EFI_IP6_PROTOCOL EFI_IP6_PROTOCOL;$/;"	t	typeref:struct:_EFI_IP6_PROTOCOL
EFI_IP6_PROTOCOL_GUID	Ip6.h	32;"	d
EFI_IP6_RECEIVE	Ip6.h	/^(EFIAPI *EFI_IP6_RECEIVE)($/;"	t
EFI_IP6_RECEIVE_DATA	Ip6.h	/^} EFI_IP6_RECEIVE_DATA;$/;"	t	typeref:struct:_EFI_IP6_RECEIVE_DATA
EFI_IP6_ROUTES	Ip6.h	/^(EFIAPI *EFI_IP6_ROUTES)($/;"	t
EFI_IP6_ROUTE_TABLE	Ip6.h	/^} EFI_IP6_ROUTE_TABLE;$/;"	t	typeref:struct:__anon401
EFI_IP6_SERVICE_BINDING_PROTOCOL_GUID	Ip6.h	27;"	d
EFI_IP6_TRANSMIT	Ip6.h	/^(EFIAPI *EFI_IP6_TRANSMIT)($/;"	t
EFI_IP6_TRANSMIT_DATA	Ip6.h	/^} EFI_IP6_TRANSMIT_DATA;$/;"	t	typeref:struct:_EFI_IP6_TRANSMIT_DATA
EFI_IP6_VARIABLE_DATA	Ip6.h	/^} EFI_IP6_VARIABLE_DATA;$/;"	t	typeref:struct:__anon398
EFI_IPSEC2_PROTOCOL	IpSec.h	/^typedef struct _EFI_IPSEC2_PROTOCOL EFI_IPSEC2_PROTOCOL;$/;"	t	typeref:struct:_EFI_IPSEC2_PROTOCOL
EFI_IPSEC2_PROTOCOL_GUID	IpSec.h	31;"	d
EFI_IPSEC_ACTION	IpSecConfig.h	/^} EFI_IPSEC_ACTION;$/;"	t	typeref:enum:__anon448
EFI_IPSEC_AH_ALGO_INFO	IpSecConfig.h	/^} EFI_IPSEC_AH_ALGO_INFO;$/;"	t	typeref:struct:_EFI_IPSEC_AH_ALGO_INFO
EFI_IPSEC_ALGO_INFO	IpSecConfig.h	/^} EFI_IPSEC_ALGO_INFO;$/;"	t	typeref:union:__anon452
EFI_IPSEC_AUTH_METHOD	IpSecConfig.h	/^} EFI_IPSEC_AUTH_METHOD;$/;"	t	typeref:enum:__anon456
EFI_IPSEC_AUTH_PROTOCOL_TYPE	IpSecConfig.h	/^} EFI_IPSEC_AUTH_PROTOCOL_TYPE;$/;"	t	typeref:enum:__anon455
EFI_IPSEC_CONFIG_DATA_TYPE	IpSecConfig.h	/^} EFI_IPSEC_CONFIG_DATA_TYPE;$/;"	t	typeref:enum:__anon446
EFI_IPSEC_CONFIG_GET_DATA	IpSecConfig.h	/^(EFIAPI *EFI_IPSEC_CONFIG_GET_DATA)($/;"	t
EFI_IPSEC_CONFIG_GET_NEXT_SELECTOR	IpSecConfig.h	/^(EFIAPI *EFI_IPSEC_CONFIG_GET_NEXT_SELECTOR)($/;"	t
EFI_IPSEC_CONFIG_PROTOCOL	IpSecConfig.h	/^typedef struct _EFI_IPSEC_CONFIG_PROTOCOL EFI_IPSEC_CONFIG_PROTOCOL;$/;"	t	typeref:struct:_EFI_IPSEC_CONFIG_PROTOCOL
EFI_IPSEC_CONFIG_PROTOCOL_GUID	IpSecConfig.h	18;"	d
EFI_IPSEC_CONFIG_REGISTER_NOTIFY	IpSecConfig.h	/^(EFIAPI *EFI_IPSEC_CONFIG_REGISTER_NOTIFY)($/;"	t
EFI_IPSEC_CONFIG_SELECTOR	IpSecConfig.h	/^} EFI_IPSEC_CONFIG_SELECTOR;$/;"	t	typeref:union:__anon454
EFI_IPSEC_CONFIG_SET_DATA	IpSecConfig.h	/^(EFIAPI *EFI_IPSEC_CONFIG_SET_DATA)($/;"	t
EFI_IPSEC_CONFIG_UNREGISTER_NOTIFY	IpSecConfig.h	/^(EFIAPI *EFI_IPSEC_CONFIG_UNREGISTER_NOTIFY)($/;"	t
EFI_IPSEC_ESP_ALGO_INFO	IpSecConfig.h	/^} EFI_IPSEC_ESP_ALGO_INFO;$/;"	t	typeref:struct:_EFI_IPSEC_ESP_ALGO_INFO
EFI_IPSEC_FRAGMENT_DATA	IpSec.h	/^} EFI_IPSEC_FRAGMENT_DATA;$/;"	t	typeref:struct:_EFI_IPSEC_FRAGMENT_DATA
EFI_IPSEC_MODE	IpSecConfig.h	/^} EFI_IPSEC_MODE;$/;"	t	typeref:enum:__anon449
EFI_IPSEC_PAD_DATA	IpSecConfig.h	/^} EFI_IPSEC_PAD_DATA;$/;"	t	typeref:struct:_EFI_IPSEC_PAD_DATA
EFI_IPSEC_PAD_ID	IpSecConfig.h	/^} EFI_IPSEC_PAD_ID;$/;"	t	typeref:struct:_EFI_IPSEC_PAD_ID
EFI_IPSEC_PROCESS	IpSec.h	/^(EFIAPI  *EFI_IPSEC_PROCESS)($/;"	t
EFI_IPSEC_PROCESSEXT	IpSec.h	/^(EFIAPI *EFI_IPSEC_PROCESSEXT) ($/;"	t
EFI_IPSEC_PROCESS_POLICY	IpSecConfig.h	/^} EFI_IPSEC_PROCESS_POLICY;$/;"	t	typeref:struct:_EFI_IPSEC_PROCESS_POLICY
EFI_IPSEC_PROTOCOL	IpSec.h	/^typedef struct _EFI_IPSEC_PROTOCOL  EFI_IPSEC_PROTOCOL;$/;"	t	typeref:struct:_EFI_IPSEC_PROTOCOL
EFI_IPSEC_PROTOCOL_GUID	IpSec.h	26;"	d
EFI_IPSEC_PROTOCOL_TYPE	IpSecConfig.h	/^} EFI_IPSEC_PROTOCOL_TYPE;$/;"	t	typeref:enum:__anon451
EFI_IPSEC_SA_DATA	IpSecConfig.h	/^} EFI_IPSEC_SA_DATA;$/;"	t	typeref:struct:_EFI_IPSEC_SA_DATA
EFI_IPSEC_SA_DATA2	IpSecConfig.h	/^} EFI_IPSEC_SA_DATA2;$/;"	t	typeref:struct:_EFI_IPSEC_SA_DATA2
EFI_IPSEC_SA_ID	IpSecConfig.h	/^} EFI_IPSEC_SA_ID;$/;"	t	typeref:struct:_EFI_IPSEC_SA_ID
EFI_IPSEC_SA_LIFETIME	IpSecConfig.h	/^} EFI_IPSEC_SA_LIFETIME;$/;"	t	typeref:struct:_EFI_IPSEC_SA_LIFETIME
EFI_IPSEC_SPD_DATA	IpSecConfig.h	/^} EFI_IPSEC_SPD_DATA;$/;"	t	typeref:struct:_EFI_IPSEC_SPD_DATA
EFI_IPSEC_SPD_SELECTOR	IpSecConfig.h	/^} EFI_IPSEC_SPD_SELECTOR;$/;"	t	typeref:struct:_EFI_IPSEC_SPD_SELECTOR
EFI_IPSEC_TRAFFIC_DIR	IpSecConfig.h	/^} EFI_IPSEC_TRAFFIC_DIR;$/;"	t	typeref:enum:__anon447
EFI_IPSEC_TUNNEL_DF_OPTION	IpSecConfig.h	/^} EFI_IPSEC_TUNNEL_DF_OPTION;$/;"	t	typeref:enum:__anon450
EFI_IPSEC_TUNNEL_OPTION	IpSecConfig.h	/^} EFI_IPSEC_TUNNEL_OPTION;$/;"	t	typeref:struct:_EFI_IPSEC_TUNNEL_OPTION
EFI_IP_ADDRESS_INFO	IpSecConfig.h	/^} EFI_IP_ADDRESS_INFO;$/;"	t	typeref:struct:_EFI_IP_ADDRESS_INFO
EFI_ISA_HC_CLOSE_IO	IsaHc.h	/^(EFIAPI *EFI_ISA_HC_CLOSE_IO) ($/;"	t
EFI_ISA_HC_OPEN_IO	IsaHc.h	/^(EFIAPI *EFI_ISA_HC_OPEN_IO) ($/;"	t
EFI_ISA_HC_PROTOCOL	IsaHc.h	/^typedef struct _EFI_ISA_HC_PROTOCOL EFI_ISA_HC_PROTOCOL;$/;"	t	typeref:struct:_EFI_ISA_HC_PROTOCOL
EFI_ISA_HC_PROTOCOL_GUID	IsaHc.h	19;"	d
EFI_ISA_HC_SERVICE_BINDING_PROTOCOL_GUID	IsaHc.h	24;"	d
EFI_ISCSI_INITIATOR_NAME_GET	IScsiInitiatorName.h	/^(EFIAPI *EFI_ISCSI_INITIATOR_NAME_GET)($/;"	t
EFI_ISCSI_INITIATOR_NAME_PROTOCOL	IScsiInitiatorName.h	/^typedef struct _EFI_ISCSI_INITIATOR_NAME_PROTOCOL EFI_ISCSI_INITIATOR_NAME_PROTOCOL;$/;"	t	typeref:struct:_EFI_ISCSI_INITIATOR_NAME_PROTOCOL
EFI_ISCSI_INITIATOR_NAME_PROTOCOL_GUID	IScsiInitiatorName.h	13;"	d
EFI_ISCSI_INITIATOR_NAME_SET	IScsiInitiatorName.h	/^(EFIAPI *EFI_ISCSI_INITIATOR_NAME_SET)($/;"	t
EFI_KEY_DATA	SimpleTextInEx.h	/^} EFI_KEY_DATA;$/;"	t	typeref:struct:__anon169
EFI_KEY_NOTIFY_FUNCTION	SimpleTextInEx.h	/^(EFIAPI *EFI_KEY_NOTIFY_FUNCTION)($/;"	t
EFI_KEY_STATE	SimpleTextInEx.h	/^} EFI_KEY_STATE;$/;"	t	typeref:struct:_EFI_KEY_STATE
EFI_KEY_STATE_EXPOSED	SimpleTextInEx.h	114;"	d
EFI_KEY_TOGGLE_STATE	SimpleTextInEx.h	/^typedef UINT8 EFI_KEY_TOGGLE_STATE;$/;"	t
EFI_KMS_ADD_KEY	Kms.h	/^(EFIAPI *EFI_KMS_ADD_KEY) ($/;"	t
EFI_KMS_ADD_KEY_ATTRIBUTES	Kms.h	/^(EFIAPI *EFI_KMS_ADD_KEY_ATTRIBUTES) ($/;"	t
EFI_KMS_ATTRIBUTE_TYPE_BIG_INTEGER	Kms.h	166;"	d
EFI_KMS_ATTRIBUTE_TYPE_BOOLEAN	Kms.h	168;"	d
EFI_KMS_ATTRIBUTE_TYPE_BYTE_STRING	Kms.h	169;"	d
EFI_KMS_ATTRIBUTE_TYPE_DATE_TIME	Kms.h	171;"	d
EFI_KMS_ATTRIBUTE_TYPE_DYNAMIC	Kms.h	174;"	d
EFI_KMS_ATTRIBUTE_TYPE_ENUMERATION	Kms.h	167;"	d
EFI_KMS_ATTRIBUTE_TYPE_INTEGER	Kms.h	164;"	d
EFI_KMS_ATTRIBUTE_TYPE_INTERVAL	Kms.h	172;"	d
EFI_KMS_ATTRIBUTE_TYPE_LONG_INTEGER	Kms.h	165;"	d
EFI_KMS_ATTRIBUTE_TYPE_NONE	Kms.h	163;"	d
EFI_KMS_ATTRIBUTE_TYPE_STRUCTURE	Kms.h	173;"	d
EFI_KMS_ATTRIBUTE_TYPE_TEXT_STRING	Kms.h	170;"	d
EFI_KMS_CLIENT_INFO	Kms.h	/^} EFI_KMS_CLIENT_INFO;$/;"	t	typeref:struct:__anon294
EFI_KMS_CREATE_KEY	Kms.h	/^(EFIAPI *EFI_KMS_CREATE_KEY) ($/;"	t
EFI_KMS_DATA_TYPE_ASCII	Kms.h	32;"	d
EFI_KMS_DATA_TYPE_BINARY	Kms.h	31;"	d
EFI_KMS_DATA_TYPE_NONE	Kms.h	30;"	d
EFI_KMS_DATA_TYPE_UNICODE	Kms.h	33;"	d
EFI_KMS_DATA_TYPE_UTF8	Kms.h	34;"	d
EFI_KMS_DELETE_KEY	Kms.h	/^(EFIAPI *EFI_KMS_DELETE_KEY) ($/;"	t
EFI_KMS_DELETE_KEY_ATTRIBUTES	Kms.h	/^(EFIAPI *EFI_KMS_DELETE_KEY_ATTRIBUTES) ($/;"	t
EFI_KMS_DYNAMIC_ATTRIBUTE	Kms.h	/^} EFI_KMS_DYNAMIC_ATTRIBUTE;$/;"	t	typeref:struct:__anon297
EFI_KMS_DYNAMIC_FIELD	Kms.h	/^} EFI_KMS_DYNAMIC_FIELD;$/;"	t	typeref:struct:__anon296
EFI_KMS_FORMAT_AESCBC_128_GUID	Kms.h	137;"	d
EFI_KMS_FORMAT_AESCBC_256_GUID	Kms.h	141;"	d
EFI_KMS_FORMAT_AESXTS_128_GUID	Kms.h	129;"	d
EFI_KMS_FORMAT_AESXTS_256_GUID	Kms.h	133;"	d
EFI_KMS_FORMAT_GENERIC_1024_GUID	Kms.h	65;"	d
EFI_KMS_FORMAT_GENERIC_128_GUID	Kms.h	49;"	d
EFI_KMS_FORMAT_GENERIC_160_GUID	Kms.h	53;"	d
EFI_KMS_FORMAT_GENERIC_2048_GUID	Kms.h	69;"	d
EFI_KMS_FORMAT_GENERIC_256_GUID	Kms.h	57;"	d
EFI_KMS_FORMAT_GENERIC_3072_GUID	Kms.h	73;"	d
EFI_KMS_FORMAT_GENERIC_512_GUID	Kms.h	61;"	d
EFI_KMS_FORMAT_GENERIC_DYNAMIC	Kms.h	/^} EFI_KMS_FORMAT_GENERIC_DYNAMIC;$/;"	t	typeref:struct:__anon293
EFI_KMS_FORMAT_GENERIC_DYNAMIC_GUID	Kms.h	77;"	d
EFI_KMS_FORMAT_MD2_128_GUID	Kms.h	87;"	d
EFI_KMS_FORMAT_MD4_128_GUID	Kms.h	95;"	d
EFI_KMS_FORMAT_MD5SHA_128_GUID	Kms.h	107;"	d
EFI_KMS_FORMAT_MD5_128_GUID	Kms.h	103;"	d
EFI_KMS_FORMAT_MDC2_128_GUID	Kms.h	91;"	d
EFI_KMS_FORMAT_MDC4_128_GUID	Kms.h	99;"	d
EFI_KMS_FORMAT_RSASHA1_1024_GUID	Kms.h	145;"	d
EFI_KMS_FORMAT_RSASHA1_2048_GUID	Kms.h	149;"	d
EFI_KMS_FORMAT_RSASHA256_2048_GUID	Kms.h	153;"	d
EFI_KMS_FORMAT_RSASHA256_3072_GUID	Kms.h	157;"	d
EFI_KMS_FORMAT_SHA1_160_GUID	Kms.h	111;"	d
EFI_KMS_FORMAT_SHA256_256_GUID	Kms.h	115;"	d
EFI_KMS_FORMAT_SHA512_512_GUID	Kms.h	119;"	d
EFI_KMS_GET_KEY	Kms.h	/^(EFIAPI *EFI_KMS_GET_KEY) ($/;"	t
EFI_KMS_GET_KEY_ATTRIBUTES	Kms.h	/^(EFIAPI *EFI_KMS_GET_KEY_ATTRIBUTES) ($/;"	t
EFI_KMS_GET_KEY_BY_ATTRIBUTES	Kms.h	/^(EFIAPI *EFI_KMS_GET_KEY_BY_ATTRIBUTES) ($/;"	t
EFI_KMS_GET_SERVICE_STATUS	Kms.h	/^(EFIAPI *EFI_KMS_GET_SERVICE_STATUS) ($/;"	t
EFI_KMS_KEY_ATTRIBUTE	Kms.h	/^} EFI_KMS_KEY_ATTRIBUTE;$/;"	t	typeref:struct:__anon298
EFI_KMS_KEY_DESCRIPTOR	Kms.h	/^} EFI_KMS_KEY_DESCRIPTOR;$/;"	t	typeref:struct:__anon295
EFI_KMS_PROTOCOL	Kms.h	/^typedef struct _EFI_KMS_PROTOCOL EFI_KMS_PROTOCOL;$/;"	t	typeref:struct:_EFI_KMS_PROTOCOL
EFI_KMS_PROTOCOL_GUID	Kms.h	19;"	d
EFI_KMS_REGISTER_CLIENT	Kms.h	/^(EFIAPI *EFI_KMS_REGISTER_CLIENT) ($/;"	t
EFI_LBA_LIST_TERMINATOR	FirmwareVolumeBlock.h	275;"	d
EFI_LEFT_ALT_PRESSED	SimpleTextInEx.h	104;"	d
EFI_LEFT_CONTROL_PRESSED	SimpleTextInEx.h	102;"	d
EFI_LEFT_LOGO_PRESSED	SimpleTextInEx.h	106;"	d
EFI_LEFT_SHIFT_PRESSED	SimpleTextInEx.h	100;"	d
EFI_LEGACY_REGION2_BOOT_LOCK	LegacyRegion2.h	/^(EFIAPI *EFI_LEGACY_REGION2_BOOT_LOCK)($/;"	t
EFI_LEGACY_REGION2_DECODE	LegacyRegion2.h	/^(EFIAPI *EFI_LEGACY_REGION2_DECODE)($/;"	t
EFI_LEGACY_REGION2_LOCK	LegacyRegion2.h	/^(EFIAPI *EFI_LEGACY_REGION2_LOCK)($/;"	t
EFI_LEGACY_REGION2_PROTOCOL	LegacyRegion2.h	/^typedef struct _EFI_LEGACY_REGION2_PROTOCOL EFI_LEGACY_REGION2_PROTOCOL;$/;"	t	typeref:struct:_EFI_LEGACY_REGION2_PROTOCOL
EFI_LEGACY_REGION2_PROTOCOL_GUID	LegacyRegion2.h	18;"	d
EFI_LEGACY_REGION2_UNLOCK	LegacyRegion2.h	/^(EFIAPI *EFI_LEGACY_REGION2_UNLOCK)($/;"	t
EFI_LEGACY_REGION_ATTRIBUTE	LegacyRegion2.h	/^} EFI_LEGACY_REGION_ATTRIBUTE;$/;"	t	typeref:enum:__anon484
EFI_LEGACY_REGION_DESCRIPTOR	LegacyRegion2.h	/^} EFI_LEGACY_REGION_DESCRIPTOR;$/;"	t	typeref:struct:__anon485
EFI_LEGACY_REGION_GET_INFO	LegacyRegion2.h	/^(EFIAPI *EFI_LEGACY_REGION_GET_INFO)($/;"	t
EFI_LEGACY_SPI_CONTROLLER_GUID	LegacySpiController.h	21;"	d
EFI_LEGACY_SPI_CONTROLLER_PROTOCOL	LegacySpiController.h	/^EFI_LEGACY_SPI_CONTROLLER_PROTOCOL;$/;"	t	typeref:struct:_EFI_LEGACY_SPI_CONTROLLER_PROTOCOL
EFI_LEGACY_SPI_CONTROLLER_PROTOCOL_BIOS_BASE_ADDRESS	LegacySpiController.h	/^(EFIAPI *EFI_LEGACY_SPI_CONTROLLER_PROTOCOL_BIOS_BASE_ADDRESS) ($/;"	t
EFI_LEGACY_SPI_CONTROLLER_PROTOCOL_CLEAR_SPI_PROTECT	LegacySpiController.h	/^(EFIAPI *EFI_LEGACY_SPI_CONTROLLER_PROTOCOL_CLEAR_SPI_PROTECT) ($/;"	t
EFI_LEGACY_SPI_CONTROLLER_PROTOCOL_ERASE_BLOCK_OPCODE	LegacySpiController.h	/^(EFIAPI *EFI_LEGACY_SPI_CONTROLLER_PROTOCOL_ERASE_BLOCK_OPCODE) ($/;"	t
EFI_LEGACY_SPI_CONTROLLER_PROTOCOL_IS_RANGE_PROTECTED	LegacySpiController.h	/^(EFIAPI *EFI_LEGACY_SPI_CONTROLLER_PROTOCOL_IS_RANGE_PROTECTED) ($/;"	t
EFI_LEGACY_SPI_CONTROLLER_PROTOCOL_LOCK_CONTROLLER	LegacySpiController.h	/^(EFIAPI *EFI_LEGACY_SPI_CONTROLLER_PROTOCOL_LOCK_CONTROLLER) ($/;"	t
EFI_LEGACY_SPI_CONTROLLER_PROTOCOL_PROTECT_NEXT_RANGE	LegacySpiController.h	/^(EFIAPI *EFI_LEGACY_SPI_CONTROLLER_PROTOCOL_PROTECT_NEXT_RANGE) ($/;"	t
EFI_LEGACY_SPI_CONTROLLER_PROTOCOL_WRITE_STATUS_PREFIX	LegacySpiController.h	/^(EFIAPI *EFI_LEGACY_SPI_CONTROLLER_PROTOCOL_WRITE_STATUS_PREFIX) ($/;"	t
EFI_LEGACY_SPI_FLASH_PROTOCOL	LegacySpiFlash.h	/^typedef struct _EFI_LEGACY_SPI_FLASH_PROTOCOL EFI_LEGACY_SPI_FLASH_PROTOCOL;$/;"	t	typeref:struct:_EFI_LEGACY_SPI_FLASH_PROTOCOL
EFI_LEGACY_SPI_FLASH_PROTOCOL_BIOS_BASE_ADDRESS	LegacySpiFlash.h	/^(EFIAPI *EFI_LEGACY_SPI_FLASH_PROTOCOL_BIOS_BASE_ADDRESS) ($/;"	t
EFI_LEGACY_SPI_FLASH_PROTOCOL_CLEAR_SPI_PROTECT	LegacySpiFlash.h	/^(EFIAPI *EFI_LEGACY_SPI_FLASH_PROTOCOL_CLEAR_SPI_PROTECT) ($/;"	t
EFI_LEGACY_SPI_FLASH_PROTOCOL_GUID	LegacySpiFlash.h	20;"	d
EFI_LEGACY_SPI_FLASH_PROTOCOL_IS_RANGE_PROTECTED	LegacySpiFlash.h	/^(EFIAPI *EFI_LEGACY_SPI_FLASH_PROTOCOL_IS_RANGE_PROTECTED) ($/;"	t
EFI_LEGACY_SPI_FLASH_PROTOCOL_LOCK_CONTROLLER	LegacySpiFlash.h	/^(EFIAPI *EFI_LEGACY_SPI_FLASH_PROTOCOL_LOCK_CONTROLLER) ($/;"	t
EFI_LEGACY_SPI_FLASH_PROTOCOL_PROTECT_NEXT_RANGE	LegacySpiFlash.h	/^(EFIAPI *EFI_LEGACY_SPI_FLASH_PROTOCOL_PROTECT_NEXT_RANGE) ($/;"	t
EFI_LEGACY_SPI_SMM_CONTROLLER_PROTOCOL	LegacySpiSmmController.h	/^EFI_LEGACY_SPI_SMM_CONTROLLER_PROTOCOL;$/;"	t	typeref:struct:_EFI_LEGACY_SPI_CONTROLLER_PROTOCOL
EFI_LEGACY_SPI_SMM_CONTROLLER_PROTOCOL_GUID	LegacySpiSmmController.h	20;"	d
EFI_LEGACY_SPI_SMM_FLASH_PROTOCOL	LegacySpiSmmFlash.h	/^EFI_LEGACY_SPI_SMM_FLASH_PROTOCOL;$/;"	t	typeref:struct:_EFI_LEGACY_SPI_FLASH_PROTOCOL
EFI_LEGACY_SPI_SMM_FLASH_PROTOCOL_GUID	LegacySpiSmmFlash.h	20;"	d
EFI_LIGHTBLUE	SimpleTextOut.h	113;"	d
EFI_LIGHTCYAN	SimpleTextOut.h	115;"	d
EFI_LIGHTGRAY	SimpleTextOut.h	110;"	d
EFI_LIGHTGREEN	SimpleTextOut.h	114;"	d
EFI_LIGHTMAGENTA	SimpleTextOut.h	117;"	d
EFI_LIGHTRED	SimpleTextOut.h	116;"	d
EFI_LIST_ENTRY	Runtime.h	/^typedef LIST_ENTRY EFI_LIST_ENTRY;$/;"	t
EFI_LOADED_IMAGE	LoadedImage.h	/^typedef EFI_LOADED_IMAGE_PROTOCOL EFI_LOADED_IMAGE;$/;"	t
EFI_LOADED_IMAGE_DEVICE_PATH_PROTOCOL_GUID	LoadedImage.h	20;"	d
EFI_LOADED_IMAGE_INFORMATION_REVISION	LoadedImage.h	38;"	d
EFI_LOADED_IMAGE_PROTOCOL	LoadedImage.h	/^} EFI_LOADED_IMAGE_PROTOCOL;$/;"	t	typeref:struct:__anon359
EFI_LOADED_IMAGE_PROTOCOL_GUID	LoadedImage.h	15;"	d
EFI_LOADED_IMAGE_PROTOCOL_REVISION	LoadedImage.h	33;"	d
EFI_LOAD_FILE	LoadFile.h	/^(EFIAPI *EFI_LOAD_FILE)($/;"	t
EFI_LOAD_FILE2	LoadFile2.h	/^(EFIAPI *EFI_LOAD_FILE2)($/;"	t
EFI_LOAD_FILE2_PROTOCOL	LoadFile2.h	/^typedef struct _EFI_LOAD_FILE2_PROTOCOL EFI_LOAD_FILE2_PROTOCOL;$/;"	t	typeref:struct:_EFI_LOAD_FILE2_PROTOCOL
EFI_LOAD_FILE2_PROTOCOL_GUID	LoadFile2.h	18;"	d
EFI_LOAD_FILE_INTERFACE	LoadFile.h	/^typedef EFI_LOAD_FILE_PROTOCOL  EFI_LOAD_FILE_INTERFACE;$/;"	t
EFI_LOAD_FILE_PROTOCOL	LoadFile.h	/^typedef struct _EFI_LOAD_FILE_PROTOCOL EFI_LOAD_FILE_PROTOCOL;$/;"	t	typeref:struct:_EFI_LOAD_FILE_PROTOCOL
EFI_LOAD_FILE_PROTOCOL_GUID	LoadFile.h	18;"	d
EFI_MAGENTA	SimpleTextOut.h	108;"	d
EFI_MANAGED_NETWORK_CANCEL	ManagedNetwork.h	/^(EFIAPI *EFI_MANAGED_NETWORK_CANCEL)($/;"	t
EFI_MANAGED_NETWORK_COMPLETION_TOKEN	ManagedNetwork.h	/^} EFI_MANAGED_NETWORK_COMPLETION_TOKEN;$/;"	t	typeref:struct:__anon177
EFI_MANAGED_NETWORK_CONFIGURE	ManagedNetwork.h	/^(EFIAPI *EFI_MANAGED_NETWORK_CONFIGURE)($/;"	t
EFI_MANAGED_NETWORK_CONFIG_DATA	ManagedNetwork.h	/^} EFI_MANAGED_NETWORK_CONFIG_DATA;$/;"	t	typeref:struct:__anon173
EFI_MANAGED_NETWORK_FRAGMENT_DATA	ManagedNetwork.h	/^} EFI_MANAGED_NETWORK_FRAGMENT_DATA;$/;"	t	typeref:struct:__anon175
EFI_MANAGED_NETWORK_GET_MODE_DATA	ManagedNetwork.h	/^(EFIAPI *EFI_MANAGED_NETWORK_GET_MODE_DATA)($/;"	t
EFI_MANAGED_NETWORK_GROUPS	ManagedNetwork.h	/^(EFIAPI *EFI_MANAGED_NETWORK_GROUPS)($/;"	t
EFI_MANAGED_NETWORK_MCAST_IP_TO_MAC	ManagedNetwork.h	/^(EFIAPI *EFI_MANAGED_NETWORK_MCAST_IP_TO_MAC)($/;"	t
EFI_MANAGED_NETWORK_POLL	ManagedNetwork.h	/^(EFIAPI *EFI_MANAGED_NETWORK_POLL)($/;"	t
EFI_MANAGED_NETWORK_PROTOCOL	ManagedNetwork.h	/^typedef struct _EFI_MANAGED_NETWORK_PROTOCOL EFI_MANAGED_NETWORK_PROTOCOL;$/;"	t	typeref:struct:_EFI_MANAGED_NETWORK_PROTOCOL
EFI_MANAGED_NETWORK_PROTOCOL_GUID	ManagedNetwork.h	23;"	d
EFI_MANAGED_NETWORK_RECEIVE	ManagedNetwork.h	/^(EFIAPI *EFI_MANAGED_NETWORK_RECEIVE)($/;"	t
EFI_MANAGED_NETWORK_RECEIVE_DATA	ManagedNetwork.h	/^} EFI_MANAGED_NETWORK_RECEIVE_DATA;$/;"	t	typeref:struct:__anon174
EFI_MANAGED_NETWORK_SERVICE_BINDING_PROTOCOL_GUID	ManagedNetwork.h	18;"	d
EFI_MANAGED_NETWORK_TRANSMIT	ManagedNetwork.h	/^(EFIAPI *EFI_MANAGED_NETWORK_TRANSMIT)($/;"	t
EFI_MANAGED_NETWORK_TRANSMIT_DATA	ManagedNetwork.h	/^} EFI_MANAGED_NETWORK_TRANSMIT_DATA;$/;"	t	typeref:struct:__anon176
EFI_MAX_KEY_LEN	Supplicant.h	218;"	d
EFI_MAX_SSID_LEN	WiFi2.h	66;"	d
EFI_MD5_HASH	Hash.h	/^typedef UINT8  EFI_MD5_HASH[16];$/;"	t
EFI_MD5_HASH2	Hash2.h	/^typedef UINT8  EFI_MD5_HASH2[16];$/;"	t
EFI_MENU_KEY_PRESSED	SimpleTextInEx.h	107;"	d
EFI_METRONOME_ARCH_PROTOCOL	Metronome.h	/^typedef struct _EFI_METRONOME_ARCH_PROTOCOL   EFI_METRONOME_ARCH_PROTOCOL;$/;"	t	typeref:struct:_EFI_METRONOME_ARCH_PROTOCOL
EFI_METRONOME_ARCH_PROTOCOL_GUID	Metronome.h	17;"	d
EFI_METRONOME_WAIT_FOR_TICK	Metronome.h	/^(EFIAPI *EFI_METRONOME_WAIT_FOR_TICK)($/;"	t
EFI_MM_ACCESS_PROTOCOL	MmAccess.h	/^typedef struct _EFI_MM_ACCESS_PROTOCOL  EFI_MM_ACCESS_PROTOCOL;$/;"	t	typeref:struct:_EFI_MM_ACCESS_PROTOCOL
EFI_MM_ACCESS_PROTOCOL_GUID	MmAccess.h	22;"	d
EFI_MM_ACTIVATE	MmControl.h	/^(EFIAPI *EFI_MM_ACTIVATE)($/;"	t
EFI_MM_BASE_PROTOCOL	MmBase.h	/^typedef struct _EFI_MM_BASE_PROTOCOL  EFI_MM_BASE_PROTOCOL;$/;"	t	typeref:struct:_EFI_MM_BASE_PROTOCOL
EFI_MM_BASE_PROTOCOL_GUID	MmBase.h	17;"	d
EFI_MM_BROADCAST_PROCEDURE	MmMp.h	/^(EFIAPI *EFI_MM_BROADCAST_PROCEDURE) ($/;"	t
EFI_MM_CAPABILITIES	MmAccess.h	/^(EFIAPI *EFI_MM_CAPABILITIES)($/;"	t
EFI_MM_CLOSE	MmAccess.h	/^(EFIAPI *EFI_MM_CLOSE)($/;"	t
EFI_MM_COMMUNICATE	MmCommunication.h	/^(EFIAPI *EFI_MM_COMMUNICATE)($/;"	t
EFI_MM_COMMUNICATE2	MmCommunication2.h	/^(EFIAPI *EFI_MM_COMMUNICATE2)($/;"	t
EFI_MM_COMMUNICATE_HEADER	MmCommunication.h	/^} EFI_MM_COMMUNICATE_HEADER;$/;"	t	typeref:struct:__anon346
EFI_MM_COMMUNICATION2_PROTOCOL	MmCommunication2.h	/^typedef struct _EFI_MM_COMMUNICATION2_PROTOCOL  EFI_MM_COMMUNICATION2_PROTOCOL;$/;"	t	typeref:struct:_EFI_MM_COMMUNICATION2_PROTOCOL
EFI_MM_COMMUNICATION2_PROTOCOL_GUID	MmCommunication2.h	18;"	d
EFI_MM_COMMUNICATION_PROTOCOL	MmCommunication.h	/^typedef struct _EFI_MM_COMMUNICATION_PROTOCOL  EFI_MM_COMMUNICATION_PROTOCOL;$/;"	t	typeref:struct:_EFI_MM_COMMUNICATION_PROTOCOL
EFI_MM_COMMUNICATION_PROTOCOL_GUID	MmCommunication.h	38;"	d
EFI_MM_CONFIGURATION_PROTOCOL	MmConfiguration.h	/^typedef struct _EFI_MM_CONFIGURATION_PROTOCOL  EFI_MM_CONFIGURATION_PROTOCOL;$/;"	t	typeref:struct:_EFI_MM_CONFIGURATION_PROTOCOL
EFI_MM_CONFIGURATION_PROTOCOL_GUID	MmConfiguration.h	19;"	d
EFI_MM_CONTROL_PROTOCOL	MmControl.h	/^typedef struct _EFI_MM_CONTROL_PROTOCOL  EFI_MM_CONTROL_PROTOCOL;$/;"	t	typeref:struct:_EFI_MM_CONTROL_PROTOCOL
EFI_MM_CONTROL_PROTOCOL_GUID	MmControl.h	24;"	d
EFI_MM_CPU_IO	MmCpuIo.h	/^(EFIAPI *EFI_MM_CPU_IO)($/;"	t
EFI_MM_CPU_IO_PROTOCOL	MmCpuIo.h	/^typedef struct _EFI_MM_CPU_IO_PROTOCOL  EFI_MM_CPU_IO_PROTOCOL;$/;"	t	typeref:struct:_EFI_MM_CPU_IO_PROTOCOL
EFI_MM_CPU_IO_PROTOCOL_GUID	MmCpuIo.h	14;"	d
EFI_MM_CPU_PROTOCOL	MmCpu.h	/^typedef struct _EFI_MM_CPU_PROTOCOL  EFI_MM_CPU_PROTOCOL;$/;"	t	typeref:struct:_EFI_MM_CPU_PROTOCOL
EFI_MM_CPU_PROTOCOL_GUID	MmCpu.h	17;"	d
EFI_MM_DEACTIVATE	MmControl.h	/^(EFIAPI *EFI_MM_DEACTIVATE)($/;"	t
EFI_MM_DISPATCH_PROCEDURE	MmMp.h	/^(EFIAPI *EFI_MM_DISPATCH_PROCEDURE) ($/;"	t
EFI_MM_END_OF_DXE_PROTOCOL_GUID	MmEndOfDxe.h	17;"	d
EFI_MM_GET_MMST_LOCATION	MmBase.h	/^(EFIAPI *EFI_MM_GET_MMST_LOCATION)($/;"	t
EFI_MM_GET_NUMBER_OF_PROCESSORS	MmMp.h	/^(EFIAPI *EFI_MM_GET_NUMBER_OF_PROCESSORS) ($/;"	t
EFI_MM_GPI_DISPATCH_PROTOCOL	MmGpiDispatch.h	/^typedef struct _EFI_MM_GPI_DISPATCH_PROTOCOL EFI_MM_GPI_DISPATCH_PROTOCOL;$/;"	t	typeref:struct:_EFI_MM_GPI_DISPATCH_PROTOCOL
EFI_MM_GPI_DISPATCH_PROTOCOL_GUID	MmGpiDispatch.h	25;"	d
EFI_MM_GPI_REGISTER	MmGpiDispatch.h	/^(EFIAPI *EFI_MM_GPI_REGISTER)($/;"	t
EFI_MM_GPI_REGISTER_CONTEXT	MmGpiDispatch.h	/^} EFI_MM_GPI_REGISTER_CONTEXT;$/;"	t	typeref:struct:__anon12
EFI_MM_GPI_UNREGISTER	MmGpiDispatch.h	/^(EFIAPI *EFI_MM_GPI_UNREGISTER)($/;"	t
EFI_MM_INSIDE_OUT	MmBase.h	/^(EFIAPI *EFI_MM_INSIDE_OUT)($/;"	t
EFI_MM_IO_ACCESS	MmCpuIo.h	/^} EFI_MM_IO_ACCESS;$/;"	t	typeref:struct:__anon258
EFI_MM_IO_TRAP_CONTEXT	MmIoTrapDispatch.h	/^} EFI_MM_IO_TRAP_CONTEXT;$/;"	t	typeref:struct:__anon101
EFI_MM_IO_TRAP_DISPATCH_PROTOCOL	MmIoTrapDispatch.h	/^typedef struct _EFI_MM_IO_TRAP_DISPATCH_PROTOCOL EFI_MM_IO_TRAP_DISPATCH_PROTOCOL;$/;"	t	typeref:struct:_EFI_MM_IO_TRAP_DISPATCH_PROTOCOL
EFI_MM_IO_TRAP_DISPATCH_PROTOCOL_GUID	MmIoTrapDispatch.h	20;"	d
EFI_MM_IO_TRAP_DISPATCH_REGISTER	MmIoTrapDispatch.h	/^(EFIAPI *EFI_MM_IO_TRAP_DISPATCH_REGISTER)($/;"	t
EFI_MM_IO_TRAP_DISPATCH_TYPE	MmIoTrapDispatch.h	/^} EFI_MM_IO_TRAP_DISPATCH_TYPE;$/;"	t	typeref:enum:__anon99
EFI_MM_IO_TRAP_DISPATCH_UNREGISTER	MmIoTrapDispatch.h	/^(EFIAPI *EFI_MM_IO_TRAP_DISPATCH_UNREGISTER)($/;"	t
EFI_MM_IO_TRAP_REGISTER_CONTEXT	MmIoTrapDispatch.h	/^} EFI_MM_IO_TRAP_REGISTER_CONTEXT;$/;"	t	typeref:struct:__anon100
EFI_MM_IO_WIDTH	MmCpuIo.h	/^} EFI_MM_IO_WIDTH;$/;"	t	typeref:enum:__anon257
EFI_MM_LOCK	MmAccess.h	/^(EFIAPI *EFI_MM_LOCK)($/;"	t
EFI_MM_MP_PROTOCOL	MmMp.h	/^typedef struct _EFI_MM_MP_PROTOCOL  EFI_MM_MP_PROTOCOL;$/;"	t	typeref:struct:_EFI_MM_MP_PROTOCOL
EFI_MM_MP_PROTOCOL_GUID	MmMp.h	21;"	d
EFI_MM_MP_PROTOCOL_REVISION	MmMp.h	29;"	d
EFI_MM_MP_TIMEOUT_SUPPORTED	MmMp.h	34;"	d
EFI_MM_OPEN	MmAccess.h	/^(EFIAPI *EFI_MM_OPEN)($/;"	t
EFI_MM_PCI_ROOT_BRIDGE_IO_PROTOCOL	MmPciRootBridgeIo.h	/^typedef EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL  EFI_MM_PCI_ROOT_BRIDGE_IO_PROTOCOL;$/;"	t
EFI_MM_PCI_ROOT_BRIDGE_IO_PROTOCOL_GUID	MmPciRootBridgeIo.h	16;"	d
EFI_MM_PERIOD	MmControl.h	/^typedef UINTN  EFI_MM_PERIOD;$/;"	t
EFI_MM_PERIODIC_TIMER_CONTEXT	MmPeriodicTimerDispatch.h	/^} EFI_MM_PERIODIC_TIMER_CONTEXT;$/;"	t	typeref:struct:__anon385
EFI_MM_PERIODIC_TIMER_DISPATCH_PROTOCOL	MmPeriodicTimerDispatch.h	/^typedef struct _EFI_MM_PERIODIC_TIMER_DISPATCH_PROTOCOL  EFI_MM_PERIODIC_TIMER_DISPATCH_PROTOCOL;$/;"	t	typeref:struct:_EFI_MM_PERIODIC_TIMER_DISPATCH_PROTOCOL
EFI_MM_PERIODIC_TIMER_DISPATCH_PROTOCOL_GUID	MmPeriodicTimerDispatch.h	20;"	d
EFI_MM_PERIODIC_TIMER_INTERVAL	MmPeriodicTimerDispatch.h	/^(EFIAPI *EFI_MM_PERIODIC_TIMER_INTERVAL)($/;"	t
EFI_MM_PERIODIC_TIMER_REGISTER	MmPeriodicTimerDispatch.h	/^(EFIAPI *EFI_MM_PERIODIC_TIMER_REGISTER)($/;"	t
EFI_MM_PERIODIC_TIMER_REGISTER_CONTEXT	MmPeriodicTimerDispatch.h	/^} EFI_MM_PERIODIC_TIMER_REGISTER_CONTEXT;$/;"	t	typeref:struct:__anon384
EFI_MM_PERIODIC_TIMER_UNREGISTER	MmPeriodicTimerDispatch.h	/^(EFIAPI *EFI_MM_PERIODIC_TIMER_UNREGISTER)($/;"	t
EFI_MM_POWER_BUTTON_DISPATCH_PROTOCOL	MmPowerButtonDispatch.h	/^typedef struct _EFI_MM_POWER_BUTTON_DISPATCH_PROTOCOL EFI_MM_POWER_BUTTON_DISPATCH_PROTOCOL;$/;"	t	typeref:struct:_EFI_MM_POWER_BUTTON_DISPATCH_PROTOCOL
EFI_MM_POWER_BUTTON_DISPATCH_PROTOCOL_GUID	MmPowerButtonDispatch.h	20;"	d
EFI_MM_POWER_BUTTON_REGISTER	MmPowerButtonDispatch.h	/^(EFIAPI *EFI_MM_POWER_BUTTON_REGISTER)($/;"	t
EFI_MM_POWER_BUTTON_REGISTER_CONTEXT	MmPowerButtonDispatch.h	/^} EFI_MM_POWER_BUTTON_REGISTER_CONTEXT;$/;"	t	typeref:struct:__anon248
EFI_MM_POWER_BUTTON_UNREGISTER	MmPowerButtonDispatch.h	/^(EFIAPI *EFI_MM_POWER_BUTTON_UNREGISTER)($/;"	t
EFI_MM_READY_TO_LOCK_PROTOCOL_GUID	MmReadyToLock.h	19;"	d
EFI_MM_READ_SAVE_STATE	MmCpu.h	/^(EFIAPI *EFI_MM_READ_SAVE_STATE)($/;"	t
EFI_MM_REGISTER_MM_ENTRY	MmConfiguration.h	/^(EFIAPI *EFI_MM_REGISTER_MM_ENTRY)($/;"	t
EFI_MM_REPORT_STATUS_CODE	MmStatusCode.h	/^(EFIAPI *EFI_MM_REPORT_STATUS_CODE)($/;"	t
EFI_MM_RESERVED_MMRAM_REGION	MmConfiguration.h	/^} EFI_MM_RESERVED_MMRAM_REGION;$/;"	t	typeref:struct:_EFI_MM_RESERVED_MMRAM_REGION
EFI_MM_RSC_HANDLER_CALLBACK	MmReportStatusCodeHandler.h	/^(EFIAPI *EFI_MM_RSC_HANDLER_CALLBACK)($/;"	t
EFI_MM_RSC_HANDLER_PROTOCOL	MmReportStatusCodeHandler.h	/^} EFI_MM_RSC_HANDLER_PROTOCOL;$/;"	t	typeref:struct:_EFI_MM_RSC_HANDLER_PROTOCOL
EFI_MM_RSC_HANDLER_PROTOCOL_GUID	MmReportStatusCodeHandler.h	15;"	d
EFI_MM_RSC_HANDLER_REGISTER	MmReportStatusCodeHandler.h	/^(EFIAPI *EFI_MM_RSC_HANDLER_REGISTER)($/;"	t
EFI_MM_RSC_HANDLER_UNREGISTER	MmReportStatusCodeHandler.h	/^(EFIAPI *EFI_MM_RSC_HANDLER_UNREGISTER)($/;"	t
EFI_MM_SAVE_STATE_IO_INFO	MmCpu.h	/^} EFI_MM_SAVE_STATE_IO_INFO;$/;"	t	typeref:struct:_EFI_MM_SAVE_STATE_IO_INFO
EFI_MM_SAVE_STATE_IO_TYPE	MmCpu.h	/^} EFI_MM_SAVE_STATE_IO_TYPE;$/;"	t	typeref:enum:__anon221
EFI_MM_SAVE_STATE_IO_TYPE_INPUT	MmCpu.h	/^  EFI_MM_SAVE_STATE_IO_TYPE_INPUT       = 1,$/;"	e	enum:__anon221
EFI_MM_SAVE_STATE_IO_TYPE_OUTPUT	MmCpu.h	/^  EFI_MM_SAVE_STATE_IO_TYPE_OUTPUT      = 2,$/;"	e	enum:__anon221
EFI_MM_SAVE_STATE_IO_TYPE_REP_PREFIX	MmCpu.h	/^  EFI_MM_SAVE_STATE_IO_TYPE_REP_PREFIX  = 8$/;"	e	enum:__anon221
EFI_MM_SAVE_STATE_IO_TYPE_STRING	MmCpu.h	/^  EFI_MM_SAVE_STATE_IO_TYPE_STRING      = 4,$/;"	e	enum:__anon221
EFI_MM_SAVE_STATE_IO_WIDTH	MmCpu.h	/^} EFI_MM_SAVE_STATE_IO_WIDTH;$/;"	t	typeref:enum:__anon220
EFI_MM_SAVE_STATE_IO_WIDTH_UINT16	MmCpu.h	/^  EFI_MM_SAVE_STATE_IO_WIDTH_UINT16     = 1,$/;"	e	enum:__anon220
EFI_MM_SAVE_STATE_IO_WIDTH_UINT32	MmCpu.h	/^  EFI_MM_SAVE_STATE_IO_WIDTH_UINT32     = 2,$/;"	e	enum:__anon220
EFI_MM_SAVE_STATE_IO_WIDTH_UINT64	MmCpu.h	/^  EFI_MM_SAVE_STATE_IO_WIDTH_UINT64     = 3$/;"	e	enum:__anon220
EFI_MM_SAVE_STATE_IO_WIDTH_UINT8	MmCpu.h	/^  EFI_MM_SAVE_STATE_IO_WIDTH_UINT8      = 0,$/;"	e	enum:__anon220
EFI_MM_SAVE_STATE_REGISTER	MmCpu.h	/^} EFI_MM_SAVE_STATE_REGISTER;$/;"	t	typeref:enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_CR0	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_CR0           = 52,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_CR3	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_CR3           = 53,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_CR4	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_CR4           = 54,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_CS	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_CS            = 21,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_DATAOFFSET	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_DATAOFFSET    = 262,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_DR6	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_DR6           = 29,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_DR7	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_DR7           = 28,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_DS	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_DS            = 23,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_ES	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_ES            = 20,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_FCW	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_FCW           = 256,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_FP_CS	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_FP_CS         = 261,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_FP_DS	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_FP_DS         = 263,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_FP_EIP	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_FP_EIP        = 260,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_FS	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_FS            = 24,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_FSW	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_FSW           = 257,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_FTW	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_FTW           = 258,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_GDTBASE	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_GDTBASE       = 4,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_GDTLIMIT	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_GDTLIMIT      = 7,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_GS	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_GS            = 25,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_IDTBASE	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_IDTBASE       = 5,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_IDTLIMIT	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_IDTLIMIT      = 8,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_IO	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_IO            = 512,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_LDTBASE	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_LDTBASE       = 6,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_LDTINFO	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_LDTINFO       = 10,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_LDTLIMIT	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_LDTLIMIT      = 9,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_LDTR_SEL	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_LDTR_SEL      = 26,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_LMA	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_LMA           = 513,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_LMA_32BIT	MmCpu.h	113;"	d
EFI_MM_SAVE_STATE_REGISTER_LMA_64BIT	MmCpu.h	114;"	d
EFI_MM_SAVE_STATE_REGISTER_MM0	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_MM0           = 264,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_MM1	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_MM1           = 265,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_MM2	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_MM2           = 266,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_MM3	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_MM3           = 267,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_MM4	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_MM4           = 268,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_MM5	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_MM5           = 269,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_MM6	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_MM6           = 270,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_MM7	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_MM7           = 271,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_OPCODE	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_OPCODE        = 259,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_PROCESSOR_ID	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_PROCESSOR_ID  = 514$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_R10	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_R10           = 32,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_R11	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_R11           = 33,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_R12	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_R12           = 34,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_R13	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_R13           = 35,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_R14	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_R14           = 36,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_R15	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_R15           = 37,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_R8	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_R8            = 30,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_R9	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_R9            = 31,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_RAX	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_RAX           = 38,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_RBP	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_RBP           = 43,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_RBX	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_RBX           = 39,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_RCX	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_RCX           = 40,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_RDI	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_RDI           = 45,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_RDX	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_RDX           = 41,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_RFLAGS	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_RFLAGS        = 51,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_RIP	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_RIP           = 46,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_RSI	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_RSI           = 44,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_RSP	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_RSP           = 42,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_SS	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_SS            = 22,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_TR_SEL	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_TR_SEL        = 27,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_XMM0	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_XMM0          = 272,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_XMM1	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_XMM1          = 273,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_XMM10	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_XMM10         = 282,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_XMM11	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_XMM11         = 283,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_XMM12	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_XMM12         = 284,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_XMM13	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_XMM13         = 285,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_XMM14	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_XMM14         = 286,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_XMM15	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_XMM15         = 287,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_XMM2	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_XMM2          = 274,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_XMM3	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_XMM3          = 275,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_XMM4	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_XMM4          = 276,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_XMM5	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_XMM5          = 277,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_XMM6	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_XMM6          = 278,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_XMM7	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_XMM7          = 279,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_XMM8	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_XMM8          = 280,$/;"	e	enum:__anon219
EFI_MM_SAVE_STATE_REGISTER_XMM9	MmCpu.h	/^  EFI_MM_SAVE_STATE_REGISTER_XMM9          = 281,$/;"	e	enum:__anon219
EFI_MM_SET_STARTUP_PROCEDURE	MmMp.h	/^(EFIAPI *EFI_MM_SET_STARTUP_PROCEDURE) ($/;"	t
EFI_MM_STANDBY_BUTTON_DISPATCH_PROTOCOL	MmStandbyButtonDispatch.h	/^typedef struct _EFI_MM_STANDBY_BUTTON_DISPATCH_PROTOCOL EFI_MM_STANDBY_BUTTON_DISPATCH_PROTOCOL;$/;"	t	typeref:struct:_EFI_MM_STANDBY_BUTTON_DISPATCH_PROTOCOL
EFI_MM_STANDBY_BUTTON_DISPATCH_PROTOCOL_GUID	MmStandbyButtonDispatch.h	20;"	d
EFI_MM_STANDBY_BUTTON_REGISTER	MmStandbyButtonDispatch.h	/^(EFIAPI *EFI_MM_STANDBY_BUTTON_REGISTER)($/;"	t
EFI_MM_STANDBY_BUTTON_REGISTER_CONTEXT	MmStandbyButtonDispatch.h	/^} EFI_MM_STANDBY_BUTTON_REGISTER_CONTEXT;$/;"	t	typeref:struct:__anon96
EFI_MM_STANDBY_BUTTON_UNREGISTER	MmStandbyButtonDispatch.h	/^(EFIAPI *EFI_MM_STANDBY_BUTTON_UNREGISTER)($/;"	t
EFI_MM_STATUS_CODE_PROTOCOL	MmStatusCode.h	/^typedef struct _EFI_MM_STATUS_CODE_PROTOCOL  EFI_MM_STATUS_CODE_PROTOCOL;$/;"	t	typeref:struct:_EFI_MM_STATUS_CODE_PROTOCOL
EFI_MM_STATUS_CODE_PROTOCOL_GUID	MmStatusCode.h	15;"	d
EFI_MM_SW_CONTEXT	MmSwDispatch.h	/^} EFI_MM_SW_CONTEXT;$/;"	t	typeref:struct:__anon163
EFI_MM_SW_DISPATCH_PROTOCOL	MmSwDispatch.h	/^typedef struct _EFI_MM_SW_DISPATCH_PROTOCOL  EFI_MM_SW_DISPATCH_PROTOCOL;$/;"	t	typeref:struct:_EFI_MM_SW_DISPATCH_PROTOCOL
EFI_MM_SW_DISPATCH_PROTOCOL_GUID	MmSwDispatch.h	17;"	d
EFI_MM_SW_REGISTER	MmSwDispatch.h	/^(EFIAPI *EFI_MM_SW_REGISTER)($/;"	t
EFI_MM_SW_REGISTER_CONTEXT	MmSwDispatch.h	/^} EFI_MM_SW_REGISTER_CONTEXT;$/;"	t	typeref:struct:__anon162
EFI_MM_SW_UNREGISTER	MmSwDispatch.h	/^(EFIAPI *EFI_MM_SW_UNREGISTER)($/;"	t
EFI_MM_SX_DISPATCH_PROTOCOL	MmSxDispatch.h	/^typedef struct _EFI_MM_SX_DISPATCH_PROTOCOL  EFI_MM_SX_DISPATCH_PROTOCOL;$/;"	t	typeref:struct:_EFI_MM_SX_DISPATCH_PROTOCOL
EFI_MM_SX_DISPATCH_PROTOCOL_GUID	MmSxDispatch.h	17;"	d
EFI_MM_SX_REGISTER	MmSxDispatch.h	/^(EFIAPI *EFI_MM_SX_REGISTER)($/;"	t
EFI_MM_SX_REGISTER_CONTEXT	MmSxDispatch.h	/^} EFI_MM_SX_REGISTER_CONTEXT;$/;"	t	typeref:struct:__anon367
EFI_MM_SX_UNREGISTER	MmSxDispatch.h	/^(EFIAPI *EFI_MM_SX_UNREGISTER)($/;"	t
EFI_MM_USB_DISPATCH_PROTOCOL	MmUsbDispatch.h	/^typedef struct _EFI_MM_USB_DISPATCH_PROTOCOL EFI_MM_USB_DISPATCH_PROTOCOL;$/;"	t	typeref:struct:_EFI_MM_USB_DISPATCH_PROTOCOL
EFI_MM_USB_DISPATCH_PROTOCOL_GUID	MmUsbDispatch.h	20;"	d
EFI_MM_USB_REGISTER	MmUsbDispatch.h	/^(EFIAPI *EFI_MM_USB_REGISTER)($/;"	t
EFI_MM_USB_REGISTER_CONTEXT	MmUsbDispatch.h	/^} EFI_MM_USB_REGISTER_CONTEXT;$/;"	t	typeref:struct:__anon251
EFI_MM_USB_UNREGISTER	MmUsbDispatch.h	/^(EFIAPI *EFI_MM_USB_UNREGISTER)($/;"	t
EFI_MM_WRITE_SAVE_STATE	MmCpu.h	/^(EFIAPI *EFI_MM_WRITE_SAVE_STATE)($/;"	t
EFI_MONOTONIC_COUNTER_ARCH_PROTOCOL_GUID	MonotonicCounter.h	17;"	d
EFI_MP_SERVICES_ENABLEDISABLEAP	MpService.h	/^(EFIAPI *EFI_MP_SERVICES_ENABLEDISABLEAP)($/;"	t
EFI_MP_SERVICES_GET_NUMBER_OF_PROCESSORS	MpService.h	/^(EFIAPI *EFI_MP_SERVICES_GET_NUMBER_OF_PROCESSORS)($/;"	t
EFI_MP_SERVICES_GET_PROCESSOR_INFO	MpService.h	/^(EFIAPI *EFI_MP_SERVICES_GET_PROCESSOR_INFO)($/;"	t
EFI_MP_SERVICES_PROTOCOL	MpService.h	/^typedef struct _EFI_MP_SERVICES_PROTOCOL EFI_MP_SERVICES_PROTOCOL;$/;"	t	typeref:struct:_EFI_MP_SERVICES_PROTOCOL
EFI_MP_SERVICES_PROTOCOL_GUID	MpService.h	45;"	d
EFI_MP_SERVICES_STARTUP_ALL_APS	MpService.h	/^(EFIAPI *EFI_MP_SERVICES_STARTUP_ALL_APS)($/;"	t
EFI_MP_SERVICES_STARTUP_THIS_AP	MpService.h	/^(EFIAPI *EFI_MP_SERVICES_STARTUP_THIS_AP)($/;"	t
EFI_MP_SERVICES_SWITCH_BSP	MpService.h	/^(EFIAPI *EFI_MP_SERVICES_SWITCH_BSP)($/;"	t
EFI_MP_SERVICES_WHOAMI	MpService.h	/^(EFIAPI *EFI_MP_SERVICES_WHOAMI)($/;"	t
EFI_MTFTP4_ACK8_HEADER	Mtftp4.h	/^} EFI_MTFTP4_ACK8_HEADER;$/;"	t	typeref:struct:__anon430
EFI_MTFTP4_ACK_HEADER	Mtftp4.h	/^} EFI_MTFTP4_ACK_HEADER;$/;"	t	typeref:struct:__anon428
EFI_MTFTP4_CHECK_PACKET	Mtftp4.h	/^(EFIAPI *EFI_MTFTP4_CHECK_PACKET)($/;"	t
EFI_MTFTP4_CONFIGURE	Mtftp4.h	/^(EFIAPI *EFI_MTFTP4_CONFIGURE)($/;"	t
EFI_MTFTP4_CONFIG_DATA	Mtftp4.h	/^} EFI_MTFTP4_CONFIG_DATA;$/;"	t	typeref:struct:__anon434
EFI_MTFTP4_DATA8_HEADER	Mtftp4.h	/^} EFI_MTFTP4_DATA8_HEADER;$/;"	t	typeref:struct:__anon429
EFI_MTFTP4_DATA_HEADER	Mtftp4.h	/^} EFI_MTFTP4_DATA_HEADER;$/;"	t	typeref:struct:__anon427
EFI_MTFTP4_ERRORCODE_ACCESS_VIOLATION	Mtftp4.h	46;"	d
EFI_MTFTP4_ERRORCODE_DISK_FULL	Mtftp4.h	47;"	d
EFI_MTFTP4_ERRORCODE_FILE_ALREADY_EXISTS	Mtftp4.h	50;"	d
EFI_MTFTP4_ERRORCODE_FILE_NOT_FOUND	Mtftp4.h	45;"	d
EFI_MTFTP4_ERRORCODE_ILLEGAL_OPERATION	Mtftp4.h	48;"	d
EFI_MTFTP4_ERRORCODE_NOT_DEFINED	Mtftp4.h	44;"	d
EFI_MTFTP4_ERRORCODE_NO_SUCH_USER	Mtftp4.h	51;"	d
EFI_MTFTP4_ERRORCODE_REQUEST_DENIED	Mtftp4.h	52;"	d
EFI_MTFTP4_ERRORCODE_UNKNOWN_TRANSFER_ID	Mtftp4.h	49;"	d
EFI_MTFTP4_ERROR_HEADER	Mtftp4.h	/^} EFI_MTFTP4_ERROR_HEADER;$/;"	t	typeref:struct:__anon431
EFI_MTFTP4_GET_INFO	Mtftp4.h	/^(EFIAPI *EFI_MTFTP4_GET_INFO)($/;"	t
EFI_MTFTP4_GET_MODE_DATA	Mtftp4.h	/^(EFIAPI *EFI_MTFTP4_GET_MODE_DATA)($/;"	t
EFI_MTFTP4_MODE_DATA	Mtftp4.h	/^} EFI_MTFTP4_MODE_DATA;$/;"	t	typeref:struct:__anon435
EFI_MTFTP4_OACK_HEADER	Mtftp4.h	/^} EFI_MTFTP4_OACK_HEADER;$/;"	t	typeref:struct:__anon426
EFI_MTFTP4_OPCODE_ACK	Mtftp4.h	34;"	d
EFI_MTFTP4_OPCODE_ACK8	Mtftp4.h	39;"	d
EFI_MTFTP4_OPCODE_DATA	Mtftp4.h	33;"	d
EFI_MTFTP4_OPCODE_DATA8	Mtftp4.h	38;"	d
EFI_MTFTP4_OPCODE_DIR	Mtftp4.h	37;"	d
EFI_MTFTP4_OPCODE_ERROR	Mtftp4.h	35;"	d
EFI_MTFTP4_OPCODE_OACK	Mtftp4.h	36;"	d
EFI_MTFTP4_OPCODE_RRQ	Mtftp4.h	31;"	d
EFI_MTFTP4_OPCODE_WRQ	Mtftp4.h	32;"	d
EFI_MTFTP4_OPTION	Mtftp4.h	/^} EFI_MTFTP4_OPTION;$/;"	t	typeref:struct:__anon433
EFI_MTFTP4_OVERRIDE_DATA	Mtftp4.h	/^} EFI_MTFTP4_OVERRIDE_DATA;$/;"	t	typeref:struct:__anon436
EFI_MTFTP4_PACKET	Mtftp4.h	/^} EFI_MTFTP4_PACKET;$/;"	t	typeref:union:__anon432
EFI_MTFTP4_PACKET_NEEDED	Mtftp4.h	/^(EFIAPI *EFI_MTFTP4_PACKET_NEEDED)($/;"	t
EFI_MTFTP4_PARSE_OPTIONS	Mtftp4.h	/^(EFIAPI *EFI_MTFTP4_PARSE_OPTIONS)($/;"	t
EFI_MTFTP4_POLL	Mtftp4.h	/^(EFIAPI *EFI_MTFTP4_POLL)($/;"	t
EFI_MTFTP4_PROTOCOL	Mtftp4.h	/^typedef struct _EFI_MTFTP4_PROTOCOL EFI_MTFTP4_PROTOCOL;$/;"	t	typeref:struct:_EFI_MTFTP4_PROTOCOL
EFI_MTFTP4_PROTOCOL_GUID	Mtftp4.h	20;"	d
EFI_MTFTP4_READ_DIRECTORY	Mtftp4.h	/^(EFIAPI *EFI_MTFTP4_READ_DIRECTORY)($/;"	t
EFI_MTFTP4_READ_FILE	Mtftp4.h	/^(EFIAPI *EFI_MTFTP4_READ_FILE)($/;"	t
EFI_MTFTP4_REQ_HEADER	Mtftp4.h	/^} EFI_MTFTP4_REQ_HEADER;$/;"	t	typeref:struct:__anon425
EFI_MTFTP4_SERVICE_BINDING_PROTOCOL_GUID	Mtftp4.h	15;"	d
EFI_MTFTP4_TIMEOUT_CALLBACK	Mtftp4.h	/^(EFIAPI *EFI_MTFTP4_TIMEOUT_CALLBACK)($/;"	t
EFI_MTFTP4_TOKEN	Mtftp4.h	/^typedef struct _EFI_MTFTP4_TOKEN EFI_MTFTP4_TOKEN;$/;"	t	typeref:struct:_EFI_MTFTP4_TOKEN
EFI_MTFTP4_WRITE_FILE	Mtftp4.h	/^(EFIAPI *EFI_MTFTP4_WRITE_FILE)($/;"	t
EFI_MTFTP6_ACK8_HEADER	Mtftp6.h	/^} EFI_MTFTP6_ACK8_HEADER;$/;"	t	typeref:struct:__anon554
EFI_MTFTP6_ACK_HEADER	Mtftp6.h	/^} EFI_MTFTP6_ACK_HEADER;$/;"	t	typeref:struct:__anon552
EFI_MTFTP6_CHECK_PACKET	Mtftp6.h	/^(EFIAPI *EFI_MTFTP6_CHECK_PACKET)($/;"	t
EFI_MTFTP6_CONFIGURE	Mtftp6.h	/^(EFIAPI *EFI_MTFTP6_CONFIGURE)($/;"	t
EFI_MTFTP6_CONFIG_DATA	Mtftp6.h	/^} EFI_MTFTP6_CONFIG_DATA;$/;"	t	typeref:struct:__anon557
EFI_MTFTP6_DATA8_HEADER	Mtftp6.h	/^} EFI_MTFTP6_DATA8_HEADER;$/;"	t	typeref:struct:__anon553
EFI_MTFTP6_DATA_HEADER	Mtftp6.h	/^} EFI_MTFTP6_DATA_HEADER;$/;"	t	typeref:struct:__anon551
EFI_MTFTP6_ERRORCODE_ACCESS_VIOLATION	Mtftp6.h	61;"	d
EFI_MTFTP6_ERRORCODE_DISK_FULL	Mtftp6.h	65;"	d
EFI_MTFTP6_ERRORCODE_FILE_ALREADY_EXISTS	Mtftp6.h	77;"	d
EFI_MTFTP6_ERRORCODE_FILE_NOT_FOUND	Mtftp6.h	57;"	d
EFI_MTFTP6_ERRORCODE_ILLEGAL_OPERATION	Mtftp6.h	69;"	d
EFI_MTFTP6_ERRORCODE_NOT_DEFINED	Mtftp6.h	53;"	d
EFI_MTFTP6_ERRORCODE_NO_SUCH_USER	Mtftp6.h	81;"	d
EFI_MTFTP6_ERRORCODE_REQUEST_DENIED	Mtftp6.h	85;"	d
EFI_MTFTP6_ERRORCODE_UNKNOWN_TRANSFER_ID	Mtftp6.h	73;"	d
EFI_MTFTP6_ERROR_HEADER	Mtftp6.h	/^} EFI_MTFTP6_ERROR_HEADER;$/;"	t	typeref:struct:__anon555
EFI_MTFTP6_GET_INFO	Mtftp6.h	/^(EFIAPI *EFI_MTFTP6_GET_INFO)($/;"	t
EFI_MTFTP6_GET_MODE_DATA	Mtftp6.h	/^(EFIAPI *EFI_MTFTP6_GET_MODE_DATA)($/;"	t
EFI_MTFTP6_MODE_DATA	Mtftp6.h	/^} EFI_MTFTP6_MODE_DATA;$/;"	t	typeref:struct:__anon558
EFI_MTFTP6_OACK_HEADER	Mtftp6.h	/^} EFI_MTFTP6_OACK_HEADER;$/;"	t	typeref:struct:__anon550
EFI_MTFTP6_OPCODE_ACK	Mtftp6.h	39;"	d
EFI_MTFTP6_OPCODE_ACK8	Mtftp6.h	44;"	d
EFI_MTFTP6_OPCODE_DATA	Mtftp6.h	38;"	d
EFI_MTFTP6_OPCODE_DATA8	Mtftp6.h	43;"	d
EFI_MTFTP6_OPCODE_DIR	Mtftp6.h	42;"	d
EFI_MTFTP6_OPCODE_ERROR	Mtftp6.h	40;"	d
EFI_MTFTP6_OPCODE_OACK	Mtftp6.h	41;"	d
EFI_MTFTP6_OPCODE_RRQ	Mtftp6.h	36;"	d
EFI_MTFTP6_OPCODE_WRQ	Mtftp6.h	37;"	d
EFI_MTFTP6_OPTION	Mtftp6.h	/^} EFI_MTFTP6_OPTION;$/;"	t	typeref:struct:__anon560
EFI_MTFTP6_OVERRIDE_DATA	Mtftp6.h	/^} EFI_MTFTP6_OVERRIDE_DATA;$/;"	t	typeref:struct:__anon559
EFI_MTFTP6_PACKET	Mtftp6.h	/^} EFI_MTFTP6_PACKET;$/;"	t	typeref:union:__anon556
EFI_MTFTP6_PACKET_NEEDED	Mtftp6.h	/^(EFIAPI *EFI_MTFTP6_PACKET_NEEDED)($/;"	t
EFI_MTFTP6_PARSE_OPTIONS	Mtftp6.h	/^(EFIAPI *EFI_MTFTP6_PARSE_OPTIONS)($/;"	t
EFI_MTFTP6_POLL	Mtftp6.h	/^(EFIAPI *EFI_MTFTP6_POLL)($/;"	t
EFI_MTFTP6_PROTOCOL	Mtftp6.h	/^typedef struct _EFI_MTFTP6_PROTOCOL EFI_MTFTP6_PROTOCOL;$/;"	t	typeref:struct:_EFI_MTFTP6_PROTOCOL
EFI_MTFTP6_PROTOCOL_GUID	Mtftp6.h	25;"	d
EFI_MTFTP6_READ_DIRECTORY	Mtftp6.h	/^(EFIAPI *EFI_MTFTP6_READ_DIRECTORY)($/;"	t
EFI_MTFTP6_READ_FILE	Mtftp6.h	/^(EFIAPI *EFI_MTFTP6_READ_FILE)($/;"	t
EFI_MTFTP6_REQ_HEADER	Mtftp6.h	/^} EFI_MTFTP6_REQ_HEADER;$/;"	t	typeref:struct:__anon549
EFI_MTFTP6_SERVICE_BINDING_PROTOCOL_GUID	Mtftp6.h	20;"	d
EFI_MTFTP6_TIMEOUT_CALLBACK	Mtftp6.h	/^(EFIAPI *EFI_MTFTP6_TIMEOUT_CALLBACK)($/;"	t
EFI_MTFTP6_TOKEN	Mtftp6.h	/^typedef struct _EFI_MTFTP6_TOKEN    EFI_MTFTP6_TOKEN;$/;"	t	typeref:struct:_EFI_MTFTP6_TOKEN
EFI_MTFTP6_WRITE_FILE	Mtftp6.h	/^(EFIAPI *EFI_MTFTP6_WRITE_FILE)($/;"	t
EFI_NETWORK_INTERFACE_IDENTIFIER_INTERFACE	NetworkInterfaceIdentifier.h	/^typedef EFI_NETWORK_INTERFACE_IDENTIFIER_PROTOCOL   EFI_NETWORK_INTERFACE_IDENTIFIER_INTERFACE;$/;"	t
EFI_NETWORK_INTERFACE_IDENTIFIER_INTERFACE_REVISION	NetworkInterfaceIdentifier.h	40;"	d
EFI_NETWORK_INTERFACE_IDENTIFIER_PROTOCOL	NetworkInterfaceIdentifier.h	/^typedef struct _EFI_NETWORK_INTERFACE_IDENTIFIER_PROTOCOL  EFI_NETWORK_INTERFACE_IDENTIFIER_PROTOCOL;$/;"	t	typeref:struct:_EFI_NETWORK_INTERFACE_IDENTIFIER_PROTOCOL
EFI_NETWORK_INTERFACE_IDENTIFIER_PROTOCOL_GUID	NetworkInterfaceIdentifier.h	18;"	d
EFI_NETWORK_INTERFACE_IDENTIFIER_PROTOCOL_GUID_31	NetworkInterfaceIdentifier.h	26;"	d
EFI_NETWORK_INTERFACE_IDENTIFIER_PROTOCOL_REVISION	NetworkInterfaceIdentifier.h	34;"	d
EFI_NETWORK_INTERFACE_TYPE	NetworkInterfaceIdentifier.h	/^} EFI_NETWORK_INTERFACE_TYPE;$/;"	t	typeref:enum:__anon2
EFI_NETWORK_STATISTICS	SimpleNetwork.h	/^} EFI_NETWORK_STATISTICS;$/;"	t	typeref:struct:__anon264
EFI_NUM_LOCK_ACTIVE	SimpleTextInEx.h	116;"	d
EFI_NVDIMM_LABEL	NvdimmLabel.h	/^} EFI_NVDIMM_LABEL;$/;"	t	typeref:struct:__anon261
EFI_NVDIMM_LABEL_FLAGS_LOCAL	NvdimmLabel.h	112;"	d
EFI_NVDIMM_LABEL_FLAGS_RESERVED	NvdimmLabel.h	118;"	d
EFI_NVDIMM_LABEL_FLAGS_ROLABEL	NvdimmLabel.h	106;"	d
EFI_NVDIMM_LABEL_FLAGS_UPDATING	NvdimmLabel.h	123;"	d
EFI_NVDIMM_LABEL_INDEX_ALIGN	NvdimmLabel.h	27;"	d
EFI_NVDIMM_LABEL_INDEX_BLOCK	NvdimmLabel.h	/^} EFI_NVDIMM_LABEL_INDEX_BLOCK;$/;"	t	typeref:struct:__anon260
EFI_NVDIMM_LABEL_INDEX_SIG_LEN	NvdimmLabel.h	26;"	d
EFI_NVDIMM_LABEL_NAME_LEN	NvdimmLabel.h	101;"	d
EFI_NVDIMM_LABEL_PROTOCOL	NvdimmLabel.h	/^typedef struct _EFI_NVDIMM_LABEL_PROTOCOL EFI_NVDIMM_LABEL_PROTOCOL;$/;"	t	typeref:struct:_EFI_NVDIMM_LABEL_PROTOCOL
EFI_NVDIMM_LABEL_PROTOCOL_GUID	NvdimmLabel.h	19;"	d
EFI_NVDIMM_LABEL_SET_COOKIE_INFO	NvdimmLabel.h	/^} EFI_NVDIMM_LABEL_SET_COOKIE_INFO;$/;"	t	typeref:struct:__anon263
EFI_NVDIMM_LABEL_SET_COOKIE_MAP	NvdimmLabel.h	/^} EFI_NVDIMM_LABEL_SET_COOKIE_MAP;$/;"	t	typeref:struct:__anon262
EFI_NVDIMM_LABEL_STORAGE_INFORMATION	NvdimmLabel.h	/^(EFIAPI *EFI_NVDIMM_LABEL_STORAGE_INFORMATION) ($/;"	t
EFI_NVDIMM_LABEL_STORAGE_READ	NvdimmLabel.h	/^(EFIAPI *EFI_NVDIMM_LABEL_STORAGE_READ) ($/;"	t
EFI_NVDIMM_LABEL_STORAGE_WRITE	NvdimmLabel.h	/^(EFIAPI *EFI_NVDIMM_LABEL_STORAGE_WRITE) ($/;"	t
EFI_NVM_EXPRESS_COMMAND	NvmExpressPassthru.h	/^} EFI_NVM_EXPRESS_COMMAND;$/;"	t	typeref:struct:__anon543
EFI_NVM_EXPRESS_COMPLETION	NvmExpressPassthru.h	/^} EFI_NVM_EXPRESS_COMPLETION;$/;"	t	typeref:struct:__anon544
EFI_NVM_EXPRESS_PASS_THRU_ATTRIBUTES_CMD_SET_NVM	NvmExpressPassthru.h	49;"	d
EFI_NVM_EXPRESS_PASS_THRU_ATTRIBUTES_LOGICAL	NvmExpressPassthru.h	39;"	d
EFI_NVM_EXPRESS_PASS_THRU_ATTRIBUTES_NONBLOCKIO	NvmExpressPassthru.h	44;"	d
EFI_NVM_EXPRESS_PASS_THRU_ATTRIBUTES_PHYSICAL	NvmExpressPassthru.h	34;"	d
EFI_NVM_EXPRESS_PASS_THRU_BUILD_DEVICE_PATH	NvmExpressPassthru.h	/^(EFIAPI *EFI_NVM_EXPRESS_PASS_THRU_BUILD_DEVICE_PATH)($/;"	t
EFI_NVM_EXPRESS_PASS_THRU_COMMAND_PACKET	NvmExpressPassthru.h	/^} EFI_NVM_EXPRESS_PASS_THRU_COMMAND_PACKET;$/;"	t	typeref:struct:__anon545
EFI_NVM_EXPRESS_PASS_THRU_GET_NAMESPACE	NvmExpressPassthru.h	/^(EFIAPI *EFI_NVM_EXPRESS_PASS_THRU_GET_NAMESPACE)($/;"	t
EFI_NVM_EXPRESS_PASS_THRU_GET_NEXT_NAMESPACE	NvmExpressPassthru.h	/^(EFIAPI *EFI_NVM_EXPRESS_PASS_THRU_GET_NEXT_NAMESPACE)($/;"	t
EFI_NVM_EXPRESS_PASS_THRU_MODE	NvmExpressPassthru.h	/^} EFI_NVM_EXPRESS_PASS_THRU_MODE;$/;"	t	typeref:struct:__anon541
EFI_NVM_EXPRESS_PASS_THRU_PASSTHRU	NvmExpressPassthru.h	/^(EFIAPI *EFI_NVM_EXPRESS_PASS_THRU_PASSTHRU)($/;"	t
EFI_NVM_EXPRESS_PASS_THRU_PROTOCOL	NvmExpressPassthru.h	/^typedef struct _EFI_NVM_EXPRESS_PASS_THRU_PROTOCOL EFI_NVM_EXPRESS_PASS_THRU_PROTOCOL;$/;"	t	typeref:struct:_EFI_NVM_EXPRESS_PASS_THRU_PROTOCOL
EFI_NVM_EXPRESS_PASS_THRU_PROTOCOL_GUID	NvmExpressPassthru.h	17;"	d
EFI_PADDING_NONE_GUID	SmartCardEdge.h	176;"	d
EFI_PADDING_RSAES_OAEP_GUID	SmartCardEdge.h	196;"	d
EFI_PADDING_RSAES_PKCS1V1P5_GUID	SmartCardEdge.h	186;"	d
EFI_PADDING_RSASSA_PKCS1V1P5_GUID	SmartCardEdge.h	153;"	d
EFI_PADDING_RSASSA_PSS_GUID	SmartCardEdge.h	163;"	d
EFI_PARITY_TYPE	SerialIo.h	/^} EFI_PARITY_TYPE;$/;"	t	typeref:enum:__anon546
EFI_PARTITION_INFO_PROTOCOL	PartitionInfo.h	/^} EFI_PARTITION_INFO_PROTOCOL;$/;"	t	typeref:struct:__anon482
EFI_PARTITION_INFO_PROTOCOL_GUID	PartitionInfo.h	21;"	d
EFI_PARTITION_INFO_PROTOCOL_REVISION	PartitionInfo.h	25;"	d
EFI_PCD_INVALID_TOKEN_NUMBER	PiPcd.h	30;"	d
EFI_PCD_PROTOCOL	PiPcd.h	/^} EFI_PCD_PROTOCOL;$/;"	t	typeref:struct:_EFI_PCD_PROTOCOL
EFI_PCD_PROTOCOL_CALLBACK	PiPcd.h	/^(EFIAPI *EFI_PCD_PROTOCOL_CALLBACK)($/;"	t
EFI_PCD_PROTOCOL_CALLBACK_ON_SET	PiPcd.h	/^(EFIAPI *EFI_PCD_PROTOCOL_CALLBACK_ON_SET)($/;"	t
EFI_PCD_PROTOCOL_CANCEL_CALLBACK	PiPcd.h	/^(EFIAPI *EFI_PCD_PROTOCOL_CANCEL_CALLBACK)($/;"	t
EFI_PCD_PROTOCOL_GET_16	PiPcd.h	/^(EFIAPI *EFI_PCD_PROTOCOL_GET_16)($/;"	t
EFI_PCD_PROTOCOL_GET_32	PiPcd.h	/^(EFIAPI *EFI_PCD_PROTOCOL_GET_32)($/;"	t
EFI_PCD_PROTOCOL_GET_64	PiPcd.h	/^(EFIAPI *EFI_PCD_PROTOCOL_GET_64)($/;"	t
EFI_PCD_PROTOCOL_GET_8	PiPcd.h	/^(EFIAPI *EFI_PCD_PROTOCOL_GET_8)($/;"	t
EFI_PCD_PROTOCOL_GET_BOOLEAN	PiPcd.h	/^(EFIAPI *EFI_PCD_PROTOCOL_GET_BOOLEAN)($/;"	t
EFI_PCD_PROTOCOL_GET_NEXT_TOKEN	PiPcd.h	/^(EFIAPI *EFI_PCD_PROTOCOL_GET_NEXT_TOKEN)($/;"	t
EFI_PCD_PROTOCOL_GET_NEXT_TOKEN_SPACE	PiPcd.h	/^(EFIAPI *EFI_PCD_PROTOCOL_GET_NEXT_TOKEN_SPACE)($/;"	t
EFI_PCD_PROTOCOL_GET_POINTER	PiPcd.h	/^(EFIAPI *EFI_PCD_PROTOCOL_GET_POINTER)($/;"	t
EFI_PCD_PROTOCOL_GET_SIZE	PiPcd.h	/^(EFIAPI *EFI_PCD_PROTOCOL_GET_SIZE)($/;"	t
EFI_PCD_PROTOCOL_GUID	PiPcd.h	27;"	d
EFI_PCD_PROTOCOL_SET_16	PiPcd.h	/^(EFIAPI *EFI_PCD_PROTOCOL_SET_16)($/;"	t
EFI_PCD_PROTOCOL_SET_32	PiPcd.h	/^(EFIAPI *EFI_PCD_PROTOCOL_SET_32)($/;"	t
EFI_PCD_PROTOCOL_SET_64	PiPcd.h	/^(EFIAPI *EFI_PCD_PROTOCOL_SET_64)($/;"	t
EFI_PCD_PROTOCOL_SET_8	PiPcd.h	/^(EFIAPI *EFI_PCD_PROTOCOL_SET_8)($/;"	t
EFI_PCD_PROTOCOL_SET_BOOLEAN	PiPcd.h	/^(EFIAPI *EFI_PCD_PROTOCOL_SET_BOOLEAN)($/;"	t
EFI_PCD_PROTOCOL_SET_POINTER	PiPcd.h	/^(EFIAPI *EFI_PCD_PROTOCOL_SET_POINTER)($/;"	t
EFI_PCD_PROTOCOL_SET_SKU	PiPcd.h	/^(EFIAPI *EFI_PCD_PROTOCOL_SET_SKU)($/;"	t
EFI_PCI_ADDRESS	PciRootBridgeIo.h	104;"	d
EFI_PCI_ATTRIBUTE_DUAL_ADDRESS_CYCLE	PciRootBridgeIo.h	95;"	d
EFI_PCI_ATTRIBUTE_IDE_PRIMARY_IO	PciRootBridgeIo.h	90;"	d
EFI_PCI_ATTRIBUTE_IDE_SECONDARY_IO	PciRootBridgeIo.h	91;"	d
EFI_PCI_ATTRIBUTE_INVALID_FOR_ALLOCATE_BUFFER	PciRootBridgeIo.h	102;"	d
EFI_PCI_ATTRIBUTE_ISA_IO	PciRootBridgeIo.h	86;"	d
EFI_PCI_ATTRIBUTE_ISA_IO_16	PciRootBridgeIo.h	96;"	d
EFI_PCI_ATTRIBUTE_ISA_MOTHERBOARD_IO	PciRootBridgeIo.h	85;"	d
EFI_PCI_ATTRIBUTE_MEMORY_CACHED	PciRootBridgeIo.h	93;"	d
EFI_PCI_ATTRIBUTE_MEMORY_DISABLE	PciRootBridgeIo.h	94;"	d
EFI_PCI_ATTRIBUTE_MEMORY_WRITE_COMBINE	PciRootBridgeIo.h	92;"	d
EFI_PCI_ATTRIBUTE_VALID_FOR_ALLOCATE_BUFFER	PciRootBridgeIo.h	100;"	d
EFI_PCI_ATTRIBUTE_VGA_IO	PciRootBridgeIo.h	89;"	d
EFI_PCI_ATTRIBUTE_VGA_IO_16	PciRootBridgeIo.h	98;"	d
EFI_PCI_ATTRIBUTE_VGA_MEMORY	PciRootBridgeIo.h	88;"	d
EFI_PCI_ATTRIBUTE_VGA_PALETTE_IO	PciRootBridgeIo.h	87;"	d
EFI_PCI_ATTRIBUTE_VGA_PALETTE_IO_16	PciRootBridgeIo.h	97;"	d
EFI_PCI_CHIPSET_EXECUTION_PHASE	PciPlatform.h	/^typedef EFI_PCI_EXECUTION_PHASE EFI_PCI_CHIPSET_EXECUTION_PHASE;$/;"	t
EFI_PCI_CONTROLLER_RESOURCE_ALLOCATION_PHASE	PciHostBridgeResourceAllocation.h	/^} EFI_PCI_CONTROLLER_RESOURCE_ALLOCATION_PHASE;$/;"	t	typeref:enum:__anon273
EFI_PCI_DEVICE_ENABLE	PciIo.h	69;"	d
EFI_PCI_DEVICE_PATH	DeviceIo.h	/^(EFIAPI *EFI_PCI_DEVICE_PATH)($/;"	t
EFI_PCI_ENUMERATION_COMPLETE_GUID	PciEnumerationComplete.h	17;"	d
EFI_PCI_EXECUTION_PHASE	PciPlatform.h	/^} EFI_PCI_EXECUTION_PHASE;$/;"	t	typeref:enum:__anon246
EFI_PCI_HOST_BRIDGE_COMBINE_MEM_PMEM	PciHostBridgeResourceAllocation.h	42;"	d
EFI_PCI_HOST_BRIDGE_MEM64_DECODE	PciHostBridgeResourceAllocation.h	50;"	d
EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PHASE	PciHostBridgeResourceAllocation.h	/^} EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PHASE;$/;"	t	typeref:enum:__anon272
EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL	PciHostBridgeResourceAllocation.h	/^typedef struct _EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL;$/;"	t	typeref:struct:_EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL
EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL_GET_ATTRIBUTES	PciHostBridgeResourceAllocation.h	/^(EFIAPI *EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL_GET_ATTRIBUTES)($/;"	t
EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL_GET_NEXT_ROOT_BRIDGE	PciHostBridgeResourceAllocation.h	/^(EFIAPI *EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL_GET_NEXT_ROOT_BRIDGE)($/;"	t
EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL_GET_PROPOSED_RESOURCES	PciHostBridgeResourceAllocation.h	/^(EFIAPI *EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL_GET_PROPOSED_RESOURCES)($/;"	t
EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL_GUID	PciHostBridgeResourceAllocation.h	27;"	d
EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL_NOTIFY_PHASE	PciHostBridgeResourceAllocation.h	/^(EFIAPI *EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL_NOTIFY_PHASE)($/;"	t
EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL_PREPROCESS_CONTROLLER	PciHostBridgeResourceAllocation.h	/^(EFIAPI *EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL_PREPROCESS_CONTROLLER)($/;"	t
EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL_SET_BUS_NUMBERS	PciHostBridgeResourceAllocation.h	/^(EFIAPI *EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL_SET_BUS_NUMBERS)($/;"	t
EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL_START_BUS_ENUMERATION	PciHostBridgeResourceAllocation.h	/^(EFIAPI *EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL_START_BUS_ENUMERATION)($/;"	t
EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL_SUBMIT_RESOURCES	PciHostBridgeResourceAllocation.h	/^(EFIAPI *EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL_SUBMIT_RESOURCES)($/;"	t
EFI_PCI_HOTPLUG_OPERATION	PciHotPlugRequest.h	/^} EFI_PCI_HOTPLUG_OPERATION;$/;"	t	typeref:enum:__anon77
EFI_PCI_HOTPLUG_REQUEST_NOTIFY	PciHotPlugRequest.h	/^(EFIAPI *EFI_PCI_HOTPLUG_REQUEST_NOTIFY)($/;"	t
EFI_PCI_HOTPLUG_REQUEST_PROTOCOL	PciHotPlugRequest.h	/^typedef struct _EFI_PCI_HOTPLUG_REQUEST_PROTOCOL  EFI_PCI_HOTPLUG_REQUEST_PROTOCOL;$/;"	t	typeref:struct:_EFI_PCI_HOTPLUG_REQUEST_PROTOCOL
EFI_PCI_HOTPLUG_REQUEST_PROTOCOL_GUID	PciHotPlugRequest.h	46;"	d
EFI_PCI_HOT_PLUG_INIT_PROTOCOL	PciHotPlugInit.h	/^typedef struct _EFI_PCI_HOT_PLUG_INIT_PROTOCOL EFI_PCI_HOT_PLUG_INIT_PROTOCOL;$/;"	t	typeref:struct:_EFI_PCI_HOT_PLUG_INIT_PROTOCOL
EFI_PCI_HOT_PLUG_INIT_PROTOCOL_GUID	PciHotPlugInit.h	58;"	d
EFI_PCI_IO_ATTRIBUTE_BUS_MASTER	PciIo.h	59;"	d
EFI_PCI_IO_ATTRIBUTE_DUAL_ADDRESS_CYCLE	PciIo.h	64;"	d
EFI_PCI_IO_ATTRIBUTE_EMBEDDED_DEVICE	PciIo.h	62;"	d
EFI_PCI_IO_ATTRIBUTE_EMBEDDED_ROM	PciIo.h	63;"	d
EFI_PCI_IO_ATTRIBUTE_IDE_PRIMARY_IO	PciIo.h	54;"	d
EFI_PCI_IO_ATTRIBUTE_IDE_SECONDARY_IO	PciIo.h	55;"	d
EFI_PCI_IO_ATTRIBUTE_IO	PciIo.h	57;"	d
EFI_PCI_IO_ATTRIBUTE_ISA_IO	PciIo.h	50;"	d
EFI_PCI_IO_ATTRIBUTE_ISA_IO_16	PciIo.h	65;"	d
EFI_PCI_IO_ATTRIBUTE_ISA_MOTHERBOARD_IO	PciIo.h	49;"	d
EFI_PCI_IO_ATTRIBUTE_MASK	PciIo.h	48;"	d
EFI_PCI_IO_ATTRIBUTE_MEMORY	PciIo.h	58;"	d
EFI_PCI_IO_ATTRIBUTE_MEMORY_CACHED	PciIo.h	60;"	d
EFI_PCI_IO_ATTRIBUTE_MEMORY_DISABLE	PciIo.h	61;"	d
EFI_PCI_IO_ATTRIBUTE_MEMORY_WRITE_COMBINE	PciIo.h	56;"	d
EFI_PCI_IO_ATTRIBUTE_VGA_IO	PciIo.h	53;"	d
EFI_PCI_IO_ATTRIBUTE_VGA_IO_16	PciIo.h	67;"	d
EFI_PCI_IO_ATTRIBUTE_VGA_MEMORY	PciIo.h	52;"	d
EFI_PCI_IO_ATTRIBUTE_VGA_PALETTE_IO	PciIo.h	51;"	d
EFI_PCI_IO_ATTRIBUTE_VGA_PALETTE_IO_16	PciIo.h	66;"	d
EFI_PCI_IO_PASS_THROUGH_BAR	PciIo.h	47;"	d
EFI_PCI_IO_PROTOCOL	PciIo.h	/^typedef struct _EFI_PCI_IO_PROTOCOL  EFI_PCI_IO_PROTOCOL;$/;"	t	typeref:struct:_EFI_PCI_IO_PROTOCOL
EFI_PCI_IO_PROTOCOL_ACCESS	PciIo.h	/^} EFI_PCI_IO_PROTOCOL_ACCESS;$/;"	t	typeref:struct:__anon22
EFI_PCI_IO_PROTOCOL_ALLOCATE_BUFFER	PciIo.h	/^(EFIAPI *EFI_PCI_IO_PROTOCOL_ALLOCATE_BUFFER)($/;"	t
EFI_PCI_IO_PROTOCOL_ATTRIBUTES	PciIo.h	/^(EFIAPI *EFI_PCI_IO_PROTOCOL_ATTRIBUTES)($/;"	t
EFI_PCI_IO_PROTOCOL_ATTRIBUTE_OPERATION	PciIo.h	/^} EFI_PCI_IO_PROTOCOL_ATTRIBUTE_OPERATION;$/;"	t	typeref:enum:__anon21
EFI_PCI_IO_PROTOCOL_CONFIG	PciIo.h	/^(EFIAPI *EFI_PCI_IO_PROTOCOL_CONFIG)($/;"	t
EFI_PCI_IO_PROTOCOL_CONFIG_ACCESS	PciIo.h	/^} EFI_PCI_IO_PROTOCOL_CONFIG_ACCESS;$/;"	t	typeref:struct:__anon23
EFI_PCI_IO_PROTOCOL_COPY_MEM	PciIo.h	/^(EFIAPI *EFI_PCI_IO_PROTOCOL_COPY_MEM)($/;"	t
EFI_PCI_IO_PROTOCOL_FLUSH	PciIo.h	/^(EFIAPI *EFI_PCI_IO_PROTOCOL_FLUSH)($/;"	t
EFI_PCI_IO_PROTOCOL_FREE_BUFFER	PciIo.h	/^(EFIAPI *EFI_PCI_IO_PROTOCOL_FREE_BUFFER)($/;"	t
EFI_PCI_IO_PROTOCOL_GET_BAR_ATTRIBUTES	PciIo.h	/^(EFIAPI *EFI_PCI_IO_PROTOCOL_GET_BAR_ATTRIBUTES)($/;"	t
EFI_PCI_IO_PROTOCOL_GET_LOCATION	PciIo.h	/^(EFIAPI *EFI_PCI_IO_PROTOCOL_GET_LOCATION)($/;"	t
EFI_PCI_IO_PROTOCOL_GUID	PciIo.h	16;"	d
EFI_PCI_IO_PROTOCOL_IO_MEM	PciIo.h	/^(EFIAPI *EFI_PCI_IO_PROTOCOL_IO_MEM)($/;"	t
EFI_PCI_IO_PROTOCOL_MAP	PciIo.h	/^(EFIAPI *EFI_PCI_IO_PROTOCOL_MAP)($/;"	t
EFI_PCI_IO_PROTOCOL_OPERATION	PciIo.h	/^} EFI_PCI_IO_PROTOCOL_OPERATION;$/;"	t	typeref:enum:__anon20
EFI_PCI_IO_PROTOCOL_POLL_IO_MEM	PciIo.h	/^(EFIAPI *EFI_PCI_IO_PROTOCOL_POLL_IO_MEM)($/;"	t
EFI_PCI_IO_PROTOCOL_SET_BAR_ATTRIBUTES	PciIo.h	/^(EFIAPI *EFI_PCI_IO_PROTOCOL_SET_BAR_ATTRIBUTES)($/;"	t
EFI_PCI_IO_PROTOCOL_UNMAP	PciIo.h	/^(EFIAPI *EFI_PCI_IO_PROTOCOL_UNMAP)($/;"	t
EFI_PCI_IO_PROTOCOL_WIDTH	PciIo.h	/^} EFI_PCI_IO_PROTOCOL_WIDTH;$/;"	t	typeref:enum:__anon19
EFI_PCI_OVERRIDE_GUID	PciOverride.h	27;"	d
EFI_PCI_OVERRIDE_PROTOCOL	PciOverride.h	/^typedef EFI_PCI_PLATFORM_PROTOCOL EFI_PCI_OVERRIDE_PROTOCOL;$/;"	t
EFI_PCI_PLATFORM_GET_PCI_ROM	PciPlatform.h	/^(EFIAPI *EFI_PCI_PLATFORM_GET_PCI_ROM)($/;"	t
EFI_PCI_PLATFORM_GET_PLATFORM_POLICY	PciPlatform.h	/^(EFIAPI *EFI_PCI_PLATFORM_GET_PLATFORM_POLICY)($/;"	t
EFI_PCI_PLATFORM_PHASE_NOTIFY	PciPlatform.h	/^(EFIAPI *EFI_PCI_PLATFORM_PHASE_NOTIFY)($/;"	t
EFI_PCI_PLATFORM_POLICY	PciPlatform.h	/^typedef UINT32  EFI_PCI_PLATFORM_POLICY;$/;"	t
EFI_PCI_PLATFORM_PREPROCESS_CONTROLLER	PciPlatform.h	/^(EFIAPI *EFI_PCI_PLATFORM_PREPROCESS_CONTROLLER)($/;"	t
EFI_PCI_PLATFORM_PROTOCOL	PciPlatform.h	/^typedef struct _EFI_PCI_PLATFORM_PROTOCOL EFI_PCI_PLATFORM_PROTOCOL;$/;"	t	typeref:struct:_EFI_PCI_PLATFORM_PROTOCOL
EFI_PCI_PLATFORM_PROTOCOL_GUID	PciPlatform.h	28;"	d
EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL	PciRootBridgeIo.h	/^typedef struct _EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL  EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL;$/;"	t	typeref:struct:_EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL
EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_ACCESS	PciRootBridgeIo.h	/^} EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_ACCESS;$/;"	t	typeref:struct:__anon279
EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_ALLOCATE_BUFFER	PciRootBridgeIo.h	/^(EFIAPI *EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_ALLOCATE_BUFFER)($/;"	t
EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_CONFIGURATION	PciRootBridgeIo.h	/^(EFIAPI *EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_CONFIGURATION)($/;"	t
EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_COPY_MEM	PciRootBridgeIo.h	/^(EFIAPI *EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_COPY_MEM)($/;"	t
EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_FLUSH	PciRootBridgeIo.h	/^(EFIAPI *EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_FLUSH)($/;"	t
EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_FREE_BUFFER	PciRootBridgeIo.h	/^(EFIAPI *EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_FREE_BUFFER)($/;"	t
EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_GET_ATTRIBUTES	PciRootBridgeIo.h	/^(EFIAPI *EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_GET_ATTRIBUTES)($/;"	t
EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_GUID	PciRootBridgeIo.h	18;"	d
EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_IO_MEM	PciRootBridgeIo.h	/^(EFIAPI *EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_IO_MEM)($/;"	t
EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_MAP	PciRootBridgeIo.h	/^(EFIAPI *EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_MAP)($/;"	t
EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_OPERATION	PciRootBridgeIo.h	/^} EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_OPERATION;$/;"	t	typeref:enum:__anon277
EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_PCI_ADDRESS	PciRootBridgeIo.h	/^} EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_PCI_ADDRESS;$/;"	t	typeref:struct:__anon278
EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_POLL_IO_MEM	PciRootBridgeIo.h	/^(EFIAPI *EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_POLL_IO_MEM)($/;"	t
EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_SET_ATTRIBUTES	PciRootBridgeIo.h	/^(EFIAPI *EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_SET_ATTRIBUTES)($/;"	t
EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_UNMAP	PciRootBridgeIo.h	/^(EFIAPI *EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_UNMAP)($/;"	t
EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_WIDTH	PciRootBridgeIo.h	/^} EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_WIDTH;$/;"	t	typeref:enum:__anon276
EFI_PERIODIC_CALLBACK	DebugSupport.h	/^(EFIAPI *EFI_PERIODIC_CALLBACK)($/;"	t
EFI_PERSISTENT_VIRTUAL_CD_GUID	DevicePath.h	1179;"	d
EFI_PERSISTENT_VIRTUAL_DISK_GUID	DevicePath.h	1172;"	d
EFI_PIXEL_BITMASK	GraphicsOutput.h	/^} EFI_PIXEL_BITMASK;$/;"	t	typeref:struct:__anon235
EFI_PKCS7_VERIFY_BUFFER	Pkcs7Verify.h	/^(EFIAPI *EFI_PKCS7_VERIFY_BUFFER) ($/;"	t
EFI_PKCS7_VERIFY_PROTOCOL	Pkcs7Verify.h	/^typedef struct _EFI_PKCS7_VERIFY_PROTOCOL EFI_PKCS7_VERIFY_PROTOCOL;$/;"	t	typeref:struct:_EFI_PKCS7_VERIFY_PROTOCOL
EFI_PKCS7_VERIFY_PROTOCOL_GUID	Pkcs7Verify.h	22;"	d
EFI_PKCS7_VERIFY_SIGNATURE	Pkcs7Verify.h	/^(EFIAPI *EFI_PKCS7_VERIFY_SIGNATURE) ($/;"	t
EFI_PLATFORM_CONFIGURATION_ACTION	PlatformToDriverConfiguration.h	/^} EFI_PLATFORM_CONFIGURATION_ACTION;$/;"	t	typeref:enum:__anon244
EFI_PLATFORM_DRIVER_OVERRIDE_DRIVER_LOADED	PlatformDriverOverride.h	/^(EFIAPI *EFI_PLATFORM_DRIVER_OVERRIDE_DRIVER_LOADED)($/;"	t
EFI_PLATFORM_DRIVER_OVERRIDE_GET_DRIVER	PlatformDriverOverride.h	/^(EFIAPI *EFI_PLATFORM_DRIVER_OVERRIDE_GET_DRIVER)($/;"	t
EFI_PLATFORM_DRIVER_OVERRIDE_GET_DRIVER_PATH	PlatformDriverOverride.h	/^(EFIAPI *EFI_PLATFORM_DRIVER_OVERRIDE_GET_DRIVER_PATH)($/;"	t
EFI_PLATFORM_DRIVER_OVERRIDE_PROTOCOL	PlatformDriverOverride.h	/^typedef struct _EFI_PLATFORM_DRIVER_OVERRIDE_PROTOCOL  EFI_PLATFORM_DRIVER_OVERRIDE_PROTOCOL;$/;"	t	typeref:struct:_EFI_PLATFORM_DRIVER_OVERRIDE_PROTOCOL
EFI_PLATFORM_DRIVER_OVERRIDE_PROTOCOL_GUID	PlatformDriverOverride.h	15;"	d
EFI_PLATFORM_TO_DRIVER_CONFIGURATION_CLP_GUID	PlatformToDriverConfiguration.h	291;"	d
EFI_PLATFORM_TO_DRIVER_CONFIGURATION_PROTOCOL	PlatformToDriverConfiguration.h	/^typedef struct _EFI_PLATFORM_TO_DRIVER_CONFIGURATION_PROTOCOL EFI_PLATFORM_TO_DRIVER_CONFIGURATION_PROTOCOL;$/;"	t	typeref:struct:_EFI_PLATFORM_TO_DRIVER_CONFIGURATION_PROTOCOL
EFI_PLATFORM_TO_DRIVER_CONFIGURATION_PROTOCOL_GUID	PlatformToDriverConfiguration.h	16;"	d
EFI_PLATFORM_TO_DRIVER_CONFIGURATION_QUERY	PlatformToDriverConfiguration.h	/^(EFIAPI *EFI_PLATFORM_TO_DRIVER_CONFIGURATION_QUERY)($/;"	t
EFI_PLATFORM_TO_DRIVER_CONFIGURATION_RESPONSE	PlatformToDriverConfiguration.h	/^(EFIAPI *EFI_PLATFORM_TO_DRIVER_CONFIGURATION_RESPONSE)($/;"	t
EFI_PNP_ID	DevicePath.h	257;"	d
EFI_PORT_HANDLE	Eap.h	/^typedef VOID *  EFI_PORT_HANDLE;$/;"	t
EFI_POWER_BUTTON_PHASE	MmPowerButtonDispatch.h	/^} EFI_POWER_BUTTON_PHASE;$/;"	t	typeref:enum:__anon247
EFI_PROCESSOR_INFORMATION	MpService.h	/^} EFI_PROCESSOR_INFORMATION;$/;"	t	typeref:struct:__anon500
EFI_PXE_BASE_CODE	PxeBaseCode.h	/^typedef EFI_PXE_BASE_CODE_PROTOCOL  EFI_PXE_BASE_CODE;$/;"	t
EFI_PXE_BASE_CODE_ARP	PxeBaseCode.h	/^(EFIAPI *EFI_PXE_BASE_CODE_ARP)($/;"	t
EFI_PXE_BASE_CODE_ARP_ENTRY	PxeBaseCode.h	/^} EFI_PXE_BASE_CODE_ARP_ENTRY;$/;"	t	typeref:struct:__anon107
EFI_PXE_BASE_CODE_BOOT_LAYER_INITIAL	PxeBaseCode.h	142;"	d
EFI_PXE_BASE_CODE_BOOT_LAYER_MASK	PxeBaseCode.h	141;"	d
EFI_PXE_BASE_CODE_BOOT_TYPE_ALTIRIS_10	PxeBaseCode.h	127;"	d
EFI_PXE_BASE_CODE_BOOT_TYPE_ALTIRIS_11	PxeBaseCode.h	128;"	d
EFI_PXE_BASE_CODE_BOOT_TYPE_ALTIRIS_9	PxeBaseCode.h	126;"	d
EFI_PXE_BASE_CODE_BOOT_TYPE_BEOBOOT	PxeBaseCode.h	133;"	d
EFI_PXE_BASE_CODE_BOOT_TYPE_BOOTSTRAP	PxeBaseCode.h	117;"	d
EFI_PXE_BASE_CODE_BOOT_TYPE_CA_UNICENTER_TNG	PxeBaseCode.h	124;"	d
EFI_PXE_BASE_CODE_BOOT_TYPE_DOSUNDI	PxeBaseCode.h	120;"	d
EFI_PXE_BASE_CODE_BOOT_TYPE_HP_OPENVIEW	PxeBaseCode.h	125;"	d
EFI_PXE_BASE_CODE_BOOT_TYPE_IBM_LCCM	PxeBaseCode.h	123;"	d
EFI_PXE_BASE_CODE_BOOT_TYPE_IBM_WSoD	PxeBaseCode.h	122;"	d
EFI_PXE_BASE_CODE_BOOT_TYPE_INTEL_LCM	PxeBaseCode.h	119;"	d
EFI_PXE_BASE_CODE_BOOT_TYPE_MS_WINNT_RIS	PxeBaseCode.h	118;"	d
EFI_PXE_BASE_CODE_BOOT_TYPE_NEC_ESMPRO	PxeBaseCode.h	121;"	d
EFI_PXE_BASE_CODE_BOOT_TYPE_NOT_USED_12	PxeBaseCode.h	129;"	d
EFI_PXE_BASE_CODE_BOOT_TYPE_PXETEST	PxeBaseCode.h	139;"	d
EFI_PXE_BASE_CODE_BOOT_TYPE_REDHAT_BOOT	PxeBaseCode.h	131;"	d
EFI_PXE_BASE_CODE_BOOT_TYPE_REDHAT_INSTALL	PxeBaseCode.h	130;"	d
EFI_PXE_BASE_CODE_BOOT_TYPE_REMBO	PxeBaseCode.h	132;"	d
EFI_PXE_BASE_CODE_CALLBACK	PxeBaseCodeCallBack.h	/^typedef EFI_PXE_BASE_CODE_CALLBACK_PROTOCOL   EFI_PXE_BASE_CODE_CALLBACK;$/;"	t
EFI_PXE_BASE_CODE_CALLBACK_INTERFACE_REVISION	PxeBaseCodeCallBack.h	32;"	d
EFI_PXE_BASE_CODE_CALLBACK_PROTOCOL	PxeBaseCodeCallBack.h	/^typedef struct _EFI_PXE_BASE_CODE_CALLBACK_PROTOCOL  EFI_PXE_BASE_CODE_CALLBACK_PROTOCOL;$/;"	t	typeref:struct:_EFI_PXE_BASE_CODE_CALLBACK_PROTOCOL
EFI_PXE_BASE_CODE_CALLBACK_PROTOCOL_GUID	PxeBaseCodeCallBack.h	19;"	d
EFI_PXE_BASE_CODE_CALLBACK_PROTOCOL_REVISION	PxeBaseCodeCallBack.h	27;"	d
EFI_PXE_BASE_CODE_CALLBACK_STATUS	PxeBaseCodeCallBack.h	/^} EFI_PXE_BASE_CODE_CALLBACK_STATUS;$/;"	t	typeref:enum:__anon165
EFI_PXE_BASE_CODE_CALLBACK_STATUS_ABORT	PxeBaseCodeCallBack.h	/^  EFI_PXE_BASE_CODE_CALLBACK_STATUS_ABORT,$/;"	e	enum:__anon165
EFI_PXE_BASE_CODE_CALLBACK_STATUS_CONTINUE	PxeBaseCodeCallBack.h	/^  EFI_PXE_BASE_CODE_CALLBACK_STATUS_CONTINUE,$/;"	e	enum:__anon165
EFI_PXE_BASE_CODE_CALLBACK_STATUS_FIRST	PxeBaseCodeCallBack.h	/^  EFI_PXE_BASE_CODE_CALLBACK_STATUS_FIRST,$/;"	e	enum:__anon165
EFI_PXE_BASE_CODE_CALLBACK_STATUS_LAST	PxeBaseCodeCallBack.h	/^  EFI_PXE_BASE_CODE_CALLBACK_STATUS_LAST$/;"	e	enum:__anon165
EFI_PXE_BASE_CODE_DHCP	PxeBaseCode.h	/^(EFIAPI *EFI_PXE_BASE_CODE_DHCP)($/;"	t
EFI_PXE_BASE_CODE_DHCPV4_PACKET	PxeBaseCode.h	/^} EFI_PXE_BASE_CODE_DHCPV4_PACKET;$/;"	t	typeref:struct:__anon113
EFI_PXE_BASE_CODE_DHCPV6_PACKET	PxeBaseCode.h	/^} EFI_PXE_BASE_CODE_DHCPV6_PACKET;$/;"	t	typeref:struct:__anon114
EFI_PXE_BASE_CODE_DISCOVER	PxeBaseCode.h	/^(EFIAPI *EFI_PXE_BASE_CODE_DISCOVER)($/;"	t
EFI_PXE_BASE_CODE_DISCOVER_INFO	PxeBaseCode.h	/^} EFI_PXE_BASE_CODE_DISCOVER_INFO;$/;"	t	typeref:struct:__anon110
EFI_PXE_BASE_CODE_FUNCTION	PxeBaseCodeCallBack.h	/^} EFI_PXE_BASE_CODE_FUNCTION;$/;"	t	typeref:enum:__anon164
EFI_PXE_BASE_CODE_FUNCTION_ARP	PxeBaseCodeCallBack.h	/^  EFI_PXE_BASE_CODE_FUNCTION_ARP,$/;"	e	enum:__anon164
EFI_PXE_BASE_CODE_FUNCTION_DHCP	PxeBaseCodeCallBack.h	/^  EFI_PXE_BASE_CODE_FUNCTION_DHCP,$/;"	e	enum:__anon164
EFI_PXE_BASE_CODE_FUNCTION_DISCOVER	PxeBaseCodeCallBack.h	/^  EFI_PXE_BASE_CODE_FUNCTION_DISCOVER,$/;"	e	enum:__anon164
EFI_PXE_BASE_CODE_FUNCTION_FIRST	PxeBaseCodeCallBack.h	/^  EFI_PXE_BASE_CODE_FUNCTION_FIRST,$/;"	e	enum:__anon164
EFI_PXE_BASE_CODE_FUNCTION_IGMP	PxeBaseCodeCallBack.h	/^  EFI_PXE_BASE_CODE_FUNCTION_IGMP,$/;"	e	enum:__anon164
EFI_PXE_BASE_CODE_FUNCTION_MTFTP	PxeBaseCodeCallBack.h	/^  EFI_PXE_BASE_CODE_FUNCTION_MTFTP,$/;"	e	enum:__anon164
EFI_PXE_BASE_CODE_FUNCTION_UDP_READ	PxeBaseCodeCallBack.h	/^  EFI_PXE_BASE_CODE_FUNCTION_UDP_READ,$/;"	e	enum:__anon164
EFI_PXE_BASE_CODE_FUNCTION_UDP_WRITE	PxeBaseCodeCallBack.h	/^  EFI_PXE_BASE_CODE_FUNCTION_UDP_WRITE,$/;"	e	enum:__anon164
EFI_PXE_BASE_CODE_ICMP_ERROR	PxeBaseCode.h	/^} EFI_PXE_BASE_CODE_ICMP_ERROR;$/;"	t	typeref:struct:__anon102
EFI_PXE_BASE_CODE_INTERFACE_REVISION	PxeBaseCode.h	893;"	d
EFI_PXE_BASE_CODE_IP_FILTER	PxeBaseCode.h	/^} EFI_PXE_BASE_CODE_IP_FILTER;$/;"	t	typeref:struct:__anon106
EFI_PXE_BASE_CODE_IP_FILTER_BROADCAST	PxeBaseCode.h	81;"	d
EFI_PXE_BASE_CODE_IP_FILTER_PROMISCUOUS	PxeBaseCode.h	82;"	d
EFI_PXE_BASE_CODE_IP_FILTER_PROMISCUOUS_MULTICAST	PxeBaseCode.h	83;"	d
EFI_PXE_BASE_CODE_IP_FILTER_STATION_IP	PxeBaseCode.h	80;"	d
EFI_PXE_BASE_CODE_MAX_ARP_ENTRIES	PxeBaseCode.h	257;"	d
EFI_PXE_BASE_CODE_MAX_IPCNT	PxeBaseCode.h	68;"	d
EFI_PXE_BASE_CODE_MAX_ROUTE_ENTRIES	PxeBaseCode.h	258;"	d
EFI_PXE_BASE_CODE_MODE	PxeBaseCode.h	/^} EFI_PXE_BASE_CODE_MODE;$/;"	t	typeref:struct:__anon116
EFI_PXE_BASE_CODE_MTFTP	PxeBaseCode.h	/^(EFIAPI *EFI_PXE_BASE_CODE_MTFTP)($/;"	t
EFI_PXE_BASE_CODE_MTFTP_GET_FILE_SIZE	PxeBaseCode.h	/^  EFI_PXE_BASE_CODE_MTFTP_GET_FILE_SIZE,$/;"	e	enum:__anon111
EFI_PXE_BASE_CODE_MTFTP_INFO	PxeBaseCode.h	/^} EFI_PXE_BASE_CODE_MTFTP_INFO;$/;"	t	typeref:struct:__anon112
EFI_PXE_BASE_CODE_MTFTP_LAST	PxeBaseCode.h	/^  EFI_PXE_BASE_CODE_MTFTP_LAST$/;"	e	enum:__anon111
EFI_PXE_BASE_CODE_MTFTP_READ_DIRECTORY	PxeBaseCode.h	/^  EFI_PXE_BASE_CODE_MTFTP_READ_DIRECTORY,$/;"	e	enum:__anon111
EFI_PXE_BASE_CODE_MTFTP_READ_FILE	PxeBaseCode.h	/^  EFI_PXE_BASE_CODE_MTFTP_READ_FILE,$/;"	e	enum:__anon111
EFI_PXE_BASE_CODE_PACKET	PxeBaseCode.h	/^} EFI_PXE_BASE_CODE_PACKET;$/;"	t	typeref:union:__anon115
EFI_PXE_BASE_CODE_PROTOCOL	PxeBaseCode.h	/^typedef struct _EFI_PXE_BASE_CODE_PROTOCOL  EFI_PXE_BASE_CODE_PROTOCOL;$/;"	t	typeref:struct:_EFI_PXE_BASE_CODE_PROTOCOL
EFI_PXE_BASE_CODE_PROTOCOL_GUID	PxeBaseCode.h	20;"	d
EFI_PXE_BASE_CODE_PROTOCOL_REVISION	PxeBaseCode.h	888;"	d
EFI_PXE_BASE_CODE_PXE_FUNCTION_LAST	PxeBaseCodeCallBack.h	/^  EFI_PXE_BASE_CODE_PXE_FUNCTION_LAST$/;"	e	enum:__anon164
EFI_PXE_BASE_CODE_ROUTE_ENTRY	PxeBaseCode.h	/^} EFI_PXE_BASE_CODE_ROUTE_ENTRY;$/;"	t	typeref:struct:__anon108
EFI_PXE_BASE_CODE_SET_IP_FILTER	PxeBaseCode.h	/^(EFIAPI *EFI_PXE_BASE_CODE_SET_IP_FILTER)($/;"	t
EFI_PXE_BASE_CODE_SET_PACKETS	PxeBaseCode.h	/^(EFIAPI *EFI_PXE_BASE_CODE_SET_PACKETS)($/;"	t
EFI_PXE_BASE_CODE_SET_PARAMETERS	PxeBaseCode.h	/^(EFIAPI *EFI_PXE_BASE_CODE_SET_PARAMETERS)($/;"	t
EFI_PXE_BASE_CODE_SET_STATION_IP	PxeBaseCode.h	/^(EFIAPI *EFI_PXE_BASE_CODE_SET_STATION_IP)($/;"	t
EFI_PXE_BASE_CODE_SRVLIST	PxeBaseCode.h	/^} EFI_PXE_BASE_CODE_SRVLIST;$/;"	t	typeref:struct:__anon109
EFI_PXE_BASE_CODE_START	PxeBaseCode.h	/^(EFIAPI *EFI_PXE_BASE_CODE_START)($/;"	t
EFI_PXE_BASE_CODE_STOP	PxeBaseCode.h	/^(EFIAPI *EFI_PXE_BASE_CODE_STOP)($/;"	t
EFI_PXE_BASE_CODE_TFTP_ERROR	PxeBaseCode.h	/^} EFI_PXE_BASE_CODE_TFTP_ERROR;$/;"	t	typeref:struct:__anon105
EFI_PXE_BASE_CODE_TFTP_FIRST	PxeBaseCode.h	/^  EFI_PXE_BASE_CODE_TFTP_FIRST,$/;"	e	enum:__anon111
EFI_PXE_BASE_CODE_TFTP_GET_FILE_SIZE	PxeBaseCode.h	/^  EFI_PXE_BASE_CODE_TFTP_GET_FILE_SIZE,$/;"	e	enum:__anon111
EFI_PXE_BASE_CODE_TFTP_OPCODE	PxeBaseCode.h	/^} EFI_PXE_BASE_CODE_TFTP_OPCODE;$/;"	t	typeref:enum:__anon111
EFI_PXE_BASE_CODE_TFTP_READ_DIRECTORY	PxeBaseCode.h	/^  EFI_PXE_BASE_CODE_TFTP_READ_DIRECTORY,$/;"	e	enum:__anon111
EFI_PXE_BASE_CODE_TFTP_READ_FILE	PxeBaseCode.h	/^  EFI_PXE_BASE_CODE_TFTP_READ_FILE,$/;"	e	enum:__anon111
EFI_PXE_BASE_CODE_TFTP_WRITE_FILE	PxeBaseCode.h	/^  EFI_PXE_BASE_CODE_TFTP_WRITE_FILE,$/;"	e	enum:__anon111
EFI_PXE_BASE_CODE_UDP_OPFLAGS_ANY_DEST_IP	PxeBaseCode.h	109;"	d
EFI_PXE_BASE_CODE_UDP_OPFLAGS_ANY_DEST_PORT	PxeBaseCode.h	110;"	d
EFI_PXE_BASE_CODE_UDP_OPFLAGS_ANY_SRC_IP	PxeBaseCode.h	107;"	d
EFI_PXE_BASE_CODE_UDP_OPFLAGS_ANY_SRC_PORT	PxeBaseCode.h	108;"	d
EFI_PXE_BASE_CODE_UDP_OPFLAGS_MAY_FRAGMENT	PxeBaseCode.h	112;"	d
EFI_PXE_BASE_CODE_UDP_OPFLAGS_USE_FILTER	PxeBaseCode.h	111;"	d
EFI_PXE_BASE_CODE_UDP_PORT	PxeBaseCode.h	/^typedef UINT16  EFI_PXE_BASE_CODE_UDP_PORT;$/;"	t
EFI_PXE_BASE_CODE_UDP_READ	PxeBaseCode.h	/^(EFIAPI *EFI_PXE_BASE_CODE_UDP_READ)($/;"	t
EFI_PXE_BASE_CODE_UDP_WRITE	PxeBaseCode.h	/^(EFIAPI *EFI_PXE_BASE_CODE_UDP_WRITE)($/;"	t
EFI_PXE_CALLBACK	PxeBaseCodeCallBack.h	/^(EFIAPI *EFI_PXE_CALLBACK)($/;"	t
EFI_PXE_CLIENT_SYSTEM_ARCHITECTURE	PxeBaseCode.h	151;"	d
EFI_PXE_CLIENT_SYSTEM_ARCHITECTURE	PxeBaseCode.h	153;"	d
EFI_PXE_CLIENT_SYSTEM_ARCHITECTURE	PxeBaseCode.h	155;"	d
EFI_PXE_CLIENT_SYSTEM_ARCHITECTURE	PxeBaseCode.h	157;"	d
EFI_PXE_CLIENT_SYSTEM_ARCHITECTURE	PxeBaseCode.h	159;"	d
EFI_RAM_DISK_PROTOCOL	RamDisk.h	/^typedef struct _EFI_RAM_DISK_PROTOCOL  EFI_RAM_DISK_PROTOCOL;$/;"	t	typeref:struct:_EFI_RAM_DISK_PROTOCOL
EFI_RAM_DISK_PROTOCOL_GUID	RamDisk.h	18;"	d
EFI_RAM_DISK_REGISTER_RAMDISK	RamDisk.h	/^(EFIAPI *EFI_RAM_DISK_REGISTER_RAMDISK) ($/;"	t
EFI_RAM_DISK_UNREGISTER_RAMDISK	RamDisk.h	/^(EFIAPI *EFI_RAM_DISK_UNREGISTER_RAMDISK) ($/;"	t
EFI_REAL_TIME_CLOCK_ARCH_PROTOCOL_GUID	RealTimeClock.h	25;"	d
EFI_RED	SimpleTextOut.h	107;"	d
EFI_REGEX_CAPTURE	RegularExpressionProtocol.h	/^} EFI_REGEX_CAPTURE;$/;"	t	typeref:struct:__anon361
EFI_REGEX_SYNTAX_TYPE	RegularExpressionProtocol.h	/^typedef EFI_GUID EFI_REGEX_SYNTAX_TYPE;$/;"	t
EFI_REGEX_SYNTAX_TYPE_ECMA_262_GUID	RegularExpressionProtocol.h	31;"	d
EFI_REGEX_SYNTAX_TYPE_PERL_GUID	RegularExpressionProtocol.h	26;"	d
EFI_REGEX_SYNTAX_TYPE_POSIX_EXTENDED_GUID	RegularExpressionProtocol.h	21;"	d
EFI_REGISTER_EXCEPTION_CALLBACK	DebugSupport.h	/^(EFIAPI *EFI_REGISTER_EXCEPTION_CALLBACK)($/;"	t
EFI_REGISTER_KEYSTROKE_NOTIFY	SimpleTextInEx.h	/^(EFIAPI *EFI_REGISTER_KEYSTROKE_NOTIFY)($/;"	t
EFI_REGISTER_PERIODIC_CALLBACK	DebugSupport.h	/^(EFIAPI *EFI_REGISTER_PERIODIC_CALLBACK)($/;"	t
EFI_REGISTER_RESET_NOTIFY	ResetNotification.h	/^(EFIAPI *EFI_REGISTER_RESET_NOTIFY) ($/;"	t
EFI_REGULAR_EXPRESSION_GET_INFO	RegularExpressionProtocol.h	/^(EFIAPI *EFI_REGULAR_EXPRESSION_GET_INFO) ($/;"	t
EFI_REGULAR_EXPRESSION_MATCH	RegularExpressionProtocol.h	/^(EFIAPI *EFI_REGULAR_EXPRESSION_MATCH) ($/;"	t
EFI_REGULAR_EXPRESSION_PROTOCOL	RegularExpressionProtocol.h	/^typedef struct _EFI_REGULAR_EXPRESSION_PROTOCOL  EFI_REGULAR_EXPRESSION_PROTOCOL;$/;"	t	typeref:struct:_EFI_REGULAR_EXPRESSION_PROTOCOL
EFI_REGULAR_EXPRESSION_PROTOCOL_GUID	RegularExpressionProtocol.h	16;"	d
EFI_REPORT_STATUS_CODE	StatusCode.h	/^(EFIAPI *EFI_REPORT_STATUS_CODE)($/;"	t
EFI_RESERVE_ISA_IO_ALIAS	PciPlatform.h	128;"	d
EFI_RESERVE_ISA_IO_NO_ALIAS	PciPlatform.h	133;"	d
EFI_RESERVE_NONE_IO_ALIAS	PciPlatform.h	119;"	d
EFI_RESERVE_VGA_IO_ALIAS	PciPlatform.h	138;"	d
EFI_RESERVE_VGA_IO_NO_ALIAS	PciPlatform.h	143;"	d
EFI_RESET_ARCH_PROTOCOL_GUID	Reset.h	20;"	d
EFI_RESET_NOTIFICATION_PROTOCOL	ResetNotification.h	/^typedef struct _EFI_RESET_NOTIFICATION_PROTOCOL EFI_RESET_NOTIFICATION_PROTOCOL;$/;"	t	typeref:struct:_EFI_RESET_NOTIFICATION_PROTOCOL
EFI_RESET_NOTIFICATION_PROTOCOL	ResetNotification.h	/^} EFI_RESET_NOTIFICATION_PROTOCOL;$/;"	t	typeref:struct:_EFI_RESET_NOTIFICATION_PROTOCOL
EFI_RESET_NOTIFICATION_PROTOCOL_GUID	ResetNotification.h	16;"	d
EFI_RESOURCE_ALLOCATION_STATUS	PciHostBridgeResourceAllocation.h	/^typedef UINT64 EFI_RESOURCE_ALLOCATION_STATUS;$/;"	t
EFI_RESOURCE_NOT_SATISFIED	PciHostBridgeResourceAllocation.h	72;"	d
EFI_RESOURCE_SATISFIED	PciHostBridgeResourceAllocation.h	64;"	d
EFI_REST_EX_ASYNC_SEND_RECEIVE	RestEx.h	/^(EFIAPI *EFI_REST_EX_ASYNC_SEND_RECEIVE)($/;"	t
EFI_REST_EX_CONFIGURE	RestEx.h	/^(EFIAPI *EFI_REST_EX_CONFIGURE)($/;"	t
EFI_REST_EX_CONFIG_DATA	RestEx.h	/^typedef UINT8 *EFI_REST_EX_CONFIG_DATA;$/;"	t
EFI_REST_EX_CONFIG_TYPE	RestEx.h	/^} EFI_REST_EX_CONFIG_TYPE;$/;"	t	typeref:enum:__anon230
EFI_REST_EX_EVENT_SERVICE	RestEx.h	/^(EFIAPI *EFI_REST_EX_EVENT_SERVICE)($/;"	t
EFI_REST_EX_GET_MODE_DATA	RestEx.h	/^(EFIAPI *EFI_REST_EX_GET_MODE_DATA)($/;"	t
EFI_REST_EX_GET_SERVICE	RestEx.h	/^(EFIAPI *EFI_REST_EX_GET_SERVICE)($/;"	t
EFI_REST_EX_HTTP_CONFIG_DATA	RestEx.h	/^} EFI_REST_EX_HTTP_CONFIG_DATA;$/;"	t	typeref:struct:__anon233
EFI_REST_EX_PROTOCOL	RestEx.h	/^typedef struct _EFI_REST_EX_PROTOCOL EFI_REST_EX_PROTOCOL;$/;"	t	typeref:struct:_EFI_REST_EX_PROTOCOL
EFI_REST_EX_PROTOCOL_GUID	RestEx.h	31;"	d
EFI_REST_EX_PROTOCOL_H_	RestEx.h	19;"	d
EFI_REST_EX_SERVICE_ACCESS_MODE	RestEx.h	/^} EFI_REST_EX_SERVICE_ACCESS_MODE;$/;"	t	typeref:enum:__anon229
EFI_REST_EX_SERVICE_BINDING_PROTOCOL_GUID	RestEx.h	26;"	d
EFI_REST_EX_SERVICE_INFO	RestEx.h	/^} EFI_REST_EX_SERVICE_INFO;$/;"	t	typeref:union:__anon232
EFI_REST_EX_SERVICE_INFO_HEADER	RestEx.h	/^} EFI_REST_EX_SERVICE_INFO_HEADER;$/;"	t	typeref:struct:__anon227
EFI_REST_EX_SERVICE_INFO_VER	RestEx.h	/^} EFI_REST_EX_SERVICE_INFO_VER;$/;"	t	typeref:struct:__anon226
EFI_REST_EX_SERVICE_INFO_V_1_0	RestEx.h	/^} EFI_REST_EX_SERVICE_INFO_V_1_0;$/;"	t	typeref:struct:__anon231
EFI_REST_EX_SERVICE_TYPE	RestEx.h	/^} EFI_REST_EX_SERVICE_TYPE;$/;"	t	typeref:enum:__anon228
EFI_REST_EX_TOKEN	RestEx.h	/^} EFI_REST_EX_TOKEN;$/;"	t	typeref:struct:__anon234
EFI_REST_GET_TIME	Rest.h	/^(EFIAPI *EFI_REST_GET_TIME) ($/;"	t
EFI_REST_GET_TIME	RestEx.h	/^(EFIAPI *EFI_REST_GET_TIME)($/;"	t
EFI_REST_JSON_RESOURCE_TYPE_DATATYPE	RestJsonStructure.h	/^typedef CHAR8 * EFI_REST_JSON_RESOURCE_TYPE_DATATYPE;$/;"	t
EFI_REST_JSON_RESOURCE_TYPE_IDENTIFIER	RestJsonStructure.h	/^} EFI_REST_JSON_RESOURCE_TYPE_IDENTIFIER;$/;"	t	typeref:struct:_EFI_REST_JSON_RESOURCE_TYPE_IDENTIFIER
EFI_REST_JSON_RESOURCE_TYPE_NAMESPACE	RestJsonStructure.h	/^} EFI_REST_JSON_RESOURCE_TYPE_NAMESPACE;$/;"	t	typeref:struct:_EFI_REST_JSON_RESOURCE_TYPE_NAMESPACE
EFI_REST_JSON_STRUCTURE_DESTORY_STRUCTURE	RestJsonStructure.h	/^(EFIAPI *EFI_REST_JSON_STRUCTURE_DESTORY_STRUCTURE)($/;"	t
EFI_REST_JSON_STRUCTURE_HEADER	RestJsonStructure.h	/^} EFI_REST_JSON_STRUCTURE_HEADER;$/;"	t	typeref:struct:_EFI_REST_JSON_STRUCTURE_HEADER
EFI_REST_JSON_STRUCTURE_PROTOCOL	RestJsonStructure.h	/^typedef struct _EFI_REST_JSON_STRUCTURE_PROTOCOL EFI_REST_JSON_STRUCTURE_PROTOCOL;$/;"	t	typeref:struct:_EFI_REST_JSON_STRUCTURE_PROTOCOL
EFI_REST_JSON_STRUCTURE_PROTOCOL_GUID	RestJsonStructure.h	19;"	d
EFI_REST_JSON_STRUCTURE_PROTOCOL_H_	RestJsonStructure.h	14;"	d
EFI_REST_JSON_STRUCTURE_REGISTER	RestJsonStructure.h	/^(EFIAPI *EFI_REST_JSON_STRUCTURE_REGISTER)($/;"	t
EFI_REST_JSON_STRUCTURE_SUPPORTED	RestJsonStructure.h	/^} EFI_REST_JSON_STRUCTURE_SUPPORTED;$/;"	t	typeref:struct:_EFI_REST_JSON_STRUCTURE_SUPPORTED
EFI_REST_JSON_STRUCTURE_TO_JSON	RestJsonStructure.h	/^(EFIAPI *EFI_REST_JSON_STRUCTURE_TO_JSON)($/;"	t
EFI_REST_JSON_STRUCTURE_TO_STRUCTURE	RestJsonStructure.h	/^(EFIAPI *EFI_REST_JSON_STRUCTURE_TO_STRUCTURE)($/;"	t
EFI_REST_PROTOCOL	Rest.h	/^typedef struct _EFI_REST_PROTOCOL EFI_REST_PROTOCOL;$/;"	t	typeref:struct:_EFI_REST_PROTOCOL
EFI_REST_PROTOCOL_GUID	Rest.h	17;"	d
EFI_REST_SEND_RECEIVE	Rest.h	/^(EFIAPI *EFI_REST_SEND_RECEIVE) ($/;"	t
EFI_REST_SEND_RECEIVE	RestEx.h	/^(EFIAPI *EFI_REST_SEND_RECEIVE)($/;"	t
EFI_RIGHT_ALT_PRESSED	SimpleTextInEx.h	103;"	d
EFI_RIGHT_CONTROL_PRESSED	SimpleTextInEx.h	101;"	d
EFI_RIGHT_LOGO_PRESSED	SimpleTextInEx.h	105;"	d
EFI_RIGHT_SHIFT_PRESSED	SimpleTextInEx.h	99;"	d
EFI_RNG_ALGORITHM	Rng.h	/^typedef EFI_GUID EFI_RNG_ALGORITHM;$/;"	t
EFI_RNG_ALGORITHM_RAW	Rng.h	66;"	d
EFI_RNG_ALGORITHM_SP800_90_CTR_256_GUID	Rng.h	45;"	d
EFI_RNG_ALGORITHM_SP800_90_HASH_256_GUID	Rng.h	37;"	d
EFI_RNG_ALGORITHM_SP800_90_HMAC_256_GUID	Rng.h	41;"	d
EFI_RNG_ALGORITHM_X9_31_3DES_GUID	Rng.h	54;"	d
EFI_RNG_ALGORITHM_X9_31_AES_GUID	Rng.h	58;"	d
EFI_RNG_GET_INFO	Rng.h	/^(EFIAPI *EFI_RNG_GET_INFO) ($/;"	t
EFI_RNG_GET_RNG	Rng.h	/^(EFIAPI *EFI_RNG_GET_RNG) ($/;"	t
EFI_RNG_PROTOCOL	Rng.h	/^typedef struct _EFI_RNG_PROTOCOL EFI_RNG_PROTOCOL;$/;"	t	typeref:struct:_EFI_RNG_PROTOCOL
EFI_RNG_PROTOCOL_GUID	Rng.h	17;"	d
EFI_RSC_HANDLER_CALLBACK	ReportStatusCodeHandler.h	/^(EFIAPI *EFI_RSC_HANDLER_CALLBACK)($/;"	t
EFI_RSC_HANDLER_PROTOCOL	ReportStatusCodeHandler.h	/^} EFI_RSC_HANDLER_PROTOCOL;$/;"	t	typeref:struct:__anon387
EFI_RSC_HANDLER_PROTOCOL_GUID	ReportStatusCodeHandler.h	16;"	d
EFI_RSC_HANDLER_REGISTER	ReportStatusCodeHandler.h	/^(EFIAPI *EFI_RSC_HANDLER_REGISTER)($/;"	t
EFI_RSC_HANDLER_UNREGISTER	ReportStatusCodeHandler.h	/^(EFIAPI *EFI_RSC_HANDLER_UNREGISTER)($/;"	t
EFI_RUNTIME_ARCH_PROTOCOL	Runtime.h	/^typedef struct _EFI_RUNTIME_ARCH_PROTOCOL  EFI_RUNTIME_ARCH_PROTOCOL;$/;"	t	typeref:struct:_EFI_RUNTIME_ARCH_PROTOCOL
EFI_RUNTIME_ARCH_PROTOCOL_GUID	Runtime.h	24;"	d
EFI_RUNTIME_EVENT_ENTRY	Runtime.h	/^typedef struct _EFI_RUNTIME_EVENT_ENTRY  EFI_RUNTIME_EVENT_ENTRY;$/;"	t	typeref:struct:_EFI_RUNTIME_EVENT_ENTRY
EFI_RUNTIME_IMAGE_ENTRY	Runtime.h	/^typedef struct _EFI_RUNTIME_IMAGE_ENTRY  EFI_RUNTIME_IMAGE_ENTRY;$/;"	t	typeref:struct:_EFI_RUNTIME_IMAGE_ENTRY
EFI_S3_BOOT_SCRIPT_POSITION	S3SaveState.h	/^typedef VOID *EFI_S3_BOOT_SCRIPT_POSITION;$/;"	t
EFI_S3_SAVE_STATE_COMPARE	S3SaveState.h	/^(EFIAPI *EFI_S3_SAVE_STATE_COMPARE)($/;"	t
EFI_S3_SAVE_STATE_INSERT	S3SaveState.h	/^(EFIAPI *EFI_S3_SAVE_STATE_INSERT)($/;"	t
EFI_S3_SAVE_STATE_LABEL	S3SaveState.h	/^(EFIAPI *EFI_S3_SAVE_STATE_LABEL)($/;"	t
EFI_S3_SAVE_STATE_PROTOCOL	S3SaveState.h	/^typedef struct _EFI_S3_SAVE_STATE_PROTOCOL  EFI_S3_SAVE_STATE_PROTOCOL;$/;"	t	typeref:struct:_EFI_S3_SAVE_STATE_PROTOCOL
EFI_S3_SAVE_STATE_PROTOCOL_GUID	S3SaveState.h	20;"	d
EFI_S3_SAVE_STATE_WRITE	S3SaveState.h	/^(EFIAPI *EFI_S3_SAVE_STATE_WRITE)($/;"	t
EFI_S3_SMM_SAVE_STATE_PROTOCOL	S3SmmSaveState.h	/^typedef EFI_S3_SAVE_STATE_PROTOCOL EFI_S3_SMM_SAVE_STATE_PROTOCOL;$/;"	t
EFI_S3_SMM_SAVE_STATE_PROTOCOL_GUID	S3SmmSaveState.h	31;"	d
EFI_SATA_AUTO_SPEED	IdeControllerInit.h	106;"	d
EFI_SATA_GEN1_SPEED	IdeControllerInit.h	111;"	d
EFI_SATA_GEN2_SPEED	IdeControllerInit.h	116;"	d
EFI_SCREEN_DESCRIPTOR	FormBrowser2.h	/^} EFI_SCREEN_DESCRIPTOR;$/;"	t	typeref:struct:__anon243
EFI_SCROLL_LOCK_ACTIVE	SimpleTextInEx.h	115;"	d
EFI_SCSI_IO_DATA_DIRECTION_BIDIRECTIONAL	ScsiIo.h	55;"	d
EFI_SCSI_IO_DATA_DIRECTION_READ	ScsiIo.h	53;"	d
EFI_SCSI_IO_DATA_DIRECTION_WRITE	ScsiIo.h	54;"	d
EFI_SCSI_IO_PROTOCOL	ScsiIo.h	/^typedef struct _EFI_SCSI_IO_PROTOCOL EFI_SCSI_IO_PROTOCOL;$/;"	t	typeref:struct:_EFI_SCSI_IO_PROTOCOL
EFI_SCSI_IO_PROTOCOL_EXEC_SCSI_COMMAND	ScsiIo.h	/^(EFIAPI *EFI_SCSI_IO_PROTOCOL_EXEC_SCSI_COMMAND)($/;"	t
EFI_SCSI_IO_PROTOCOL_GET_DEVICE_LOCATION	ScsiIo.h	/^(EFIAPI *EFI_SCSI_IO_PROTOCOL_GET_DEVICE_LOCATION)($/;"	t
EFI_SCSI_IO_PROTOCOL_GET_DEVICE_TYPE	ScsiIo.h	/^(EFIAPI *EFI_SCSI_IO_PROTOCOL_GET_DEVICE_TYPE)($/;"	t
EFI_SCSI_IO_PROTOCOL_GUID	ScsiIo.h	15;"	d
EFI_SCSI_IO_PROTOCOL_RESET_BUS	ScsiIo.h	/^(EFIAPI *EFI_SCSI_IO_PROTOCOL_RESET_BUS)($/;"	t
EFI_SCSI_IO_PROTOCOL_RESET_DEVICE	ScsiIo.h	/^(EFIAPI *EFI_SCSI_IO_PROTOCOL_RESET_DEVICE)($/;"	t
EFI_SCSI_IO_SCSI_REQUEST_PACKET	ScsiIo.h	/^} EFI_SCSI_IO_SCSI_REQUEST_PACKET;$/;"	t	typeref:struct:__anon330
EFI_SCSI_IO_STATUS_HOST_ADAPTER_BUS_FREE	ScsiIo.h	69;"	d
EFI_SCSI_IO_STATUS_HOST_ADAPTER_BUS_RESET	ScsiIo.h	64;"	d
EFI_SCSI_IO_STATUS_HOST_ADAPTER_DATA_OVERRUN_UNDERRUN	ScsiIo.h	68;"	d
EFI_SCSI_IO_STATUS_HOST_ADAPTER_MESSAGE_REJECT	ScsiIo.h	63;"	d
EFI_SCSI_IO_STATUS_HOST_ADAPTER_OK	ScsiIo.h	60;"	d
EFI_SCSI_IO_STATUS_HOST_ADAPTER_OTHER	ScsiIo.h	71;"	d
EFI_SCSI_IO_STATUS_HOST_ADAPTER_PARITY_ERROR	ScsiIo.h	65;"	d
EFI_SCSI_IO_STATUS_HOST_ADAPTER_PHASE_ERROR	ScsiIo.h	70;"	d
EFI_SCSI_IO_STATUS_HOST_ADAPTER_REQUEST_SENSE_FAILED	ScsiIo.h	66;"	d
EFI_SCSI_IO_STATUS_HOST_ADAPTER_SELECTION_TIMEOUT	ScsiIo.h	67;"	d
EFI_SCSI_IO_STATUS_HOST_ADAPTER_TIMEOUT	ScsiIo.h	62;"	d
EFI_SCSI_IO_STATUS_HOST_ADAPTER_TIMEOUT_COMMAND	ScsiIo.h	61;"	d
EFI_SCSI_IO_STATUS_TARGET_BUSY	ScsiIo.h	80;"	d
EFI_SCSI_IO_STATUS_TARGET_CHECK_CONDITION	ScsiIo.h	78;"	d
EFI_SCSI_IO_STATUS_TARGET_COMMOND_TERMINATED	ScsiIo.h	84;"	d
EFI_SCSI_IO_STATUS_TARGET_CONDITION_MET	ScsiIo.h	79;"	d
EFI_SCSI_IO_STATUS_TARGET_GOOD	ScsiIo.h	77;"	d
EFI_SCSI_IO_STATUS_TARGET_INTERMEDIATE	ScsiIo.h	81;"	d
EFI_SCSI_IO_STATUS_TARGET_INTERMEDIATE_CONDITION_MET	ScsiIo.h	82;"	d
EFI_SCSI_IO_STATUS_TARGET_QUEUE_FULL	ScsiIo.h	85;"	d
EFI_SCSI_IO_STATUS_TARGET_RESERVATION_CONFLICT	ScsiIo.h	83;"	d
EFI_SCSI_IO_TYPE_CDROM	ScsiIo.h	33;"	d
EFI_SCSI_IO_TYPE_COMMUNICATION	ScsiIo.h	37;"	d
EFI_SCSI_IO_TYPE_DISK	ScsiIo.h	28;"	d
EFI_SCSI_IO_TYPE_MEDIUMCHANGER	ScsiIo.h	36;"	d
EFI_SCSI_IO_TYPE_OPTICAL	ScsiIo.h	35;"	d
EFI_SCSI_IO_TYPE_PRINTER	ScsiIo.h	30;"	d
EFI_SCSI_IO_TYPE_PROCESSOR	ScsiIo.h	31;"	d
EFI_SCSI_IO_TYPE_RESERVED_HIGH	ScsiIo.h	47;"	d
EFI_SCSI_IO_TYPE_RESERVED_LOW	ScsiIo.h	46;"	d
EFI_SCSI_IO_TYPE_SCANNER	ScsiIo.h	34;"	d
EFI_SCSI_IO_TYPE_TAPE	ScsiIo.h	29;"	d
EFI_SCSI_IO_TYPE_UNKNOWN	ScsiIo.h	48;"	d
EFI_SCSI_IO_TYPE_WORM	ScsiIo.h	32;"	d
EFI_SCSI_PASS_THRU_ATTRIBUTES_LOGICAL	ScsiPassThru.h	30;"	d
EFI_SCSI_PASS_THRU_ATTRIBUTES_NONBLOCKIO	ScsiPassThru.h	31;"	d
EFI_SCSI_PASS_THRU_ATTRIBUTES_PHYSICAL	ScsiPassThru.h	29;"	d
EFI_SCSI_PASS_THRU_BUILD_DEVICE_PATH	ScsiPassThru.h	/^(EFIAPI *EFI_SCSI_PASS_THRU_BUILD_DEVICE_PATH)($/;"	t
EFI_SCSI_PASS_THRU_GET_NEXT_DEVICE	ScsiPassThru.h	/^(EFIAPI *EFI_SCSI_PASS_THRU_GET_NEXT_DEVICE)($/;"	t
EFI_SCSI_PASS_THRU_GET_TARGET_LUN	ScsiPassThru.h	/^(EFIAPI *EFI_SCSI_PASS_THRU_GET_TARGET_LUN)($/;"	t
EFI_SCSI_PASS_THRU_MODE	ScsiPassThru.h	/^} EFI_SCSI_PASS_THRU_MODE;$/;"	t	typeref:struct:__anon167
EFI_SCSI_PASS_THRU_PASSTHRU	ScsiPassThru.h	/^(EFIAPI *EFI_SCSI_PASS_THRU_PASSTHRU)($/;"	t
EFI_SCSI_PASS_THRU_PROTOCOL	ScsiPassThru.h	/^typedef struct _EFI_SCSI_PASS_THRU_PROTOCOL  EFI_SCSI_PASS_THRU_PROTOCOL;$/;"	t	typeref:struct:_EFI_SCSI_PASS_THRU_PROTOCOL
EFI_SCSI_PASS_THRU_PROTOCOL_GUID	ScsiPassThru.h	19;"	d
EFI_SCSI_PASS_THRU_RESET_CHANNEL	ScsiPassThru.h	/^(EFIAPI *EFI_SCSI_PASS_THRU_RESET_CHANNEL)($/;"	t
EFI_SCSI_PASS_THRU_RESET_TARGET	ScsiPassThru.h	/^(EFIAPI *EFI_SCSI_PASS_THRU_RESET_TARGET)($/;"	t
EFI_SCSI_PASS_THRU_SCSI_REQUEST_PACKET	ScsiPassThru.h	/^} EFI_SCSI_PASS_THRU_SCSI_REQUEST_PACKET;$/;"	t	typeref:struct:__anon166
EFI_SCSI_STATUS_HOST_ADAPTER_BUS_FREE	ScsiPassThru.h	45;"	d
EFI_SCSI_STATUS_HOST_ADAPTER_BUS_RESET	ScsiPassThru.h	40;"	d
EFI_SCSI_STATUS_HOST_ADAPTER_DATA_OVERRUN_UNDERRUN	ScsiPassThru.h	44;"	d
EFI_SCSI_STATUS_HOST_ADAPTER_MESSAGE_REJECT	ScsiPassThru.h	39;"	d
EFI_SCSI_STATUS_HOST_ADAPTER_OK	ScsiPassThru.h	36;"	d
EFI_SCSI_STATUS_HOST_ADAPTER_OTHER	ScsiPassThru.h	47;"	d
EFI_SCSI_STATUS_HOST_ADAPTER_PARITY_ERROR	ScsiPassThru.h	41;"	d
EFI_SCSI_STATUS_HOST_ADAPTER_PHASE_ERROR	ScsiPassThru.h	46;"	d
EFI_SCSI_STATUS_HOST_ADAPTER_REQUEST_SENSE_FAILED	ScsiPassThru.h	42;"	d
EFI_SCSI_STATUS_HOST_ADAPTER_SELECTION_TIMEOUT	ScsiPassThru.h	43;"	d
EFI_SCSI_STATUS_HOST_ADAPTER_TIMEOUT	ScsiPassThru.h	38;"	d
EFI_SCSI_STATUS_HOST_ADAPTER_TIMEOUT_COMMAND	ScsiPassThru.h	37;"	d
EFI_SCSI_STATUS_TARGET_BUSY	ScsiPassThru.h	55;"	d
EFI_SCSI_STATUS_TARGET_CHECK_CONDITION	ScsiPassThru.h	53;"	d
EFI_SCSI_STATUS_TARGET_COMMOND_TERMINATED	ScsiPassThru.h	59;"	d
EFI_SCSI_STATUS_TARGET_CONDITION_MET	ScsiPassThru.h	54;"	d
EFI_SCSI_STATUS_TARGET_GOOD	ScsiPassThru.h	52;"	d
EFI_SCSI_STATUS_TARGET_INTERMEDIATE	ScsiPassThru.h	56;"	d
EFI_SCSI_STATUS_TARGET_INTERMEDIATE_CONDITION_MET	ScsiPassThru.h	57;"	d
EFI_SCSI_STATUS_TARGET_QUEUE_FULL	ScsiPassThru.h	60;"	d
EFI_SCSI_STATUS_TARGET_RESERVATION_CONFLICT	ScsiPassThru.h	58;"	d
EFI_SD_MMC_COMMAND_BLOCK	SdMmcPassThru.h	/^} EFI_SD_MMC_COMMAND_BLOCK;$/;"	t	typeref:struct:_EFI_SD_MMC_COMMAND_BLOCK
EFI_SD_MMC_COMMAND_TYPE	SdMmcPassThru.h	/^} EFI_SD_MMC_COMMAND_TYPE;$/;"	t	typeref:enum:__anon444
EFI_SD_MMC_PASS_THRU_BUILD_DEVICE_PATH	SdMmcPassThru.h	/^(EFIAPI *EFI_SD_MMC_PASS_THRU_BUILD_DEVICE_PATH) ($/;"	t
EFI_SD_MMC_PASS_THRU_COMMAND_PACKET	SdMmcPassThru.h	/^} EFI_SD_MMC_PASS_THRU_COMMAND_PACKET;$/;"	t	typeref:struct:_EFI_SD_MMC_PASS_THRU_COMMAND_PACKET
EFI_SD_MMC_PASS_THRU_GET_NEXT_SLOT	SdMmcPassThru.h	/^(EFIAPI *EFI_SD_MMC_PASS_THRU_GET_NEXT_SLOT) ($/;"	t
EFI_SD_MMC_PASS_THRU_GET_SLOT_NUMBER	SdMmcPassThru.h	/^(EFIAPI *EFI_SD_MMC_PASS_THRU_GET_SLOT_NUMBER) ($/;"	t
EFI_SD_MMC_PASS_THRU_PASSTHRU	SdMmcPassThru.h	/^(EFIAPI *EFI_SD_MMC_PASS_THRU_PASSTHRU) ($/;"	t
EFI_SD_MMC_PASS_THRU_PROTOCOL	SdMmcPassThru.h	/^typedef struct _EFI_SD_MMC_PASS_THRU_PROTOCOL EFI_SD_MMC_PASS_THRU_PROTOCOL;$/;"	t	typeref:struct:_EFI_SD_MMC_PASS_THRU_PROTOCOL
EFI_SD_MMC_PASS_THRU_PROTOCOL_GUID	SdMmcPassThru.h	13;"	d
EFI_SD_MMC_PASS_THRU_RESET_DEVICE	SdMmcPassThru.h	/^(EFIAPI *EFI_SD_MMC_PASS_THRU_RESET_DEVICE) ($/;"	t
EFI_SD_MMC_RESPONSE_TYPE	SdMmcPassThru.h	/^} EFI_SD_MMC_RESPONSE_TYPE;$/;"	t	typeref:enum:__anon445
EFI_SD_MMC_STATUS_BLOCK	SdMmcPassThru.h	/^} EFI_SD_MMC_STATUS_BLOCK;$/;"	t	typeref:struct:_EFI_SD_MMC_STATUS_BLOCK
EFI_SECURITY2_ARCH_PROTOCOL	Security2.h	/^typedef struct _EFI_SECURITY2_ARCH_PROTOCOL    EFI_SECURITY2_ARCH_PROTOCOL;$/;"	t	typeref:struct:_EFI_SECURITY2_ARCH_PROTOCOL
EFI_SECURITY2_ARCH_PROTOCOL_GUID	Security2.h	31;"	d
EFI_SECURITY2_FILE_AUTHENTICATION	Security2.h	/^typedef EFI_STATUS (EFIAPI *EFI_SECURITY2_FILE_AUTHENTICATION) ($/;"	t
EFI_SECURITY_ARCH_PROTOCOL	Security.h	/^typedef struct _EFI_SECURITY_ARCH_PROTOCOL    EFI_SECURITY_ARCH_PROTOCOL;$/;"	t	typeref:struct:_EFI_SECURITY_ARCH_PROTOCOL
EFI_SECURITY_ARCH_PROTOCOL_GUID	Security.h	28;"	d
EFI_SECURITY_FILE_AUTHENTICATION_STATE	Security.h	/^(EFIAPI *EFI_SECURITY_FILE_AUTHENTICATION_STATE)($/;"	t
EFI_SECURITY_POLICY_PROTOCOL_GUID	SecurityPolicy.h	15;"	d
EFI_SEND_FORM2	FormBrowser2.h	/^(EFIAPI *EFI_SEND_FORM2)($/;"	t
EFI_SERIAL_CARRIER_DETECT	SerialIo.h	70;"	d
EFI_SERIAL_CLEAR_TO_SEND	SerialIo.h	67;"	d
EFI_SERIAL_DATA_SET_READY	SerialIo.h	68;"	d
EFI_SERIAL_DATA_TERMINAL_READY	SerialIo.h	78;"	d
EFI_SERIAL_GET_CONTROL_BITS	SerialIo.h	/^(EFIAPI *EFI_SERIAL_GET_CONTROL_BITS)($/;"	t
EFI_SERIAL_HARDWARE_FLOW_CONTROL_ENABLE	SerialIo.h	85;"	d
EFI_SERIAL_HARDWARE_LOOPBACK_ENABLE	SerialIo.h	83;"	d
EFI_SERIAL_INPUT_BUFFER_EMPTY	SerialIo.h	71;"	d
EFI_SERIAL_IO_MODE	SerialIo.h	/^} EFI_SERIAL_IO_MODE;$/;"	t	typeref:struct:__anon548
EFI_SERIAL_IO_PROTOCOL	SerialIo.h	/^typedef struct _EFI_SERIAL_IO_PROTOCOL EFI_SERIAL_IO_PROTOCOL;$/;"	t	typeref:struct:_EFI_SERIAL_IO_PROTOCOL
EFI_SERIAL_IO_PROTOCOL_GUID	SerialIo.h	15;"	d
EFI_SERIAL_IO_PROTOCOL_REVISION	SerialIo.h	270;"	d
EFI_SERIAL_IO_PROTOCOL_REVISION1p1	SerialIo.h	271;"	d
EFI_SERIAL_OUTPUT_BUFFER_EMPTY	SerialIo.h	72;"	d
EFI_SERIAL_READ	SerialIo.h	/^(EFIAPI *EFI_SERIAL_READ)($/;"	t
EFI_SERIAL_REQUEST_TO_SEND	SerialIo.h	77;"	d
EFI_SERIAL_RESET	SerialIo.h	/^(EFIAPI *EFI_SERIAL_RESET)($/;"	t
EFI_SERIAL_RING_INDICATE	SerialIo.h	69;"	d
EFI_SERIAL_SET_ATTRIBUTES	SerialIo.h	/^(EFIAPI *EFI_SERIAL_SET_ATTRIBUTES)($/;"	t
EFI_SERIAL_SET_CONTROL_BITS	SerialIo.h	/^(EFIAPI *EFI_SERIAL_SET_CONTROL_BITS)($/;"	t
EFI_SERIAL_SOFTWARE_LOOPBACK_ENABLE	SerialIo.h	84;"	d
EFI_SERIAL_TERMINAL_DEVICE_TYPE_GUID	SerialIo.h	20;"	d
EFI_SERIAL_WRITE	SerialIo.h	/^(EFIAPI *EFI_SERIAL_WRITE)($/;"	t
EFI_SERVICE_BINDING_CREATE_CHILD	ServiceBinding.h	/^(EFIAPI *EFI_SERVICE_BINDING_CREATE_CHILD)($/;"	t
EFI_SERVICE_BINDING_DESTROY_CHILD	ServiceBinding.h	/^(EFIAPI *EFI_SERVICE_BINDING_DESTROY_CHILD)($/;"	t
EFI_SERVICE_BINDING_PROTOCOL	ServiceBinding.h	/^typedef struct _EFI_SERVICE_BINDING_PROTOCOL EFI_SERVICE_BINDING_PROTOCOL;$/;"	t	typeref:struct:_EFI_SERVICE_BINDING_PROTOCOL
EFI_SET_STATE	SimpleTextInEx.h	/^(EFIAPI *EFI_SET_STATE)($/;"	t
EFI_SHA1_HASH	Hash.h	/^typedef UINT8  EFI_SHA1_HASH[20];$/;"	t
EFI_SHA1_HASH2	Hash2.h	/^typedef UINT8  EFI_SHA1_HASH2[20];$/;"	t
EFI_SHA224_HASH	Hash.h	/^typedef UINT8  EFI_SHA224_HASH[28];$/;"	t
EFI_SHA224_HASH2	Hash2.h	/^typedef UINT8  EFI_SHA224_HASH2[28];$/;"	t
EFI_SHA256_HASH	Hash.h	/^typedef UINT8  EFI_SHA256_HASH[32];$/;"	t
EFI_SHA256_HASH2	Hash2.h	/^typedef UINT8  EFI_SHA256_HASH2[32];$/;"	t
EFI_SHA384_HASH	Hash.h	/^typedef UINT8  EFI_SHA384_HASH[48];$/;"	t
EFI_SHA384_HASH2	Hash2.h	/^typedef UINT8  EFI_SHA384_HASH2[48];$/;"	t
EFI_SHA512_HASH	Hash.h	/^typedef UINT8  EFI_SHA512_HASH[64];$/;"	t
EFI_SHA512_HASH2	Hash2.h	/^typedef UINT8  EFI_SHA512_HASH2[64];$/;"	t
EFI_SHELL_BATCH_IS_ACTIVE	Shell.h	/^(EFIAPI *EFI_SHELL_BATCH_IS_ACTIVE) ($/;"	t
EFI_SHELL_CLOSE_FILE	Shell.h	/^(EFIAPI *EFI_SHELL_CLOSE_FILE)($/;"	t
EFI_SHELL_CREATE_FILE	Shell.h	/^(EFIAPI *EFI_SHELL_CREATE_FILE)($/;"	t
EFI_SHELL_DELETE_FILE	Shell.h	/^(EFIAPI *EFI_SHELL_DELETE_FILE)($/;"	t
EFI_SHELL_DELETE_FILE_BY_NAME	Shell.h	/^(EFIAPI *EFI_SHELL_DELETE_FILE_BY_NAME)($/;"	t
EFI_SHELL_DEVICE_NAME_FLAGS	Shell.h	/^typedef UINT32 EFI_SHELL_DEVICE_NAME_FLAGS;$/;"	t
EFI_SHELL_DISABLE_PAGE_BREAK	Shell.h	/^(EFIAPI *EFI_SHELL_DISABLE_PAGE_BREAK) ($/;"	t
EFI_SHELL_DYNAMIC_COMMAND_PROTOCOL	ShellDynamicCommand.h	/^typedef struct _EFI_SHELL_DYNAMIC_COMMAND_PROTOCOL EFI_SHELL_DYNAMIC_COMMAND_PROTOCOL;$/;"	t	typeref:struct:_EFI_SHELL_DYNAMIC_COMMAND_PROTOCOL
EFI_SHELL_DYNAMIC_COMMAND_PROTOCOL_GUID	ShellDynamicCommand.h	17;"	d
EFI_SHELL_ENABLE_PAGE_BREAK	Shell.h	/^(EFIAPI *EFI_SHELL_ENABLE_PAGE_BREAK) ($/;"	t
EFI_SHELL_EXECUTE	Shell.h	/^(EFIAPI *EFI_SHELL_EXECUTE) ($/;"	t
EFI_SHELL_FILE_INFO	Shell.h	/^} EFI_SHELL_FILE_INFO;$/;"	t	typeref:struct:__anon502
EFI_SHELL_FIND_FILES	Shell.h	/^(EFIAPI *EFI_SHELL_FIND_FILES)($/;"	t
EFI_SHELL_FIND_FILES_IN_DIR	Shell.h	/^(EFIAPI *EFI_SHELL_FIND_FILES_IN_DIR)($/;"	t
EFI_SHELL_FLUSH_FILE	Shell.h	/^(EFIAPI *EFI_SHELL_FLUSH_FILE)($/;"	t
EFI_SHELL_FREE_FILE_LIST	Shell.h	/^(EFIAPI *EFI_SHELL_FREE_FILE_LIST) ($/;"	t
EFI_SHELL_GET_ALIAS	Shell.h	/^(EFIAPI *EFI_SHELL_GET_ALIAS)($/;"	t
EFI_SHELL_GET_CUR_DIR	Shell.h	/^(EFIAPI *EFI_SHELL_GET_CUR_DIR) ($/;"	t
EFI_SHELL_GET_DEVICE_NAME	Shell.h	/^(EFIAPI *EFI_SHELL_GET_DEVICE_NAME) ($/;"	t
EFI_SHELL_GET_DEVICE_PATH_FROM_FILE_PATH	Shell.h	/^(EFIAPI *EFI_SHELL_GET_DEVICE_PATH_FROM_FILE_PATH) ($/;"	t
EFI_SHELL_GET_DEVICE_PATH_FROM_MAP	Shell.h	/^(EFIAPI *EFI_SHELL_GET_DEVICE_PATH_FROM_MAP) ($/;"	t
EFI_SHELL_GET_ENV	Shell.h	/^(EFIAPI *EFI_SHELL_GET_ENV) ($/;"	t
EFI_SHELL_GET_ENV_EX	Shell.h	/^(EFIAPI *EFI_SHELL_GET_ENV_EX) ($/;"	t
EFI_SHELL_GET_FILE_INFO	Shell.h	/^(EFIAPI *EFI_SHELL_GET_FILE_INFO)($/;"	t
EFI_SHELL_GET_FILE_PATH_FROM_DEVICE_PATH	Shell.h	/^(EFIAPI *EFI_SHELL_GET_FILE_PATH_FROM_DEVICE_PATH) ($/;"	t
EFI_SHELL_GET_FILE_POSITION	Shell.h	/^(EFIAPI *EFI_SHELL_GET_FILE_POSITION)($/;"	t
EFI_SHELL_GET_FILE_SIZE	Shell.h	/^(EFIAPI *EFI_SHELL_GET_FILE_SIZE)($/;"	t
EFI_SHELL_GET_GUID_FROM_NAME	Shell.h	/^(EFIAPI *EFI_SHELL_GET_GUID_FROM_NAME)($/;"	t
EFI_SHELL_GET_GUID_NAME	Shell.h	/^(EFIAPI *EFI_SHELL_GET_GUID_NAME)($/;"	t
EFI_SHELL_GET_HELP_TEXT	Shell.h	/^(EFIAPI *EFI_SHELL_GET_HELP_TEXT) ($/;"	t
EFI_SHELL_GET_MAP_FROM_DEVICE_PATH	Shell.h	/^(EFIAPI *EFI_SHELL_GET_MAP_FROM_DEVICE_PATH) ($/;"	t
EFI_SHELL_GET_PAGE_BREAK	Shell.h	/^(EFIAPI *EFI_SHELL_GET_PAGE_BREAK) ($/;"	t
EFI_SHELL_IS_ROOT_SHELL	Shell.h	/^(EFIAPI *EFI_SHELL_IS_ROOT_SHELL) ($/;"	t
EFI_SHELL_OPEN_FILE_BY_NAME	Shell.h	/^(EFIAPI *EFI_SHELL_OPEN_FILE_BY_NAME) ($/;"	t
EFI_SHELL_OPEN_FILE_LIST	Shell.h	/^(EFIAPI *EFI_SHELL_OPEN_FILE_LIST) ($/;"	t
EFI_SHELL_OPEN_ROOT	Shell.h	/^(EFIAPI *EFI_SHELL_OPEN_ROOT)($/;"	t
EFI_SHELL_OPEN_ROOT_BY_HANDLE	Shell.h	/^(EFIAPI *EFI_SHELL_OPEN_ROOT_BY_HANDLE)($/;"	t
EFI_SHELL_PARAMETERS_PROTOCOL	ShellParameters.h	/^} EFI_SHELL_PARAMETERS_PROTOCOL;$/;"	t	typeref:struct:_EFI_SHELL_PARAMETERS_PROTOCOL
EFI_SHELL_PARAMETERS_PROTOCOL_GUID	ShellParameters.h	14;"	d
EFI_SHELL_PROTOCOL	Shell.h	/^} EFI_SHELL_PROTOCOL;$/;"	t	typeref:struct:_EFI_SHELL_PROTOCOL
EFI_SHELL_PROTOCOL_GUID	Shell.h	15;"	d
EFI_SHELL_READ_FILE	Shell.h	/^(EFIAPI *EFI_SHELL_READ_FILE) ($/;"	t
EFI_SHELL_REGISTER_GUID_NAME	Shell.h	/^(EFIAPI *EFI_SHELL_REGISTER_GUID_NAME)($/;"	t
EFI_SHELL_REMOVE_DUP_IN_FILE_LIST	Shell.h	/^(EFIAPI *EFI_SHELL_REMOVE_DUP_IN_FILE_LIST) ($/;"	t
EFI_SHELL_SET_ALIAS	Shell.h	/^(EFIAPI *EFI_SHELL_SET_ALIAS)($/;"	t
EFI_SHELL_SET_CUR_DIR	Shell.h	/^(EFIAPI *EFI_SHELL_SET_CUR_DIR) ($/;"	t
EFI_SHELL_SET_ENV	Shell.h	/^(EFIAPI *EFI_SHELL_SET_ENV) ($/;"	t
EFI_SHELL_SET_FILE_INFO	Shell.h	/^(EFIAPI *EFI_SHELL_SET_FILE_INFO)($/;"	t
EFI_SHELL_SET_FILE_POSITION	Shell.h	/^(EFIAPI *EFI_SHELL_SET_FILE_POSITION)($/;"	t
EFI_SHELL_SET_MAP	Shell.h	/^(EFIAPI *EFI_SHELL_SET_MAP)($/;"	t
EFI_SHELL_WRITE_FILE	Shell.h	/^(EFIAPI *EFI_SHELL_WRITE_FILE)($/;"	t
EFI_SHIFT_STATE_VALID	SimpleTextInEx.h	98;"	d
EFI_SIMPLE_FILE_SYSTEM_PROTOCOL	SimpleFileSystem.h	/^typedef struct _EFI_SIMPLE_FILE_SYSTEM_PROTOCOL  EFI_SIMPLE_FILE_SYSTEM_PROTOCOL;$/;"	t	typeref:struct:_EFI_SIMPLE_FILE_SYSTEM_PROTOCOL
EFI_SIMPLE_FILE_SYSTEM_PROTOCOL_GUID	SimpleFileSystem.h	18;"	d
EFI_SIMPLE_FILE_SYSTEM_PROTOCOL_OPEN_VOLUME	SimpleFileSystem.h	/^(EFIAPI *EFI_SIMPLE_FILE_SYSTEM_PROTOCOL_OPEN_VOLUME)($/;"	t
EFI_SIMPLE_FILE_SYSTEM_PROTOCOL_REVISION	SimpleFileSystem.h	66;"	d
EFI_SIMPLE_NETWORK	SimpleNetwork.h	/^typedef EFI_SIMPLE_NETWORK_PROTOCOL   EFI_SIMPLE_NETWORK;$/;"	t
EFI_SIMPLE_NETWORK_COMMAND_INTERRUPT	SimpleNetwork.h	159;"	d
EFI_SIMPLE_NETWORK_GET_STATUS	SimpleNetwork.h	/^(EFIAPI *EFI_SIMPLE_NETWORK_GET_STATUS)($/;"	t
EFI_SIMPLE_NETWORK_INITIALIZE	SimpleNetwork.h	/^(EFIAPI *EFI_SIMPLE_NETWORK_INITIALIZE)($/;"	t
EFI_SIMPLE_NETWORK_INTERFACE_REVISION	SimpleNetwork.h	635;"	d
EFI_SIMPLE_NETWORK_MCAST_IP_TO_MAC	SimpleNetwork.h	/^(EFIAPI *EFI_SIMPLE_NETWORK_MCAST_IP_TO_MAC)($/;"	t
EFI_SIMPLE_NETWORK_MODE	SimpleNetwork.h	/^} EFI_SIMPLE_NETWORK_MODE;$/;"	t	typeref:struct:__anon266
EFI_SIMPLE_NETWORK_NVDATA	SimpleNetwork.h	/^(EFIAPI *EFI_SIMPLE_NETWORK_NVDATA)($/;"	t
EFI_SIMPLE_NETWORK_PROTOCOL	SimpleNetwork.h	/^typedef struct _EFI_SIMPLE_NETWORK_PROTOCOL  EFI_SIMPLE_NETWORK_PROTOCOL;$/;"	t	typeref:struct:_EFI_SIMPLE_NETWORK_PROTOCOL
EFI_SIMPLE_NETWORK_PROTOCOL_GUID	SimpleNetwork.h	23;"	d
EFI_SIMPLE_NETWORK_PROTOCOL_REVISION	SimpleNetwork.h	630;"	d
EFI_SIMPLE_NETWORK_RECEIVE	SimpleNetwork.h	/^(EFIAPI *EFI_SIMPLE_NETWORK_RECEIVE)($/;"	t
EFI_SIMPLE_NETWORK_RECEIVE_BROADCAST	SimpleNetwork.h	153;"	d
EFI_SIMPLE_NETWORK_RECEIVE_FILTERS	SimpleNetwork.h	/^(EFIAPI *EFI_SIMPLE_NETWORK_RECEIVE_FILTERS)($/;"	t
EFI_SIMPLE_NETWORK_RECEIVE_INTERRUPT	SimpleNetwork.h	157;"	d
EFI_SIMPLE_NETWORK_RECEIVE_MULTICAST	SimpleNetwork.h	152;"	d
EFI_SIMPLE_NETWORK_RECEIVE_PROMISCUOUS	SimpleNetwork.h	154;"	d
EFI_SIMPLE_NETWORK_RECEIVE_PROMISCUOUS_MULTICAST	SimpleNetwork.h	155;"	d
EFI_SIMPLE_NETWORK_RECEIVE_UNICAST	SimpleNetwork.h	151;"	d
EFI_SIMPLE_NETWORK_RESET	SimpleNetwork.h	/^(EFIAPI *EFI_SIMPLE_NETWORK_RESET)($/;"	t
EFI_SIMPLE_NETWORK_SHUTDOWN	SimpleNetwork.h	/^(EFIAPI *EFI_SIMPLE_NETWORK_SHUTDOWN)($/;"	t
EFI_SIMPLE_NETWORK_SOFTWARE_INTERRUPT	SimpleNetwork.h	160;"	d
EFI_SIMPLE_NETWORK_START	SimpleNetwork.h	/^(EFIAPI *EFI_SIMPLE_NETWORK_START)($/;"	t
EFI_SIMPLE_NETWORK_STATE	SimpleNetwork.h	/^} EFI_SIMPLE_NETWORK_STATE;$/;"	t	typeref:enum:__anon265
EFI_SIMPLE_NETWORK_STATION_ADDRESS	SimpleNetwork.h	/^(EFIAPI *EFI_SIMPLE_NETWORK_STATION_ADDRESS)($/;"	t
EFI_SIMPLE_NETWORK_STATISTICS	SimpleNetwork.h	/^(EFIAPI *EFI_SIMPLE_NETWORK_STATISTICS)($/;"	t
EFI_SIMPLE_NETWORK_STOP	SimpleNetwork.h	/^(EFIAPI *EFI_SIMPLE_NETWORK_STOP)($/;"	t
EFI_SIMPLE_NETWORK_TRANSMIT	SimpleNetwork.h	/^(EFIAPI *EFI_SIMPLE_NETWORK_TRANSMIT)($/;"	t
EFI_SIMPLE_NETWORK_TRANSMIT_INTERRUPT	SimpleNetwork.h	158;"	d
EFI_SIMPLE_POINTER_GET_STATE	SimplePointer.h	/^(EFIAPI *EFI_SIMPLE_POINTER_GET_STATE)($/;"	t
EFI_SIMPLE_POINTER_MODE	SimplePointer.h	/^} EFI_SIMPLE_POINTER_MODE;$/;"	t	typeref:struct:__anon370
EFI_SIMPLE_POINTER_PROTOCOL	SimplePointer.h	/^typedef struct _EFI_SIMPLE_POINTER_PROTOCOL  EFI_SIMPLE_POINTER_PROTOCOL;$/;"	t	typeref:struct:_EFI_SIMPLE_POINTER_PROTOCOL
EFI_SIMPLE_POINTER_PROTOCOL_GUID	SimplePointer.h	14;"	d
EFI_SIMPLE_POINTER_RESET	SimplePointer.h	/^(EFIAPI *EFI_SIMPLE_POINTER_RESET)($/;"	t
EFI_SIMPLE_POINTER_STATE	SimplePointer.h	/^} EFI_SIMPLE_POINTER_STATE;$/;"	t	typeref:struct:__anon369
EFI_SIMPLE_TEXT_INPUT_EX_PROTOCOL	SimpleTextInEx.h	/^typedef struct _EFI_SIMPLE_TEXT_INPUT_EX_PROTOCOL EFI_SIMPLE_TEXT_INPUT_EX_PROTOCOL;$/;"	t	typeref:struct:_EFI_SIMPLE_TEXT_INPUT_EX_PROTOCOL
EFI_SIMPLE_TEXT_INPUT_EX_PROTOCOL_GUID	SimpleTextInEx.h	18;"	d
EFI_SIMPLE_TEXT_INPUT_PROTOCOL	SimpleTextIn.h	/^typedef struct _EFI_SIMPLE_TEXT_INPUT_PROTOCOL  EFI_SIMPLE_TEXT_INPUT_PROTOCOL;$/;"	t	typeref:struct:_EFI_SIMPLE_TEXT_INPUT_PROTOCOL
EFI_SIMPLE_TEXT_INPUT_PROTOCOL_GUID	SimpleTextIn.h	15;"	d
EFI_SIMPLE_TEXT_OUTPUT_MODE	SimpleTextOut.h	/^} EFI_SIMPLE_TEXT_OUTPUT_MODE;$/;"	t	typeref:struct:__anon218
EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL	SimpleTextOut.h	/^typedef struct _EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL;$/;"	t	typeref:struct:_EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL
EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL_GUID	SimpleTextOut.h	17;"	d
EFI_SIO_CONTROL_DISABLE	SuperIoControl.h	/^(EFIAPI *EFI_SIO_CONTROL_DISABLE)($/;"	t
EFI_SIO_CONTROL_ENABLE	SuperIoControl.h	/^(EFIAPI *EFI_SIO_CONTROL_ENABLE)($/;"	t
EFI_SIO_CONTROL_PROTOCOL	SuperIoControl.h	/^typedef struct _EFI_SIO_CONTROL_PROTOCOL EFI_SIO_CONTROL_PROTOCOL;$/;"	t	typeref:struct:_EFI_SIO_CONTROL_PROTOCOL
EFI_SIO_CONTROL_PROTOCOL_GUID	SuperIoControl.h	17;"	d
EFI_SIO_GET_RESOURCES	SuperIo.h	/^(EFIAPI *EFI_SIO_GET_RESOURCES)($/;"	t
EFI_SIO_MODIFY	SuperIo.h	/^(EFIAPI *EFI_SIO_MODIFY)($/;"	t
EFI_SIO_POSSIBLE_RESOURCES	SuperIo.h	/^(EFIAPI *EFI_SIO_POSSIBLE_RESOURCES)($/;"	t
EFI_SIO_PROTOCOL	SuperIo.h	/^typedef struct _EFI_SIO_PROTOCOL  EFI_SIO_PROTOCOL;$/;"	t	typeref:struct:_EFI_SIO_PROTOCOL
EFI_SIO_PROTOCOL_GUID	SuperIo.h	17;"	d
EFI_SIO_REGISTER_ACCESS	SuperIo.h	/^(EFIAPI *EFI_SIO_REGISTER_ACCESS)($/;"	t
EFI_SIO_REGISTER_MODIFY	SuperIo.h	/^} EFI_SIO_REGISTER_MODIFY;$/;"	t	typeref:struct:__anon225
EFI_SIO_SET_RESOURCES	SuperIo.h	/^(EFIAPI *EFI_SIO_SET_RESOURCES)($/;"	t
EFI_SLEEP_PHASE	MmSxDispatch.h	/^} EFI_SLEEP_PHASE;$/;"	t	typeref:enum:__anon366
EFI_SLEEP_TYPE	MmSxDispatch.h	/^} EFI_SLEEP_TYPE;$/;"	t	typeref:enum:__anon365
EFI_SMART_CARD_EDGE_BUILD_DH_AGREEMENT	SmartCardEdge.h	/^(EFIAPI *EFI_SMART_CARD_EDGE_BUILD_DH_AGREEMENT) ($/;"	t
EFI_SMART_CARD_EDGE_CONNECT	SmartCardEdge.h	/^(EFIAPI *EFI_SMART_CARD_EDGE_CONNECT) ($/;"	t
EFI_SMART_CARD_EDGE_DECRYPT_DATA	SmartCardEdge.h	/^(EFIAPI *EFI_SMART_CARD_EDGE_DECRYPT_DATA) ($/;"	t
EFI_SMART_CARD_EDGE_DISCONNECT	SmartCardEdge.h	/^(EFIAPI *EFI_SMART_CARD_EDGE_DISCONNECT) ($/;"	t
EFI_SMART_CARD_EDGE_GET_CONTEXT	SmartCardEdge.h	/^(EFIAPI *EFI_SMART_CARD_EDGE_GET_CONTEXT) ($/;"	t
EFI_SMART_CARD_EDGE_GET_CREDENTIAL	SmartCardEdge.h	/^(EFIAPI *EFI_SMART_CARD_EDGE_GET_CREDENTIAL) ($/;"	t
EFI_SMART_CARD_EDGE_GET_CSN	SmartCardEdge.h	/^(EFIAPI *EFI_SMART_CARD_EDGE_GET_CSN) ($/;"	t
EFI_SMART_CARD_EDGE_GET_DATA	SmartCardEdge.h	/^(EFIAPI *EFI_SMART_CARD_EDGE_GET_DATA) ($/;"	t
EFI_SMART_CARD_EDGE_GET_PIN_REMAINING	SmartCardEdge.h	/^(EFIAPI *EFI_SMART_CARD_EDGE_GET_PIN_REMAINING) ($/;"	t
EFI_SMART_CARD_EDGE_GET_READER_NAME	SmartCardEdge.h	/^(EFIAPI *EFI_SMART_CARD_EDGE_GET_READER_NAME) ($/;"	t
EFI_SMART_CARD_EDGE_PROTOCOL	SmartCardEdge.h	/^typedef struct _EFI_SMART_CARD_EDGE_PROTOCOL  EFI_SMART_CARD_EDGE_PROTOCOL;$/;"	t	typeref:struct:_EFI_SMART_CARD_EDGE_PROTOCOL
EFI_SMART_CARD_EDGE_PROTOCOL_GUID	SmartCardEdge.h	20;"	d
EFI_SMART_CARD_EDGE_SIGN_DATA	SmartCardEdge.h	/^(EFIAPI *EFI_SMART_CARD_EDGE_SIGN_DATA) ($/;"	t
EFI_SMART_CARD_EDGE_VERIFY_PIN	SmartCardEdge.h	/^(EFIAPI *EFI_SMART_CARD_EDGE_VERIFY_PIN) ($/;"	t
EFI_SMART_CARD_READER_CONNECT	SmartCardReader.h	/^(EFIAPI *EFI_SMART_CARD_READER_CONNECT) ($/;"	t
EFI_SMART_CARD_READER_CONTROL	SmartCardReader.h	/^(EFIAPI *EFI_SMART_CARD_READER_CONTROL) ($/;"	t
EFI_SMART_CARD_READER_DISCONNECT	SmartCardReader.h	/^(EFIAPI *EFI_SMART_CARD_READER_DISCONNECT) ($/;"	t
EFI_SMART_CARD_READER_GET_ATTRIB	SmartCardReader.h	/^(EFIAPI *EFI_SMART_CARD_READER_GET_ATTRIB) ($/;"	t
EFI_SMART_CARD_READER_PROTOCOL	SmartCardReader.h	/^typedef struct _EFI_SMART_CARD_READER_PROTOCOL  EFI_SMART_CARD_READER_PROTOCOL;$/;"	t	typeref:struct:_EFI_SMART_CARD_READER_PROTOCOL
EFI_SMART_CARD_READER_PROTOCOL_GUID	SmartCardReader.h	15;"	d
EFI_SMART_CARD_READER_STATUS	SmartCardReader.h	/^(EFIAPI *EFI_SMART_CARD_READER_STATUS) ($/;"	t
EFI_SMART_CARD_READER_TRANSMIT	SmartCardReader.h	/^(EFIAPI *EFI_SMART_CARD_READER_TRANSMIT) ($/;"	t
EFI_SMBIOS_ADD	Smbios.h	/^(EFIAPI *EFI_SMBIOS_ADD)($/;"	t
EFI_SMBIOS_GET_NEXT	Smbios.h	/^(EFIAPI *EFI_SMBIOS_GET_NEXT)($/;"	t
EFI_SMBIOS_HANDLE	Smbios.h	/^typedef SMBIOS_HANDLE       EFI_SMBIOS_HANDLE;$/;"	t
EFI_SMBIOS_OEM_BEGIN	Smbios.h	74;"	d
EFI_SMBIOS_OEM_END	Smbios.h	75;"	d
EFI_SMBIOS_PROTOCOL	Smbios.h	/^typedef struct _EFI_SMBIOS_PROTOCOL EFI_SMBIOS_PROTOCOL;$/;"	t	typeref:struct:_EFI_SMBIOS_PROTOCOL
EFI_SMBIOS_PROTOCOL_GUID	Smbios.h	26;"	d
EFI_SMBIOS_REMOVE	Smbios.h	/^(EFIAPI *EFI_SMBIOS_REMOVE)($/;"	t
EFI_SMBIOS_STRING	Smbios.h	/^typedef SMBIOS_TABLE_STRING EFI_SMBIOS_STRING;$/;"	t
EFI_SMBIOS_TABLE_HEADER	Smbios.h	/^typedef SMBIOS_STRUCTURE    EFI_SMBIOS_TABLE_HEADER;$/;"	t
EFI_SMBIOS_TYPE	Smbios.h	/^typedef SMBIOS_TYPE         EFI_SMBIOS_TYPE;$/;"	t
EFI_SMBIOS_TYPE_32BIT_MEMORY_ERROR_INFORMATION	Smbios.h	47;"	d
EFI_SMBIOS_TYPE_64BIT_MEMORY_ERROR_INFORMATION	Smbios.h	62;"	d
EFI_SMBIOS_TYPE_ADDITIONAL_INFORMATION	Smbios.h	69;"	d
EFI_SMBIOS_TYPE_BASEBOARD_INFORMATION	Smbios.h	31;"	d
EFI_SMBIOS_TYPE_BIOS_INFORMATION	Smbios.h	29;"	d
EFI_SMBIOS_TYPE_BIOS_LANGUAGE_INFORMATION	Smbios.h	42;"	d
EFI_SMBIOS_TYPE_BOOT_INTEGRITY_SERVICE	Smbios.h	60;"	d
EFI_SMBIOS_TYPE_BUILT_IN_POINTING_DEVICE	Smbios.h	50;"	d
EFI_SMBIOS_TYPE_CACHE_INFORMATION	Smbios.h	36;"	d
EFI_SMBIOS_TYPE_COOLING_DEVICE	Smbios.h	56;"	d
EFI_SMBIOS_TYPE_ELECTRICAL_CURRENT_PROBE	Smbios.h	58;"	d
EFI_SMBIOS_TYPE_END_OF_TABLE	Smbios.h	73;"	d
EFI_SMBIOS_TYPE_GROUP_ASSOCIATIONS	Smbios.h	43;"	d
EFI_SMBIOS_TYPE_HARDWARE_SECURITY	Smbios.h	53;"	d
EFI_SMBIOS_TYPE_INACTIVE	Smbios.h	72;"	d
EFI_SMBIOS_TYPE_IPMI_DEVICE_INFORMATION	Smbios.h	67;"	d
EFI_SMBIOS_TYPE_MANAGEMENT_CONTROLLER_HOST_INTERFACE	Smbios.h	71;"	d
EFI_SMBIOS_TYPE_MANAGEMENT_DEVICE	Smbios.h	63;"	d
EFI_SMBIOS_TYPE_MANAGEMENT_DEVICE_COMPONENT	Smbios.h	64;"	d
EFI_SMBIOS_TYPE_MANAGEMENT_DEVICE_THRESHOLD_DATA	Smbios.h	65;"	d
EFI_SMBIOS_TYPE_MEMORY_ARRAY_MAPPED_ADDRESS	Smbios.h	48;"	d
EFI_SMBIOS_TYPE_MEMORY_CHANNEL	Smbios.h	66;"	d
EFI_SMBIOS_TYPE_MEMORY_CONTROLLER_INFORMATION	Smbios.h	34;"	d
EFI_SMBIOS_TYPE_MEMORY_DEVICE	Smbios.h	46;"	d
EFI_SMBIOS_TYPE_MEMORY_DEVICE_MAPPED_ADDRESS	Smbios.h	49;"	d
EFI_SMBIOS_TYPE_MEMORY_MODULE_INFORMATON	Smbios.h	35;"	d
EFI_SMBIOS_TYPE_OEM_STRINGS	Smbios.h	40;"	d
EFI_SMBIOS_TYPE_ONBOARD_DEVICES_EXTENDED_INFORMATION	Smbios.h	70;"	d
EFI_SMBIOS_TYPE_ONBOARD_DEVICE_INFORMATION	Smbios.h	39;"	d
EFI_SMBIOS_TYPE_OUT_OF_BAND_REMOTE_ACCESS	Smbios.h	59;"	d
EFI_SMBIOS_TYPE_PHYSICAL_MEMORY_ARRAY	Smbios.h	45;"	d
EFI_SMBIOS_TYPE_PORTABLE_BATTERY	Smbios.h	51;"	d
EFI_SMBIOS_TYPE_PORT_CONNECTOR_INFORMATION	Smbios.h	37;"	d
EFI_SMBIOS_TYPE_PROCESSOR_INFORMATION	Smbios.h	33;"	d
EFI_SMBIOS_TYPE_SYSTEM_BOOT_INFORMATION	Smbios.h	61;"	d
EFI_SMBIOS_TYPE_SYSTEM_CONFIGURATION_OPTIONS	Smbios.h	41;"	d
EFI_SMBIOS_TYPE_SYSTEM_ENCLOSURE	Smbios.h	32;"	d
EFI_SMBIOS_TYPE_SYSTEM_EVENT_LOG	Smbios.h	44;"	d
EFI_SMBIOS_TYPE_SYSTEM_INFORMATION	Smbios.h	30;"	d
EFI_SMBIOS_TYPE_SYSTEM_POWER_CONTROLS	Smbios.h	54;"	d
EFI_SMBIOS_TYPE_SYSTEM_POWER_SUPPLY	Smbios.h	68;"	d
EFI_SMBIOS_TYPE_SYSTEM_RESET	Smbios.h	52;"	d
EFI_SMBIOS_TYPE_SYSTEM_SLOTS	Smbios.h	38;"	d
EFI_SMBIOS_TYPE_TEMPERATURE_PROBE	Smbios.h	57;"	d
EFI_SMBIOS_TYPE_VOLTAGE_PROBE	Smbios.h	55;"	d
EFI_SMBIOS_UPDATE_STRING	Smbios.h	/^(EFIAPI *EFI_SMBIOS_UPDATE_STRING)($/;"	t
EFI_SMBUS_HC_EXECUTE_OPERATION	SmbusHc.h	/^(EFIAPI *EFI_SMBUS_HC_EXECUTE_OPERATION)($/;"	t
EFI_SMBUS_HC_PROTOCOL	SmbusHc.h	/^typedef struct _EFI_SMBUS_HC_PROTOCOL EFI_SMBUS_HC_PROTOCOL;$/;"	t	typeref:struct:_EFI_SMBUS_HC_PROTOCOL
EFI_SMBUS_HC_PROTOCOL_ARP_DEVICE	SmbusHc.h	/^(EFIAPI *EFI_SMBUS_HC_PROTOCOL_ARP_DEVICE)($/;"	t
EFI_SMBUS_HC_PROTOCOL_GET_ARP_MAP	SmbusHc.h	/^(EFIAPI *EFI_SMBUS_HC_PROTOCOL_GET_ARP_MAP)($/;"	t
EFI_SMBUS_HC_PROTOCOL_GUID	SmbusHc.h	18;"	d
EFI_SMBUS_HC_PROTOCOL_NOTIFY	SmbusHc.h	/^(EFIAPI *EFI_SMBUS_HC_PROTOCOL_NOTIFY)($/;"	t
EFI_SMBUS_NOTIFY_FUNCTION	SmbusHc.h	/^(EFIAPI *EFI_SMBUS_NOTIFY_FUNCTION)($/;"	t
EFI_SMM_ACCESS2_PROTOCOL	SmmAccess2.h	/^typedef EFI_MM_ACCESS_PROTOCOL  EFI_SMM_ACCESS2_PROTOCOL;$/;"	t
EFI_SMM_ACCESS2_PROTOCOL_GUID	SmmAccess2.h	24;"	d
EFI_SMM_ACTIVATE2	SmmControl2.h	/^typedef EFI_MM_ACTIVATE EFI_SMM_ACTIVATE2;$/;"	t
EFI_SMM_BASE2_PROTOCOL	SmmBase2.h	/^typedef struct _EFI_SMM_BASE2_PROTOCOL  EFI_SMM_BASE2_PROTOCOL;$/;"	t	typeref:struct:_EFI_SMM_BASE2_PROTOCOL
EFI_SMM_BASE2_PROTOCOL_GUID	SmmBase2.h	18;"	d
EFI_SMM_CAPABILITIES2	SmmAccess2.h	/^typedef EFI_MM_CAPABILITIES EFI_SMM_CAPABILITIES2;$/;"	t
EFI_SMM_CLOSE2	SmmAccess2.h	/^typedef EFI_MM_CLOSE EFI_SMM_CLOSE2;$/;"	t
EFI_SMM_COMMUNICATE_HEADER	SmmCommunication.h	/^typedef EFI_MM_COMMUNICATE_HEADER EFI_SMM_COMMUNICATE_HEADER;$/;"	t
EFI_SMM_COMMUNICATION_PROTOCOL	SmmCommunication.h	/^typedef EFI_MM_COMMUNICATION_PROTOCOL EFI_SMM_COMMUNICATION_PROTOCOL;$/;"	t
EFI_SMM_COMMUNICATION_PROTOCOL_GUID	SmmCommunication.h	20;"	d
EFI_SMM_CONFIGURATION_PROTOCOL	SmmConfiguration.h	/^typedef struct _EFI_SMM_CONFIGURATION_PROTOCOL  EFI_SMM_CONFIGURATION_PROTOCOL;$/;"	t	typeref:struct:_EFI_SMM_CONFIGURATION_PROTOCOL
EFI_SMM_CONFIGURATION_PROTOCOL_GUID	SmmConfiguration.h	20;"	d
EFI_SMM_CONTROL2_PROTOCOL	SmmControl2.h	/^typedef EFI_MM_CONTROL_PROTOCOL  EFI_SMM_CONTROL2_PROTOCOL;$/;"	t
EFI_SMM_CONTROL2_PROTOCOL_GUID	SmmControl2.h	24;"	d
EFI_SMM_CPU_IO2	SmmCpuIo2.h	/^typedef EFI_MM_CPU_IO EFI_SMM_CPU_IO2;$/;"	t
EFI_SMM_CPU_IO2_PROTOCOL	SmmCpuIo2.h	/^typedef EFI_MM_CPU_IO_PROTOCOL  EFI_SMM_CPU_IO2_PROTOCOL;$/;"	t
EFI_SMM_CPU_IO2_PROTOCOL_GUID	SmmCpuIo2.h	16;"	d
EFI_SMM_CPU_PROTOCOL	SmmCpu.h	/^typedef  EFI_MM_CPU_PROTOCOL EFI_SMM_CPU_PROTOCOL;$/;"	t
EFI_SMM_CPU_PROTOCOL_GUID	SmmCpu.h	19;"	d
EFI_SMM_DEACTIVATE2	SmmControl2.h	/^typedef EFI_MM_DEACTIVATE EFI_SMM_DEACTIVATE2;$/;"	t
EFI_SMM_END_OF_DXE_PROTOCOL_GUID	SmmEndOfDxe.h	22;"	d
EFI_SMM_GET_SMST_LOCATION2	SmmBase2.h	/^(EFIAPI *EFI_SMM_GET_SMST_LOCATION2)($/;"	t
EFI_SMM_GPI_DISPATCH2_PROTOCOL	SmmGpiDispatch2.h	/^typedef EFI_MM_GPI_DISPATCH_PROTOCOL EFI_SMM_GPI_DISPATCH2_PROTOCOL;$/;"	t
EFI_SMM_GPI_DISPATCH2_PROTOCOL_GUID	SmmGpiDispatch2.h	26;"	d
EFI_SMM_GPI_REGISTER2	SmmGpiDispatch2.h	/^typedef EFI_MM_GPI_REGISTER EFI_SMM_GPI_REGISTER2;$/;"	t
EFI_SMM_GPI_REGISTER_CONTEXT	SmmGpiDispatch2.h	/^typedef EFI_MM_GPI_REGISTER_CONTEXT  EFI_SMM_GPI_REGISTER_CONTEXT;$/;"	t
EFI_SMM_GPI_UNREGISTER2	SmmGpiDispatch2.h	/^typedef EFI_MM_GPI_UNREGISTER EFI_SMM_GPI_UNREGISTER2;$/;"	t
EFI_SMM_INSIDE_OUT2	SmmBase2.h	/^(EFIAPI *EFI_SMM_INSIDE_OUT2)($/;"	t
EFI_SMM_IO_ACCESS2	SmmCpuIo2.h	/^typedef EFI_MM_IO_ACCESS EFI_SMM_IO_ACCESS2;$/;"	t
EFI_SMM_IO_TRAP_CONTEXT	SmmIoTrapDispatch2.h	/^typedef EFI_MM_IO_TRAP_CONTEXT EFI_SMM_IO_TRAP_CONTEXT;$/;"	t
EFI_SMM_IO_TRAP_DISPATCH2_PROTOCOL	SmmIoTrapDispatch2.h	/^typedef EFI_MM_IO_TRAP_DISPATCH_PROTOCOL EFI_SMM_IO_TRAP_DISPATCH2_PROTOCOL;$/;"	t
EFI_SMM_IO_TRAP_DISPATCH2_PROTOCOL_GUID	SmmIoTrapDispatch2.h	20;"	d
EFI_SMM_IO_TRAP_DISPATCH2_REGISTER	SmmIoTrapDispatch2.h	/^typedef EFI_MM_IO_TRAP_DISPATCH_REGISTER   EFI_SMM_IO_TRAP_DISPATCH2_REGISTER;$/;"	t
EFI_SMM_IO_TRAP_DISPATCH2_UNREGISTER	SmmIoTrapDispatch2.h	/^typedef EFI_MM_IO_TRAP_DISPATCH_UNREGISTER EFI_SMM_IO_TRAP_DISPATCH2_UNREGISTER;$/;"	t
EFI_SMM_IO_TRAP_DISPATCH_TYPE	SmmIoTrapDispatch2.h	/^typedef EFI_MM_IO_TRAP_DISPATCH_TYPE EFI_SMM_IO_TRAP_DISPATCH_TYPE;$/;"	t
EFI_SMM_IO_TRAP_REGISTER_CONTEXT	SmmIoTrapDispatch2.h	/^typedef EFI_MM_IO_TRAP_REGISTER_CONTEXT EFI_SMM_IO_TRAP_REGISTER_CONTEXT;$/;"	t
EFI_SMM_IO_WIDTH	SmmCpuIo2.h	/^typedef EFI_MM_IO_WIDTH EFI_SMM_IO_WIDTH;$/;"	t
EFI_SMM_LOCK2	SmmAccess2.h	/^typedef EFI_MM_LOCK EFI_SMM_LOCK2;$/;"	t
EFI_SMM_OPEN2	SmmAccess2.h	/^typedef EFI_MM_OPEN EFI_SMM_OPEN2;$/;"	t
EFI_SMM_PCI_ROOT_BRIDGE_IO_PROTOCOL	SmmPciRootBridgeIo.h	/^typedef EFI_MM_PCI_ROOT_BRIDGE_IO_PROTOCOL  EFI_SMM_PCI_ROOT_BRIDGE_IO_PROTOCOL;$/;"	t
EFI_SMM_PCI_ROOT_BRIDGE_IO_PROTOCOL_GUID	SmmPciRootBridgeIo.h	16;"	d
EFI_SMM_PERIOD	SmmControl2.h	/^typedef EFI_MM_PERIOD  EFI_SMM_PERIOD;$/;"	t
EFI_SMM_PERIODIC_TIMER_CONTEXT	SmmPeriodicTimerDispatch2.h	/^typedef EFI_MM_PERIODIC_TIMER_CONTEXT EFI_SMM_PERIODIC_TIMER_CONTEXT;$/;"	t
EFI_SMM_PERIODIC_TIMER_DISPATCH2_PROTOCOL	SmmPeriodicTimerDispatch2.h	/^typedef struct _EFI_SMM_PERIODIC_TIMER_DISPATCH2_PROTOCOL  EFI_SMM_PERIODIC_TIMER_DISPATCH2_PROTOCOL;$/;"	t	typeref:struct:_EFI_SMM_PERIODIC_TIMER_DISPATCH2_PROTOCOL
EFI_SMM_PERIODIC_TIMER_DISPATCH2_PROTOCOL_GUID	SmmPeriodicTimerDispatch2.h	21;"	d
EFI_SMM_PERIODIC_TIMER_INTERVAL2	SmmPeriodicTimerDispatch2.h	/^(EFIAPI *EFI_SMM_PERIODIC_TIMER_INTERVAL2)($/;"	t
EFI_SMM_PERIODIC_TIMER_REGISTER2	SmmPeriodicTimerDispatch2.h	/^(EFIAPI *EFI_SMM_PERIODIC_TIMER_REGISTER2)($/;"	t
EFI_SMM_PERIODIC_TIMER_REGISTER_CONTEXT	SmmPeriodicTimerDispatch2.h	/^} EFI_SMM_PERIODIC_TIMER_REGISTER_CONTEXT;$/;"	t	typeref:struct:__anon8
EFI_SMM_PERIODIC_TIMER_UNREGISTER2	SmmPeriodicTimerDispatch2.h	/^(EFIAPI *EFI_SMM_PERIODIC_TIMER_UNREGISTER2)($/;"	t
EFI_SMM_POWER_BUTTON_DISPATCH2_PROTOCOL	SmmPowerButtonDispatch2.h	/^typedef EFI_MM_POWER_BUTTON_DISPATCH_PROTOCOL EFI_SMM_POWER_BUTTON_DISPATCH2_PROTOCOL;$/;"	t
EFI_SMM_POWER_BUTTON_DISPATCH2_PROTOCOL_GUID	SmmPowerButtonDispatch2.h	20;"	d
EFI_SMM_POWER_BUTTON_REGISTER2	SmmPowerButtonDispatch2.h	/^typedef EFI_MM_POWER_BUTTON_REGISTER EFI_SMM_POWER_BUTTON_REGISTER2;$/;"	t
EFI_SMM_POWER_BUTTON_REGISTER_CONTEXT	SmmPowerButtonDispatch2.h	/^typedef EFI_MM_POWER_BUTTON_REGISTER_CONTEXT EFI_SMM_POWER_BUTTON_REGISTER_CONTEXT;$/;"	t
EFI_SMM_POWER_BUTTON_UNREGISTER2	SmmPowerButtonDispatch2.h	/^typedef EFI_MM_POWER_BUTTON_UNREGISTER EFI_SMM_POWER_BUTTON_UNREGISTER2;$/;"	t
EFI_SMM_READY_TO_LOCK_PROTOCOL_GUID	SmmReadyToLock.h	24;"	d
EFI_SMM_READ_SAVE_STATE	SmmCpu.h	/^typedef EFI_MM_READ_SAVE_STATE EFI_SMM_READ_SAVE_STATE;$/;"	t
EFI_SMM_REGISTER_SMM_ENTRY	SmmConfiguration.h	/^(EFIAPI *EFI_SMM_REGISTER_SMM_ENTRY)($/;"	t
EFI_SMM_REPORT_STATUS_CODE	SmmStatusCode.h	/^typedef EFI_MM_REPORT_STATUS_CODE EFI_SMM_REPORT_STATUS_CODE;$/;"	t
EFI_SMM_RESERVED_SMRAM_REGION	SmmConfiguration.h	/^} EFI_SMM_RESERVED_SMRAM_REGION;$/;"	t	typeref:struct:_EFI_SMM_RESERVED_SMRAM_REGION
EFI_SMM_RSC_HANDLER_CALLBACK	SmmReportStatusCodeHandler.h	/^typedef EFI_MM_RSC_HANDLER_CALLBACK EFI_SMM_RSC_HANDLER_CALLBACK;$/;"	t
EFI_SMM_RSC_HANDLER_PROTOCOL	SmmReportStatusCodeHandler.h	/^typedef EFI_MM_RSC_HANDLER_PROTOCOL EFI_SMM_RSC_HANDLER_PROTOCOL;$/;"	t
EFI_SMM_RSC_HANDLER_PROTOCOL_GUID	SmmReportStatusCodeHandler.h	17;"	d
EFI_SMM_RSC_HANDLER_REGISTER	SmmReportStatusCodeHandler.h	/^typedef EFI_MM_RSC_HANDLER_REGISTER EFI_SMM_RSC_HANDLER_REGISTER;$/;"	t
EFI_SMM_RSC_HANDLER_UNREGISTER	SmmReportStatusCodeHandler.h	/^typedef EFI_MM_RSC_HANDLER_UNREGISTER EFI_SMM_RSC_HANDLER_UNREGISTER;$/;"	t
EFI_SMM_SAVE_STATE_IO_INFO	SmmCpu.h	/^typedef  EFI_MM_SAVE_STATE_IO_INFO EFI_SMM_SAVE_STATE_IO_INFO;$/;"	t
EFI_SMM_SAVE_STATE_IO_TYPE	SmmCpu.h	/^typedef  EFI_MM_SAVE_STATE_IO_TYPE EFI_SMM_SAVE_STATE_IO_TYPE;$/;"	t
EFI_SMM_SAVE_STATE_IO_TYPE_INPUT	SmmCpu.h	114;"	d
EFI_SMM_SAVE_STATE_IO_TYPE_OUTPUT	SmmCpu.h	115;"	d
EFI_SMM_SAVE_STATE_IO_TYPE_REP_PREFIX	SmmCpu.h	117;"	d
EFI_SMM_SAVE_STATE_IO_TYPE_STRING	SmmCpu.h	116;"	d
EFI_SMM_SAVE_STATE_IO_WIDTH	SmmCpu.h	/^typedef EFI_MM_SAVE_STATE_IO_WIDTH EFI_SMM_SAVE_STATE_IO_WIDTH;$/;"	t
EFI_SMM_SAVE_STATE_IO_WIDTH_UINT16	SmmCpu.h	106;"	d
EFI_SMM_SAVE_STATE_IO_WIDTH_UINT32	SmmCpu.h	107;"	d
EFI_SMM_SAVE_STATE_IO_WIDTH_UINT64	SmmCpu.h	108;"	d
EFI_SMM_SAVE_STATE_IO_WIDTH_UINT8	SmmCpu.h	105;"	d
EFI_SMM_SAVE_STATE_REGISTER	SmmCpu.h	/^typedef EFI_MM_SAVE_STATE_REGISTER  EFI_SMM_SAVE_STATE_REGISTER;$/;"	t
EFI_SMM_SAVE_STATE_REGISTER_CR0	SmmCpu.h	56;"	d
EFI_SMM_SAVE_STATE_REGISTER_CR3	SmmCpu.h	57;"	d
EFI_SMM_SAVE_STATE_REGISTER_CR4	SmmCpu.h	58;"	d
EFI_SMM_SAVE_STATE_REGISTER_CS	SmmCpu.h	29;"	d
EFI_SMM_SAVE_STATE_REGISTER_DATAOFFSET	SmmCpu.h	65;"	d
EFI_SMM_SAVE_STATE_REGISTER_DR6	SmmCpu.h	37;"	d
EFI_SMM_SAVE_STATE_REGISTER_DR7	SmmCpu.h	36;"	d
EFI_SMM_SAVE_STATE_REGISTER_DS	SmmCpu.h	31;"	d
EFI_SMM_SAVE_STATE_REGISTER_ES	SmmCpu.h	28;"	d
EFI_SMM_SAVE_STATE_REGISTER_FCW	SmmCpu.h	59;"	d
EFI_SMM_SAVE_STATE_REGISTER_FP_CS	SmmCpu.h	64;"	d
EFI_SMM_SAVE_STATE_REGISTER_FP_DS	SmmCpu.h	66;"	d
EFI_SMM_SAVE_STATE_REGISTER_FP_EIP	SmmCpu.h	63;"	d
EFI_SMM_SAVE_STATE_REGISTER_FS	SmmCpu.h	32;"	d
EFI_SMM_SAVE_STATE_REGISTER_FSW	SmmCpu.h	60;"	d
EFI_SMM_SAVE_STATE_REGISTER_FTW	SmmCpu.h	61;"	d
EFI_SMM_SAVE_STATE_REGISTER_GDTBASE	SmmCpu.h	21;"	d
EFI_SMM_SAVE_STATE_REGISTER_GDTLIMIT	SmmCpu.h	24;"	d
EFI_SMM_SAVE_STATE_REGISTER_GS	SmmCpu.h	33;"	d
EFI_SMM_SAVE_STATE_REGISTER_IDTBASE	SmmCpu.h	22;"	d
EFI_SMM_SAVE_STATE_REGISTER_IDTLIMIT	SmmCpu.h	25;"	d
EFI_SMM_SAVE_STATE_REGISTER_IO	SmmCpu.h	91;"	d
EFI_SMM_SAVE_STATE_REGISTER_LDTBASE	SmmCpu.h	23;"	d
EFI_SMM_SAVE_STATE_REGISTER_LDTINFO	SmmCpu.h	27;"	d
EFI_SMM_SAVE_STATE_REGISTER_LDTLIMIT	SmmCpu.h	26;"	d
EFI_SMM_SAVE_STATE_REGISTER_LDTR_SEL	SmmCpu.h	34;"	d
EFI_SMM_SAVE_STATE_REGISTER_LMA	SmmCpu.h	92;"	d
EFI_SMM_SAVE_STATE_REGISTER_LMA_32BIT	SmmCpu.h	98;"	d
EFI_SMM_SAVE_STATE_REGISTER_LMA_64BIT	SmmCpu.h	99;"	d
EFI_SMM_SAVE_STATE_REGISTER_MM0	SmmCpu.h	67;"	d
EFI_SMM_SAVE_STATE_REGISTER_MM1	SmmCpu.h	68;"	d
EFI_SMM_SAVE_STATE_REGISTER_MM2	SmmCpu.h	69;"	d
EFI_SMM_SAVE_STATE_REGISTER_MM3	SmmCpu.h	70;"	d
EFI_SMM_SAVE_STATE_REGISTER_MM4	SmmCpu.h	71;"	d
EFI_SMM_SAVE_STATE_REGISTER_MM5	SmmCpu.h	72;"	d
EFI_SMM_SAVE_STATE_REGISTER_MM6	SmmCpu.h	73;"	d
EFI_SMM_SAVE_STATE_REGISTER_MM7	SmmCpu.h	74;"	d
EFI_SMM_SAVE_STATE_REGISTER_OPCODE	SmmCpu.h	62;"	d
EFI_SMM_SAVE_STATE_REGISTER_PROCESSOR_ID	SmmCpu.h	93;"	d
EFI_SMM_SAVE_STATE_REGISTER_R10	SmmCpu.h	40;"	d
EFI_SMM_SAVE_STATE_REGISTER_R11	SmmCpu.h	41;"	d
EFI_SMM_SAVE_STATE_REGISTER_R12	SmmCpu.h	42;"	d
EFI_SMM_SAVE_STATE_REGISTER_R13	SmmCpu.h	43;"	d
EFI_SMM_SAVE_STATE_REGISTER_R14	SmmCpu.h	44;"	d
EFI_SMM_SAVE_STATE_REGISTER_R15	SmmCpu.h	45;"	d
EFI_SMM_SAVE_STATE_REGISTER_R8	SmmCpu.h	38;"	d
EFI_SMM_SAVE_STATE_REGISTER_R9	SmmCpu.h	39;"	d
EFI_SMM_SAVE_STATE_REGISTER_RAX	SmmCpu.h	46;"	d
EFI_SMM_SAVE_STATE_REGISTER_RBP	SmmCpu.h	51;"	d
EFI_SMM_SAVE_STATE_REGISTER_RBX	SmmCpu.h	47;"	d
EFI_SMM_SAVE_STATE_REGISTER_RCX	SmmCpu.h	48;"	d
EFI_SMM_SAVE_STATE_REGISTER_RDI	SmmCpu.h	53;"	d
EFI_SMM_SAVE_STATE_REGISTER_RDX	SmmCpu.h	49;"	d
EFI_SMM_SAVE_STATE_REGISTER_RFLAGS	SmmCpu.h	55;"	d
EFI_SMM_SAVE_STATE_REGISTER_RIP	SmmCpu.h	54;"	d
EFI_SMM_SAVE_STATE_REGISTER_RSI	SmmCpu.h	52;"	d
EFI_SMM_SAVE_STATE_REGISTER_RSP	SmmCpu.h	50;"	d
EFI_SMM_SAVE_STATE_REGISTER_SS	SmmCpu.h	30;"	d
EFI_SMM_SAVE_STATE_REGISTER_TR_SEL	SmmCpu.h	35;"	d
EFI_SMM_SAVE_STATE_REGISTER_XMM0	SmmCpu.h	75;"	d
EFI_SMM_SAVE_STATE_REGISTER_XMM1	SmmCpu.h	76;"	d
EFI_SMM_SAVE_STATE_REGISTER_XMM10	SmmCpu.h	85;"	d
EFI_SMM_SAVE_STATE_REGISTER_XMM11	SmmCpu.h	86;"	d
EFI_SMM_SAVE_STATE_REGISTER_XMM12	SmmCpu.h	87;"	d
EFI_SMM_SAVE_STATE_REGISTER_XMM13	SmmCpu.h	88;"	d
EFI_SMM_SAVE_STATE_REGISTER_XMM14	SmmCpu.h	89;"	d
EFI_SMM_SAVE_STATE_REGISTER_XMM15	SmmCpu.h	90;"	d
EFI_SMM_SAVE_STATE_REGISTER_XMM2	SmmCpu.h	77;"	d
EFI_SMM_SAVE_STATE_REGISTER_XMM3	SmmCpu.h	78;"	d
EFI_SMM_SAVE_STATE_REGISTER_XMM4	SmmCpu.h	79;"	d
EFI_SMM_SAVE_STATE_REGISTER_XMM5	SmmCpu.h	80;"	d
EFI_SMM_SAVE_STATE_REGISTER_XMM6	SmmCpu.h	81;"	d
EFI_SMM_SAVE_STATE_REGISTER_XMM7	SmmCpu.h	82;"	d
EFI_SMM_SAVE_STATE_REGISTER_XMM8	SmmCpu.h	83;"	d
EFI_SMM_SAVE_STATE_REGISTER_XMM9	SmmCpu.h	84;"	d
EFI_SMM_STANDBY_BUTTON_DISPATCH2_PROTOCOL	SmmStandbyButtonDispatch2.h	/^typedef EFI_MM_STANDBY_BUTTON_DISPATCH_PROTOCOL EFI_SMM_STANDBY_BUTTON_DISPATCH2_PROTOCOL;$/;"	t
EFI_SMM_STANDBY_BUTTON_DISPATCH2_PROTOCOL_GUID	SmmStandbyButtonDispatch2.h	20;"	d
EFI_SMM_STANDBY_BUTTON_REGISTER2	SmmStandbyButtonDispatch2.h	/^typedef EFI_MM_STANDBY_BUTTON_REGISTER EFI_SMM_STANDBY_BUTTON_REGISTER2;$/;"	t
EFI_SMM_STANDBY_BUTTON_REGISTER_CONTEXT	SmmStandbyButtonDispatch2.h	/^typedef EFI_MM_STANDBY_BUTTON_REGISTER_CONTEXT EFI_SMM_STANDBY_BUTTON_REGISTER_CONTEXT;$/;"	t
EFI_SMM_STANDBY_BUTTON_UNREGISTER2	SmmStandbyButtonDispatch2.h	/^typedef EFI_MM_STANDBY_BUTTON_UNREGISTER EFI_SMM_STANDBY_BUTTON_UNREGISTER2;$/;"	t
EFI_SMM_STATUS_CODE_PROTOCOL	SmmStatusCode.h	/^typedef EFI_MM_STATUS_CODE_PROTOCOL  EFI_SMM_STATUS_CODE_PROTOCOL;$/;"	t
EFI_SMM_STATUS_CODE_PROTOCOL_GUID	SmmStatusCode.h	16;"	d
EFI_SMM_SW_CONTEXT	SmmSwDispatch2.h	/^} EFI_SMM_SW_CONTEXT;$/;"	t	typeref:struct:__anon93
EFI_SMM_SW_DISPATCH2_PROTOCOL	SmmSwDispatch2.h	/^typedef struct _EFI_SMM_SW_DISPATCH2_PROTOCOL  EFI_SMM_SW_DISPATCH2_PROTOCOL;$/;"	t	typeref:struct:_EFI_SMM_SW_DISPATCH2_PROTOCOL
EFI_SMM_SW_DISPATCH2_PROTOCOL_GUID	SmmSwDispatch2.h	18;"	d
EFI_SMM_SW_REGISTER2	SmmSwDispatch2.h	/^(EFIAPI *EFI_SMM_SW_REGISTER2)($/;"	t
EFI_SMM_SW_REGISTER_CONTEXT	SmmSwDispatch2.h	/^} EFI_SMM_SW_REGISTER_CONTEXT;$/;"	t	typeref:struct:__anon92
EFI_SMM_SW_UNREGISTER2	SmmSwDispatch2.h	/^(EFIAPI *EFI_SMM_SW_UNREGISTER2)($/;"	t
EFI_SMM_SX_DISPATCH2_PROTOCOL	SmmSxDispatch2.h	/^typedef EFI_MM_SX_DISPATCH_PROTOCOL  EFI_SMM_SX_DISPATCH2_PROTOCOL;$/;"	t
EFI_SMM_SX_DISPATCH2_PROTOCOL_GUID	SmmSxDispatch2.h	17;"	d
EFI_SMM_SX_REGISTER2	SmmSxDispatch2.h	/^typedef EFI_MM_SX_REGISTER EFI_SMM_SX_REGISTER2;$/;"	t
EFI_SMM_SX_REGISTER_CONTEXT	SmmSxDispatch2.h	/^typedef EFI_MM_SX_REGISTER_CONTEXT EFI_SMM_SX_REGISTER_CONTEXT;$/;"	t
EFI_SMM_SX_UNREGISTER2	SmmSxDispatch2.h	/^typedef EFI_MM_SX_UNREGISTER EFI_SMM_SX_UNREGISTER2;$/;"	t
EFI_SMM_USB_DISPATCH2_PROTOCOL	SmmUsbDispatch2.h	/^typedef EFI_MM_USB_DISPATCH_PROTOCOL EFI_SMM_USB_DISPATCH2_PROTOCOL;$/;"	t
EFI_SMM_USB_DISPATCH2_PROTOCOL_GUID	SmmUsbDispatch2.h	20;"	d
EFI_SMM_USB_REGISTER2	SmmUsbDispatch2.h	/^typedef EFI_MM_USB_REGISTER EFI_SMM_USB_REGISTER2;$/;"	t
EFI_SMM_USB_REGISTER_CONTEXT	SmmUsbDispatch2.h	/^typedef EFI_MM_USB_REGISTER_CONTEXT EFI_SMM_USB_REGISTER_CONTEXT;$/;"	t
EFI_SMM_USB_UNREGISTER2	SmmUsbDispatch2.h	/^typedef EFI_MM_USB_UNREGISTER EFI_SMM_USB_UNREGISTER2;$/;"	t
EFI_SMM_WRITE_SAVE_STATE	SmmCpu.h	/^typedef EFI_MM_WRITE_SAVE_STATE EFI_SMM_WRITE_SAVE_STATE;$/;"	t
EFI_SPI_BUS	SpiConfiguration.h	/^} EFI_SPI_BUS;$/;"	t	typeref:struct:_EFI_SPI_BUS
EFI_SPI_BUS_TRANSACTION	SpiIo.h	/^} EFI_SPI_BUS_TRANSACTION;$/;"	t	typeref:struct:_EFI_SPI_BUS_TRANSACTION
EFI_SPI_CHIP_SELECT	SpiConfiguration.h	/^(EFIAPI *EFI_SPI_CHIP_SELECT) ($/;"	t
EFI_SPI_CLOCK	SpiConfiguration.h	/^(EFIAPI *EFI_SPI_CLOCK) ($/;"	t
EFI_SPI_CONFIGURATION_GUID	SpiConfiguration.h	18;"	d
EFI_SPI_CONFIGURATION_PROTOCOL	SpiConfiguration.h	/^} EFI_SPI_CONFIGURATION_PROTOCOL;$/;"	t	typeref:struct:_EFI_SPI_CONFIGURATION_PROTOCOL
EFI_SPI_HC_PROTOCOL	SpiHc.h	/^typedef struct _EFI_SPI_HC_PROTOCOL EFI_SPI_HC_PROTOCOL;$/;"	t	typeref:struct:_EFI_SPI_HC_PROTOCOL
EFI_SPI_HC_PROTOCOL_CHIP_SELECT	SpiHc.h	/^(EFIAPI *EFI_SPI_HC_PROTOCOL_CHIP_SELECT) ($/;"	t
EFI_SPI_HC_PROTOCOL_CLOCK	SpiHc.h	/^(EFIAPI *EFI_SPI_HC_PROTOCOL_CLOCK) ($/;"	t
EFI_SPI_HC_PROTOCOL_GUID	SpiHc.h	28;"	d
EFI_SPI_HC_PROTOCOL_TRANSACTION	SpiHc.h	/^(EFIAPI *EFI_SPI_HC_PROTOCOL_TRANSACTION) ($/;"	t
EFI_SPI_HOST_GUID	SpiHc.h	21;"	d
EFI_SPI_IO_PROTOCOL	SpiIo.h	/^typedef struct _EFI_SPI_IO_PROTOCOL EFI_SPI_IO_PROTOCOL;$/;"	t	typeref:struct:_EFI_SPI_IO_PROTOCOL
EFI_SPI_IO_PROTOCOL_TRANSACTION	SpiIo.h	/^(EFIAPI *EFI_SPI_IO_PROTOCOL_TRANSACTION) ($/;"	t
EFI_SPI_IO_PROTOCOL_UPDATE_SPI_PERIPHERAL	SpiIo.h	/^(EFIAPI *EFI_SPI_IO_PROTOCOL_UPDATE_SPI_PERIPHERAL) ($/;"	t
EFI_SPI_NOR_FLASH_PROTOCOL	SpiNorFlash.h	/^typedef struct _EFI_SPI_NOR_FLASH_PROTOCOL EFI_SPI_NOR_FLASH_PROTOCOL;$/;"	t	typeref:struct:_EFI_SPI_NOR_FLASH_PROTOCOL
EFI_SPI_NOR_FLASH_PROTOCOL_ERASE	SpiNorFlash.h	/^(EFIAPI *EFI_SPI_NOR_FLASH_PROTOCOL_ERASE) ($/;"	t
EFI_SPI_NOR_FLASH_PROTOCOL_GET_FLASH_ID	SpiNorFlash.h	/^(EFIAPI *EFI_SPI_NOR_FLASH_PROTOCOL_GET_FLASH_ID) ($/;"	t
EFI_SPI_NOR_FLASH_PROTOCOL_GUID	SpiNorFlash.h	20;"	d
EFI_SPI_NOR_FLASH_PROTOCOL_READ_DATA	SpiNorFlash.h	/^(EFIAPI *EFI_SPI_NOR_FLASH_PROTOCOL_READ_DATA) ($/;"	t
EFI_SPI_NOR_FLASH_PROTOCOL_READ_STATUS	SpiNorFlash.h	/^(EFIAPI *EFI_SPI_NOR_FLASH_PROTOCOL_READ_STATUS) ($/;"	t
EFI_SPI_NOR_FLASH_PROTOCOL_WRITE_DATA	SpiNorFlash.h	/^(EFIAPI *EFI_SPI_NOR_FLASH_PROTOCOL_WRITE_DATA) ($/;"	t
EFI_SPI_NOR_FLASH_PROTOCOL_WRITE_STATUS	SpiNorFlash.h	/^(EFIAPI *EFI_SPI_NOR_FLASH_PROTOCOL_WRITE_STATUS) ($/;"	t
EFI_SPI_PART	SpiConfiguration.h	/^} EFI_SPI_PART;$/;"	t	typeref:struct:_EFI_SPI_PART
EFI_SPI_PERIPHERAL	SpiConfiguration.h	/^typedef struct _EFI_SPI_PERIPHERAL EFI_SPI_PERIPHERAL;$/;"	t	typeref:struct:_EFI_SPI_PERIPHERAL
EFI_SPI_SMM_CONFIGURATION_PROTOCOL	SpiSmmConfiguration.h	/^EFI_SPI_SMM_CONFIGURATION_PROTOCOL;$/;"	t	typeref:struct:_EFI_SPI_CONFIGURATION_PROTOCOL
EFI_SPI_SMM_CONFIGURATION_PROTOCOL_GUID	SpiSmmConfiguration.h	20;"	d
EFI_SPI_SMM_HC_PROTOCOL	SpiSmmHc.h	/^EFI_SPI_SMM_HC_PROTOCOL;$/;"	t	typeref:struct:_EFI_SPI_HC_PROTOCOL
EFI_SPI_SMM_HC_PROTOCOL_GUID	SpiSmmHc.h	20;"	d
EFI_SPI_SMM_NOR_FLASH_PROTOCOL	SpiSmmNorFlash.h	/^EFI_SPI_SMM_NOR_FLASH_PROTOCOL;$/;"	t	typeref:struct:_EFI_SPI_NOR_FLASH_PROTOCOL
EFI_SPI_SMM_NOR_FLASH_PROTOCOL_GUID	SpiSmmNorFlash.h	20;"	d
EFI_SPI_TRANSACTION_TYPE	SpiIo.h	/^} EFI_SPI_TRANSACTION_TYPE;$/;"	t	typeref:enum:__anon98
EFI_STANDBY_BUTTON_PHASE	MmStandbyButtonDispatch.h	/^} EFI_STANDBY_BUTTON_PHASE;$/;"	t	typeref:enum:__anon95
EFI_STATUS_CODE_PROTOCOL	StatusCode.h	/^} EFI_STATUS_CODE_PROTOCOL;$/;"	t	typeref:struct:_EFI_STATUS_CODE_PROTOCOL
EFI_STATUS_CODE_RUNTIME_PROTOCOL_GUID	StatusCode.h	12;"	d
EFI_STOP_BITS_TYPE	SerialIo.h	/^} EFI_STOP_BITS_TYPE;$/;"	t	typeref:enum:__anon547
EFI_STORAGE_SECURITY_COMMAND_PROTOCOL	StorageSecurityCommand.h	/^typedef struct _EFI_STORAGE_SECURITY_COMMAND_PROTOCOL  EFI_STORAGE_SECURITY_COMMAND_PROTOCOL;$/;"	t	typeref:struct:_EFI_STORAGE_SECURITY_COMMAND_PROTOCOL
EFI_STORAGE_SECURITY_COMMAND_PROTOCOL_GUID	StorageSecurityCommand.h	16;"	d
EFI_STORAGE_SECURITY_RECEIVE_DATA	StorageSecurityCommand.h	/^(EFIAPI *EFI_STORAGE_SECURITY_RECEIVE_DATA)($/;"	t
EFI_STORAGE_SECURITY_SEND_DATA	StorageSecurityCommand.h	/^(EFIAPI *EFI_STORAGE_SECURITY_SEND_DATA) ($/;"	t
EFI_SUPPLICANT_BUILD_RESPONSE_PACKET	Supplicant.h	/^(EFIAPI *EFI_SUPPLICANT_BUILD_RESPONSE_PACKET) ($/;"	t
EFI_SUPPLICANT_CRYPT_MODE	Supplicant.h	/^} EFI_SUPPLICANT_CRYPT_MODE;$/;"	t	typeref:enum:__anon117
EFI_SUPPLICANT_DATA_TYPE	Supplicant.h	/^} EFI_SUPPLICANT_DATA_TYPE;$/;"	t	typeref:enum:__anon118
EFI_SUPPLICANT_FRAGMENT_DATA	Supplicant.h	/^} EFI_SUPPLICANT_FRAGMENT_DATA;$/;"	t	typeref:struct:__anon125
EFI_SUPPLICANT_GET_DATA	Supplicant.h	/^(EFIAPI *EFI_SUPPLICANT_GET_DATA) ($/;"	t
EFI_SUPPLICANT_GTK_LIST	Supplicant.h	/^} EFI_SUPPLICANT_GTK_LIST;$/;"	t	typeref:struct:__anon124
EFI_SUPPLICANT_KEY	Supplicant.h	/^} EFI_SUPPLICANT_KEY;$/;"	t	typeref:struct:__anon123
EFI_SUPPLICANT_KEY_DIRECTION	Supplicant.h	/^} EFI_SUPPLICANT_KEY_DIRECTION;$/;"	t	typeref:enum:__anon121
EFI_SUPPLICANT_KEY_REFRESH	Supplicant.h	/^} EFI_SUPPLICANT_KEY_REFRESH;$/;"	t	typeref:struct:__anon122
EFI_SUPPLICANT_KEY_TYPE	Supplicant.h	/^} EFI_SUPPLICANT_KEY_TYPE;$/;"	t	typeref:enum:__anon120
EFI_SUPPLICANT_PROCESS_PACKET	Supplicant.h	/^(EFIAPI *EFI_SUPPLICANT_PROCESS_PACKET) ($/;"	t
EFI_SUPPLICANT_PROTOCOL	Supplicant.h	/^typedef struct _EFI_SUPPLICANT_PROTOCOL EFI_SUPPLICANT_PROTOCOL;$/;"	t	typeref:struct:_EFI_SUPPLICANT_PROTOCOL
EFI_SUPPLICANT_PROTOCOL_GUID	Supplicant.h	31;"	d
EFI_SUPPLICANT_SERVICE_BINDING_PROTOCOL_GUID	Supplicant.h	22;"	d
EFI_SUPPLICANT_SET_DATA	Supplicant.h	/^(EFIAPI *EFI_SUPPLICANT_SET_DATA) ($/;"	t
EFI_SYSTEM_CONTEXT	DebugSupport.h	/^} EFI_SYSTEM_CONTEXT;$/;"	t	typeref:union:__anon495
EFI_SYSTEM_CONTEXT_AARCH64	DebugSupport.h	/^} EFI_SYSTEM_CONTEXT_AARCH64;$/;"	t	typeref:struct:__anon493
EFI_SYSTEM_CONTEXT_ARM	DebugSupport.h	/^} EFI_SYSTEM_CONTEXT_ARM;$/;"	t	typeref:struct:__anon492
EFI_SYSTEM_CONTEXT_EBC	DebugSupport.h	/^} EFI_SYSTEM_CONTEXT_EBC;$/;"	t	typeref:struct:__anon491
EFI_SYSTEM_CONTEXT_IA32	DebugSupport.h	/^} EFI_SYSTEM_CONTEXT_IA32;$/;"	t	typeref:struct:__anon487
EFI_SYSTEM_CONTEXT_IPF	DebugSupport.h	/^} EFI_SYSTEM_CONTEXT_IPF;$/;"	t	typeref:struct:__anon490
EFI_SYSTEM_CONTEXT_RISCV64	DebugSupport.h	/^} EFI_SYSTEM_CONTEXT_RISCV64;$/;"	t	typeref:struct:__anon494
EFI_SYSTEM_CONTEXT_X64	DebugSupport.h	/^} EFI_SYSTEM_CONTEXT_X64;$/;"	t	typeref:struct:__anon489
EFI_SYS_REQ_PRESSED	SimpleTextInEx.h	108;"	d
EFI_TAPE_HEADER	TapeIo.h	/^} EFI_TAPE_HEADER;$/;"	t	typeref:struct:_EFI_TAPE_HEADER
EFI_TAPE_IO_PROTOCOL	TapeIo.h	/^typedef struct _EFI_TAPE_IO_PROTOCOL EFI_TAPE_IO_PROTOCOL;$/;"	t	typeref:struct:_EFI_TAPE_IO_PROTOCOL
EFI_TAPE_IO_PROTOCOL_GUID	TapeIo.h	13;"	d
EFI_TAPE_READ	TapeIo.h	/^(EFIAPI *EFI_TAPE_READ)($/;"	t
EFI_TAPE_RESET	TapeIo.h	/^(EFIAPI *EFI_TAPE_RESET)($/;"	t
EFI_TAPE_REWIND	TapeIo.h	/^(EFIAPI *EFI_TAPE_REWIND)($/;"	t
EFI_TAPE_SPACE	TapeIo.h	/^(EFIAPI *EFI_TAPE_SPACE)($/;"	t
EFI_TAPE_WRITE	TapeIo.h	/^(EFIAPI *EFI_TAPE_WRITE)($/;"	t
EFI_TAPE_WRITEFM	TapeIo.h	/^(EFIAPI *EFI_TAPE_WRITEFM)($/;"	t
EFI_TCG2_BOOT_HASH_ALG_SHA1	Tcg2Protocol.h	90;"	d
EFI_TCG2_BOOT_HASH_ALG_SHA256	Tcg2Protocol.h	91;"	d
EFI_TCG2_BOOT_HASH_ALG_SHA384	Tcg2Protocol.h	92;"	d
EFI_TCG2_BOOT_HASH_ALG_SHA512	Tcg2Protocol.h	93;"	d
EFI_TCG2_BOOT_HASH_ALG_SM3_256	Tcg2Protocol.h	94;"	d
EFI_TCG2_BOOT_SERVICE_CAPABILITY	Tcg2Protocol.h	/^} EFI_TCG2_BOOT_SERVICE_CAPABILITY;$/;"	t	typeref:struct:tdEFI_TCG2_BOOT_SERVICE_CAPABILITY
EFI_TCG2_EVENT	Tcg2Protocol.h	/^} EFI_TCG2_EVENT;$/;"	t	typeref:struct:tdEFI_TCG2_EVENT
EFI_TCG2_EVENT_ALGORITHM_BITMAP	Tcg2Protocol.h	/^typedef UINT32 EFI_TCG2_EVENT_ALGORITHM_BITMAP;$/;"	t
EFI_TCG2_EVENT_HEADER	Tcg2Protocol.h	/^} EFI_TCG2_EVENT_HEADER;$/;"	t	typeref:struct:__anon223
EFI_TCG2_EVENT_HEADER_VERSION	Tcg2Protocol.h	109;"	d
EFI_TCG2_EVENT_LOG_BITMAP	Tcg2Protocol.h	/^typedef UINT32 EFI_TCG2_EVENT_LOG_BITMAP;$/;"	t
EFI_TCG2_EVENT_LOG_FORMAT	Tcg2Protocol.h	/^typedef UINT32 EFI_TCG2_EVENT_LOG_FORMAT;$/;"	t
EFI_TCG2_EVENT_LOG_FORMAT_TCG_1_2	Tcg2Protocol.h	30;"	d
EFI_TCG2_EVENT_LOG_FORMAT_TCG_2	Tcg2Protocol.h	31;"	d
EFI_TCG2_EXTEND_ONLY	Tcg2Protocol.h	99;"	d
EFI_TCG2_FINAL_EVENTS_TABLE	Tcg2Protocol.h	/^} EFI_TCG2_FINAL_EVENTS_TABLE;$/;"	t	typeref:struct:tdEFI_TCG2_FINAL_EVENTS_TABLE
EFI_TCG2_FINAL_EVENTS_TABLE_GUID	Tcg2Protocol.h	313;"	d
EFI_TCG2_FINAL_EVENTS_TABLE_VERSION	Tcg2Protocol.h	333;"	d
EFI_TCG2_GET_ACTIVE_PCR_BANKS	Tcg2Protocol.h	/^(EFIAPI *EFI_TCG2_GET_ACTIVE_PCR_BANKS) ($/;"	t
EFI_TCG2_GET_CAPABILITY	Tcg2Protocol.h	/^(EFIAPI *EFI_TCG2_GET_CAPABILITY) ($/;"	t
EFI_TCG2_GET_EVENT_LOG	Tcg2Protocol.h	/^(EFIAPI *EFI_TCG2_GET_EVENT_LOG) ($/;"	t
EFI_TCG2_GET_RESULT_OF_SET_ACTIVE_PCR_BANKS	Tcg2Protocol.h	/^(EFIAPI *EFI_TCG2_GET_RESULT_OF_SET_ACTIVE_PCR_BANKS) ($/;"	t
EFI_TCG2_HASH_LOG_EXTEND_EVENT	Tcg2Protocol.h	/^(EFIAPI * EFI_TCG2_HASH_LOG_EXTEND_EVENT) ($/;"	t
EFI_TCG2_PROTOCOL	Tcg2Protocol.h	/^typedef struct tdEFI_TCG2_PROTOCOL EFI_TCG2_PROTOCOL;$/;"	t	typeref:struct:tdEFI_TCG2_PROTOCOL
EFI_TCG2_PROTOCOL_GUID	Tcg2Protocol.h	16;"	d
EFI_TCG2_SET_ACTIVE_PCR_BANKS	Tcg2Protocol.h	/^(EFIAPI *EFI_TCG2_SET_ACTIVE_PCR_BANKS) ($/;"	t
EFI_TCG2_SUBMIT_COMMAND	Tcg2Protocol.h	/^(EFIAPI *EFI_TCG2_SUBMIT_COMMAND) ($/;"	t
EFI_TCG2_VERSION	Tcg2Protocol.h	/^} EFI_TCG2_VERSION;$/;"	t	typeref:struct:tdEFI_TCG2_VERSION
EFI_TCG_HASH_ALL	TcgService.h	/^(EFIAPI *EFI_TCG_HASH_ALL)($/;"	t
EFI_TCG_HASH_LOG_EXTEND_EVENT	TcgService.h	/^(EFIAPI *EFI_TCG_HASH_LOG_EXTEND_EVENT)($/;"	t
EFI_TCG_LOG_EVENT	TcgService.h	/^(EFIAPI *EFI_TCG_LOG_EVENT)($/;"	t
EFI_TCG_PASS_THROUGH_TO_TPM	TcgService.h	/^(EFIAPI *EFI_TCG_PASS_THROUGH_TO_TPM)($/;"	t
EFI_TCG_PROTOCOL	TcgService.h	/^typedef struct _EFI_TCG_PROTOCOL EFI_TCG_PROTOCOL;$/;"	t	typeref:struct:_EFI_TCG_PROTOCOL
EFI_TCG_PROTOCOL_GUID	TcgService.h	15;"	d
EFI_TCG_STATUS_CHECK	TcgService.h	/^(EFIAPI *EFI_TCG_STATUS_CHECK)($/;"	t
EFI_TCP4_ACCEPT	Tcp4.h	/^(EFIAPI *EFI_TCP4_ACCEPT)($/;"	t
EFI_TCP4_ACCESS_POINT	Tcp4.h	/^} EFI_TCP4_ACCESS_POINT;$/;"	t	typeref:struct:__anon317
EFI_TCP4_CANCEL	Tcp4.h	/^(EFIAPI *EFI_TCP4_CANCEL)($/;"	t
EFI_TCP4_CLOSE	Tcp4.h	/^(EFIAPI *EFI_TCP4_CLOSE)($/;"	t
EFI_TCP4_CLOSE_TOKEN	Tcp4.h	/^} EFI_TCP4_CLOSE_TOKEN;$/;"	t	typeref:struct:__anon329
EFI_TCP4_COMPLETION_TOKEN	Tcp4.h	/^} EFI_TCP4_COMPLETION_TOKEN;$/;"	t	typeref:struct:__anon321
EFI_TCP4_CONFIGURE	Tcp4.h	/^(EFIAPI *EFI_TCP4_CONFIGURE)($/;"	t
EFI_TCP4_CONFIG_DATA	Tcp4.h	/^} EFI_TCP4_CONFIG_DATA;$/;"	t	typeref:struct:__anon319
EFI_TCP4_CONNECT	Tcp4.h	/^(EFIAPI *EFI_TCP4_CONNECT)($/;"	t
EFI_TCP4_CONNECTION_STATE	Tcp4.h	/^} EFI_TCP4_CONNECTION_STATE;$/;"	t	typeref:enum:__anon320
EFI_TCP4_CONNECTION_TOKEN	Tcp4.h	/^} EFI_TCP4_CONNECTION_TOKEN;$/;"	t	typeref:struct:__anon322
EFI_TCP4_FRAGMENT_DATA	Tcp4.h	/^} EFI_TCP4_FRAGMENT_DATA;$/;"	t	typeref:struct:__anon324
EFI_TCP4_GET_MODE_DATA	Tcp4.h	/^(EFIAPI *EFI_TCP4_GET_MODE_DATA)($/;"	t
EFI_TCP4_IO_TOKEN	Tcp4.h	/^} EFI_TCP4_IO_TOKEN;$/;"	t	typeref:struct:__anon327
EFI_TCP4_LISTEN_TOKEN	Tcp4.h	/^} EFI_TCP4_LISTEN_TOKEN;$/;"	t	typeref:struct:__anon323
EFI_TCP4_OPTION	Tcp4.h	/^} EFI_TCP4_OPTION;$/;"	t	typeref:struct:__anon318
EFI_TCP4_POLL	Tcp4.h	/^(EFIAPI *EFI_TCP4_POLL)($/;"	t
EFI_TCP4_PROTOCOL	Tcp4.h	/^typedef struct _EFI_TCP4_PROTOCOL EFI_TCP4_PROTOCOL;$/;"	t	typeref:struct:_EFI_TCP4_PROTOCOL
EFI_TCP4_PROTOCOL_GUID	Tcp4.h	25;"	d
EFI_TCP4_RECEIVE	Tcp4.h	/^(EFIAPI *EFI_TCP4_RECEIVE)($/;"	t
EFI_TCP4_RECEIVE_DATA	Tcp4.h	/^} EFI_TCP4_RECEIVE_DATA;$/;"	t	typeref:struct:__anon325
EFI_TCP4_ROUTES	Tcp4.h	/^(EFIAPI *EFI_TCP4_ROUTES)($/;"	t
EFI_TCP4_SERVICE_BINDING_PROTOCOL_GUID	Tcp4.h	20;"	d
EFI_TCP4_SERVICE_POINT	Tcp4.h	/^} EFI_TCP4_SERVICE_POINT;$/;"	t	typeref:struct:__anon315
EFI_TCP4_TRANSMIT	Tcp4.h	/^(EFIAPI *EFI_TCP4_TRANSMIT)($/;"	t
EFI_TCP4_TRANSMIT_DATA	Tcp4.h	/^} EFI_TCP4_TRANSMIT_DATA;$/;"	t	typeref:struct:__anon326
EFI_TCP4_VARIABLE_DATA	Tcp4.h	/^} EFI_TCP4_VARIABLE_DATA;$/;"	t	typeref:struct:__anon316
EFI_TCP6_ACCEPT	Tcp6.h	/^(EFIAPI *EFI_TCP6_ACCEPT)($/;"	t
EFI_TCP6_ACCESS_POINT	Tcp6.h	/^} EFI_TCP6_ACCESS_POINT;$/;"	t	typeref:struct:__anon468
EFI_TCP6_CANCEL	Tcp6.h	/^(EFIAPI *EFI_TCP6_CANCEL)($/;"	t
EFI_TCP6_CLOSE	Tcp6.h	/^(EFIAPI *EFI_TCP6_CLOSE)($/;"	t
EFI_TCP6_CLOSE_TOKEN	Tcp6.h	/^} EFI_TCP6_CLOSE_TOKEN;$/;"	t	typeref:struct:__anon480
EFI_TCP6_COMPLETION_TOKEN	Tcp6.h	/^} EFI_TCP6_COMPLETION_TOKEN;$/;"	t	typeref:struct:__anon472
EFI_TCP6_CONFIGURE	Tcp6.h	/^(EFIAPI *EFI_TCP6_CONFIGURE)($/;"	t
EFI_TCP6_CONFIG_DATA	Tcp6.h	/^} EFI_TCP6_CONFIG_DATA;$/;"	t	typeref:struct:__anon470
EFI_TCP6_CONNECT	Tcp6.h	/^(EFIAPI *EFI_TCP6_CONNECT)($/;"	t
EFI_TCP6_CONNECTION_STATE	Tcp6.h	/^} EFI_TCP6_CONNECTION_STATE;$/;"	t	typeref:enum:__anon471
EFI_TCP6_CONNECTION_TOKEN	Tcp6.h	/^} EFI_TCP6_CONNECTION_TOKEN;$/;"	t	typeref:struct:__anon473
EFI_TCP6_FRAGMENT_DATA	Tcp6.h	/^} EFI_TCP6_FRAGMENT_DATA;$/;"	t	typeref:struct:__anon475
EFI_TCP6_GET_MODE_DATA	Tcp6.h	/^(EFIAPI *EFI_TCP6_GET_MODE_DATA)($/;"	t
EFI_TCP6_IO_TOKEN	Tcp6.h	/^} EFI_TCP6_IO_TOKEN;$/;"	t	typeref:struct:__anon478
EFI_TCP6_LISTEN_TOKEN	Tcp6.h	/^} EFI_TCP6_LISTEN_TOKEN;$/;"	t	typeref:struct:__anon474
EFI_TCP6_OPTION	Tcp6.h	/^} EFI_TCP6_OPTION;$/;"	t	typeref:struct:__anon469
EFI_TCP6_POLL	Tcp6.h	/^(EFIAPI *EFI_TCP6_POLL)($/;"	t
EFI_TCP6_PROTOCOL	Tcp6.h	/^typedef struct _EFI_TCP6_PROTOCOL EFI_TCP6_PROTOCOL;$/;"	t	typeref:struct:_EFI_TCP6_PROTOCOL
EFI_TCP6_PROTOCOL_GUID	Tcp6.h	26;"	d
EFI_TCP6_RECEIVE	Tcp6.h	/^(EFIAPI *EFI_TCP6_RECEIVE)($/;"	t
EFI_TCP6_RECEIVE_DATA	Tcp6.h	/^} EFI_TCP6_RECEIVE_DATA;$/;"	t	typeref:struct:__anon476
EFI_TCP6_SERVICE_BINDING_PROTOCOL_GUID	Tcp6.h	21;"	d
EFI_TCP6_SERVICE_POINT	Tcp6.h	/^} EFI_TCP6_SERVICE_POINT;$/;"	t	typeref:struct:__anon466
EFI_TCP6_TRANSMIT	Tcp6.h	/^(EFIAPI *EFI_TCP6_TRANSMIT)($/;"	t
EFI_TCP6_TRANSMIT_DATA	Tcp6.h	/^} EFI_TCP6_TRANSMIT_DATA;$/;"	t	typeref:struct:__anon477
EFI_TCP6_VARIABLE_DATA	Tcp6.h	/^} EFI_TCP6_VARIABLE_DATA;$/;"	t	typeref:struct:__anon467
EFI_TEXT_ATTR	SimpleTextOut.h	132;"	d
EFI_TEXT_CLEAR_SCREEN	SimpleTextOut.h	/^(EFIAPI *EFI_TEXT_CLEAR_SCREEN)($/;"	t
EFI_TEXT_ENABLE_CURSOR	SimpleTextOut.h	/^(EFIAPI *EFI_TEXT_ENABLE_CURSOR)($/;"	t
EFI_TEXT_QUERY_MODE	SimpleTextOut.h	/^(EFIAPI *EFI_TEXT_QUERY_MODE)($/;"	t
EFI_TEXT_RESET	SimpleTextOut.h	/^(EFIAPI *EFI_TEXT_RESET)($/;"	t
EFI_TEXT_SET_ATTRIBUTE	SimpleTextOut.h	/^(EFIAPI *EFI_TEXT_SET_ATTRIBUTE)($/;"	t
EFI_TEXT_SET_CURSOR_POSITION	SimpleTextOut.h	/^(EFIAPI *EFI_TEXT_SET_CURSOR_POSITION)($/;"	t
EFI_TEXT_SET_MODE	SimpleTextOut.h	/^(EFIAPI *EFI_TEXT_SET_MODE)($/;"	t
EFI_TEXT_STRING	SimpleTextOut.h	/^(EFIAPI *EFI_TEXT_STRING)($/;"	t
EFI_TEXT_TEST_STRING	SimpleTextOut.h	/^(EFIAPI *EFI_TEXT_TEST_STRING)($/;"	t
EFI_TIMER_ARCH_PROTOCOL	Timer.h	/^typedef struct _EFI_TIMER_ARCH_PROTOCOL   EFI_TIMER_ARCH_PROTOCOL;$/;"	t	typeref:struct:_EFI_TIMER_ARCH_PROTOCOL
EFI_TIMER_ARCH_PROTOCOL_GUID	Timer.h	17;"	d
EFI_TIMER_GENERATE_SOFT_INTERRUPT	Timer.h	/^(EFIAPI *EFI_TIMER_GENERATE_SOFT_INTERRUPT)($/;"	t
EFI_TIMER_GET_TIMER_PERIOD	Timer.h	/^(EFIAPI *EFI_TIMER_GET_TIMER_PERIOD)($/;"	t
EFI_TIMER_NOTIFY	Timer.h	/^(EFIAPI *EFI_TIMER_NOTIFY)($/;"	t
EFI_TIMER_REGISTER_HANDLER	Timer.h	/^(EFIAPI *EFI_TIMER_REGISTER_HANDLER)($/;"	t
EFI_TIMER_SET_TIMER_PERIOD	Timer.h	/^(EFIAPI *EFI_TIMER_SET_TIMER_PERIOD)($/;"	t
EFI_TIMESTAMP_PROPERTIES	Timestamp.h	/^} EFI_TIMESTAMP_PROPERTIES;$/;"	t	typeref:struct:__anon146
EFI_TIMESTAMP_PROTOCOL	Timestamp.h	/^typedef struct _EFI_TIMESTAMP_PROTOCOL  EFI_TIMESTAMP_PROTOCOL;$/;"	t	typeref:struct:_EFI_TIMESTAMP_PROTOCOL
EFI_TIMESTAMP_PROTOCOL_GUID	Timestamp.h	17;"	d
EFI_TLS_BUILD_RESPONSE_PACKET	Tls.h	/^(EFIAPI *EFI_TLS_BUILD_RESPONSE_PACKET) ($/;"	t
EFI_TLS_CIPHER	Tls.h	/^} EFI_TLS_CIPHER;$/;"	t	typeref:struct:__anon283
EFI_TLS_COMPRESSION	Tls.h	/^typedef UINT8 EFI_TLS_COMPRESSION;$/;"	t
EFI_TLS_CONFIGURATION_GET_DATA	TlsConfig.h	/^(EFIAPI *EFI_TLS_CONFIGURATION_GET_DATA)($/;"	t
EFI_TLS_CONFIGURATION_PROTOCOL	TlsConfig.h	/^typedef struct _EFI_TLS_CONFIGURATION_PROTOCOL EFI_TLS_CONFIGURATION_PROTOCOL;$/;"	t	typeref:struct:_EFI_TLS_CONFIGURATION_PROTOCOL
EFI_TLS_CONFIGURATION_PROTOCOL_GUID	TlsConfig.h	18;"	d
EFI_TLS_CONFIGURATION_SET_DATA	TlsConfig.h	/^(EFIAPI *EFI_TLS_CONFIGURATION_SET_DATA)($/;"	t
EFI_TLS_CONFIG_DATA_TYPE	TlsConfig.h	/^} EFI_TLS_CONFIG_DATA_TYPE;$/;"	t	typeref:enum:__anon382
EFI_TLS_CONNECTION_END	Tls.h	/^} EFI_TLS_CONNECTION_END;$/;"	t	typeref:enum:__anon282
EFI_TLS_CRYPT_MODE	Tls.h	/^} EFI_TLS_CRYPT_MODE;$/;"	t	typeref:enum:__anon291
EFI_TLS_EXTENSION	Tls.h	/^} EFI_TLS_EXTENSION;$/;"	t	typeref:struct:__anon284
EFI_TLS_FRAGMENT_DATA	Tls.h	/^} EFI_TLS_FRAGMENT_DATA;$/;"	t	typeref:struct:__anon290
EFI_TLS_GET_SESSION_DATA	Tls.h	/^(EFIAPI *EFI_TLS_GET_SESSION_DATA) ($/;"	t
EFI_TLS_MASTER_SECRET	Tls.h	/^} EFI_TLS_MASTER_SECRET;$/;"	t	typeref:struct:__anon287
EFI_TLS_PROCESS_PACKET	Tls.h	/^(EFIAPI *EFI_TLS_PROCESS_PACKET) ($/;"	t
EFI_TLS_PROTOCOL	Tls.h	/^typedef struct _EFI_TLS_PROTOCOL EFI_TLS_PROTOCOL;$/;"	t	typeref:struct:_EFI_TLS_PROTOCOL
EFI_TLS_PROTOCOL_GUID	Tls.h	33;"	d
EFI_TLS_RANDOM	Tls.h	/^} EFI_TLS_RANDOM;$/;"	t	typeref:struct:__anon286
EFI_TLS_SERVICE_BINDING_PROTOCOL_GUID	Tls.h	25;"	d
EFI_TLS_SESSION_DATA_TYPE	Tls.h	/^} EFI_TLS_SESSION_DATA_TYPE;$/;"	t	typeref:enum:__anon280
EFI_TLS_SESSION_ID	Tls.h	/^} EFI_TLS_SESSION_ID;$/;"	t	typeref:struct:__anon288
EFI_TLS_SESSION_STATE	Tls.h	/^} EFI_TLS_SESSION_STATE;$/;"	t	typeref:enum:__anon289
EFI_TLS_SET_SESSION_DATA	Tls.h	/^(EFIAPI *EFI_TLS_SET_SESSION_DATA) ($/;"	t
EFI_TLS_VERIFY	Tls.h	/^typedef UINT32  EFI_TLS_VERIFY;$/;"	t
EFI_TLS_VERIFY_CLIENT_ONCE	Tls.h	186;"	d
EFI_TLS_VERIFY_FAIL_IF_NO_PEER_CERT	Tls.h	181;"	d
EFI_TLS_VERIFY_FLAG_ALWAYS_CHECK_SUBJECT	Tls.h	201;"	d
EFI_TLS_VERIFY_FLAG_MULTI_LABEL_WILDCARDS	Tls.h	213;"	d
EFI_TLS_VERIFY_FLAG_NEVER_CHECK_SUBJECT	Tls.h	224;"	d
EFI_TLS_VERIFY_FLAG_NONE	Tls.h	196;"	d
EFI_TLS_VERIFY_FLAG_NO_PARTIAL_WILDCARDS	Tls.h	209;"	d
EFI_TLS_VERIFY_FLAG_NO_WILDCARDS	Tls.h	205;"	d
EFI_TLS_VERIFY_FLAG_SINGLE_LABEL_SUBDOMAINS	Tls.h	219;"	d
EFI_TLS_VERIFY_HOST	Tls.h	/^} EFI_TLS_VERIFY_HOST;$/;"	t	typeref:struct:__anon285
EFI_TLS_VERIFY_HOST_FLAG	Tls.h	/^typedef UINT32 EFI_TLS_VERIFY_HOST_FLAG;$/;"	t
EFI_TLS_VERIFY_NONE	Tls.h	171;"	d
EFI_TLS_VERIFY_PEER	Tls.h	176;"	d
EFI_TLS_VERSION	Tls.h	/^} EFI_TLS_VERSION;$/;"	t	typeref:struct:__anon281
EFI_TOGGLE_STATE_VALID	SimpleTextInEx.h	113;"	d
EFI_TREE_GET_CAPABILITY	TrEEProtocol.h	/^(EFIAPI *EFI_TREE_GET_CAPABILITY) ($/;"	t
EFI_TREE_GET_EVENT_LOG	TrEEProtocol.h	/^(EFIAPI *EFI_TREE_GET_EVENT_LOG) ($/;"	t
EFI_TREE_HASH_LOG_EXTEND_EVENT	TrEEProtocol.h	/^(EFIAPI * EFI_TREE_HASH_LOG_EXTEND_EVENT) ($/;"	t
EFI_TREE_PROTOCOL	TrEEProtocol.h	/^typedef struct _EFI_TREE_PROTOCOL EFI_TREE_PROTOCOL;$/;"	t	typeref:struct:_EFI_TREE_PROTOCOL
EFI_TREE_PROTOCOL_GUID	TrEEProtocol.h	15;"	d
EFI_TREE_SUBMIT_COMMAND	TrEEProtocol.h	/^(EFIAPI *EFI_TREE_SUBMIT_COMMAND) ($/;"	t
EFI_UDP4_CANCEL	Udp4.h	/^(EFIAPI *EFI_UDP4_CANCEL)($/;"	t
EFI_UDP4_COMPLETION_TOKEN	Udp4.h	/^} EFI_UDP4_COMPLETION_TOKEN;$/;"	t	typeref:struct:__anon378
EFI_UDP4_CONFIGURE	Udp4.h	/^(EFIAPI *EFI_UDP4_CONFIGURE)($/;"	t
EFI_UDP4_CONFIG_DATA	Udp4.h	/^} EFI_UDP4_CONFIG_DATA;$/;"	t	typeref:struct:__anon375
EFI_UDP4_FRAGMENT_DATA	Udp4.h	/^} EFI_UDP4_FRAGMENT_DATA;$/;"	t	typeref:struct:__anon373
EFI_UDP4_GET_MODE_DATA	Udp4.h	/^(EFIAPI *EFI_UDP4_GET_MODE_DATA)($/;"	t
EFI_UDP4_GROUPS	Udp4.h	/^(EFIAPI *EFI_UDP4_GROUPS)($/;"	t
EFI_UDP4_POLL	Udp4.h	/^(EFIAPI *EFI_UDP4_POLL)($/;"	t
EFI_UDP4_PROTOCOL	Udp4.h	/^typedef struct _EFI_UDP4_PROTOCOL EFI_UDP4_PROTOCOL;$/;"	t	typeref:struct:_EFI_UDP4_PROTOCOL
EFI_UDP4_PROTOCOL_GUID	Udp4.h	27;"	d
EFI_UDP4_RECEIVE	Udp4.h	/^(EFIAPI *EFI_UDP4_RECEIVE)($/;"	t
EFI_UDP4_RECEIVE_DATA	Udp4.h	/^} EFI_UDP4_RECEIVE_DATA;$/;"	t	typeref:struct:__anon377
EFI_UDP4_ROUTES	Udp4.h	/^(EFIAPI *EFI_UDP4_ROUTES)($/;"	t
EFI_UDP4_SERVICE_BINDING_PROTOCOL_GUID	Udp4.h	22;"	d
EFI_UDP4_SERVICE_POINT	Udp4.h	/^} EFI_UDP4_SERVICE_POINT;$/;"	t	typeref:struct:__anon371
EFI_UDP4_SESSION_DATA	Udp4.h	/^} EFI_UDP4_SESSION_DATA;$/;"	t	typeref:struct:__anon374
EFI_UDP4_TRANSMIT	Udp4.h	/^(EFIAPI *EFI_UDP4_TRANSMIT)($/;"	t
EFI_UDP4_TRANSMIT_DATA	Udp4.h	/^} EFI_UDP4_TRANSMIT_DATA;$/;"	t	typeref:struct:__anon376
EFI_UDP4_VARIABLE_DATA	Udp4.h	/^} EFI_UDP4_VARIABLE_DATA;$/;"	t	typeref:struct:__anon372
EFI_UDP6_CANCEL	Udp6.h	/^(EFIAPI *EFI_UDP6_CANCEL)($/;"	t
EFI_UDP6_COMPLETION_TOKEN	Udp6.h	/^} EFI_UDP6_COMPLETION_TOKEN;$/;"	t	typeref:struct:__anon90
EFI_UDP6_CONFIGURE	Udp6.h	/^(EFIAPI *EFI_UDP6_CONFIGURE)($/;"	t
EFI_UDP6_CONFIG_DATA	Udp6.h	/^} EFI_UDP6_CONFIG_DATA;$/;"	t	typeref:struct:__anon87
EFI_UDP6_FRAGMENT_DATA	Udp6.h	/^} EFI_UDP6_FRAGMENT_DATA;$/;"	t	typeref:struct:__anon85
EFI_UDP6_GET_MODE_DATA	Udp6.h	/^(EFIAPI *EFI_UDP6_GET_MODE_DATA)($/;"	t
EFI_UDP6_GROUPS	Udp6.h	/^(EFIAPI *EFI_UDP6_GROUPS)($/;"	t
EFI_UDP6_POLL	Udp6.h	/^(EFIAPI *EFI_UDP6_POLL)($/;"	t
EFI_UDP6_PROTOCOL	Udp6.h	/^typedef struct _EFI_UDP6_PROTOCOL EFI_UDP6_PROTOCOL;$/;"	t	typeref:struct:_EFI_UDP6_PROTOCOL
EFI_UDP6_PROTOCOL_GUID	Udp6.h	24;"	d
EFI_UDP6_RECEIVE	Udp6.h	/^(EFIAPI *EFI_UDP6_RECEIVE)($/;"	t
EFI_UDP6_RECEIVE_DATA	Udp6.h	/^} EFI_UDP6_RECEIVE_DATA;$/;"	t	typeref:struct:__anon89
EFI_UDP6_SERVICE_BINDING_PROTOCOL_GUID	Udp6.h	19;"	d
EFI_UDP6_SERVICE_POINT	Udp6.h	/^} EFI_UDP6_SERVICE_POINT;$/;"	t	typeref:struct:__anon83
EFI_UDP6_SESSION_DATA	Udp6.h	/^} EFI_UDP6_SESSION_DATA;$/;"	t	typeref:struct:__anon86
EFI_UDP6_TRANSMIT	Udp6.h	/^(EFIAPI *EFI_UDP6_TRANSMIT)($/;"	t
EFI_UDP6_TRANSMIT_DATA	Udp6.h	/^} EFI_UDP6_TRANSMIT_DATA;$/;"	t	typeref:struct:__anon88
EFI_UDP6_VARIABLE_DATA	Udp6.h	/^} EFI_UDP6_VARIABLE_DATA;$/;"	t	typeref:struct:__anon84
EFI_UFS_DEVICE_CONFIG_GUID	UfsDeviceConfig.h	18;"	d
EFI_UFS_DEVICE_CONFIG_PROTOCOL	UfsDeviceConfig.h	/^typedef struct _EFI_UFS_DEVICE_CONFIG_PROTOCOL  EFI_UFS_DEVICE_CONFIG_PROTOCOL;$/;"	t	typeref:struct:_EFI_UFS_DEVICE_CONFIG_PROTOCOL
EFI_UFS_DEVICE_CONFIG_RW_ATTRIBUTE	UfsDeviceConfig.h	/^(EFIAPI *EFI_UFS_DEVICE_CONFIG_RW_ATTRIBUTE) ($/;"	t
EFI_UFS_DEVICE_CONFIG_RW_DESCRIPTOR	UfsDeviceConfig.h	/^(EFIAPI *EFI_UFS_DEVICE_CONFIG_RW_DESCRIPTOR) ($/;"	t
EFI_UFS_DEVICE_CONFIG_RW_FLAG	UfsDeviceConfig.h	/^(EFIAPI *EFI_UFS_DEVICE_CONFIG_RW_FLAG) ($/;"	t
EFI_UGA_BLT_OPERATION	UgaDraw.h	/^} EFI_UGA_BLT_OPERATION;$/;"	t	typeref:enum:__anon80
EFI_UGA_DRAW_PROTOCOL	UgaDraw.h	/^typedef struct _EFI_UGA_DRAW_PROTOCOL EFI_UGA_DRAW_PROTOCOL;$/;"	t	typeref:struct:_EFI_UGA_DRAW_PROTOCOL
EFI_UGA_DRAW_PROTOCOL_BLT	UgaDraw.h	/^(EFIAPI *EFI_UGA_DRAW_PROTOCOL_BLT)($/;"	t
EFI_UGA_DRAW_PROTOCOL_GET_MODE	UgaDraw.h	/^(EFIAPI *EFI_UGA_DRAW_PROTOCOL_GET_MODE)($/;"	t
EFI_UGA_DRAW_PROTOCOL_GUID	UgaDraw.h	15;"	d
EFI_UGA_DRAW_PROTOCOL_SET_MODE	UgaDraw.h	/^(EFIAPI *EFI_UGA_DRAW_PROTOCOL_SET_MODE)($/;"	t
EFI_UGA_IO_PROTOCOL	UgaIo.h	/^typedef struct _EFI_UGA_IO_PROTOCOL EFI_UGA_IO_PROTOCOL;$/;"	t	typeref:struct:_EFI_UGA_IO_PROTOCOL
EFI_UGA_IO_PROTOCOL_CREATE_DEVICE	UgaIo.h	/^(EFIAPI *EFI_UGA_IO_PROTOCOL_CREATE_DEVICE)($/;"	t
EFI_UGA_IO_PROTOCOL_DELETE_DEVICE	UgaIo.h	/^(EFIAPI *EFI_UGA_IO_PROTOCOL_DELETE_DEVICE)($/;"	t
EFI_UGA_IO_PROTOCOL_GUID	UgaIo.h	14;"	d
EFI_UGA_PIXEL	UgaDraw.h	/^} EFI_UGA_PIXEL;$/;"	t	typeref:struct:__anon78
EFI_UGA_PIXEL_UNION	UgaDraw.h	/^} EFI_UGA_PIXEL_UNION;$/;"	t	typeref:union:__anon79
EFI_UNICODE_BYTE_ORDER_MARK	UnicodeCollation.h	40;"	d
EFI_UNICODE_COLLATION_FATTOSTR	UnicodeCollation.h	/^(EFIAPI *EFI_UNICODE_COLLATION_FATTOSTR)($/;"	t
EFI_UNICODE_COLLATION_METAIMATCH	UnicodeCollation.h	/^(EFIAPI *EFI_UNICODE_COLLATION_METAIMATCH)($/;"	t
EFI_UNICODE_COLLATION_PROTOCOL	UnicodeCollation.h	/^typedef struct _EFI_UNICODE_COLLATION_PROTOCOL  EFI_UNICODE_COLLATION_PROTOCOL;$/;"	t	typeref:struct:_EFI_UNICODE_COLLATION_PROTOCOL
EFI_UNICODE_COLLATION_PROTOCOL2_GUID	UnicodeCollation.h	19;"	d
EFI_UNICODE_COLLATION_PROTOCOL_GUID	UnicodeCollation.h	14;"	d
EFI_UNICODE_COLLATION_STRICOLL	UnicodeCollation.h	/^(EFIAPI *EFI_UNICODE_COLLATION_STRICOLL)($/;"	t
EFI_UNICODE_COLLATION_STRLWR	UnicodeCollation.h	/^(EFIAPI *EFI_UNICODE_COLLATION_STRLWR)($/;"	t
EFI_UNICODE_COLLATION_STRTOFAT	UnicodeCollation.h	/^(EFIAPI *EFI_UNICODE_COLLATION_STRTOFAT)($/;"	t
EFI_UNICODE_COLLATION_STRUPR	UnicodeCollation.h	/^(EFIAPI *EFI_UNICODE_COLLATION_STRUPR)($/;"	t
EFI_UNREGISTER_KEYSTROKE_NOTIFY	SimpleTextInEx.h	/^(EFIAPI *EFI_UNREGISTER_KEYSTROKE_NOTIFY)($/;"	t
EFI_UNREGISTER_RESET_NOTIFY	ResetNotification.h	/^(EFIAPI *EFI_UNREGISTER_RESET_NOTIFY) ($/;"	t
EFI_USB2_HC_PROTOCOL	Usb2HostController.h	/^typedef struct _EFI_USB2_HC_PROTOCOL EFI_USB2_HC_PROTOCOL;$/;"	t	typeref:struct:_EFI_USB2_HC_PROTOCOL
EFI_USB2_HC_PROTOCOL_ASYNC_INTERRUPT_TRANSFER	Usb2HostController.h	/^(EFIAPI *EFI_USB2_HC_PROTOCOL_ASYNC_INTERRUPT_TRANSFER)($/;"	t
EFI_USB2_HC_PROTOCOL_ASYNC_ISOCHRONOUS_TRANSFER	Usb2HostController.h	/^(EFIAPI *EFI_USB2_HC_PROTOCOL_ASYNC_ISOCHRONOUS_TRANSFER)($/;"	t
EFI_USB2_HC_PROTOCOL_BULK_TRANSFER	Usb2HostController.h	/^(EFIAPI *EFI_USB2_HC_PROTOCOL_BULK_TRANSFER)($/;"	t
EFI_USB2_HC_PROTOCOL_CLEAR_ROOTHUB_PORT_FEATURE	Usb2HostController.h	/^(EFIAPI *EFI_USB2_HC_PROTOCOL_CLEAR_ROOTHUB_PORT_FEATURE)($/;"	t
EFI_USB2_HC_PROTOCOL_CONTROL_TRANSFER	Usb2HostController.h	/^(EFIAPI *EFI_USB2_HC_PROTOCOL_CONTROL_TRANSFER)($/;"	t
EFI_USB2_HC_PROTOCOL_GET_CAPABILITY	Usb2HostController.h	/^(EFIAPI *EFI_USB2_HC_PROTOCOL_GET_CAPABILITY)($/;"	t
EFI_USB2_HC_PROTOCOL_GET_ROOTHUB_PORT_STATUS	Usb2HostController.h	/^(EFIAPI *EFI_USB2_HC_PROTOCOL_GET_ROOTHUB_PORT_STATUS)($/;"	t
EFI_USB2_HC_PROTOCOL_GET_STATE	Usb2HostController.h	/^(EFIAPI *EFI_USB2_HC_PROTOCOL_GET_STATE)($/;"	t
EFI_USB2_HC_PROTOCOL_GUID	Usb2HostController.h	17;"	d
EFI_USB2_HC_PROTOCOL_ISOCHRONOUS_TRANSFER	Usb2HostController.h	/^(EFIAPI *EFI_USB2_HC_PROTOCOL_ISOCHRONOUS_TRANSFER)($/;"	t
EFI_USB2_HC_PROTOCOL_RESET	Usb2HostController.h	/^(EFIAPI *EFI_USB2_HC_PROTOCOL_RESET)($/;"	t
EFI_USB2_HC_PROTOCOL_SET_ROOTHUB_PORT_FEATURE	Usb2HostController.h	/^(EFIAPI *EFI_USB2_HC_PROTOCOL_SET_ROOTHUB_PORT_FEATURE)($/;"	t
EFI_USB2_HC_PROTOCOL_SET_STATE	Usb2HostController.h	/^(EFIAPI *EFI_USB2_HC_PROTOCOL_SET_STATE)($/;"	t
EFI_USB2_HC_PROTOCOL_SYNC_INTERRUPT_TRANSFER	Usb2HostController.h	/^(EFIAPI *EFI_USB2_HC_PROTOCOL_SYNC_INTERRUPT_TRANSFER)($/;"	t
EFI_USB2_HC_TRANSACTION_TRANSLATOR	Usb2HostController.h	/^} EFI_USB2_HC_TRANSACTION_TRANSLATOR;$/;"	t	typeref:struct:__anon413
EFI_USBFN_DEVICE_INFO_ID	UsbFunctionIo.h	/^} EFI_USBFN_DEVICE_INFO_ID;$/;"	t	typeref:enum:_EFI_USBFN_DEVICE_INFO_ID
EFI_USBFN_ENDPOINT_DIRECTION	UsbFunctionIo.h	/^} EFI_USBFN_ENDPOINT_DIRECTION;$/;"	t	typeref:enum:_EFI_USBFN_ENDPOINT_DIRECTION
EFI_USBFN_IO_ABORT_TRANSFER	UsbFunctionIo.h	/^(EFIAPI *EFI_USBFN_IO_ABORT_TRANSFER) ($/;"	t
EFI_USBFN_IO_ALLOCATE_TRANSFER_BUFFER	UsbFunctionIo.h	/^(EFIAPI *EFI_USBFN_IO_ALLOCATE_TRANSFER_BUFFER) ($/;"	t
EFI_USBFN_IO_CONFIGURE_ENABLE_ENDPOINTS	UsbFunctionIo.h	/^(EFIAPI *EFI_USBFN_IO_CONFIGURE_ENABLE_ENDPOINTS) ($/;"	t
EFI_USBFN_IO_DETECT_PORT	UsbFunctionIo.h	/^(EFIAPI *EFI_USBFN_IO_DETECT_PORT) ($/;"	t
EFI_USBFN_IO_EVENTHANDLER	UsbFunctionIo.h	/^(EFIAPI *EFI_USBFN_IO_EVENTHANDLER) ($/;"	t
EFI_USBFN_IO_FREE_TRANSFER_BUFFER	UsbFunctionIo.h	/^(EFIAPI *EFI_USBFN_IO_FREE_TRANSFER_BUFFER) ($/;"	t
EFI_USBFN_IO_GET_DEVICE_INFO	UsbFunctionIo.h	/^(EFIAPI *EFI_USBFN_IO_GET_DEVICE_INFO) ($/;"	t
EFI_USBFN_IO_GET_ENDPOINT_MAXPACKET_SIZE	UsbFunctionIo.h	/^(EFIAPI *EFI_USBFN_IO_GET_ENDPOINT_MAXPACKET_SIZE) ($/;"	t
EFI_USBFN_IO_GET_ENDPOINT_POLICY	UsbFunctionIo.h	/^(EFIAPI *EFI_USBFN_IO_GET_ENDPOINT_POLICY) ($/;"	t
EFI_USBFN_IO_GET_ENDPOINT_STALL_STATE	UsbFunctionIo.h	/^(EFIAPI *EFI_USBFN_IO_GET_ENDPOINT_STALL_STATE) ($/;"	t
EFI_USBFN_IO_GET_MAXTRANSFER_SIZE	UsbFunctionIo.h	/^(EFIAPI *EFI_USBFN_IO_GET_MAXTRANSFER_SIZE) ($/;"	t
EFI_USBFN_IO_GET_VENDOR_ID_PRODUCT_ID	UsbFunctionIo.h	/^(EFIAPI *EFI_USBFN_IO_GET_VENDOR_ID_PRODUCT_ID) ($/;"	t
EFI_USBFN_IO_PROTOCOL	UsbFunctionIo.h	/^typedef struct _EFI_USBFN_IO_PROTOCOL  EFI_USBFN_IO_PROTOCOL;$/;"	t	typeref:struct:_EFI_USBFN_IO_PROTOCOL
EFI_USBFN_IO_PROTOCOL_GUID	UsbFunctionIo.h	27;"	d
EFI_USBFN_IO_PROTOCOL_REVISION	UsbFunctionIo.h	34;"	d
EFI_USBFN_IO_SET_ENDPOINT_POLICY	UsbFunctionIo.h	/^(EFIAPI *EFI_USBFN_IO_SET_ENDPOINT_POLICY) ($/;"	t
EFI_USBFN_IO_SET_ENDPOINT_STALL_STATE	UsbFunctionIo.h	/^(EFIAPI *EFI_USBFN_IO_SET_ENDPOINT_STALL_STATE) ($/;"	t
EFI_USBFN_IO_START_CONTROLLER	UsbFunctionIo.h	/^(EFIAPI *EFI_USBFN_IO_START_CONTROLLER) ($/;"	t
EFI_USBFN_IO_STOP_CONTROLLER	UsbFunctionIo.h	/^(EFIAPI *EFI_USBFN_IO_STOP_CONTROLLER) ($/;"	t
EFI_USBFN_IO_TRANSFER	UsbFunctionIo.h	/^(EFIAPI *EFI_USBFN_IO_TRANSFER) ($/;"	t
EFI_USBFN_MESSAGE	UsbFunctionIo.h	/^} EFI_USBFN_MESSAGE;$/;"	t	typeref:enum:_EFI_USBFN_MESSAGE
EFI_USBFN_MESSAGE_PAYLOAD	UsbFunctionIo.h	/^} EFI_USBFN_MESSAGE_PAYLOAD;$/;"	t	typeref:union:_EFI_USBFN_MESSAGE_PAYLOAD
EFI_USBFN_POLICY_TYPE	UsbFunctionIo.h	/^} EFI_USBFN_POLICY_TYPE;$/;"	t	typeref:enum:_EFI_USBFN_POLICY_TYPE
EFI_USBFN_PORT_TYPE	UsbFunctionIo.h	/^} EFI_USBFN_PORT_TYPE;$/;"	t	typeref:enum:_EFI_USBFN_PORT_TYPE
EFI_USBFN_TRANSFER_RESULT	UsbFunctionIo.h	/^} EFI_USBFN_TRANSFER_RESULT;$/;"	t	typeref:struct:_EFI_USBFN_TRANSFER_RESULT
EFI_USBFN_TRANSFER_STATUS	UsbFunctionIo.h	/^} EFI_USBFN_TRANSFER_STATUS;$/;"	t	typeref:enum:_EFI_USBFN_TRANSFER_STATUS
EFI_USB_BUS_SPEED	UsbFunctionIo.h	/^} EFI_USB_BUS_SPEED;$/;"	t	typeref:enum:_EFI_USB_BUS_SPEED
EFI_USB_CONFIG_DESCRIPTOR	UsbIo.h	/^typedef USB_CONFIG_DESCRIPTOR     EFI_USB_CONFIG_DESCRIPTOR;$/;"	t
EFI_USB_CONFIG_INFO	UsbFunctionIo.h	/^} EFI_USB_CONFIG_INFO;$/;"	t	typeref:struct:__anon409
EFI_USB_DATA_DIRECTION	UsbIo.h	/^} EFI_USB_DATA_DIRECTION;$/;"	t	typeref:enum:__anon568
EFI_USB_DEVICE_DESCRIPTOR	UsbIo.h	/^typedef USB_DEVICE_DESCRIPTOR     EFI_USB_DEVICE_DESCRIPTOR;$/;"	t
EFI_USB_DEVICE_INFO	UsbFunctionIo.h	/^} EFI_USB_DEVICE_INFO;$/;"	t	typeref:struct:__anon410
EFI_USB_DEVICE_REQUEST	UsbIo.h	/^typedef USB_DEVICE_REQUEST        EFI_USB_DEVICE_REQUEST;$/;"	t
EFI_USB_ENDPOINT_DESCRIPTOR	UsbIo.h	/^typedef USB_ENDPOINT_DESCRIPTOR   EFI_USB_ENDPOINT_DESCRIPTOR;$/;"	t
EFI_USB_ENDPOINT_TYPE	UsbFunctionIo.h	/^} EFI_USB_ENDPOINT_TYPE;$/;"	t	typeref:enum:_EFI_USB_ENDPOINT_TYPE
EFI_USB_ERR_BABBLE	UsbIo.h	57;"	d
EFI_USB_ERR_BITSTUFF	UsbIo.h	61;"	d
EFI_USB_ERR_BUFFER	UsbIo.h	56;"	d
EFI_USB_ERR_CRC	UsbIo.h	59;"	d
EFI_USB_ERR_NAK	UsbIo.h	58;"	d
EFI_USB_ERR_NOTEXECUTE	UsbIo.h	54;"	d
EFI_USB_ERR_STALL	UsbIo.h	55;"	d
EFI_USB_ERR_SYSTEM	UsbIo.h	62;"	d
EFI_USB_ERR_TIMEOUT	UsbIo.h	60;"	d
EFI_USB_HC_PROTOCOL	UsbHostController.h	/^typedef struct _EFI_USB_HC_PROTOCOL EFI_USB_HC_PROTOCOL;$/;"	t	typeref:struct:_EFI_USB_HC_PROTOCOL
EFI_USB_HC_PROTOCOL_ASYNC_INTERRUPT_TRANSFER	UsbHostController.h	/^(EFIAPI *EFI_USB_HC_PROTOCOL_ASYNC_INTERRUPT_TRANSFER)($/;"	t
EFI_USB_HC_PROTOCOL_ASYNC_ISOCHRONOUS_TRANSFER	UsbHostController.h	/^(EFIAPI *EFI_USB_HC_PROTOCOL_ASYNC_ISOCHRONOUS_TRANSFER)($/;"	t
EFI_USB_HC_PROTOCOL_BULK_TRANSFER	UsbHostController.h	/^(EFIAPI *EFI_USB_HC_PROTOCOL_BULK_TRANSFER)($/;"	t
EFI_USB_HC_PROTOCOL_CLEAR_ROOTHUB_PORT_FEATURE	UsbHostController.h	/^(EFIAPI *EFI_USB_HC_PROTOCOL_CLEAR_ROOTHUB_PORT_FEATURE)($/;"	t
EFI_USB_HC_PROTOCOL_CONTROL_TRANSFER	UsbHostController.h	/^(EFIAPI *EFI_USB_HC_PROTOCOL_CONTROL_TRANSFER)($/;"	t
EFI_USB_HC_PROTOCOL_GET_ROOTHUB_PORT_NUMBER	UsbHostController.h	/^(EFIAPI *EFI_USB_HC_PROTOCOL_GET_ROOTHUB_PORT_NUMBER)($/;"	t
EFI_USB_HC_PROTOCOL_GET_ROOTHUB_PORT_STATUS	UsbHostController.h	/^(EFIAPI *EFI_USB_HC_PROTOCOL_GET_ROOTHUB_PORT_STATUS)($/;"	t
EFI_USB_HC_PROTOCOL_GET_STATE	UsbHostController.h	/^(EFIAPI *EFI_USB_HC_PROTOCOL_GET_STATE)($/;"	t
EFI_USB_HC_PROTOCOL_GUID	UsbHostController.h	18;"	d
EFI_USB_HC_PROTOCOL_ISOCHRONOUS_TRANSFER	UsbHostController.h	/^(EFIAPI *EFI_USB_HC_PROTOCOL_ISOCHRONOUS_TRANSFER)($/;"	t
EFI_USB_HC_PROTOCOL_RESET	UsbHostController.h	/^(EFIAPI *EFI_USB_HC_PROTOCOL_RESET)($/;"	t
EFI_USB_HC_PROTOCOL_SET_ROOTHUB_PORT_FEATURE	UsbHostController.h	/^(EFIAPI *EFI_USB_HC_PROTOCOL_SET_ROOTHUB_PORT_FEATURE)($/;"	t
EFI_USB_HC_PROTOCOL_SET_STATE	UsbHostController.h	/^(EFIAPI *EFI_USB_HC_PROTOCOL_SET_STATE)($/;"	t
EFI_USB_HC_PROTOCOL_SYNC_INTERRUPT_TRANSFER	UsbHostController.h	/^(EFIAPI *EFI_USB_HC_PROTOCOL_SYNC_INTERRUPT_TRANSFER)($/;"	t
EFI_USB_HC_RESET_GLOBAL	Usb2HostController.h	113;"	d
EFI_USB_HC_RESET_GLOBAL_WITH_DEBUG	Usb2HostController.h	115;"	d
EFI_USB_HC_RESET_HOST_CONTROLLER	Usb2HostController.h	114;"	d
EFI_USB_HC_RESET_HOST_WITH_DEBUG	Usb2HostController.h	116;"	d
EFI_USB_HC_STATE	Usb2HostController.h	/^} EFI_USB_HC_STATE;$/;"	t	typeref:enum:__anon414
EFI_USB_INTERFACE_DESCRIPTOR	UsbIo.h	/^typedef USB_INTERFACE_DESCRIPTOR  EFI_USB_INTERFACE_DESCRIPTOR;$/;"	t
EFI_USB_INTERFACE_INFO	UsbFunctionIo.h	/^} EFI_USB_INTERFACE_INFO;$/;"	t	typeref:struct:__anon408
EFI_USB_IO_ASYNC_INTERRUPT_TRANSFER	UsbIo.h	/^(EFIAPI *EFI_USB_IO_ASYNC_INTERRUPT_TRANSFER)($/;"	t
EFI_USB_IO_ASYNC_ISOCHRONOUS_TRANSFER	UsbIo.h	/^(EFIAPI *EFI_USB_IO_ASYNC_ISOCHRONOUS_TRANSFER)($/;"	t
EFI_USB_IO_BULK_TRANSFER	UsbIo.h	/^(EFIAPI *EFI_USB_IO_BULK_TRANSFER)($/;"	t
EFI_USB_IO_CONTROL_TRANSFER	UsbIo.h	/^(EFIAPI *EFI_USB_IO_CONTROL_TRANSFER)($/;"	t
EFI_USB_IO_GET_CONFIG_DESCRIPTOR	UsbIo.h	/^(EFIAPI *EFI_USB_IO_GET_CONFIG_DESCRIPTOR)($/;"	t
EFI_USB_IO_GET_DEVICE_DESCRIPTOR	UsbIo.h	/^(EFIAPI *EFI_USB_IO_GET_DEVICE_DESCRIPTOR)($/;"	t
EFI_USB_IO_GET_ENDPOINT_DESCRIPTOR	UsbIo.h	/^(EFIAPI *EFI_USB_IO_GET_ENDPOINT_DESCRIPTOR)($/;"	t
EFI_USB_IO_GET_INTERFACE_DESCRIPTOR	UsbIo.h	/^(EFIAPI *EFI_USB_IO_GET_INTERFACE_DESCRIPTOR)($/;"	t
EFI_USB_IO_GET_STRING_DESCRIPTOR	UsbIo.h	/^(EFIAPI *EFI_USB_IO_GET_STRING_DESCRIPTOR)($/;"	t
EFI_USB_IO_GET_SUPPORTED_LANGUAGE	UsbIo.h	/^(EFIAPI *EFI_USB_IO_GET_SUPPORTED_LANGUAGE)($/;"	t
EFI_USB_IO_ISOCHRONOUS_TRANSFER	UsbIo.h	/^(EFIAPI *EFI_USB_IO_ISOCHRONOUS_TRANSFER)($/;"	t
EFI_USB_IO_PORT_RESET	UsbIo.h	/^(EFIAPI *EFI_USB_IO_PORT_RESET)($/;"	t
EFI_USB_IO_PROTOCOL	UsbIo.h	/^typedef struct _EFI_USB_IO_PROTOCOL   EFI_USB_IO_PROTOCOL;$/;"	t	typeref:struct:_EFI_USB_IO_PROTOCOL
EFI_USB_IO_PROTOCOL_GUID	UsbIo.h	21;"	d
EFI_USB_IO_SYNC_INTERRUPT_TRANSFER	UsbIo.h	/^(EFIAPI *EFI_USB_IO_SYNC_INTERRUPT_TRANSFER)($/;"	t
EFI_USB_MAX_BULK_BUFFER_NUM	Usb2HostController.h	261;"	d
EFI_USB_MAX_ISO_BUFFER_NUM	Usb2HostController.h	404;"	d
EFI_USB_MAX_ISO_BUFFER_NUM1	Usb2HostController.h	405;"	d
EFI_USB_MMI_TYPE	MmUsbDispatch.h	/^} EFI_USB_MMI_TYPE;$/;"	t	typeref:enum:__anon250
EFI_USB_NOERROR	UsbIo.h	53;"	d
EFI_USB_PORT_FEATURE	Usb2HostController.h	/^} EFI_USB_PORT_FEATURE;$/;"	t	typeref:enum:__anon412
EFI_USB_PORT_STATUS	Usb2HostController.h	/^} EFI_USB_PORT_STATUS;$/;"	t	typeref:struct:__anon411
EFI_USB_SMI_TYPE	SmmUsbDispatch2.h	/^typedef EFI_USB_MMI_TYPE EFI_USB_SMI_TYPE;$/;"	t
EFI_USB_SPEED_FULL	Usb2HostController.h	75;"	d
EFI_USB_SPEED_HIGH	Usb2HostController.h	77;"	d
EFI_USB_SPEED_LOW	Usb2HostController.h	76;"	d
EFI_USB_SPEED_SUPER	Usb2HostController.h	78;"	d
EFI_USER_CREDENTIAL2_PROTOCOL	UserCredential2.h	/^typedef struct _EFI_USER_CREDENTIAL2_PROTOCOL  EFI_USER_CREDENTIAL2_PROTOCOL;$/;"	t	typeref:struct:_EFI_USER_CREDENTIAL2_PROTOCOL
EFI_USER_CREDENTIAL2_PROTOCOL_GUID	UserCredential2.h	16;"	d
EFI_USER_CREDENTIAL_CLASS_FINGERPRINT	UserManager.h	81;"	d
EFI_USER_CREDENTIAL_CLASS_HANDPRINT	UserManager.h	83;"	d
EFI_USER_CREDENTIAL_CLASS_PASSWORD	UserManager.h	77;"	d
EFI_USER_CREDENTIAL_CLASS_SECURE_CARD	UserManager.h	85;"	d
EFI_USER_CREDENTIAL_CLASS_SMART_CARD	UserManager.h	79;"	d
EFI_USER_CREDENTIAL_CLASS_UNKNOWN	UserManager.h	75;"	d
EFI_USER_CREDENTIAL_PROTOCOL	UserCredential.h	/^typedef struct _EFI_USER_CREDENTIAL_PROTOCOL  EFI_USER_CREDENTIAL_PROTOCOL;$/;"	t	typeref:struct:_EFI_USER_CREDENTIAL_PROTOCOL
EFI_USER_CREDENTIAL_PROTOCOL_GUID	UserCredential.h	17;"	d
EFI_USER_INFO	UserManager.h	/^} EFI_USER_INFO;$/;"	t	typeref:struct:__anon253
EFI_USER_INFO_ACCESS	UserManager.h	39;"	d
EFI_USER_INFO_ACCESS_BOOT_ORDER	UserManager.h	238;"	d
EFI_USER_INFO_ACCESS_BOOT_ORDER_APPEND	UserManager.h	249;"	d
EFI_USER_INFO_ACCESS_BOOT_ORDER_HDR	UserManager.h	/^typedef UINT32 EFI_USER_INFO_ACCESS_BOOT_ORDER_HDR;$/;"	t
EFI_USER_INFO_ACCESS_BOOT_ORDER_INSERT	UserManager.h	245;"	d
EFI_USER_INFO_ACCESS_BOOT_ORDER_MASK	UserManager.h	241;"	d
EFI_USER_INFO_ACCESS_BOOT_ORDER_NODEFAULT	UserManager.h	258;"	d
EFI_USER_INFO_ACCESS_BOOT_ORDER_REPLACE	UserManager.h	253;"	d
EFI_USER_INFO_ACCESS_CONTROL	UserManager.h	/^} EFI_USER_INFO_ACCESS_CONTROL;$/;"	t	typeref:struct:__anon254
EFI_USER_INFO_ACCESS_ENROLL_OTHERS	UserManager.h	208;"	d
EFI_USER_INFO_ACCESS_ENROLL_SELF	UserManager.h	204;"	d
EFI_USER_INFO_ACCESS_FORBID_CONNECT	UserManager.h	230;"	d
EFI_USER_INFO_ACCESS_FORBID_LOAD	UserManager.h	192;"	d
EFI_USER_INFO_ACCESS_MANAGE	UserManager.h	212;"	d
EFI_USER_INFO_ACCESS_PERMIT_CONNECT	UserManager.h	234;"	d
EFI_USER_INFO_ACCESS_PERMIT_LOAD	UserManager.h	200;"	d
EFI_USER_INFO_ACCESS_POLICY	UserManager.h	/^typedef EFI_USER_INFO_ACCESS_CONTROL EFI_USER_INFO_ACCESS_POLICY;$/;"	t
EFI_USER_INFO_ACCESS_POLICY_RECORD	UserManager.h	175;"	d
EFI_USER_INFO_ACCESS_SETUP	UserManager.h	216;"	d
EFI_USER_INFO_ACCESS_SETUP_ADMIN_GUID	UserManager.h	220;"	d
EFI_USER_INFO_ACCESS_SETUP_NORMAL_GUID	UserManager.h	222;"	d
EFI_USER_INFO_ACCESS_SETUP_RESTRICTED_GUID	UserManager.h	224;"	d
EFI_USER_INFO_ATTRIBS	UserManager.h	/^typedef UINT16 EFI_USER_INFO_ATTRIBS;$/;"	t
EFI_USER_INFO_CBEFF	UserManager.h	/^typedef VOID *EFI_USER_INFO_CBEFF;$/;"	t
EFI_USER_INFO_CBEFF_RECORD	UserManager.h	159;"	d
EFI_USER_INFO_CREATE_DATE	UserManager.h	/^typedef EFI_TIME EFI_USER_INFO_CREATE_DATE;$/;"	t
EFI_USER_INFO_CREATE_DATE_RECORD	UserManager.h	114;"	d
EFI_USER_INFO_CREDENTIAL_PROVIDER	UserManager.h	/^typedef EFI_GUID EFI_USER_INFO_CREDENTIAL_PROVIDER;$/;"	t
EFI_USER_INFO_CREDENTIAL_PROVIDER_NAME	UserManager.h	/^typedef CHAR16 *EFI_USER_INFO_CREDENTIAL_PROVIDER_NAME;$/;"	t
EFI_USER_INFO_CREDENTIAL_PROVIDER_NAME_RECORD	UserManager.h	149;"	d
EFI_USER_INFO_CREDENTIAL_PROVIDER_RECORD	UserManager.h	144;"	d
EFI_USER_INFO_CREDENTIAL_TYPE	UserManager.h	/^typedef EFI_GUID EFI_USER_INFO_CREDENTIAL_TYPE;$/;"	t
EFI_USER_INFO_CREDENTIAL_TYPE_NAME	UserManager.h	/^typedef CHAR16 *EFI_USER_INFO_CREDENTIAL_TYPE_NAME;$/;"	t
EFI_USER_INFO_CREDENTIAL_TYPE_NAME_RECORD	UserManager.h	139;"	d
EFI_USER_INFO_CREDENTIAL_TYPE_RECORD	UserManager.h	134;"	d
EFI_USER_INFO_EMPTY_RECORD	UserManager.h	105;"	d
EFI_USER_INFO_EXCLUSIVE	UserManager.h	43;"	d
EFI_USER_INFO_FAR	UserManager.h	/^typedef UINT8 EFI_USER_INFO_FAR;$/;"	t
EFI_USER_INFO_FAR_RECORD	UserManager.h	164;"	d
EFI_USER_INFO_GUID	UserManager.h	/^typedef EFI_GUID EFI_USER_INFO_GUID;$/;"	t
EFI_USER_INFO_GUID_RECORD	UserManager.h	284;"	d
EFI_USER_INFO_HANDLE	UserManager.h	/^typedef VOID *EFI_USER_INFO_HANDLE;$/;"	t
EFI_USER_INFO_IDENTIFIER	UserManager.h	/^typedef UINT8 EFI_USER_INFO_IDENTIFIER[16];$/;"	t
EFI_USER_INFO_IDENTIFIER_RECORD	UserManager.h	129;"	d
EFI_USER_INFO_IDENTITY_AND	UserManager.h	278;"	d
EFI_USER_INFO_IDENTITY_CREDENTIAL_PROVIDER	UserManager.h	276;"	d
EFI_USER_INFO_IDENTITY_CREDENTIAL_TYPE	UserManager.h	275;"	d
EFI_USER_INFO_IDENTITY_FALSE	UserManager.h	273;"	d
EFI_USER_INFO_IDENTITY_NOT	UserManager.h	277;"	d
EFI_USER_INFO_IDENTITY_OR	UserManager.h	279;"	d
EFI_USER_INFO_IDENTITY_POLICY	UserManager.h	/^} EFI_USER_INFO_IDENTITY_POLICY;$/;"	t	typeref:struct:__anon255
EFI_USER_INFO_IDENTITY_POLICY_RECORD	UserManager.h	263;"	d
EFI_USER_INFO_IDENTITY_TRUE	UserManager.h	274;"	d
EFI_USER_INFO_NAME	UserManager.h	/^typedef CHAR16 *EFI_USER_INFO_NAME;$/;"	t
EFI_USER_INFO_NAME_RECORD	UserManager.h	109;"	d
EFI_USER_INFO_PKCS11_RECORD	UserManager.h	154;"	d
EFI_USER_INFO_PRIVATE	UserManager.h	41;"	d
EFI_USER_INFO_PROTECTED	UserManager.h	42;"	d
EFI_USER_INFO_PUBLIC	UserManager.h	40;"	d
EFI_USER_INFO_RETRY	UserManager.h	/^typedef UINT8 EFI_USER_INFO_RETRY;$/;"	t
EFI_USER_INFO_RETRY_RECORD	UserManager.h	170;"	d
EFI_USER_INFO_STORAGE	UserManager.h	34;"	d
EFI_USER_INFO_STORAGE_CREDENTIAL_NV	UserManager.h	36;"	d
EFI_USER_INFO_STORAGE_PLATFORM_NV	UserManager.h	37;"	d
EFI_USER_INFO_STORAGE_VOLATILE	UserManager.h	35;"	d
EFI_USER_INFO_TABLE	UserManager.h	/^} EFI_USER_INFO_TABLE;$/;"	t	typeref:struct:__anon256
EFI_USER_INFO_USAGE_COUNT	UserManager.h	/^typedef UINT64 EFI_USER_INFO_USAGE_COUNT;$/;"	t
EFI_USER_INFO_USAGE_COUNT_RECORD	UserManager.h	124;"	d
EFI_USER_INFO_USAGE_DATE	UserManager.h	/^typedef EFI_TIME EFI_USER_INFO_USAGE_DATE;$/;"	t
EFI_USER_INFO_USAGE_DATE_RECORD	UserManager.h	119;"	d
EFI_USER_MANAGER_PROTOCOL	UserManager.h	/^typedef struct _EFI_USER_MANAGER_PROTOCOL  EFI_USER_MANAGER_PROTOCOL;$/;"	t	typeref:struct:_EFI_USER_MANAGER_PROTOCOL
EFI_USER_MANAGER_PROTOCOL_GUID	UserManager.h	17;"	d
EFI_USER_PROFILE_CREATE	UserManager.h	/^(EFIAPI *EFI_USER_PROFILE_CREATE)($/;"	t
EFI_USER_PROFILE_CURRENT	UserManager.h	/^(EFIAPI *EFI_USER_PROFILE_CURRENT)($/;"	t
EFI_USER_PROFILE_DELETE	UserManager.h	/^(EFIAPI *EFI_USER_PROFILE_DELETE)($/;"	t
EFI_USER_PROFILE_DELETE_INFO	UserManager.h	/^(EFIAPI *EFI_USER_PROFILE_DELETE_INFO)($/;"	t
EFI_USER_PROFILE_FIND	UserManager.h	/^(EFIAPI *EFI_USER_PROFILE_FIND)($/;"	t
EFI_USER_PROFILE_GET_INFO	UserManager.h	/^(EFIAPI *EFI_USER_PROFILE_GET_INFO)($/;"	t
EFI_USER_PROFILE_GET_NEXT	UserManager.h	/^(EFIAPI *EFI_USER_PROFILE_GET_NEXT)($/;"	t
EFI_USER_PROFILE_GET_NEXT_INFO	UserManager.h	/^(EFIAPI *EFI_USER_PROFILE_GET_NEXT_INFO)($/;"	t
EFI_USER_PROFILE_HANDLE	UserManager.h	/^typedef VOID *EFI_USER_PROFILE_HANDLE;$/;"	t
EFI_USER_PROFILE_IDENTIFY	UserManager.h	/^(EFIAPI *EFI_USER_PROFILE_IDENTIFY)($/;"	t
EFI_USER_PROFILE_NOTIFY	UserManager.h	/^(EFIAPI *EFI_USER_PROFILE_NOTIFY)($/;"	t
EFI_USER_PROFILE_SET_INFO	UserManager.h	/^(EFIAPI *EFI_USER_PROFILE_SET_INFO)($/;"	t
EFI_VARIABLE_ARCH_PROTOCOL_GUID	Variable.h	34;"	d
EFI_VARIABLE_WRITE_ARCH_PROTOCOL_GUID	VariableWrite.h	34;"	d
EFI_VGA_DEVICE_ENABLE	PciIo.h	70;"	d
EFI_VIRTUAL_CD_GUID	DevicePath.h	1165;"	d
EFI_VIRTUAL_DISK_GUID	DevicePath.h	1158;"	d
EFI_VLAN_CONFIG_FIND	VlanConfig.h	/^(EFIAPI *EFI_VLAN_CONFIG_FIND)($/;"	t
EFI_VLAN_CONFIG_PROTOCOL	VlanConfig.h	/^typedef struct _EFI_VLAN_CONFIG_PROTOCOL EFI_VLAN_CONFIG_PROTOCOL;$/;"	t	typeref:struct:_EFI_VLAN_CONFIG_PROTOCOL
EFI_VLAN_CONFIG_PROTOCOL_GUID	VlanConfig.h	16;"	d
EFI_VLAN_CONFIG_REMOVE	VlanConfig.h	/^(EFIAPI *EFI_VLAN_CONFIG_REMOVE)($/;"	t
EFI_VLAN_CONFIG_SET	VlanConfig.h	/^(EFIAPI *EFI_VLAN_CONFIG_SET)($/;"	t
EFI_VLAN_FIND_DATA	VlanConfig.h	/^} EFI_VLAN_FIND_DATA;$/;"	t	typeref:struct:__anon168
EFI_WAIT_FOR_PROCEDURE	MmMp.h	/^(EFIAPI *EFI_WAIT_FOR_PROCEDURE) ($/;"	t
EFI_WATCHDOG_TIMER_ARCH_PROTOCOL	WatchdogTimer.h	/^typedef struct _EFI_WATCHDOG_TIMER_ARCH_PROTOCOL  EFI_WATCHDOG_TIMER_ARCH_PROTOCOL;$/;"	t	typeref:struct:_EFI_WATCHDOG_TIMER_ARCH_PROTOCOL
EFI_WATCHDOG_TIMER_ARCH_PROTOCOL_GUID	WatchdogTimer.h	16;"	d
EFI_WATCHDOG_TIMER_GET_TIMER_PERIOD	WatchdogTimer.h	/^(EFIAPI *EFI_WATCHDOG_TIMER_GET_TIMER_PERIOD)($/;"	t
EFI_WATCHDOG_TIMER_NOTIFY	WatchdogTimer.h	/^(EFIAPI *EFI_WATCHDOG_TIMER_NOTIFY)($/;"	t
EFI_WATCHDOG_TIMER_REGISTER_HANDLER	WatchdogTimer.h	/^(EFIAPI *EFI_WATCHDOG_TIMER_REGISTER_HANDLER)($/;"	t
EFI_WATCHDOG_TIMER_SET_TIMER_PERIOD	WatchdogTimer.h	/^(EFIAPI *EFI_WATCHDOG_TIMER_SET_TIMER_PERIOD)($/;"	t
EFI_WHITE	SimpleTextOut.h	119;"	d
EFI_WIDE_ATTRIBUTE	SimpleTextOut.h	151;"	d
EFI_WIRELESS_MAC_CONNECTION_ASSOCIATE	WiFi.h	/^(EFIAPI *EFI_WIRELESS_MAC_CONNECTION_ASSOCIATE)($/;"	t
EFI_WIRELESS_MAC_CONNECTION_AUTHENTICATE	WiFi.h	/^(EFIAPI *EFI_WIRELESS_MAC_CONNECTION_AUTHENTICATE)($/;"	t
EFI_WIRELESS_MAC_CONNECTION_DEAUTHENTICATE	WiFi.h	/^(EFIAPI *EFI_WIRELESS_MAC_CONNECTION_DEAUTHENTICATE)($/;"	t
EFI_WIRELESS_MAC_CONNECTION_DISASSOCIATE	WiFi.h	/^(EFIAPI *EFI_WIRELESS_MAC_CONNECTION_DISASSOCIATE)($/;"	t
EFI_WIRELESS_MAC_CONNECTION_II_CONNECT_NETWORK	WiFi2.h	/^(EFIAPI *EFI_WIRELESS_MAC_CONNECTION_II_CONNECT_NETWORK) ($/;"	t
EFI_WIRELESS_MAC_CONNECTION_II_DISCONNECT_NETWORK	WiFi2.h	/^(EFIAPI *EFI_WIRELESS_MAC_CONNECTION_II_DISCONNECT_NETWORK) ($/;"	t
EFI_WIRELESS_MAC_CONNECTION_II_GET_NETWORKS	WiFi2.h	/^(EFIAPI *EFI_WIRELESS_MAC_CONNECTION_II_GET_NETWORKS) ($/;"	t
EFI_WIRELESS_MAC_CONNECTION_II_PROTOCOL	WiFi2.h	/^typedef struct _EFI_WIRELESS_MAC_CONNECTION_II_PROTOCOL EFI_WIRELESS_MAC_CONNECTION_II_PROTOCOL;$/;"	t	typeref:struct:_EFI_WIRELESS_MAC_CONNECTION_II_PROTOCOL
EFI_WIRELESS_MAC_CONNECTION_II_PROTOCOL_GUID	WiFi2.h	15;"	d
EFI_WIRELESS_MAC_CONNECTION_PROTOCOL	WiFi.h	/^typedef struct _EFI_WIRELESS_MAC_CONNECTION_PROTOCOL EFI_WIRELESS_MAC_CONNECTION_PROTOCOL;$/;"	t	typeref:struct:_EFI_WIRELESS_MAC_CONNECTION_PROTOCOL
EFI_WIRELESS_MAC_CONNECTION_PROTOCOL_GUID	WiFi.h	19;"	d
EFI_WIRELESS_MAC_CONNECTION_SCAN	WiFi.h	/^(EFIAPI *EFI_WIRELESS_MAC_CONNECTION_SCAN)($/;"	t
EFI_YELLOW	SimpleTextOut.h	118;"	d
EISA_ID	DevicePath.h	255;"	d
EISA_ID_TO_NUM	DevicePath.h	260;"	d
EISA_PNP_ID	DevicePath.h	256;"	d
ELR	DebugSupport.h	/^  UINT64  ELR;  \/\/ Exception Link Register$/;"	m	struct:__anon493
EMMC_DEVICE_PATH	DevicePath.h	/^} EMMC_DEVICE_PATH;$/;"	t	typeref:struct:__anon60
END_DEVICE_PATH_TYPE	DevicePath.h	1373;"	d
END_ENTIRE_DEVICE_PATH_SUBTYPE	DevicePath.h	1374;"	d
END_INSTANCE_DEVICE_PATH_SUBTYPE	DevicePath.h	1375;"	d
END_OF_CPU_LIST	MpService.h	63;"	d
ESR	DebugSupport.h	/^  UINT64  ESR;  \/\/ Exception syndrome register$/;"	m	struct:__anon493
EXCEPT_AARCH64_FIQ	DebugSupport.h	523;"	d
EXCEPT_AARCH64_IRQ	DebugSupport.h	522;"	d
EXCEPT_AARCH64_SERROR	DebugSupport.h	524;"	d
EXCEPT_AARCH64_SYNCHRONOUS_EXCEPTIONS	DebugSupport.h	521;"	d
EXCEPT_ARM_DATA_ABORT	DebugSupport.h	480;"	d
EXCEPT_ARM_FIQ	DebugSupport.h	483;"	d
EXCEPT_ARM_IRQ	DebugSupport.h	482;"	d
EXCEPT_ARM_PREFETCH_ABORT	DebugSupport.h	479;"	d
EXCEPT_ARM_RESERVED	DebugSupport.h	481;"	d
EXCEPT_ARM_RESET	DebugSupport.h	476;"	d
EXCEPT_ARM_SOFTWARE_INTERRUPT	DebugSupport.h	478;"	d
EXCEPT_ARM_UNDEFINED_INSTRUCTION	DebugSupport.h	477;"	d
EXCEPT_EBC_ALIGNMENT_CHECK	DebugSupport.h	445;"	d
EXCEPT_EBC_BAD_BREAK	DebugSupport.h	447;"	d
EXCEPT_EBC_BREAKPOINT	DebugSupport.h	441;"	d
EXCEPT_EBC_DEBUG	DebugSupport.h	440;"	d
EXCEPT_EBC_DIVIDE_ERROR	DebugSupport.h	439;"	d
EXCEPT_EBC_INSTRUCTION_ENCODING	DebugSupport.h	446;"	d
EXCEPT_EBC_INVALID_OPCODE	DebugSupport.h	443;"	d
EXCEPT_EBC_OVERFLOW	DebugSupport.h	442;"	d
EXCEPT_EBC_STACK_FAULT	DebugSupport.h	444;"	d
EXCEPT_EBC_STEP	DebugSupport.h	448;"	d
EXCEPT_EBC_UNDEFINED	DebugSupport.h	438;"	d
EXCEPT_IA32_ALIGNMENT_CHECK	DebugSupport.h	54;"	d
EXCEPT_IA32_BOUND	DebugSupport.h	45;"	d
EXCEPT_IA32_BREAKPOINT	DebugSupport.h	43;"	d
EXCEPT_IA32_DEBUG	DebugSupport.h	41;"	d
EXCEPT_IA32_DIVIDE_ERROR	DebugSupport.h	40;"	d
EXCEPT_IA32_DOUBLE_FAULT	DebugSupport.h	47;"	d
EXCEPT_IA32_FP_ERROR	DebugSupport.h	53;"	d
EXCEPT_IA32_GP_FAULT	DebugSupport.h	51;"	d
EXCEPT_IA32_INVALID_OPCODE	DebugSupport.h	46;"	d
EXCEPT_IA32_INVALID_TSS	DebugSupport.h	48;"	d
EXCEPT_IA32_MACHINE_CHECK	DebugSupport.h	55;"	d
EXCEPT_IA32_NMI	DebugSupport.h	42;"	d
EXCEPT_IA32_OVERFLOW	DebugSupport.h	44;"	d
EXCEPT_IA32_PAGE_FAULT	DebugSupport.h	52;"	d
EXCEPT_IA32_SEG_NOT_PRESENT	DebugSupport.h	49;"	d
EXCEPT_IA32_SIMD	DebugSupport.h	56;"	d
EXCEPT_IA32_STACK_FAULT	DebugSupport.h	50;"	d
EXCEPT_IPF_ALT_DATA_TLB	DebugSupport.h	241;"	d
EXCEPT_IPF_ALT_INSTRUCTION_TLB	DebugSupport.h	240;"	d
EXCEPT_IPF_BREAKPOINT	DebugSupport.h	248;"	d
EXCEPT_IPF_DATA_ACCESS_BIT	DebugSupport.h	247;"	d
EXCEPT_IPF_DATA_ACCESS_RIGHTS	DebugSupport.h	256;"	d
EXCEPT_IPF_DATA_KEY_MISSED	DebugSupport.h	244;"	d
EXCEPT_IPF_DATA_NESTED_TLB	DebugSupport.h	242;"	d
EXCEPT_IPF_DATA_TLB	DebugSupport.h	239;"	d
EXCEPT_IPF_DEBUG	DebugSupport.h	264;"	d
EXCEPT_IPF_DIRTY_BIT	DebugSupport.h	245;"	d
EXCEPT_IPF_DISABLED_FP_REGISTER	DebugSupport.h	258;"	d
EXCEPT_IPF_EXTERNAL_INTERRUPT	DebugSupport.h	249;"	d
EXCEPT_IPF_FP_FAULT	DebugSupport.h	267;"	d
EXCEPT_IPF_FP_TRAP	DebugSupport.h	268;"	d
EXCEPT_IPF_GENERAL_EXCEPTION	DebugSupport.h	257;"	d
EXCEPT_IPF_IA32_EXCEPTION	DebugSupport.h	275;"	d
EXCEPT_IPF_IA32_INTERCEPT	DebugSupport.h	276;"	d
EXCEPT_IPF_IA32_INTERRUPT	DebugSupport.h	277;"	d
EXCEPT_IPF_INSTRUCTION_ACCESS_BIT	DebugSupport.h	246;"	d
EXCEPT_IPF_INSTRUCTION_ACCESS_RIGHTS	DebugSupport.h	255;"	d
EXCEPT_IPF_INSTRUCTION_KEY_MISSED	DebugSupport.h	243;"	d
EXCEPT_IPF_INSTRUCTION_TLB	DebugSupport.h	238;"	d
EXCEPT_IPF_KEY_PERMISSION	DebugSupport.h	254;"	d
EXCEPT_IPF_LOWER_PRIVILEGE_TRANSFER_TRAP	DebugSupport.h	269;"	d
EXCEPT_IPF_NAT_CONSUMPTION	DebugSupport.h	259;"	d
EXCEPT_IPF_PAGE_NOT_PRESENT	DebugSupport.h	253;"	d
EXCEPT_IPF_SINGLE_STEP	DebugSupport.h	271;"	d
EXCEPT_IPF_SPECULATION	DebugSupport.h	260;"	d
EXCEPT_IPF_TAKEN_BRANCH	DebugSupport.h	270;"	d
EXCEPT_IPF_UNALIGNED_REFERENCE	DebugSupport.h	265;"	d
EXCEPT_IPF_UNSUPPORTED_DATA_REFERENCE	DebugSupport.h	266;"	d
EXCEPT_IPF_VHTP_TRANSLATION	DebugSupport.h	237;"	d
EXCEPT_RISCV_BREAKPOINT	DebugSupport.h	613;"	d
EXCEPT_RISCV_ENV_CALL_FROM_HMODE	DebugSupport.h	620;"	d
EXCEPT_RISCV_ENV_CALL_FROM_MMODE	DebugSupport.h	621;"	d
EXCEPT_RISCV_ENV_CALL_FROM_SMODE	DebugSupport.h	619;"	d
EXCEPT_RISCV_ENV_CALL_FROM_UMODE	DebugSupport.h	618;"	d
EXCEPT_RISCV_ILLEGAL_INST	DebugSupport.h	612;"	d
EXCEPT_RISCV_INST_ACCESS_FAULT	DebugSupport.h	611;"	d
EXCEPT_RISCV_INST_MISALIGNED	DebugSupport.h	610;"	d
EXCEPT_RISCV_LOAD_ACCESS_FAULT	DebugSupport.h	615;"	d
EXCEPT_RISCV_LOAD_ADDRESS_MISALIGNED	DebugSupport.h	614;"	d
EXCEPT_RISCV_SOFTWARE_INT	DebugSupport.h	623;"	d
EXCEPT_RISCV_STORE_AMO_ACCESS_FAULT	DebugSupport.h	617;"	d
EXCEPT_RISCV_STORE_AMO_ADDRESS_MISALIGNED	DebugSupport.h	616;"	d
EXCEPT_RISCV_TIMER_INT	DebugSupport.h	624;"	d
EXCEPT_X64_ALIGNMENT_CHECK	DebugSupport.h	148;"	d
EXCEPT_X64_BOUND	DebugSupport.h	139;"	d
EXCEPT_X64_BREAKPOINT	DebugSupport.h	137;"	d
EXCEPT_X64_DEBUG	DebugSupport.h	135;"	d
EXCEPT_X64_DIVIDE_ERROR	DebugSupport.h	134;"	d
EXCEPT_X64_DOUBLE_FAULT	DebugSupport.h	141;"	d
EXCEPT_X64_FP_ERROR	DebugSupport.h	147;"	d
EXCEPT_X64_GP_FAULT	DebugSupport.h	145;"	d
EXCEPT_X64_INVALID_OPCODE	DebugSupport.h	140;"	d
EXCEPT_X64_INVALID_TSS	DebugSupport.h	142;"	d
EXCEPT_X64_MACHINE_CHECK	DebugSupport.h	149;"	d
EXCEPT_X64_NMI	DebugSupport.h	136;"	d
EXCEPT_X64_OVERFLOW	DebugSupport.h	138;"	d
EXCEPT_X64_PAGE_FAULT	DebugSupport.h	146;"	d
EXCEPT_X64_SEG_NOT_PRESENT	DebugSupport.h	143;"	d
EXCEPT_X64_SIMD	DebugSupport.h	150;"	d
EXCEPT_X64_STACK_FAULT	DebugSupport.h	144;"	d
EXTENDED_PROCESSOR_INFORMATION	MpService.h	/^} EXTENDED_PROCESSOR_INFORMATION;$/;"	t	typeref:union:__anon499
EapLengthErrorFramesReceived	EapManagement.h	/^  UINTN     EapLengthErrorFramesReceived;$/;"	m	struct:_EFI_EAPOL_SUPPLICANT_PAE_STATISTICS
EapReqIdFramesReceived	EapManagement.h	/^  UINTN     EapReqIdFramesReceived;$/;"	m	struct:_EFI_EAPOL_SUPPLICANT_PAE_STATISTICS
EapRequestFramesReceived	EapManagement.h	/^  UINTN     EapRequestFramesReceived;$/;"	m	struct:_EFI_EAPOL_SUPPLICANT_PAE_STATISTICS
EapRespIdFramesTransmitted	EapManagement.h	/^  UINTN     EapRespIdFramesTransmitted;$/;"	m	struct:_EFI_EAPOL_SUPPLICANT_PAE_STATISTICS
EapResponseFramesTransmitted	EapManagement.h	/^  UINTN     EapResponseFramesTransmitted;$/;"	m	struct:_EFI_EAPOL_SUPPLICANT_PAE_STATISTICS
EapolFramesReceived	EapManagement.h	/^  UINTN     EapolFramesReceived;$/;"	m	struct:_EFI_EAPOL_SUPPLICANT_PAE_STATISTICS
EapolFramesTransmitted	EapManagement.h	/^  UINTN     EapolFramesTransmitted;$/;"	m	struct:_EFI_EAPOL_SUPPLICANT_PAE_STATISTICS
EapolLogoffFramesTransmitted	EapManagement.h	/^  UINTN     EapolLogoffFramesTransmitted;$/;"	m	struct:_EFI_EAPOL_SUPPLICANT_PAE_STATISTICS
EapolStartFramesTransmitted	EapManagement.h	/^  UINTN     EapolStartFramesTransmitted;$/;"	m	struct:_EFI_EAPOL_SUPPLICANT_PAE_STATISTICS
Eax	DebugSupport.h	/^  UINT32                 Eax;$/;"	m	struct:__anon487
Ebp	DebugSupport.h	/^  UINT32                 Ebp;$/;"	m	struct:__anon487
Ebx	DebugSupport.h	/^  UINT32                 Ebx;$/;"	m	struct:__anon487
Echo	PxeBaseCode.h	/^    } Echo;$/;"	m	union:__anon102::__anon103	typeref:struct:__anon102::__anon103::__anon104
Ecx	DebugSupport.h	/^  UINT32                 Ecx;$/;"	m	struct:__anon487
Edi	DebugSupport.h	/^  UINT32                 Edi;$/;"	m	struct:__anon487
Edid	EdidActive.h	/^  UINT8    *Edid;$/;"	m	struct:__anon267
Edid	EdidDiscovered.h	/^  UINT8    *Edid;$/;"	m	struct:__anon242
Edx	DebugSupport.h	/^  UINT32                 Edx;$/;"	m	struct:__anon487
EfiAtaSataTransferProtocol	IdeControllerInit.h	/^  EfiAtaSataTransferProtocol$/;"	e	enum:__anon130
EfiBltBufferToVideo	GraphicsOutput.h	/^  EfiBltBufferToVideo,$/;"	e	enum:__anon240
EfiBltVideoFill	GraphicsOutput.h	/^  EfiBltVideoFill,$/;"	e	enum:__anon240
EfiBltVideoToBltBuffer	GraphicsOutput.h	/^  EfiBltVideoToBltBuffer,$/;"	e	enum:__anon240
EfiBltVideoToVideo	GraphicsOutput.h	/^  EfiBltVideoToVideo,$/;"	e	enum:__anon240
EfiBluetoothCallbackTypeMax	BluetoothConfig.h	/^  EfiBluetoothCallbackTypeMax$/;"	e	enum:__anon270
EfiBluetoothCallbackTypeOOBDataRequest	BluetoothConfig.h	/^  EfiBluetoothCallbackTypeOOBDataRequest,$/;"	e	enum:__anon270
EfiBluetoothCallbackTypePinCodeRequest	BluetoothConfig.h	/^  EfiBluetoothCallbackTypePinCodeRequest,$/;"	e	enum:__anon270
EfiBluetoothCallbackTypeUserConfirmationRequest	BluetoothConfig.h	/^  EfiBluetoothCallbackTypeUserConfirmationRequest,$/;"	e	enum:__anon270
EfiBluetoothCallbackTypeUserPasskeyNotification	BluetoothConfig.h	/^  EfiBluetoothCallbackTypeUserPasskeyNotification,$/;"	e	enum:__anon270
EfiBluetoothConfigDataTypeAdvertisementData	BluetoothConfig.h	/^  EfiBluetoothConfigDataTypeAdvertisementData, \/* Relevant for LE*\/$/;"	e	enum:__anon269
EfiBluetoothConfigDataTypeAvailableDeviceList	BluetoothConfig.h	/^  EfiBluetoothConfigDataTypeAvailableDeviceList,$/;"	e	enum:__anon269
EfiBluetoothConfigDataTypeBDADDR	BluetoothConfig.h	/^  EfiBluetoothConfigDataTypeBDADDR, \/* Relevant for LE*\/$/;"	e	enum:__anon269
EfiBluetoothConfigDataTypeClassOfDevice	BluetoothConfig.h	/^  EfiBluetoothConfigDataTypeClassOfDevice,$/;"	e	enum:__anon269
EfiBluetoothConfigDataTypeControllerStoredPairedDeviceList	BluetoothConfig.h	/^  EfiBluetoothConfigDataTypeControllerStoredPairedDeviceList,$/;"	e	enum:__anon269
EfiBluetoothConfigDataTypeDeviceName	BluetoothConfig.h	/^  EfiBluetoothConfigDataTypeDeviceName,$/;"	e	enum:__anon269
EfiBluetoothConfigDataTypeDiscoverable	BluetoothConfig.h	/^  EfiBluetoothConfigDataTypeDiscoverable, \/* Relevant for LE*\/$/;"	e	enum:__anon269
EfiBluetoothConfigDataTypeEncKeySize	BluetoothConfig.h	/^  EfiBluetoothConfigDataTypeEncKeySize, \/* Relevant for LE*\/$/;"	e	enum:__anon269
EfiBluetoothConfigDataTypeIoCapability	BluetoothConfig.h	/^  EfiBluetoothConfigDataTypeIoCapability, \/* Relevant for LE*\/$/;"	e	enum:__anon269
EfiBluetoothConfigDataTypeKeyType	BluetoothConfig.h	/^  EfiBluetoothConfigDataTypeKeyType, \/* Relevant for LE*\/$/;"	e	enum:__anon269
EfiBluetoothConfigDataTypeMax	BluetoothConfig.h	/^  EfiBluetoothConfigDataTypeMax,$/;"	e	enum:__anon269
EfiBluetoothConfigDataTypeOOBDataFlag	BluetoothConfig.h	/^  EfiBluetoothConfigDataTypeOOBDataFlag, \/* Relevant for LE*\/$/;"	e	enum:__anon269
EfiBluetoothConfigDataTypeRSSI	BluetoothConfig.h	/^  EfiBluetoothConfigDataTypeRSSI, \/* Relevant for LE*\/$/;"	e	enum:__anon269
EfiBluetoothConfigDataTypeRandomAddress	BluetoothConfig.h	/^  EfiBluetoothConfigDataTypeRandomAddress, \/* Relevant for LE*\/$/;"	e	enum:__anon269
EfiBluetoothConfigDataTypeRemoteDeviceState	BluetoothConfig.h	/^  EfiBluetoothConfigDataTypeRemoteDeviceState, \/* Relevant for LE*\/$/;"	e	enum:__anon269
EfiBluetoothConfigDataTypeSdpInfo	BluetoothConfig.h	/^  EfiBluetoothConfigDataTypeSdpInfo,$/;"	e	enum:__anon269
EfiBluetoothConnCallbackTypeAuthenticated	BluetoothConfig.h	/^  EfiBluetoothConnCallbackTypeAuthenticated,$/;"	e	enum:__anon271
EfiBluetoothConnCallbackTypeConnected	BluetoothConfig.h	/^  EfiBluetoothConnCallbackTypeConnected,$/;"	e	enum:__anon271
EfiBluetoothConnCallbackTypeDisconnected	BluetoothConfig.h	/^  EfiBluetoothConnCallbackTypeDisconnected,$/;"	e	enum:__anon271
EfiBluetoothConnCallbackTypeEncrypted	BluetoothConfig.h	/^  EfiBluetoothConnCallbackTypeEncrypted$/;"	e	enum:__anon271
EfiBluetoothSmpAuthorizationRequestEvent	BluetoothLeConfig.h	/^  EfiBluetoothSmpAuthorizationRequestEvent,$/;"	e	enum:__anon566
EfiBluetoothSmpKeySize	BluetoothLeConfig.h	/^  EfiBluetoothSmpKeySize,$/;"	e	enum:__anon567
EfiBluetoothSmpKeyType	BluetoothLeConfig.h	/^  EfiBluetoothSmpKeyType,$/;"	e	enum:__anon567
EfiBluetoothSmpKeysDistributed	BluetoothLeConfig.h	/^  EfiBluetoothSmpKeysDistributed = 0x1000,$/;"	e	enum:__anon567
EfiBluetoothSmpLocalCSRK	BluetoothLeConfig.h	/^  EfiBluetoothSmpLocalCSRK, \/* If Key hierarchy not supported *\/$/;"	e	enum:__anon567
EfiBluetoothSmpLocalDHK	BluetoothLeConfig.h	/^  EfiBluetoothSmpLocalDHK, \/* If Key hierarchy is supported. OPTIONAL *\/$/;"	e	enum:__anon567
EfiBluetoothSmpLocalDIV	BluetoothLeConfig.h	/^  EfiBluetoothSmpLocalDIV,$/;"	e	enum:__anon567
EfiBluetoothSmpLocalER	BluetoothLeConfig.h	/^  EfiBluetoothSmpLocalER, \/* If Key hierarchy is supported *\/$/;"	e	enum:__anon567
EfiBluetoothSmpLocalIR	BluetoothLeConfig.h	/^  EfiBluetoothSmpLocalIR, \/* If Key hierarchy is supported *\/$/;"	e	enum:__anon567
EfiBluetoothSmpLocalIRK	BluetoothLeConfig.h	/^  EfiBluetoothSmpLocalIRK, \/* If Key hierarchy not supported *\/$/;"	e	enum:__anon567
EfiBluetoothSmpLocalLTK	BluetoothLeConfig.h	/^  EfiBluetoothSmpLocalLTK, \/* If Key hierarchy not supported *\/$/;"	e	enum:__anon567
EfiBluetoothSmpLocalSignCounter	BluetoothLeConfig.h	/^  EfiBluetoothSmpLocalSignCounter,$/;"	e	enum:__anon567
EfiBluetoothSmpMax	BluetoothLeConfig.h	/^  EfiBluetoothSmpMax,$/;"	e	enum:__anon567
EfiBluetoothSmpNumericComparisonEvent	BluetoothLeConfig.h	/^  EfiBluetoothSmpNumericComparisonEvent,$/;"	e	enum:__anon566
EfiBluetoothSmpOOBDataRequestEvent	BluetoothLeConfig.h	/^  EfiBluetoothSmpOOBDataRequestEvent,$/;"	e	enum:__anon566
EfiBluetoothSmpPasskeyReadyEvent	BluetoothLeConfig.h	/^  EfiBluetoothSmpPasskeyReadyEvent,$/;"	e	enum:__anon566
EfiBluetoothSmpPasskeyRequestEvent	BluetoothLeConfig.h	/^  EfiBluetoothSmpPasskeyRequestEvent,$/;"	e	enum:__anon566
EfiBluetoothSmpPeerAddressList	BluetoothLeConfig.h	/^  EfiBluetoothSmpPeerAddressList,$/;"	e	enum:__anon567
EfiBluetoothSmpPeerCSRK	BluetoothLeConfig.h	/^  EfiBluetoothSmpPeerCSRK,$/;"	e	enum:__anon567
EfiBluetoothSmpPeerEDIV	BluetoothLeConfig.h	/^  EfiBluetoothSmpPeerEDIV,$/;"	e	enum:__anon567
EfiBluetoothSmpPeerIRK	BluetoothLeConfig.h	/^  EfiBluetoothSmpPeerIRK,$/;"	e	enum:__anon567
EfiBluetoothSmpPeerLTK	BluetoothLeConfig.h	/^  EfiBluetoothSmpPeerLTK,$/;"	e	enum:__anon567
EfiBluetoothSmpPeerRand	BluetoothLeConfig.h	/^  EfiBluetoothSmpPeerRand,$/;"	e	enum:__anon567
EfiBluetoothSmpPeerSignCounter	BluetoothLeConfig.h	/^  EfiBluetoothSmpPeerSignCounter,$/;"	e	enum:__anon567
EfiBusMasterCommonBuffer	DeviceIo.h	/^  EfiBusMasterCommonBuffer$/;"	e	enum:__anon505
EfiBusMasterRead	DeviceIo.h	/^  EfiBusMasterRead,$/;"	e	enum:__anon505
EfiBusMasterWrite	DeviceIo.h	/^  EfiBusMasterWrite,$/;"	e	enum:__anon505
EfiCpuFlushTypeInvalidate	Cpu.h	/^  EfiCpuFlushTypeInvalidate,$/;"	e	enum:__anon274
EfiCpuFlushTypeWriteBack	Cpu.h	/^  EfiCpuFlushTypeWriteBack,$/;"	e	enum:__anon274
EfiCpuFlushTypeWriteBackInvalidate	Cpu.h	/^  EfiCpuFlushTypeWriteBackInvalidate,$/;"	e	enum:__anon274
EfiCpuInit	Cpu.h	/^  EfiCpuInit,$/;"	e	enum:__anon275
EfiCpuIoWidthFifoUint16	CpuIo2.h	/^  EfiCpuIoWidthFifoUint16,$/;"	e	enum:__anon380
EfiCpuIoWidthFifoUint32	CpuIo2.h	/^  EfiCpuIoWidthFifoUint32,$/;"	e	enum:__anon380
EfiCpuIoWidthFifoUint64	CpuIo2.h	/^  EfiCpuIoWidthFifoUint64,$/;"	e	enum:__anon380
EfiCpuIoWidthFifoUint8	CpuIo2.h	/^  EfiCpuIoWidthFifoUint8,$/;"	e	enum:__anon380
EfiCpuIoWidthFillUint16	CpuIo2.h	/^  EfiCpuIoWidthFillUint16,$/;"	e	enum:__anon380
EfiCpuIoWidthFillUint32	CpuIo2.h	/^  EfiCpuIoWidthFillUint32,$/;"	e	enum:__anon380
EfiCpuIoWidthFillUint64	CpuIo2.h	/^  EfiCpuIoWidthFillUint64,$/;"	e	enum:__anon380
EfiCpuIoWidthFillUint8	CpuIo2.h	/^  EfiCpuIoWidthFillUint8,$/;"	e	enum:__anon380
EfiCpuIoWidthMaximum	CpuIo2.h	/^  EfiCpuIoWidthMaximum$/;"	e	enum:__anon380
EfiCpuIoWidthUint16	CpuIo2.h	/^  EfiCpuIoWidthUint16,$/;"	e	enum:__anon380
EfiCpuIoWidthUint32	CpuIo2.h	/^  EfiCpuIoWidthUint32,$/;"	e	enum:__anon380
EfiCpuIoWidthUint64	CpuIo2.h	/^  EfiCpuIoWidthUint64,$/;"	e	enum:__anon380
EfiCpuIoWidthUint8	CpuIo2.h	/^  EfiCpuIoWidthUint8,$/;"	e	enum:__anon380
EfiCpuMaxFlushType	Cpu.h	/^  EfiCpuMaxFlushType$/;"	e	enum:__anon274
EfiCpuMaxInitType	Cpu.h	/^  EfiCpuMaxInitType$/;"	e	enum:__anon275
EfiDriverConfigurationActionMaximum	DriverConfiguration2.h	/^  EfiDriverConfigurationActionMaximum$/;"	e	enum:__anon216
EfiDriverConfigurationActionNone	DriverConfiguration2.h	/^  EfiDriverConfigurationActionNone              = 0,$/;"	e	enum:__anon216
EfiDriverConfigurationActionRestartController	DriverConfiguration2.h	/^  EfiDriverConfigurationActionRestartController = 2,$/;"	e	enum:__anon216
EfiDriverConfigurationActionRestartPlatform	DriverConfiguration2.h	/^  EfiDriverConfigurationActionRestartPlatform   = 3,$/;"	e	enum:__anon216
EfiDriverConfigurationActionStopController	DriverConfiguration2.h	/^  EfiDriverConfigurationActionStopController    = 1,$/;"	e	enum:__anon216
EfiDriverDiagnosticTypeCancel	DriverDiagnostics.h	/^  EfiDriverDiagnosticTypeCancel       = 3,$/;"	e	enum:__anon126
EfiDriverDiagnosticTypeExtended	DriverDiagnostics.h	/^  EfiDriverDiagnosticTypeExtended     = 1,$/;"	e	enum:__anon126
EfiDriverDiagnosticTypeManufacturing	DriverDiagnostics.h	/^  EfiDriverDiagnosticTypeManufacturing= 2,$/;"	e	enum:__anon126
EfiDriverDiagnosticTypeMaximum	DriverDiagnostics.h	/^  EfiDriverDiagnosticTypeMaximum$/;"	e	enum:__anon126
EfiDriverDiagnosticTypeStandard	DriverDiagnostics.h	/^  EfiDriverDiagnosticTypeStandard     = 0,$/;"	e	enum:__anon126
EfiDriverHandoffMax	UgaIo.h	/^  EfiDriverHandoffMax$/;"	e	enum:__anon537
EfiDriverHealthStatusConfigurationRequired	DriverHealth.h	/^  EfiDriverHealthStatusConfigurationRequired,$/;"	e	enum:__anon440
EfiDriverHealthStatusFailed	DriverHealth.h	/^  EfiDriverHealthStatusFailed,$/;"	e	enum:__anon440
EfiDriverHealthStatusHealthy	DriverHealth.h	/^  EfiDriverHealthStatusHealthy,$/;"	e	enum:__anon440
EfiDriverHealthStatusRebootRequired	DriverHealth.h	/^  EfiDriverHealthStatusRebootRequired$/;"	e	enum:__anon440
EfiDriverHealthStatusReconnectRequired	DriverHealth.h	/^  EfiDriverHealthStatusReconnectRequired,$/;"	e	enum:__anon440
EfiDriverHealthStatusRepairRequired	DriverHealth.h	/^  EfiDriverHealthStatusRepairRequired,$/;"	e	enum:__anon440
EfiEapConfigEap2ndAuthMethod	EapConfiguration.h	/^  EfiEapConfigEap2ndAuthMethod,$/;"	e	enum:__anon437
EfiEapConfigEapAuthMethod	EapConfiguration.h	/^  EfiEapConfigEapAuthMethod,$/;"	e	enum:__anon437
EfiEapConfigEapMSChapV2Password	EapConfiguration.h	/^  EfiEapConfigEapMSChapV2Password, \/\/ UNICODE format, Volatile$/;"	e	enum:__anon437
EfiEapConfigEapSupportedAuthMethod	EapConfiguration.h	/^  EfiEapConfigEapSupportedAuthMethod,$/;"	e	enum:__anon437
EfiEapConfigEapTlsCACert	EapConfiguration.h	/^  EfiEapConfigEapTlsCACert,$/;"	e	enum:__anon437
EfiEapConfigEapTlsCipherSuite	EapConfiguration.h	/^  EfiEapConfigEapTlsCipherSuite,$/;"	e	enum:__anon437
EfiEapConfigEapTlsClientCert	EapConfiguration.h	/^  EfiEapConfigEapTlsClientCert,$/;"	e	enum:__anon437
EfiEapConfigEapTlsClientPrivateKeyFile	EapConfiguration.h	/^  EfiEapConfigEapTlsClientPrivateKeyFile,$/;"	e	enum:__anon437
EfiEapConfigEapTlsClientPrivateKeyFilePassword	EapConfiguration.h	/^  EfiEapConfigEapTlsClientPrivateKeyFilePassword, \/\/ ASCII format, Volatile$/;"	e	enum:__anon437
EfiEapConfigEapTlsSupportedCipherSuite	EapConfiguration.h	/^  EfiEapConfigEapTlsSupportedCipherSuite,$/;"	e	enum:__anon437
EfiEapConfigIdentityString	EapConfiguration.h	/^  EfiEapConfigIdentityString,$/;"	e	enum:__anon437
EfiGraphicsOutputBltOperationMax	GraphicsOutput.h	/^  EfiGraphicsOutputBltOperationMax$/;"	e	enum:__anon240
EfiHiiPopupSelectionCancel	HiiPopup.h	/^  EfiHiiPopupSelectionCancel,$/;"	e	enum:__anon417
EfiHiiPopupSelectionNo	HiiPopup.h	/^  EfiHiiPopupSelectionNo$/;"	e	enum:__anon417
EfiHiiPopupSelectionOk	HiiPopup.h	/^  EfiHiiPopupSelectionOk,$/;"	e	enum:__anon417
EfiHiiPopupSelectionYes	HiiPopup.h	/^  EfiHiiPopupSelectionYes,$/;"	e	enum:__anon417
EfiHiiPopupStyleError	HiiPopup.h	/^  EfiHiiPopupStyleError$/;"	e	enum:__anon415
EfiHiiPopupStyleInfo	HiiPopup.h	/^  EfiHiiPopupStyleInfo,$/;"	e	enum:__anon415
EfiHiiPopupStyleWarning	HiiPopup.h	/^  EfiHiiPopupStyleWarning,$/;"	e	enum:__anon415
EfiHiiPopupTypeOk	HiiPopup.h	/^  EfiHiiPopupTypeOk,$/;"	e	enum:__anon416
EfiHiiPopupTypeOkCancel	HiiPopup.h	/^  EfiHiiPopupTypeOkCancel,$/;"	e	enum:__anon416
EfiHiiPopupTypeYesNo	HiiPopup.h	/^  EfiHiiPopupTypeYesNo,$/;"	e	enum:__anon416
EfiHiiPopupTypeYesNoCancel	HiiPopup.h	/^  EfiHiiPopupTypeYesNoCancel$/;"	e	enum:__anon416
EfiIPsecAH	IpSecConfig.h	/^  EfiIPsecAH,  \/\/\/< IP Authentication Header protocol which is specified in RFC 4302.$/;"	e	enum:__anon451
EfiIPsecActionBypass	IpSecConfig.h	/^  EfiIPsecActionBypass,$/;"	e	enum:__anon448
EfiIPsecActionDiscard	IpSecConfig.h	/^  EfiIPsecActionDiscard,$/;"	e	enum:__anon448
EfiIPsecActionProtect	IpSecConfig.h	/^  EfiIPsecActionProtect$/;"	e	enum:__anon448
EfiIPsecAuthMethodCertificates	IpSecConfig.h	/^  EfiIPsecAuthMethodCertificates,$/;"	e	enum:__anon456
EfiIPsecAuthMethodMaximum	IpSecConfig.h	/^  EfiIPsecAuthMethodMaximum$/;"	e	enum:__anon456
EfiIPsecAuthMethodPreSharedSecret	IpSecConfig.h	/^  EfiIPsecAuthMethodPreSharedSecret,$/;"	e	enum:__anon456
EfiIPsecAuthProtocolIKEv1	IpSecConfig.h	/^  EfiIPsecAuthProtocolIKEv1,$/;"	e	enum:__anon455
EfiIPsecAuthProtocolIKEv2	IpSecConfig.h	/^  EfiIPsecAuthProtocolIKEv2,$/;"	e	enum:__anon455
EfiIPsecAuthProtocolMaximum	IpSecConfig.h	/^  EfiIPsecAuthProtocolMaximum$/;"	e	enum:__anon455
EfiIPsecESP	IpSecConfig.h	/^  EfiIPsecESP  \/\/\/< IP Encapsulating Security Payload which is specified in RFC 4303.$/;"	e	enum:__anon451
EfiIPsecInBound	IpSecConfig.h	/^  EfiIPsecInBound,$/;"	e	enum:__anon447
EfiIPsecOutBound	IpSecConfig.h	/^  EfiIPsecOutBound$/;"	e	enum:__anon447
EfiIPsecTransport	IpSecConfig.h	/^  EfiIPsecTransport,$/;"	e	enum:__anon449
EfiIPsecTunnel	IpSecConfig.h	/^  EfiIPsecTunnel$/;"	e	enum:__anon449
EfiIPsecTunnelClearDf	IpSecConfig.h	/^  EfiIPsecTunnelClearDf,  \/\/\/< Clear DF bit from inner header.$/;"	e	enum:__anon450
EfiIPsecTunnelCopyDf	IpSecConfig.h	/^  EfiIPsecTunnelCopyDf    \/\/\/< Copy DF bit from inner header.$/;"	e	enum:__anon450
EfiIPsecTunnelSetDf	IpSecConfig.h	/^  EfiIPsecTunnelSetDf,    \/\/\/< Set DF bit from inner header.$/;"	e	enum:__anon450
EfiIdeAfterChannelEnumeration	IdeControllerInit.h	/^  EfiIdeAfterChannelEnumeration,$/;"	e	enum:__anon129
EfiIdeAfterChannelReset	IdeControllerInit.h	/^  EfiIdeAfterChannelReset,$/;"	e	enum:__anon129
EfiIdeBeforeChannelEnumeration	IdeControllerInit.h	/^  EfiIdeBeforeChannelEnumeration,$/;"	e	enum:__anon129
EfiIdeBeforeChannelReset	IdeControllerInit.h	/^  EfiIdeBeforeChannelReset,$/;"	e	enum:__anon129
EfiIdeBusAfterDevicePresenceDetection	IdeControllerInit.h	/^  EfiIdeBusAfterDevicePresenceDetection,$/;"	e	enum:__anon129
EfiIdeBusBeforeDevicePresenceDetection	IdeControllerInit.h	/^  EfiIdeBusBeforeDevicePresenceDetection,$/;"	e	enum:__anon129
EfiIdeBusPhaseMaximum	IdeControllerInit.h	/^  EfiIdeBusPhaseMaximum$/;"	e	enum:__anon129
EfiIdeResetMode	IdeControllerInit.h	/^  EfiIdeResetMode,$/;"	e	enum:__anon129
EfiMaxPciHostBridgeEnumerationPhase	PciHostBridgeResourceAllocation.h	/^  EfiMaxPciHostBridgeEnumerationPhase$/;"	e	enum:__anon272
EfiMaximumPhase	MmSxDispatch.h	/^  EfiMaximumPhase$/;"	e	enum:__anon366
EfiMaximumSleepType	MmSxDispatch.h	/^  EfiMaximumSleepType$/;"	e	enum:__anon365
EfiNeighborDelay	Ip6.h	/^  EfiNeighborDelay,$/;"	e	enum:__anon402
EfiNeighborInComplete	Ip6.h	/^  EfiNeighborInComplete,$/;"	e	enum:__anon402
EfiNeighborProbe	Ip6.h	/^  EfiNeighborProbe$/;"	e	enum:__anon402
EfiNeighborReachable	Ip6.h	/^  EfiNeighborReachable,$/;"	e	enum:__anon402
EfiNeighborStale	Ip6.h	/^  EfiNeighborStale,$/;"	e	enum:__anon402
EfiNetworkInterfaceUndi	NetworkInterfaceIdentifier.h	/^  EfiNetworkInterfaceUndi = 1$/;"	e	enum:__anon2
EfiPaddingPciBus	PciHotPlugInit.h	/^  EfiPaddingPciBus,$/;"	e	enum:__anon356
EfiPaddingPciRootBridge	PciHotPlugInit.h	/^  EfiPaddingPciRootBridge$/;"	e	enum:__anon356
EfiPciBeforeChildBusEnumeration	PciHostBridgeResourceAllocation.h	/^  EfiPciBeforeChildBusEnumeration,$/;"	e	enum:__anon273
EfiPciBeforeResourceCollection	PciHostBridgeResourceAllocation.h	/^  EfiPciBeforeResourceCollection$/;"	e	enum:__anon273
EfiPciHostBridgeAllocateResources	PciHostBridgeResourceAllocation.h	/^  EfiPciHostBridgeAllocateResources,$/;"	e	enum:__anon272
EfiPciHostBridgeBeginBusAllocation	PciHostBridgeResourceAllocation.h	/^  EfiPciHostBridgeBeginBusAllocation,$/;"	e	enum:__anon272
EfiPciHostBridgeBeginEnumeration	PciHostBridgeResourceAllocation.h	/^  EfiPciHostBridgeBeginEnumeration,$/;"	e	enum:__anon272
EfiPciHostBridgeBeginResourceAllocation	PciHostBridgeResourceAllocation.h	/^  EfiPciHostBridgeBeginResourceAllocation,$/;"	e	enum:__anon272
EfiPciHostBridgeEndBusAllocation	PciHostBridgeResourceAllocation.h	/^  EfiPciHostBridgeEndBusAllocation,$/;"	e	enum:__anon272
EfiPciHostBridgeEndEnumeration	PciHostBridgeResourceAllocation.h	/^  EfiPciHostBridgeEndEnumeration,$/;"	e	enum:__anon272
EfiPciHostBridgeEndResourceAllocation	PciHostBridgeResourceAllocation.h	/^  EfiPciHostBridgeEndResourceAllocation,$/;"	e	enum:__anon272
EfiPciHostBridgeFreeResources	PciHostBridgeResourceAllocation.h	/^  EfiPciHostBridgeFreeResources,$/;"	e	enum:__anon272
EfiPciHostBridgeSetResources	PciHostBridgeResourceAllocation.h	/^  EfiPciHostBridgeSetResources,$/;"	e	enum:__anon272
EfiPciHotPlugRequestAdd	PciHotPlugRequest.h	/^  EfiPciHotPlugRequestAdd,$/;"	e	enum:__anon77
EfiPciHotplugRequestRemove	PciHotPlugRequest.h	/^  EfiPciHotplugRequestRemove$/;"	e	enum:__anon77
EfiPciIoAttributeOperationDisable	PciIo.h	/^  EfiPciIoAttributeOperationDisable,$/;"	e	enum:__anon21
EfiPciIoAttributeOperationEnable	PciIo.h	/^  EfiPciIoAttributeOperationEnable,$/;"	e	enum:__anon21
EfiPciIoAttributeOperationGet	PciIo.h	/^  EfiPciIoAttributeOperationGet,$/;"	e	enum:__anon21
EfiPciIoAttributeOperationMaximum	PciIo.h	/^  EfiPciIoAttributeOperationMaximum$/;"	e	enum:__anon21
EfiPciIoAttributeOperationSet	PciIo.h	/^  EfiPciIoAttributeOperationSet,$/;"	e	enum:__anon21
EfiPciIoAttributeOperationSupported	PciIo.h	/^  EfiPciIoAttributeOperationSupported,$/;"	e	enum:__anon21
EfiPciIoOperationBusMasterCommonBuffer	PciIo.h	/^  EfiPciIoOperationBusMasterCommonBuffer,$/;"	e	enum:__anon20
EfiPciIoOperationBusMasterRead	PciIo.h	/^  EfiPciIoOperationBusMasterRead,$/;"	e	enum:__anon20
EfiPciIoOperationBusMasterWrite	PciIo.h	/^  EfiPciIoOperationBusMasterWrite,$/;"	e	enum:__anon20
EfiPciIoOperationMaximum	PciIo.h	/^  EfiPciIoOperationMaximum$/;"	e	enum:__anon20
EfiPciIoWidthFifoUint16	PciIo.h	/^  EfiPciIoWidthFifoUint16,$/;"	e	enum:__anon19
EfiPciIoWidthFifoUint32	PciIo.h	/^  EfiPciIoWidthFifoUint32,$/;"	e	enum:__anon19
EfiPciIoWidthFifoUint64	PciIo.h	/^  EfiPciIoWidthFifoUint64,$/;"	e	enum:__anon19
EfiPciIoWidthFifoUint8	PciIo.h	/^  EfiPciIoWidthFifoUint8,$/;"	e	enum:__anon19
EfiPciIoWidthFillUint16	PciIo.h	/^  EfiPciIoWidthFillUint16,$/;"	e	enum:__anon19
EfiPciIoWidthFillUint32	PciIo.h	/^  EfiPciIoWidthFillUint32,$/;"	e	enum:__anon19
EfiPciIoWidthFillUint64	PciIo.h	/^  EfiPciIoWidthFillUint64,$/;"	e	enum:__anon19
EfiPciIoWidthFillUint8	PciIo.h	/^  EfiPciIoWidthFillUint8,$/;"	e	enum:__anon19
EfiPciIoWidthMaximum	PciIo.h	/^  EfiPciIoWidthMaximum$/;"	e	enum:__anon19
EfiPciIoWidthUint16	PciIo.h	/^  EfiPciIoWidthUint16,$/;"	e	enum:__anon19
EfiPciIoWidthUint32	PciIo.h	/^  EfiPciIoWidthUint32,$/;"	e	enum:__anon19
EfiPciIoWidthUint64	PciIo.h	/^  EfiPciIoWidthUint64,$/;"	e	enum:__anon19
EfiPciIoWidthUint8	PciIo.h	/^  EfiPciIoWidthUint8      = 0,$/;"	e	enum:__anon19
EfiPciOperationBusMasterCommonBuffer	PciRootBridgeIo.h	/^  EfiPciOperationBusMasterCommonBuffer,$/;"	e	enum:__anon277
EfiPciOperationBusMasterCommonBuffer64	PciRootBridgeIo.h	/^  EfiPciOperationBusMasterCommonBuffer64,$/;"	e	enum:__anon277
EfiPciOperationBusMasterRead	PciRootBridgeIo.h	/^  EfiPciOperationBusMasterRead,$/;"	e	enum:__anon277
EfiPciOperationBusMasterRead64	PciRootBridgeIo.h	/^  EfiPciOperationBusMasterRead64,$/;"	e	enum:__anon277
EfiPciOperationBusMasterWrite	PciRootBridgeIo.h	/^  EfiPciOperationBusMasterWrite,$/;"	e	enum:__anon277
EfiPciOperationBusMasterWrite64	PciRootBridgeIo.h	/^  EfiPciOperationBusMasterWrite64,$/;"	e	enum:__anon277
EfiPciOperationMaximum	PciRootBridgeIo.h	/^  EfiPciOperationMaximum$/;"	e	enum:__anon277
EfiPciWidthFifoUint16	PciRootBridgeIo.h	/^  EfiPciWidthFifoUint16,$/;"	e	enum:__anon276
EfiPciWidthFifoUint32	PciRootBridgeIo.h	/^  EfiPciWidthFifoUint32,$/;"	e	enum:__anon276
EfiPciWidthFifoUint64	PciRootBridgeIo.h	/^  EfiPciWidthFifoUint64,$/;"	e	enum:__anon276
EfiPciWidthFifoUint8	PciRootBridgeIo.h	/^  EfiPciWidthFifoUint8,$/;"	e	enum:__anon276
EfiPciWidthFillUint16	PciRootBridgeIo.h	/^  EfiPciWidthFillUint16,$/;"	e	enum:__anon276
EfiPciWidthFillUint32	PciRootBridgeIo.h	/^  EfiPciWidthFillUint32,$/;"	e	enum:__anon276
EfiPciWidthFillUint64	PciRootBridgeIo.h	/^  EfiPciWidthFillUint64,$/;"	e	enum:__anon276
EfiPciWidthFillUint8	PciRootBridgeIo.h	/^  EfiPciWidthFillUint8,$/;"	e	enum:__anon276
EfiPciWidthMaximum	PciRootBridgeIo.h	/^  EfiPciWidthMaximum$/;"	e	enum:__anon276
EfiPciWidthUint16	PciRootBridgeIo.h	/^  EfiPciWidthUint16,$/;"	e	enum:__anon276
EfiPciWidthUint32	PciRootBridgeIo.h	/^  EfiPciWidthUint32,$/;"	e	enum:__anon276
EfiPciWidthUint64	PciRootBridgeIo.h	/^  EfiPciWidthUint64,$/;"	e	enum:__anon276
EfiPciWidthUint8	PciRootBridgeIo.h	/^  EfiPciWidthUint8,$/;"	e	enum:__anon276
EfiPlatformConfigurationActionMaximum	PlatformToDriverConfiguration.h	/^  EfiPlatformConfigurationActionMaximum$/;"	e	enum:__anon244
EfiPlatformConfigurationActionNone	PlatformToDriverConfiguration.h	/^  EfiPlatformConfigurationActionNone              = 0,$/;"	e	enum:__anon244
EfiPlatformConfigurationActionNvramFailed	PlatformToDriverConfiguration.h	/^  EfiPlatformConfigurationActionNvramFailed       = 4,$/;"	e	enum:__anon244
EfiPlatformConfigurationActionRestartController	PlatformToDriverConfiguration.h	/^  EfiPlatformConfigurationActionRestartController = 2,$/;"	e	enum:__anon244
EfiPlatformConfigurationActionRestartPlatform	PlatformToDriverConfiguration.h	/^  EfiPlatformConfigurationActionRestartPlatform   = 3,$/;"	e	enum:__anon244
EfiPlatformConfigurationActionStopController	PlatformToDriverConfiguration.h	/^  EfiPlatformConfigurationActionStopController    = 1,$/;"	e	enum:__anon244
EfiPlatformConfigurationActionUnsupportedGuid	PlatformToDriverConfiguration.h	/^  EfiPlatformConfigurationActionUnsupportedGuid   = 5,$/;"	e	enum:__anon244
EfiPowerButtonEntry	MmPowerButtonDispatch.h	/^  EfiPowerButtonEntry,$/;"	e	enum:__anon247
EfiPowerButtonExit	MmPowerButtonDispatch.h	/^  EfiPowerButtonExit,$/;"	e	enum:__anon247
EfiPowerButtonMax	MmPowerButtonDispatch.h	/^  EfiPowerButtonMax$/;"	e	enum:__anon247
EfiRestExConfigHttp	RestEx.h	/^  EfiRestExConfigHttp,$/;"	e	enum:__anon230
EfiRestExConfigTypeMax	RestEx.h	/^  EfiRestExConfigTypeMax$/;"	e	enum:__anon230
EfiRestExConfigUnspecific	RestEx.h	/^  EfiRestExConfigUnspecific,$/;"	e	enum:__anon230
EfiRestExServiceInBandAccess	RestEx.h	/^  EfiRestExServiceInBandAccess = 1,$/;"	e	enum:__anon229
EfiRestExServiceInfoHeader	RestEx.h	/^  EFI_REST_EX_SERVICE_INFO_HEADER  EfiRestExServiceInfoHeader;$/;"	m	struct:__anon231
EfiRestExServiceInfoHeader	RestEx.h	/^  EFI_REST_EX_SERVICE_INFO_HEADER EfiRestExServiceInfoHeader;$/;"	m	union:__anon232
EfiRestExServiceInfoV10	RestEx.h	/^  EFI_REST_EX_SERVICE_INFO_V_1_0  EfiRestExServiceInfoV10;$/;"	m	union:__anon232
EfiRestExServiceModeMax	RestEx.h	/^  EfiRestExServiceModeMax$/;"	e	enum:__anon229
EfiRestExServiceOdata	RestEx.h	/^  EfiRestExServiceOdata,$/;"	e	enum:__anon228
EfiRestExServiceOutOfBandAccess	RestEx.h	/^  EfiRestExServiceOutOfBandAccess = 2,$/;"	e	enum:__anon229
EfiRestExServiceRedfish	RestEx.h	/^  EfiRestExServiceRedfish,$/;"	e	enum:__anon228
EfiRestExServiceTypeMax	RestEx.h	/^  EfiRestExServiceTypeMax$/;"	e	enum:__anon228
EfiRestExServiceUnspecific	RestEx.h	/^  EfiRestExServiceUnspecific = 1,$/;"	e	enum:__anon228
EfiRestExServiceVendorSpecific	RestEx.h	/^  EfiRestExServiceVendorSpecific = 0xff,$/;"	e	enum:__anon228
EfiSimpleNetworkInitialized	SimpleNetwork.h	/^  EfiSimpleNetworkInitialized,$/;"	e	enum:__anon265
EfiSimpleNetworkMaxState	SimpleNetwork.h	/^  EfiSimpleNetworkMaxState$/;"	e	enum:__anon265
EfiSimpleNetworkStarted	SimpleNetwork.h	/^  EfiSimpleNetworkStarted,$/;"	e	enum:__anon265
EfiSimpleNetworkStopped	SimpleNetwork.h	/^  EfiSimpleNetworkStopped,$/;"	e	enum:__anon265
EfiStandbyButtonEntry	MmStandbyButtonDispatch.h	/^  EfiStandbyButtonEntry,$/;"	e	enum:__anon95
EfiStandbyButtonExit	MmStandbyButtonDispatch.h	/^  EfiStandbyButtonExit,$/;"	e	enum:__anon95
EfiStandbyButtonMax	MmStandbyButtonDispatch.h	/^  EfiStandbyButtonMax$/;"	e	enum:__anon95
EfiSupplicant80211AKMSuite	Supplicant.h	/^  EfiSupplicant80211AKMSuite,$/;"	e	enum:__anon118
EfiSupplicant80211GTK	Supplicant.h	/^  EfiSupplicant80211GTK,$/;"	e	enum:__anon118
EfiSupplicant80211GroupDataCipherSuite	Supplicant.h	/^  EfiSupplicant80211GroupDataCipherSuite,$/;"	e	enum:__anon118
EfiSupplicant80211IGTK	Supplicant.h	/^  EfiSupplicant80211IGTK,$/;"	e	enum:__anon118
EfiSupplicant80211LinkState	Supplicant.h	/^  EfiSupplicant80211LinkState,$/;"	e	enum:__anon118
EfiSupplicant80211PMK	Supplicant.h	/^  EfiSupplicant80211PMK,$/;"	e	enum:__anon118
EfiSupplicant80211PTK	Supplicant.h	/^  EfiSupplicant80211PTK,$/;"	e	enum:__anon118
EfiSupplicant80211PairwiseCipherSuite	Supplicant.h	/^  EfiSupplicant80211PairwiseCipherSuite,$/;"	e	enum:__anon118
EfiSupplicant80211PskPassword	Supplicant.h	/^  EfiSupplicant80211PskPassword,$/;"	e	enum:__anon118
EfiSupplicant80211StationMac	Supplicant.h	/^  EfiSupplicant80211StationMac,$/;"	e	enum:__anon118
EfiSupplicant80211SupportedAKMSuites	Supplicant.h	/^  EfiSupplicant80211SupportedAKMSuites,$/;"	e	enum:__anon118
EfiSupplicant80211SupportedHardwareCipherSuites	Supplicant.h	/^  EfiSupplicant80211SupportedHardwareCipherSuites,$/;"	e	enum:__anon118
EfiSupplicant80211SupportedSoftwareCipherSuites	Supplicant.h	/^  EfiSupplicant80211SupportedSoftwareCipherSuites,$/;"	e	enum:__anon118
EfiSupplicant80211TargetSSIDMac	Supplicant.h	/^  EfiSupplicant80211TargetSSIDMac,$/;"	e	enum:__anon118
EfiSupplicant80211TargetSSIDName	Supplicant.h	/^  EfiSupplicant80211TargetSSIDName,$/;"	e	enum:__anon118
EfiSupplicantDataTypeMaximum	Supplicant.h	/^  EfiSupplicantDataTypeMaximum$/;"	e	enum:__anon118
EfiSupplicantDecrypt	Supplicant.h	/^  EfiSupplicantDecrypt,$/;"	e	enum:__anon117
EfiSupplicantEncrypt	Supplicant.h	/^  EfiSupplicantEncrypt,$/;"	e	enum:__anon117
EfiSupplicantKeyRefresh	Supplicant.h	/^  EfiSupplicantKeyRefresh,$/;"	e	enum:__anon118
EfiSupplicantState	Supplicant.h	/^  EfiSupplicantState,$/;"	e	enum:__anon118
EfiTlsCipherList	Tls.h	/^  EfiTlsCipherList,$/;"	e	enum:__anon280
EfiTlsClient	Tls.h	/^  EfiTlsClient,$/;"	e	enum:__anon282
EfiTlsClientRandom	Tls.h	/^  EfiTlsClientRandom,$/;"	e	enum:__anon280
EfiTlsCompressionMethod	Tls.h	/^  EfiTlsCompressionMethod,$/;"	e	enum:__anon280
EfiTlsConfigDataTypeCACertificate	TlsConfig.h	/^  EfiTlsConfigDataTypeCACertificate,$/;"	e	enum:__anon382
EfiTlsConfigDataTypeCertRevocationList	TlsConfig.h	/^  EfiTlsConfigDataTypeCertRevocationList,$/;"	e	enum:__anon382
EfiTlsConfigDataTypeHostPrivateKey	TlsConfig.h	/^  EfiTlsConfigDataTypeHostPrivateKey,$/;"	e	enum:__anon382
EfiTlsConfigDataTypeHostPublicCert	TlsConfig.h	/^  EfiTlsConfigDataTypeHostPublicCert,$/;"	e	enum:__anon382
EfiTlsConfigDataTypeMaximum	TlsConfig.h	/^  EfiTlsConfigDataTypeMaximum$/;"	e	enum:__anon382
EfiTlsConnectionEnd	Tls.h	/^  EfiTlsConnectionEnd,$/;"	e	enum:__anon280
EfiTlsDecrypt	Tls.h	/^  EfiTlsDecrypt,$/;"	e	enum:__anon291
EfiTlsEncrypt	Tls.h	/^  EfiTlsEncrypt,$/;"	e	enum:__anon291
EfiTlsExtensionData	Tls.h	/^  EfiTlsExtensionData,$/;"	e	enum:__anon280
EfiTlsKeyMaterial	Tls.h	/^  EfiTlsKeyMaterial,$/;"	e	enum:__anon280
EfiTlsServer	Tls.h	/^  EfiTlsServer,$/;"	e	enum:__anon282
EfiTlsServerRandom	Tls.h	/^  EfiTlsServerRandom,$/;"	e	enum:__anon280
EfiTlsSessionClosing	Tls.h	/^  EfiTlsSessionClosing,$/;"	e	enum:__anon289
EfiTlsSessionDataTransferring	Tls.h	/^  EfiTlsSessionDataTransferring,$/;"	e	enum:__anon289
EfiTlsSessionDataTypeMaximum	Tls.h	/^  EfiTlsSessionDataTypeMaximum$/;"	e	enum:__anon280
EfiTlsSessionError	Tls.h	/^  EfiTlsSessionError,$/;"	e	enum:__anon289
EfiTlsSessionHandShaking	Tls.h	/^  EfiTlsSessionHandShaking,$/;"	e	enum:__anon289
EfiTlsSessionID	Tls.h	/^  EfiTlsSessionID,$/;"	e	enum:__anon280
EfiTlsSessionNotStarted	Tls.h	/^  EfiTlsSessionNotStarted,$/;"	e	enum:__anon289
EfiTlsSessionState	Tls.h	/^  EfiTlsSessionState,$/;"	e	enum:__anon280
EfiTlsSessionStateMaximum	Tls.h	/^  EfiTlsSessionStateMaximum$/;"	e	enum:__anon289
EfiTlsVerifyHost	Tls.h	/^  EfiTlsVerifyHost,$/;"	e	enum:__anon280
EfiTlsVerifyMethod	Tls.h	/^  EfiTlsVerifyMethod,$/;"	e	enum:__anon280
EfiTlsVersion	Tls.h	/^  EfiTlsVersion,$/;"	e	enum:__anon280
EfiUgaBltBufferToVideo	UgaDraw.h	/^  EfiUgaBltBufferToVideo,   \/\/\/< Write data from the  BltBuffer rectangle$/;"	e	enum:__anon80
EfiUgaBltMax	UgaDraw.h	/^  EfiUgaBltMax              \/\/\/< Maxmimum value for enumration value of Blt operation. If a Blt operation$/;"	e	enum:__anon80
EfiUgaDriverFromPciRom	UgaIo.h	/^  EfiUgaDriverFromPciRom,$/;"	e	enum:__anon537
EfiUgaDriverFromSystem	UgaIo.h	/^  EfiUgaDriverFromSystem,$/;"	e	enum:__anon537
EfiUgaVideoFill	UgaDraw.h	/^  EfiUgaVideoFill,          \/\/\/< Write data from the  BltBuffer pixel (SourceX, SourceY)$/;"	e	enum:__anon80
EfiUgaVideoToBltBuffer	UgaDraw.h	/^  EfiUgaVideoToBltBuffer,   \/\/\/< Read data from the video display rectangle$/;"	e	enum:__anon80
EfiUgaVideoToVideo	UgaDraw.h	/^  EfiUgaVideoToVideo,       \/\/\/< Copy from the video display rectangle (SourceX, SourceY)$/;"	e	enum:__anon80
EfiUsbChargingDownstreamPort	UsbFunctionIo.h	/^  EfiUsbChargingDownstreamPort,$/;"	e	enum:_EFI_USBFN_PORT_TYPE
EfiUsbDataIn	UsbIo.h	/^  EfiUsbDataIn,$/;"	e	enum:__anon568
EfiUsbDataOut	UsbIo.h	/^  EfiUsbDataOut,$/;"	e	enum:__anon568
EfiUsbDedicatedChargingPort	UsbFunctionIo.h	/^  EfiUsbDedicatedChargingPort,$/;"	e	enum:_EFI_USBFN_PORT_TYPE
EfiUsbDeviceInfoManufacturerName	UsbFunctionIo.h	/^  EfiUsbDeviceInfoManufacturerName,$/;"	e	enum:_EFI_USBFN_DEVICE_INFO_ID
EfiUsbDeviceInfoProductName	UsbFunctionIo.h	/^  EfiUsbDeviceInfoProductName$/;"	e	enum:_EFI_USBFN_DEVICE_INFO_ID
EfiUsbDeviceInfoSerialNumber	UsbFunctionIo.h	/^  EfiUsbDeviceInfoSerialNumber,$/;"	e	enum:_EFI_USBFN_DEVICE_INFO_ID
EfiUsbDeviceInfoUnknown	UsbFunctionIo.h	/^  EfiUsbDeviceInfoUnknown = 0,$/;"	e	enum:_EFI_USBFN_DEVICE_INFO_ID
EfiUsbEndpointDirectionDeviceRx	UsbFunctionIo.h	/^  EfiUsbEndpointDirectionDeviceRx = EfiUsbEndpointDirectionHostOut$/;"	e	enum:_EFI_USBFN_ENDPOINT_DIRECTION
EfiUsbEndpointDirectionDeviceTx	UsbFunctionIo.h	/^  EfiUsbEndpointDirectionDeviceTx = EfiUsbEndpointDirectionHostIn,$/;"	e	enum:_EFI_USBFN_ENDPOINT_DIRECTION
EfiUsbEndpointDirectionHostIn	UsbFunctionIo.h	/^  EfiUsbEndpointDirectionHostIn,$/;"	e	enum:_EFI_USBFN_ENDPOINT_DIRECTION
EfiUsbEndpointDirectionHostOut	UsbFunctionIo.h	/^  EfiUsbEndpointDirectionHostOut = 0,$/;"	e	enum:_EFI_USBFN_ENDPOINT_DIRECTION
EfiUsbHcStateHalt	Usb2HostController.h	/^  EfiUsbHcStateHalt,                \/\/\/< The host controller is in halt$/;"	e	enum:__anon414
EfiUsbHcStateMaximum	Usb2HostController.h	/^  EfiUsbHcStateMaximum              \/\/\/< Maximum value for enumration value of HC status.$/;"	e	enum:__anon414
EfiUsbHcStateOperational	Usb2HostController.h	/^  EfiUsbHcStateOperational,         \/\/\/< The host controller is in an$/;"	e	enum:__anon414
EfiUsbHcStateSuspend	Usb2HostController.h	/^  EfiUsbHcStateSuspend,             \/\/\/< The host controller is in the$/;"	e	enum:__anon414
EfiUsbInvalidDedicatedChargingPort	UsbFunctionIo.h	/^  EfiUsbInvalidDedicatedChargingPort$/;"	e	enum:_EFI_USBFN_PORT_TYPE
EfiUsbMsgBusEventAttach	UsbFunctionIo.h	/^  EfiUsbMsgBusEventAttach,$/;"	e	enum:_EFI_USBFN_MESSAGE
EfiUsbMsgBusEventDetach	UsbFunctionIo.h	/^  EfiUsbMsgBusEventDetach,$/;"	e	enum:_EFI_USBFN_MESSAGE
EfiUsbMsgBusEventReset	UsbFunctionIo.h	/^  EfiUsbMsgBusEventReset,$/;"	e	enum:_EFI_USBFN_MESSAGE
EfiUsbMsgBusEventResume	UsbFunctionIo.h	/^  EfiUsbMsgBusEventResume,$/;"	e	enum:_EFI_USBFN_MESSAGE
EfiUsbMsgBusEventSpeed	UsbFunctionIo.h	/^  EfiUsbMsgBusEventSpeed$/;"	e	enum:_EFI_USBFN_MESSAGE
EfiUsbMsgBusEventSuspend	UsbFunctionIo.h	/^  EfiUsbMsgBusEventSuspend,$/;"	e	enum:_EFI_USBFN_MESSAGE
EfiUsbMsgEndpointStatusChangedRx	UsbFunctionIo.h	/^  EfiUsbMsgEndpointStatusChangedRx,$/;"	e	enum:_EFI_USBFN_MESSAGE
EfiUsbMsgEndpointStatusChangedTx	UsbFunctionIo.h	/^  EfiUsbMsgEndpointStatusChangedTx,$/;"	e	enum:_EFI_USBFN_MESSAGE
EfiUsbMsgNone	UsbFunctionIo.h	/^  EfiUsbMsgNone = 0,$/;"	e	enum:_EFI_USBFN_MESSAGE
EfiUsbMsgSetupPacket	UsbFunctionIo.h	/^  EfiUsbMsgSetupPacket,$/;"	e	enum:_EFI_USBFN_MESSAGE
EfiUsbNoData	UsbIo.h	/^  EfiUsbNoData$/;"	e	enum:__anon568
EfiUsbPolicyMaxTransactionSize	UsbFunctionIo.h	/^  EfiUsbPolicyMaxTransactionSize,$/;"	e	enum:_EFI_USBFN_POLICY_TYPE
EfiUsbPolicyUndefined	UsbFunctionIo.h	/^  EfiUsbPolicyUndefined = 0,$/;"	e	enum:_EFI_USBFN_POLICY_TYPE
EfiUsbPolicyZeroLengthTermination	UsbFunctionIo.h	/^  EfiUsbPolicyZeroLengthTermination$/;"	e	enum:_EFI_USBFN_POLICY_TYPE
EfiUsbPolicyZeroLengthTerminationSupport	UsbFunctionIo.h	/^  EfiUsbPolicyZeroLengthTerminationSupport,$/;"	e	enum:_EFI_USBFN_POLICY_TYPE
EfiUsbPortConnectChange	Usb2HostController.h	/^  EfiUsbPortConnectChange     = 16,$/;"	e	enum:__anon412
EfiUsbPortEnable	Usb2HostController.h	/^  EfiUsbPortEnable            = 1,$/;"	e	enum:__anon412
EfiUsbPortEnableChange	Usb2HostController.h	/^  EfiUsbPortEnableChange      = 17,$/;"	e	enum:__anon412
EfiUsbPortOverCurrentChange	Usb2HostController.h	/^  EfiUsbPortOverCurrentChange = 19,$/;"	e	enum:__anon412
EfiUsbPortOwner	Usb2HostController.h	/^  EfiUsbPortOwner             = 13,$/;"	e	enum:__anon412
EfiUsbPortPower	Usb2HostController.h	/^  EfiUsbPortPower             = 8,$/;"	e	enum:__anon412
EfiUsbPortReset	Usb2HostController.h	/^  EfiUsbPortReset             = 4,$/;"	e	enum:__anon412
EfiUsbPortResetChange	Usb2HostController.h	/^  EfiUsbPortResetChange       = 20$/;"	e	enum:__anon412
EfiUsbPortSuspend	Usb2HostController.h	/^  EfiUsbPortSuspend           = 2,$/;"	e	enum:__anon412
EfiUsbPortSuspendChange	Usb2HostController.h	/^  EfiUsbPortSuspendChange     = 18,$/;"	e	enum:__anon412
EfiUsbStandardDownstreamPort	UsbFunctionIo.h	/^  EfiUsbStandardDownstreamPort,$/;"	e	enum:_EFI_USBFN_PORT_TYPE
EfiUsbUnknownPort	UsbFunctionIo.h	/^  EfiUsbUnknownPort = 0,$/;"	e	enum:_EFI_USBFN_PORT_TYPE
Eflags	DebugSupport.h	/^  UINT32                 Eflags;$/;"	m	struct:__anon487
Eip	DebugSupport.h	/^  UINT32                 Eip;$/;"	m	struct:__anon487
Eip	DebugSupport.h	/^  UINT32  Eip;$/;"	m	struct:__anon486
ElapsedTime	MmPeriodicTimerDispatch.h	/^  UINT64  ElapsedTime;$/;"	m	struct:__anon385
ElementID	WiFi.h	/^  UINT8                              ElementID;$/;"	m	struct:__anon186
Emmc	DevicePath.h	/^  EMMC_DEVICE_PATH                           *Emmc;$/;"	m	union:__anon76
Emmc	DevicePath.h	/^  EMMC_DEVICE_PATH                           Emmc;$/;"	m	union:__anon75
EnableBroadcastReceive	ManagedNetwork.h	/^  BOOLEAN    EnableBroadcastReceive;$/;"	m	struct:__anon173
EnableCursor	SimpleTextOut.h	/^  EFI_TEXT_ENABLE_CURSOR        EnableCursor;$/;"	m	struct:_EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL
EnableDevice	SuperIoControl.h	/^  EFI_SIO_CONTROL_ENABLE  EnableDevice;$/;"	m	struct:_EFI_SIO_CONTROL_PROTOCOL
EnableDisableAP	MpService.h	/^  EFI_MP_SERVICES_ENABLEDISABLEAP           EnableDisableAP;$/;"	m	struct:_EFI_MP_SERVICES_PROTOCOL
EnableDnsCache	Dns4.h	/^  BOOLEAN                       EnableDnsCache;$/;"	m	struct:__anon457
EnableDnsCache	Dns6.h	/^  BOOLEAN                       EnableDnsCache;$/;"	m	struct:__anon388
EnableI2cBusConfiguration	I2cBusConfigurationManagement.h	/^  EFI_I2C_BUS_CONFIGURATION_MANAGEMENT_PROTOCOL_ENABLE_I2C_BUS_CONFIGURATION EnableI2cBusConfiguration;$/;"	m	struct:_EFI_I2C_BUS_CONFIGURATION_MANAGEMENT_PROTOCOL
EnableInterrupt	Cpu.h	/^  EFI_CPU_ENABLE_INTERRUPT            EnableInterrupt;$/;"	m	struct:_EFI_CPU_ARCH_PROTOCOL
EnableMulticastReceive	ManagedNetwork.h	/^  BOOLEAN    EnableMulticastReceive;$/;"	m	struct:__anon173
EnableNagle	Tcp4.h	/^  BOOLEAN                 EnableNagle;$/;"	m	struct:__anon318
EnableNagle	Tcp6.h	/^  BOOLEAN  EnableNagle;$/;"	m	struct:__anon469
EnablePageBreak	Shell.h	/^  EFI_SHELL_ENABLE_PAGE_BREAK               EnablePageBreak;$/;"	m	struct:_EFI_SHELL_PROTOCOL
EnablePathMtuDiscovery	Tcp4.h	/^  BOOLEAN                 EnablePathMtuDiscovery;$/;"	m	struct:__anon318
EnablePathMtuDiscovery	Tcp6.h	/^  BOOLEAN  EnablePathMtuDiscovery;$/;"	m	struct:__anon469
EnablePromiscuousReceive	ManagedNetwork.h	/^  BOOLEAN    EnablePromiscuousReceive;$/;"	m	struct:__anon173
EnableReceiveTimestamps	ManagedNetwork.h	/^  BOOLEAN    EnableReceiveTimestamps;$/;"	m	struct:__anon173
EnableSelectiveAck	Tcp4.h	/^  BOOLEAN                 EnableSelectiveAck;$/;"	m	struct:__anon318
EnableSelectiveAck	Tcp6.h	/^  BOOLEAN  EnableSelectiveAck;$/;"	m	struct:__anon469
EnableTimeStamp	Tcp4.h	/^  BOOLEAN                 EnableTimeStamp;$/;"	m	struct:__anon318
EnableTimeStamp	Tcp6.h	/^  BOOLEAN  EnableTimeStamp;$/;"	m	struct:__anon469
EnableUnicastReceive	ManagedNetwork.h	/^  BOOLEAN    EnableUnicastReceive;$/;"	m	struct:__anon173
EnableWindowScaling	Tcp4.h	/^  BOOLEAN                 EnableWindowScaling;$/;"	m	struct:__anon318
EnableWindowScaling	Tcp6.h	/^  BOOLEAN  EnableWindowScaling;$/;"	m	struct:__anon469
EncAlgoId	IpSecConfig.h	/^  UINT8                     EncAlgoId;$/;"	m	struct:_EFI_IPSEC_ESP_ALGO_INFO
EncAlgoId	IpSecConfig.h	/^  UINT8                   EncAlgoId;$/;"	m	struct:_EFI_IPSEC_PROCESS_POLICY
EncKey	IpSecConfig.h	/^  VOID                      *EncKey;$/;"	m	struct:_EFI_IPSEC_ESP_ALGO_INFO
EncKeyLength	IpSecConfig.h	/^  UINTN                     EncKeyLength;$/;"	m	struct:_EFI_IPSEC_ESP_ALGO_INFO
EndGroupHandle	BluetoothAttribute.h	/^  UINT16                         EndGroupHandle;$/;"	m	struct:__anon153
EndGroupHandle	BluetoothAttribute.h	/^  UINT16                         EndGroupHandle;$/;"	m	struct:__anon154
EndIndex	HiiFont.h	/^  UINTN   EndIndex;$/;"	m	struct:_EFI_HII_ROW_INFO
EndValue	Timestamp.h	/^  UINT64                               EndValue;$/;"	m	struct:__anon146
EndingAddr	DevicePath.h	/^  UINT32                          EndingAddr[2];$/;"	m	struct:__anon73
EndingAddress	DevicePath.h	/^  EFI_PHYSICAL_ADDRESS            EndingAddress;$/;"	m	struct:__anon27
EndingOffset	DevicePath.h	/^  UINT64                    EndingOffset;$/;"	m	struct:__anon72
EndpointDescriptorTable	UsbFunctionIo.h	/^  EFI_USB_ENDPOINT_DESCRIPTOR          **EndpointDescriptorTable;$/;"	m	struct:__anon408
EndpointIndex	UsbFunctionIo.h	/^  UINT8                         EndpointIndex;$/;"	m	struct:_EFI_USBFN_TRANSFER_RESULT
Enroll	UserCredential.h	/^  EFI_CREDENTIAL_ENROLL         Enroll;$/;"	m	struct:_EFI_USER_CREDENTIAL_PROTOCOL
Enroll	UserCredential2.h	/^  EFI_CREDENTIAL2_ENROLL        Enroll;$/;"	m	struct:_EFI_USER_CREDENTIAL2_PROTOCOL
Entry	Bds.h	/^  EFI_BDS_ENTRY Entry;$/;"	m	struct:_EFI_BDS_ARCH_PROTOCOL
EntryTimeOut	Arp.h	/^  UINT32                    EntryTimeOut;$/;"	m	struct:__anon82
EnumAll	IdeControllerInit.h	/^  BOOLEAN                                EnumAll;$/;"	m	struct:_EFI_IDE_CONTROLLER_INIT_PROTOCOL
Enumerate	I2cEnumerate.h	/^  EFI_I2C_ENUMERATE_PROTOCOL_ENUMERATE         Enumerate;$/;"	m	struct:_EFI_I2C_ENUMERATE_PROTOCOL
Erase	SpiNorFlash.h	/^  EFI_SPI_NOR_FLASH_PROTOCOL_ERASE        Erase;$/;"	m	struct:_EFI_SPI_NOR_FLASH_PROTOCOL
EraseBlockBytes	SpiNorFlash.h	/^  UINT32                                  EraseBlockBytes;$/;"	m	struct:_EFI_SPI_NOR_FLASH_PROTOCOL
EraseBlockOpcode	LegacySpiController.h	/^  EFI_LEGACY_SPI_CONTROLLER_PROTOCOL_ERASE_BLOCK_OPCODE  EraseBlockOpcode;$/;"	m	struct:_EFI_LEGACY_SPI_CONTROLLER_PROTOCOL
EraseBlocks	EraseBlock.h	/^  EFI_BLOCK_ERASE            EraseBlocks;$/;"	m	struct:_EFI_ERASE_BLOCK_PROTOCOL
EraseBlocks	FirmwareVolumeBlock.h	/^  EFI_FVB_ERASE_BLOCKS          EraseBlocks;$/;"	m	struct:_EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL
EraseLengthGranularity	EraseBlock.h	/^  UINT32                     EraseLengthGranularity;$/;"	m	struct:_EFI_ERASE_BLOCK_PROTOCOL
ErrataVersion	RestJsonStructure.h	/^  CHAR8 *ErrataVersion;      \/\/\/< Resource errata version$/;"	m	struct:_EFI_REST_JSON_RESOURCE_TYPE_NAMESPACE
Error	Mtftp4.h	/^  EFI_MTFTP4_ERROR_HEADER Error;$/;"	m	union:__anon432
Error	Mtftp6.h	/^  EFI_MTFTP6_ERROR_HEADER  Error;  \/\/\/< Error packet header.$/;"	m	union:__anon556
ErrorCode	Mtftp4.h	/^  UINT16                  ErrorCode;$/;"	m	struct:__anon431
ErrorCode	Mtftp6.h	/^  UINT16    ErrorCode;$/;"	m	struct:__anon555
ErrorCode	PxeBaseCode.h	/^  UINT8 ErrorCode;$/;"	m	struct:__anon105
ErrorMessage	Mtftp4.h	/^  UINT8                   ErrorMessage[1];$/;"	m	struct:__anon431
ErrorMessage	Mtftp6.h	/^  UINT8     ErrorMessage[1];$/;"	m	struct:__anon555
ErrorString	PxeBaseCode.h	/^  CHAR8 ErrorString[127];$/;"	m	struct:__anon105
Es	DebugSupport.h	/^  UINT32                 Es;$/;"	m	struct:__anon487
Es	DebugSupport.h	/^  UINT64                Es;$/;"	m	struct:__anon489
Esi	DebugSupport.h	/^  UINT32                 Esi;$/;"	m	struct:__anon487
Esp	DebugSupport.h	/^  UINT32                 Esp;$/;"	m	struct:__anon487
EspAlgoInfo	IpSecConfig.h	/^  EFI_IPSEC_ESP_ALGO_INFO         EspAlgoInfo;$/;"	m	union:__anon452
EvenParity	SerialIo.h	/^  EvenParity,$/;"	e	enum:__anon546
Event	BlockIo2.h	/^  EFI_EVENT               Event;$/;"	m	struct:__anon1
Event	BlockIoCrypto.h	/^  EFI_EVENT               Event;$/;"	m	struct:__anon347
Event	DiskIo2.h	/^  EFI_EVENT  Event;$/;"	m	struct:__anon540
Event	Dns4.h	/^  EFI_EVENT                               Event;$/;"	m	struct:__anon464
Event	Dns6.h	/^  EFI_EVENT                               Event;$/;"	m	struct:__anon395
Event	EraseBlock.h	/^  EFI_EVENT             Event;$/;"	m	struct:__anon368
Event	Ftp4.h	/^  EFI_EVENT                             Event;$/;"	m	struct:_EFI_FTP4_COMMAND_TOKEN
Event	Ftp4.h	/^  EFI_EVENT                            Event;$/;"	m	struct:__anon442
Event	Http.h	/^  EFI_EVENT                     Event;$/;"	m	struct:__anon531
Event	Ip4.h	/^  EFI_EVENT                Event;$/;"	m	struct:__anon344
Event	Ip6.h	/^  EFI_EVENT               Event;$/;"	m	struct:__anon406
Event	ManagedNetwork.h	/^  EFI_EVENT                             Event;$/;"	m	struct:__anon177
Event	Mtftp4.h	/^  EFI_EVENT                   Event;$/;"	m	struct:_EFI_MTFTP4_TOKEN
Event	Mtftp6.h	/^  EFI_EVENT                   Event;$/;"	m	struct:_EFI_MTFTP6_TOKEN
Event	RestEx.h	/^  EFI_EVENT         Event;$/;"	m	struct:__anon234
Event	Runtime.h	/^  EFI_EVENT               *Event;$/;"	m	struct:_EFI_RUNTIME_EVENT_ENTRY
Event	SimpleFileSystem.h	/^  EFI_EVENT                   Event;$/;"	m	struct:__anon135
Event	Tcg2Protocol.h	/^  UINT8                 Event[1];$/;"	m	struct:tdEFI_TCG2_EVENT
Event	Tcp4.h	/^  EFI_EVENT   Event;$/;"	m	struct:__anon321
Event	Tcp6.h	/^  EFI_EVENT   Event;$/;"	m	struct:__anon472
Event	TrEEProtocol.h	/^  UINT8             Event[1];$/;"	m	struct:__anon562
Event	Udp4.h	/^  EFI_EVENT                 Event;$/;"	m	struct:__anon378
Event	Udp6.h	/^  EFI_EVENT                             Event;$/;"	m	struct:__anon90
Event	WiFi.h	/^  EFI_EVENT                          Event;$/;"	m	struct:__anon202
Event	WiFi.h	/^  EFI_EVENT                          Event;$/;"	m	struct:__anon208
Event	WiFi.h	/^  EFI_EVENT                          Event;$/;"	m	struct:__anon210
Event	WiFi.h	/^  EFI_EVENT                          Event;$/;"	m	struct:__anon213
Event	WiFi.h	/^  EFI_EVENT                          Event;$/;"	m	struct:__anon215
Event	WiFi2.h	/^  EFI_EVENT                                 Event;$/;"	m	struct:__anon311
Event	WiFi2.h	/^  EFI_EVENT                                 Event;$/;"	m	struct:__anon313
Event	WiFi2.h	/^  EFI_EVENT                                 Event;$/;"	m	struct:__anon314
EventHandler	UsbFunctionIo.h	/^  EFI_USBFN_IO_EVENTHANDLER                 EventHandler;$/;"	m	struct:_EFI_USBFN_IO_PROTOCOL
EventHead	Runtime.h	/^  EFI_LIST_ENTRY          EventHead;    \/\/\/< A list of type EFI_RUNTIME_EVENT_ENTRY.$/;"	m	struct:_EFI_RUNTIME_ARCH_PROTOCOL
EventService	RestEx.h	/^  EFI_REST_EX_EVENT_SERVICE      EventService;$/;"	m	struct:_EFI_REST_EX_PROTOCOL
EventType	Tcg2Protocol.h	/^  TCG_EVENTTYPE     EventType;$/;"	m	struct:__anon223
EventType	TrEEProtocol.h	/^  TrEE_EVENTTYPE    EventType;$/;"	m	struct:__anon561
ExceptionData	DebugSupport.h	/^  UINT32                 ExceptionData;$/;"	m	struct:__anon487
ExceptionData	DebugSupport.h	/^  UINT64                ExceptionData;$/;"	m	struct:__anon489
Execute	Shell.h	/^  EFI_SHELL_EXECUTE                         Execute;$/;"	m	struct:_EFI_SHELL_PROTOCOL
Execute	SmbusHc.h	/^  EFI_SMBUS_HC_EXECUTE_OPERATION    Execute;$/;"	m	struct:_EFI_SMBUS_HC_PROTOCOL
ExecuteScsiCommand	ScsiIo.h	/^  EFI_SCSI_IO_PROTOCOL_EXEC_SCSI_COMMAND    ExecuteScsiCommand;$/;"	m	struct:_EFI_SCSI_IO_PROTOCOL
ExecutionBreak	Shell.h	/^  EFI_EVENT                                 ExecutionBreak;$/;"	m	struct:_EFI_SHELL_PROTOCOL
ExportConfig	HiiConfigRouting.h	/^  EFI_HII_EXPORT_CONFIG   ExportConfig;$/;"	m	struct:_EFI_HII_CONFIG_ROUTING_PROTOCOL
ExportPackageLists	HiiDatabase.h	/^  EFI_HII_DATABASE_EXPORT_PACKS       ExportPackageLists;$/;"	m	struct:_EFI_HII_DATABASE_PROTOCOL
ExtCapElement	WiFi.h	/^  EFI_80211_ELEMENT_EXT_CAP          *ExtCapElement;$/;"	m	struct:__anon197
ExtCapElement	WiFi.h	/^  EFI_80211_ELEMENT_EXT_CAP          *ExtCapElement;$/;"	m	struct:__anon205
ExtCapElement	WiFi.h	/^  EFI_80211_ELEMENT_EXT_CAP          *ExtCapElement;$/;"	m	struct:__anon207
ExtHdrs	Ip6.h	/^  VOID                    *ExtHdrs;$/;"	m	struct:_EFI_IP6_TRANSMIT_DATA
ExtHdrsLength	Ip6.h	/^  UINT32                  ExtHdrsLength;$/;"	m	struct:_EFI_IP6_TRANSMIT_DATA
ExtMode	IdeControllerInit.h	/^  EFI_ATA_EXTENDED_MODE  ExtMode[1];$/;"	m	struct:__anon133
ExtModeCount	IdeControllerInit.h	/^  UINT32                 ExtModeCount;$/;"	m	struct:__anon133
ExtSeqNum	IpSecConfig.h	/^  BOOLEAN                 ExtSeqNum;$/;"	m	struct:_EFI_IPSEC_PROCESS_POLICY
ExtendedAcpi	DevicePath.h	/^  ACPI_EXTENDED_HID_DEVICE_PATH              *ExtendedAcpi;$/;"	m	union:__anon76
ExtendedAcpi	DevicePath.h	/^  ACPI_EXTENDED_HID_DEVICE_PATH              ExtendedAcpi;$/;"	m	union:__anon75
ExtendedInformation	MpService.h	/^  EXTENDED_PROCESSOR_INFORMATION ExtendedInformation;$/;"	m	struct:__anon500
ExtendedInquiryResponse	BluetoothIo.h	/^  UINT8                       ExtendedInquiryResponse[240];$/;"	m	struct:__anon418
ExtendedRegister	PciRootBridgeIo.h	/^  UINT32  ExtendedRegister;$/;"	m	struct:__anon278
ExtensionType	Tls.h	/^  UINT16                        ExtensionType;$/;"	m	struct:__anon284
ExtractConfig	HiiConfigAccess.h	/^  EFI_HII_ACCESS_EXTRACT_CONFIG     ExtractConfig;$/;"	m	struct:_EFI_HII_CONFIG_ACCESS_PROTOCOL
ExtractConfig	HiiConfigRouting.h	/^  EFI_HII_EXTRACT_CONFIG  ExtractConfig;$/;"	m	struct:_EFI_HII_CONFIG_ROUTING_PROTOCOL
ExtractSection	GuidedSectionExtraction.h	/^  EFI_EXTRACT_GUIDED_SECTION  ExtractSection;$/;"	m	struct:_EFI_GUIDED_SECTION_EXTRACTION_PROTOCOL
F10	DebugSupport.h	/^  UINT64  F10[2];$/;"	m	struct:__anon490
F11	DebugSupport.h	/^  UINT64  F11[2];$/;"	m	struct:__anon490
F12	DebugSupport.h	/^  UINT64  F12[2];$/;"	m	struct:__anon490
F13	DebugSupport.h	/^  UINT64  F13[2];$/;"	m	struct:__anon490
F1394	DevicePath.h	/^  F1394_DEVICE_PATH                          *F1394;$/;"	m	union:__anon76
F1394	DevicePath.h	/^  F1394_DEVICE_PATH                          F1394;$/;"	m	union:__anon75
F1394_DEVICE_PATH	DevicePath.h	/^} F1394_DEVICE_PATH;$/;"	t	typeref:struct:__anon39
F14	DebugSupport.h	/^  UINT64  F14[2];$/;"	m	struct:__anon490
F15	DebugSupport.h	/^  UINT64  F15[2];$/;"	m	struct:__anon490
F16	DebugSupport.h	/^  UINT64  F16[2];$/;"	m	struct:__anon490
F17	DebugSupport.h	/^  UINT64  F17[2];$/;"	m	struct:__anon490
F18	DebugSupport.h	/^  UINT64  F18[2];$/;"	m	struct:__anon490
F19	DebugSupport.h	/^  UINT64  F19[2];$/;"	m	struct:__anon490
F2	DebugSupport.h	/^  UINT64  F2[2];$/;"	m	struct:__anon490
F20	DebugSupport.h	/^  UINT64  F20[2];$/;"	m	struct:__anon490
F21	DebugSupport.h	/^  UINT64  F21[2];$/;"	m	struct:__anon490
F22	DebugSupport.h	/^  UINT64  F22[2];$/;"	m	struct:__anon490
F23	DebugSupport.h	/^  UINT64  F23[2];$/;"	m	struct:__anon490
F24	DebugSupport.h	/^  UINT64  F24[2];$/;"	m	struct:__anon490
F25	DebugSupport.h	/^  UINT64  F25[2];$/;"	m	struct:__anon490
F26	DebugSupport.h	/^  UINT64  F26[2];$/;"	m	struct:__anon490
F27	DebugSupport.h	/^  UINT64  F27[2];$/;"	m	struct:__anon490
F28	DebugSupport.h	/^  UINT64  F28[2];$/;"	m	struct:__anon490
F29	DebugSupport.h	/^  UINT64  F29[2];$/;"	m	struct:__anon490
F3	DebugSupport.h	/^  UINT64  F3[2];$/;"	m	struct:__anon490
F30	DebugSupport.h	/^  UINT64  F30[2];$/;"	m	struct:__anon490
F31	DebugSupport.h	/^  UINT64  F31[2];$/;"	m	struct:__anon490
F4	DebugSupport.h	/^  UINT64  F4[2];$/;"	m	struct:__anon490
F5	DebugSupport.h	/^  UINT64  F5[2];$/;"	m	struct:__anon490
F6	DebugSupport.h	/^  UINT64  F6[2];$/;"	m	struct:__anon490
F7	DebugSupport.h	/^  UINT64  F7[2];$/;"	m	struct:__anon490
F8	DebugSupport.h	/^  UINT64  F8[2];$/;"	m	struct:__anon490
F9	DebugSupport.h	/^  UINT64  F9[2];$/;"	m	struct:__anon490
FAR	DebugSupport.h	/^  UINT64  FAR;  \/\/ Fault Address Register$/;"	m	struct:__anon493
FCoeBoot	AdapterInformation.h	/^  BOOLEAN                       FCoeBoot;$/;"	m	struct:__anon421
FCoeBootCapablity	AdapterInformation.h	/^  BOOLEAN                       FCoeBootCapablity;$/;"	m	struct:__anon421
FIBRECHANNELEX_DEVICE_PATH	DevicePath.h	/^} FIBRECHANNELEX_DEVICE_PATH;$/;"	t	typeref:struct:__anon38
FIBRECHANNEL_DEVICE_PATH	DevicePath.h	/^} FIBRECHANNEL_DEVICE_PATH;$/;"	t	typeref:struct:__anon37
FILEPATH_DEVICE_PATH	DevicePath.h	/^} FILEPATH_DEVICE_PATH;$/;"	t	typeref:struct:__anon68
FP	DebugSupport.h	/^  UINT64  FP;   \/\/ x29 - Frame pointer$/;"	m	struct:__anon493
FPSR	DebugSupport.h	/^  UINT64  FPSR; \/\/ Floating Point Status Register$/;"	m	struct:__anon493
FTContent	WiFi.h	/^  UINT8                              *FTContent;$/;"	m	struct:__anon211
FTContent	WiFi.h	/^  UINT8                              *FTContent;$/;"	m	struct:__anon212
FUSED_FIRST_CMD	NvmExpressPassthru.h	55;"	d
FUSED_SECOND_CMD	NvmExpressPassthru.h	56;"	d
FailureTimeout	WiFi.h	/^  UINT32                             FailureTimeout;$/;"	m	struct:__anon205
FailureTimeout	WiFi.h	/^  UINT32                             FailureTimeout;$/;"	m	struct:__anon211
FailureTimeout	WiFi2.h	/^  UINT32                                    FailureTimeout;$/;"	m	struct:__anon312
FastBSSTransition	WiFi.h	/^  FastBSSTransition,$/;"	e	enum:__anon184
FatToStr	UnicodeCollation.h	/^  EFI_UNICODE_COLLATION_FATTOSTR    FatToStr;$/;"	m	struct:_EFI_UNICODE_COLLATION_PROTOCOL
Fcw	DebugSupport.h	/^  UINT16  Fcw;$/;"	m	struct:__anon486
Fcw	DebugSupport.h	/^  UINT16  Fcw;$/;"	m	struct:__anon488
FibreChannel	DevicePath.h	/^  FIBRECHANNEL_DEVICE_PATH                   *FibreChannel;$/;"	m	union:__anon76
FibreChannel	DevicePath.h	/^  FIBRECHANNEL_DEVICE_PATH                   FibreChannel;$/;"	m	union:__anon75
FibreChannelEx	DevicePath.h	/^  FIBRECHANNELEX_DEVICE_PATH                 *FibreChannelEx;$/;"	m	union:__anon76
FibreChannelEx	DevicePath.h	/^  FIBRECHANNELEX_DEVICE_PATH                 FibreChannelEx;$/;"	m	union:__anon75
Field	Kms.h	/^  EFI_KMS_DYNAMIC_FIELD     Field[1];$/;"	m	struct:__anon297
FieldCount	Kms.h	/^  UINT32                    FieldCount;$/;"	m	struct:__anon297
FieldName	Http.h	/^  CHAR8                         *FieldName;$/;"	m	struct:__anon528
FieldValue	Http.h	/^  CHAR8                         *FieldValue;$/;"	m	struct:__anon528
FileAttributes	FirmwareVolume2.h	/^  EFI_FV_FILE_ATTRIBUTES  FileAttributes;$/;"	m	struct:__anon539
FileAuthentication	Security2.h	/^  EFI_SECURITY2_FILE_AUTHENTICATION FileAuthentication;$/;"	m	struct:_EFI_SECURITY2_ARCH_PROTOCOL
FileAuthenticationState	Security.h	/^  EFI_SECURITY_FILE_AUTHENTICATION_STATE  FileAuthenticationState;$/;"	m	struct:_EFI_SECURITY_ARCH_PROTOCOL
FileName	Shell.h	/^  CONST CHAR16      *FileName;  \/\/\/< name of this file.$/;"	m	struct:__anon502
FilePath	DevicePath.h	/^  FILEPATH_DEVICE_PATH                       *FilePath;$/;"	m	union:__anon76
FilePath	DevicePath.h	/^  FILEPATH_DEVICE_PATH                       FilePath;$/;"	m	union:__anon75
FilePath	LoadedImage.h	/^  EFI_DEVICE_PATH_PROTOCOL  *FilePath;  \/\/\/< A pointer to the file path portion specific to DeviceHandle$/;"	m	struct:__anon359
FileStruct	Ftp4.h	/^  UINT8                                FileStruct;$/;"	m	struct:__anon443
Filename	Mtftp4.h	/^  UINT8                       *Filename;$/;"	m	struct:_EFI_MTFTP4_TOKEN
Filename	Mtftp4.h	/^  UINT8                   Filename[1];$/;"	m	struct:__anon425
Filename	Mtftp6.h	/^  UINT8                       *Filename;$/;"	m	struct:_EFI_MTFTP6_TOKEN
Filename	Mtftp6.h	/^  UINT8     Filename[1];$/;"	m	struct:__anon549
Filters	PxeBaseCode.h	/^  UINT8           Filters;$/;"	m	struct:__anon106
FinTimeout	Tcp4.h	/^  UINT32                  FinTimeout;$/;"	m	struct:__anon318
FinTimeout	Tcp6.h	/^  UINT32   FinTimeout;$/;"	m	struct:__anon469
Find	Arp.h	/^  EFI_ARP_FIND              Find;$/;"	m	struct:_EFI_ARP_PROTOCOL
Find	UserManager.h	/^  EFI_USER_PROFILE_FIND           Find;$/;"	m	struct:_EFI_USER_MANAGER_PROTOCOL
Find	VlanConfig.h	/^  EFI_VLAN_CONFIG_FIND             Find;$/;"	m	struct:_EFI_VLAN_CONFIG_PROTOCOL
FindFiles	Shell.h	/^  EFI_SHELL_FIND_FILES                      FindFiles;$/;"	m	struct:_EFI_SHELL_PROTOCOL
FindFilesInDir	Shell.h	/^  EFI_SHELL_FIND_FILES_IN_DIR               FindFilesInDir;$/;"	m	struct:_EFI_SHELL_PROTOCOL
FindKeyboardLayouts	HiiDatabase.h	/^  EFI_HII_FIND_KEYBOARD_LAYOUTS       FindKeyboardLayouts;$/;"	m	struct:_EFI_HII_DATABASE_PROTOCOL
FindPath	AcpiSystemDescriptionTable.h	/^  EFI_ACPI_FIND_PATH        FindPath;$/;"	m	struct:_EFI_ACPI_SDT_PROTOCOL
FirmwareFile	DevicePath.h	/^  MEDIA_FW_VOL_FILEPATH_DEVICE_PATH          *FirmwareFile;$/;"	m	union:__anon76
FirmwareFile	DevicePath.h	/^  MEDIA_FW_VOL_FILEPATH_DEVICE_PATH          FirmwareFile;$/;"	m	union:__anon75
FirmwareVersion	DriverSupportedEfiVersion.h	/^  UINT32 FirmwareVersion;$/;"	m	struct:_EFI_DRIVER_SUPPORTED_EFI_VERSION_PROTOCOL
FirmwareVolume	DevicePath.h	/^  MEDIA_FW_VOL_DEVICE_PATH                   *FirmwareVolume;$/;"	m	union:__anon76
FirmwareVolume	DevicePath.h	/^  MEDIA_FW_VOL_DEVICE_PATH                   FirmwareVolume;$/;"	m	union:__anon75
FirstChannelNum	WiFi.h	/^  UINT8                              FirstChannelNum;$/;"	m	struct:__anon190
FirstChannelNumber	WiFi.h	/^  UINT8                              FirstChannelNumber;$/;"	m	struct:__anon203
Flags	DebugSupport.h	/^  UINT64  Flags;$/;"	m	struct:__anon491
Flags	HiiImage.h	/^  UINT32                          Flags;$/;"	m	struct:_EFI_IMAGE_INPUT
Flags	NvdimmLabel.h	/^  UINT32   Flags;$/;"	m	struct:__anon261
Flags	NvdimmLabel.h	/^  UINT8  Flags[3];$/;"	m	struct:__anon260
Flags	NvmExpressPassthru.h	/^  UINT8                             Flags;$/;"	m	struct:__anon543
Flags	Tls.h	/^  EFI_TLS_VERIFY_HOST_FLAG Flags;$/;"	m	struct:__anon285
FlashProtocol	LegacySpiFlash.h	/^  EFI_SPI_NOR_FLASH_PROTOCOL                       FlashProtocol;$/;"	m	struct:_EFI_LEGACY_SPI_FLASH_PROTOCOL
FlashSize	SpiNorFlash.h	/^  UINT32                                  FlashSize;$/;"	m	struct:_EFI_SPI_NOR_FLASH_PROTOCOL
FlowControlMap	DevicePath.h	/^  UINT32                          FlowControlMap;$/;"	m	struct:__anon52
FlowLabel	Ip6.h	/^  UINT32                  FlowLabel;  \/\/\/< Flow-Label override.$/;"	m	struct:_EFI_IP6_OVERRIDE_DATA
FlowLabel	Ip6.h	/^  UINT32                  FlowLabel;$/;"	m	struct:__anon399
FlowLabelH	Ip6.h	/^  UINT8                   FlowLabelH:4;$/;"	m	struct:_EFI_IP6_HEADER
FlowLabelL	Ip6.h	/^  UINT16                  FlowLabelL;$/;"	m	struct:_EFI_IP6_HEADER
Flush	Arp.h	/^  EFI_ARP_FLUSH             Flush;$/;"	m	struct:_EFI_ARP_PROTOCOL
Flush	DeviceIo.h	/^  EFI_IO_FLUSH            Flush;$/;"	m	struct:_EFI_DEVICE_IO_PROTOCOL
Flush	PciIo.h	/^  EFI_PCI_IO_PROTOCOL_FLUSH               Flush;$/;"	m	struct:_EFI_PCI_IO_PROTOCOL
Flush	PciRootBridgeIo.h	/^  EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_FLUSH           Flush;$/;"	m	struct:_EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL
Flush	SimpleFileSystem.h	/^  EFI_FILE_FLUSH        Flush;$/;"	m	struct:_EFI_FILE_PROTOCOL
FlushBlocks	BlockIo.h	/^  EFI_BLOCK_FLUSH     FlushBlocks;$/;"	m	struct:_EFI_BLOCK_IO_PROTOCOL
FlushBlocks	BlockIoCrypto.h	/^  EFI_BLOCK_IO_CRYPTO_FLUSH                 FlushBlocks;$/;"	m	struct:_EFI_BLOCK_IO_CRYPTO_PROTOCOL
FlushBlocksEx	BlockIo2.h	/^  EFI_BLOCK_FLUSH_EX      FlushBlocksEx;$/;"	m	struct:_EFI_BLOCK_IO2_PROTOCOL
FlushDataCache	Cpu.h	/^  EFI_CPU_FLUSH_DATA_CACHE            FlushDataCache;$/;"	m	struct:_EFI_CPU_ARCH_PROTOCOL
FlushDiskEx	DiskIo2.h	/^  EFI_DISK_FLUSH_EX  FlushDiskEx;$/;"	m	struct:_EFI_DISK_IO2_PROTOCOL
FlushEx	SimpleFileSystem.h	/^  EFI_FILE_FLUSH_EX     FlushEx;$/;"	m	struct:_EFI_FILE_PROTOCOL
FlushFile	Shell.h	/^  EFI_SHELL_FLUSH_FILE                      FlushFile;$/;"	m	struct:_EFI_SHELL_PROTOCOL
FlushQueuesOnReset	ManagedNetwork.h	/^  BOOLEAN    FlushQueuesOnReset;$/;"	m	struct:__anon173
FontInfo	HiiFont.h	/^  EFI_FONT_INFO                 FontInfo;$/;"	m	struct:_EFI_FONT_DISPLAY_INFO
FontInfoMask	HiiFont.h	/^  EFI_FONT_INFO_MASK            FontInfoMask;$/;"	m	struct:_EFI_FONT_DISPLAY_INFO
FontName	HiiFont.h	/^  CHAR16             FontName[1];$/;"	m	struct:__anon217
FontSize	HiiFont.h	/^  UINT16             FontSize;      \/\/\/< character cell height in pixels$/;"	m	struct:__anon217
FontStyle	HiiFont.h	/^  EFI_HII_FONT_STYLE FontStyle;$/;"	m	struct:__anon217
ForceDefaults	DriverConfiguration.h	/^  EFI_DRIVER_CONFIGURATION_FORCE_DEFAULTS ForceDefaults;$/;"	m	struct:_EFI_DRIVER_CONFIGURATION_PROTOCOL
ForceDefaults	DriverConfiguration2.h	/^  EFI_DRIVER_CONFIGURATION2_FORCE_DEFAULTS  ForceDefaults;$/;"	m	struct:_EFI_DRIVER_CONFIGURATION2_PROTOCOL
ForegroundColor	HiiFont.h	/^  EFI_GRAPHICS_OUTPUT_BLT_PIXEL ForegroundColor;$/;"	m	struct:_EFI_FONT_DISPLAY_INFO
Form	UserCredential.h	/^  EFI_CREDENTIAL_FORM           Form;$/;"	m	struct:_EFI_USER_CREDENTIAL_PROTOCOL
Form	UserCredential2.h	/^  EFI_CREDENTIAL2_FORM          Form;$/;"	m	struct:_EFI_USER_CREDENTIAL2_PROTOCOL
FragCheck	IpSecConfig.h	/^  BOOLEAN                 FragCheck;$/;"	m	struct:_EFI_IPSEC_PROCESS_POLICY
FragmentBuffer	Ip4.h	/^  VOID                    *FragmentBuffer;$/;"	m	struct:__anon340
FragmentBuffer	Ip6.h	/^  VOID                    *FragmentBuffer; \/\/\/< Pointer to fragment data. This field may not be set to NULL.$/;"	m	struct:_EFI_IP6_FRAGMENT_DATA
FragmentBuffer	IpSec.h	/^  VOID    *FragmentBuffer;$/;"	m	struct:_EFI_IPSEC_FRAGMENT_DATA
FragmentBuffer	ManagedNetwork.h	/^  VOID          *FragmentBuffer;$/;"	m	struct:__anon175
FragmentBuffer	Supplicant.h	/^  VOID                                    *FragmentBuffer;$/;"	m	struct:__anon125
FragmentBuffer	Tcp4.h	/^  VOID   *FragmentBuffer;$/;"	m	struct:__anon324
FragmentBuffer	Tcp6.h	/^  VOID   *FragmentBuffer;  \/\/\/< Pointer to the data buffer in the fragment.$/;"	m	struct:__anon475
FragmentBuffer	Tls.h	/^  VOID                          *FragmentBuffer;$/;"	m	struct:__anon290
FragmentBuffer	Udp4.h	/^  VOID               *FragmentBuffer;$/;"	m	struct:__anon373
FragmentBuffer	Udp6.h	/^  VOID          *FragmentBuffer; \/\/\/< Pointer to the fragment data buffer.$/;"	m	struct:__anon85
FragmentCount	Ip4.h	/^  UINT32                 FragmentCount;$/;"	m	struct:__anon341
FragmentCount	Ip4.h	/^  UINT32                 FragmentCount;$/;"	m	struct:__anon343
FragmentCount	Ip6.h	/^  UINT32                  FragmentCount;$/;"	m	struct:_EFI_IP6_RECEIVE_DATA
FragmentCount	Ip6.h	/^  UINT32                  FragmentCount;$/;"	m	struct:_EFI_IP6_TRANSMIT_DATA
FragmentCount	ManagedNetwork.h	/^  UINT16                            FragmentCount;$/;"	m	struct:__anon176
FragmentCount	Tcp4.h	/^  UINT32                    FragmentCount;$/;"	m	struct:__anon325
FragmentCount	Tcp4.h	/^  UINT32                    FragmentCount;$/;"	m	struct:__anon326
FragmentCount	Tcp6.h	/^  UINT32                  FragmentCount;$/;"	m	struct:__anon476
FragmentCount	Tcp6.h	/^  UINT32                  FragmentCount;$/;"	m	struct:__anon477
FragmentCount	Udp4.h	/^  UINT32                    FragmentCount;$/;"	m	struct:__anon376
FragmentCount	Udp4.h	/^  UINT32                    FragmentCount;$/;"	m	struct:__anon377
FragmentCount	Udp6.h	/^  UINT32                    FragmentCount;$/;"	m	struct:__anon88
FragmentCount	Udp6.h	/^  UINT32                    FragmentCount;$/;"	m	struct:__anon89
FragmentLength	Ip4.h	/^  UINT32                  FragmentLength;$/;"	m	struct:__anon340
FragmentLength	Ip6.h	/^  UINT32                  FragmentLength;  \/\/\/< Length of fragment data. This field may not be set to zero.$/;"	m	struct:_EFI_IP6_FRAGMENT_DATA
FragmentLength	IpSec.h	/^  UINT32  FragmentLength;$/;"	m	struct:_EFI_IPSEC_FRAGMENT_DATA
FragmentLength	ManagedNetwork.h	/^  UINT32        FragmentLength;$/;"	m	struct:__anon175
FragmentLength	Supplicant.h	/^  UINT32                                  FragmentLength;$/;"	m	struct:__anon125
FragmentLength	Tcp4.h	/^  UINT32 FragmentLength;$/;"	m	struct:__anon324
FragmentLength	Tcp6.h	/^  UINT32 FragmentLength;   \/\/\/< Length of data buffer in the fragment.$/;"	m	struct:__anon475
FragmentLength	Tls.h	/^  UINT32                        FragmentLength;$/;"	m	struct:__anon290
FragmentLength	Udp4.h	/^  UINT32             FragmentLength;$/;"	m	struct:__anon373
FragmentLength	Udp6.h	/^  UINT32        FragmentLength;  \/\/\/< Length of the fragment data buffer.$/;"	m	struct:__anon85
FragmentTable	Ip4.h	/^  EFI_IP4_FRAGMENT_DATA  FragmentTable[1];$/;"	m	struct:__anon341
FragmentTable	Ip4.h	/^  EFI_IP4_FRAGMENT_DATA  FragmentTable[1];$/;"	m	struct:__anon343
FragmentTable	Ip6.h	/^  EFI_IP6_FRAGMENT_DATA   FragmentTable[1];$/;"	m	struct:_EFI_IP6_RECEIVE_DATA
FragmentTable	Ip6.h	/^  EFI_IP6_FRAGMENT_DATA   FragmentTable[1];$/;"	m	struct:_EFI_IP6_TRANSMIT_DATA
FragmentTable	ManagedNetwork.h	/^  EFI_MANAGED_NETWORK_FRAGMENT_DATA FragmentTable[1];$/;"	m	struct:__anon176
FragmentTable	Tcp4.h	/^  EFI_TCP4_FRAGMENT_DATA    FragmentTable[1];$/;"	m	struct:__anon325
FragmentTable	Tcp4.h	/^  EFI_TCP4_FRAGMENT_DATA    FragmentTable[1];$/;"	m	struct:__anon326
FragmentTable	Tcp6.h	/^  EFI_TCP6_FRAGMENT_DATA  FragmentTable[1];$/;"	m	struct:__anon476
FragmentTable	Tcp6.h	/^  EFI_TCP6_FRAGMENT_DATA  FragmentTable[1];$/;"	m	struct:__anon477
FragmentTable	Udp4.h	/^  EFI_UDP4_FRAGMENT_DATA    FragmentTable[1];$/;"	m	struct:__anon376
FragmentTable	Udp4.h	/^  EFI_UDP4_FRAGMENT_DATA    FragmentTable[1];$/;"	m	struct:__anon377
FragmentTable	Udp6.h	/^  EFI_UDP6_FRAGMENT_DATA    FragmentTable[1];$/;"	m	struct:__anon88
FragmentTable	Udp6.h	/^  EFI_UDP6_FRAGMENT_DATA    FragmentTable[1];$/;"	m	struct:__anon89
Fragmentation	Ip4.h	/^  UINT16                  Fragmentation;$/;"	m	struct:__anon339
FrameBufferBase	GraphicsOutput.h	/^  EFI_PHYSICAL_ADDRESS                   FrameBufferBase;$/;"	m	struct:__anon241
FrameBufferSize	GraphicsOutput.h	/^  UINTN                                  FrameBufferSize;$/;"	m	struct:__anon241
FrameSize	SpiIo.h	/^  UINT32                   FrameSize;$/;"	m	struct:_EFI_SPI_BUS_TRANSACTION
FrameSizeSupportMask	SpiHc.h	/^  UINT32                          FrameSizeSupportMask;$/;"	m	struct:_EFI_SPI_HC_PROTOCOL
FrameSizeSupportMask	SpiIo.h	/^  UINT32                                    FrameSizeSupportMask;$/;"	m	struct:_EFI_SPI_IO_PROTOCOL
Free	Bis.h	/^  EFI_BIS_FREE                                        Free;$/;"	m	struct:_EFI_BIS_PROTOCOL
Free	NvdimmLabel.h	/^  UINT8  Free[];$/;"	m	struct:__anon260
FreeBuffer	DeviceIo.h	/^  EFI_IO_FREE_BUFFER      FreeBuffer;$/;"	m	struct:_EFI_DEVICE_IO_PROTOCOL
FreeBuffer	PciIo.h	/^  EFI_PCI_IO_PROTOCOL_FREE_BUFFER         FreeBuffer;$/;"	m	struct:_EFI_PCI_IO_PROTOCOL
FreeBuffer	PciRootBridgeIo.h	/^  EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_FREE_BUFFER     FreeBuffer;$/;"	m	struct:_EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL
FreeFileList	Shell.h	/^  EFI_SHELL_FREE_FILE_LIST                  FreeFileList;$/;"	m	struct:_EFI_SHELL_PROTOCOL
FreeTransferBuffer	UsbFunctionIo.h	/^  EFI_USBFN_IO_FREE_TRANSFER_BUFFER         FreeTransferBuffer;$/;"	m	struct:_EFI_USBFN_IO_PROTOCOL
Frequency	Timestamp.h	/^  UINT64                               Frequency;$/;"	m	struct:__anon146
FriendlyName	SpiConfiguration.h	/^  CONST CHAR16                   *FriendlyName;$/;"	m	struct:_EFI_SPI_BUS
FriendlyName	SpiConfiguration.h	/^  CONST CHAR16             *FriendlyName;$/;"	m	struct:_EFI_SPI_PERIPHERAL
Fs	DebugSupport.h	/^  UINT32                 Fs;$/;"	m	struct:__anon487
Fs	DebugSupport.h	/^  UINT64                Fs;$/;"	m	struct:__anon489
Fsw	DebugSupport.h	/^  UINT16  Fsw;$/;"	m	struct:__anon486
Fsw	DebugSupport.h	/^  UINT16  Fsw;$/;"	m	struct:__anon488
Ftw	DebugSupport.h	/^  UINT16  Ftw;$/;"	m	struct:__anon486
Ftw	DebugSupport.h	/^  UINT16  Ftw;$/;"	m	struct:__anon488
FullName	Shell.h	/^  CONST CHAR16      *FullName;  \/\/\/< Fully qualified filename.$/;"	m	struct:__anon502
Function	DevicePath.h	/^  UINT8                           Function;$/;"	m	struct:__anon25
Function	PciRootBridgeIo.h	/^  UINT8   Function;$/;"	m	struct:__anon278
FunctionNumber	DevicePath.h	/^  UINT8                           FunctionNumber;$/;"	m	struct:__anon26
FusedOperation	NvmExpressPassthru.h	/^  UINT32                            FusedOperation:2;$/;"	m	struct:__anon542
FvFileName	DevicePath.h	/^  EFI_GUID                        FvFileName;$/;"	m	struct:__anon70
FvName	DevicePath.h	/^  EFI_GUID                        FvName;$/;"	m	struct:__anon71
FxSaveState	DebugSupport.h	/^  EFI_FX_SAVE_STATE_IA32 FxSaveState;$/;"	m	struct:__anon487
FxSaveState	DebugSupport.h	/^  EFI_FX_SAVE_STATE_X64 FxSaveState;$/;"	m	struct:__anon489
GEOMETRICSHAPE_DOWN_TRIANGLE	SimpleTextOut.h	89;"	d
GEOMETRICSHAPE_LEFT_TRIANGLE	SimpleTextOut.h	90;"	d
GEOMETRICSHAPE_RIGHT_TRIANGLE	SimpleTextOut.h	88;"	d
GEOMETRICSHAPE_UP_TRIANGLE	SimpleTextOut.h	87;"	d
GET_PCD_INFO_PROTOCOL	PcdInfo.h	/^typedef struct _GET_PCD_INFO_PROTOCOL  GET_PCD_INFO_PROTOCOL;$/;"	t	typeref:struct:_GET_PCD_INFO_PROTOCOL
GET_PCD_INFO_PROTOCOL_GET_INFO	PcdInfo.h	/^(EFIAPI *GET_PCD_INFO_PROTOCOL_GET_INFO) ($/;"	t
GET_PCD_INFO_PROTOCOL_GET_INFO_EX	PcdInfo.h	/^(EFIAPI *GET_PCD_INFO_PROTOCOL_GET_INFO_EX) ($/;"	t
GET_PCD_INFO_PROTOCOL_GET_SKU	PcdInfo.h	/^(EFIAPI *GET_PCD_INFO_PROTOCOL_GET_SKU) ($/;"	t
GET_PCD_INFO_PROTOCOL_GUID	PcdInfo.h	24;"	d
GLookupData	Dns4.h	/^    DNS_GENERAL_LOOKUP_DATA       *GLookupData;$/;"	m	union:__anon464::__anon465
GLookupData	Dns6.h	/^    DNS6_GENERAL_LOOKUP_DATA    *GLookupData;$/;"	m	union:__anon395::__anon396
GTKCount	Supplicant.h	/^  UINT8                                   GTKCount;$/;"	m	struct:__anon124
GTKList	Supplicant.h	/^  EFI_SUPPLICANT_KEY                      GTKList[1];$/;"	m	struct:__anon124
GTKRefresh	Supplicant.h	/^  BOOLEAN                                 GTKRefresh;$/;"	m	struct:__anon122
Gateway	Ip6.h	/^  EFI_IPv6_ADDRESS        Gateway;$/;"	m	struct:__anon401
GatewayAddr	Dhcp4.h	/^  EFI_IPv4_ADDRESS  GatewayAddr;      \/\/\/< Relay agent IP address.$/;"	m	struct:__anon137
GatewayAddress	Dhcp4.h	/^  EFI_IPv4_ADDRESS        GatewayAddress;$/;"	m	struct:__anon145
GatewayAddress	Ip4.h	/^  EFI_IPv4_ADDRESS        GatewayAddress;$/;"	m	struct:__anon336
GatewayAddress	Ip4.h	/^  EFI_IPv4_ADDRESS       GatewayAddress;$/;"	m	struct:__anon342
GatewayAddress	Udp4.h	/^  EFI_IPv4_ADDRESS          *GatewayAddress;       \/\/OPTIONAL$/;"	m	struct:__anon376
GatewayIp	Ftp4.h	/^  EFI_IPv4_ADDRESS                     GatewayIp;$/;"	m	struct:__anon443
GatewayIp	Mtftp4.h	/^  EFI_IPv4_ADDRESS        GatewayIp;$/;"	m	struct:__anon434
GatewayIp	Mtftp4.h	/^  EFI_IPv4_ADDRESS        GatewayIp;$/;"	m	struct:__anon436
GatewayIpAddress	DevicePath.h	/^  EFI_IPv4_ADDRESS                GatewayIpAddress;$/;"	m	struct:__anon47
GatewayIpAddress	DevicePath.h	/^  EFI_IPv6_ADDRESS                GatewayIpAddress;$/;"	m	struct:__anon48
Gdtr	DebugSupport.h	/^  UINT32                 Gdtr[2];$/;"	m	struct:__anon487
Gdtr	DebugSupport.h	/^  UINT64                Gdtr[2];$/;"	m	struct:__anon489
GeneralLookUp	Dns4.h	/^  EFI_DNS4_GENERAL_LOOKUP       GeneralLookUp;$/;"	m	struct:_EFI_DNS4_PROTOCOL
GeneralLookUp	Dns6.h	/^  EFI_DNS6_GENERAL_LOOKUP       GeneralLookUp;$/;"	m	struct:_EFI_DNS6_PROTOCOL
GenerateSoftInterrupt	Timer.h	/^  EFI_TIMER_GENERATE_SOFT_INTERRUPT   GenerateSoftInterrupt;$/;"	m	struct:_EFI_TIMER_ARCH_PROTOCOL
Get	AuthenticationInfo.h	/^  EFI_AUTHENTICATION_INFO_PROTOCOL_GET Get;$/;"	m	struct:_EFI_AUTHENTICATION_INFO_PROTOCOL
Get	IScsiInitiatorName.h	/^  EFI_ISCSI_INITIATOR_NAME_GET         Get;$/;"	m	struct:_EFI_ISCSI_INITIATOR_NAME_PROTOCOL
Get16	Pcd.h	/^  PCD_PROTOCOL_GET16                Get16;$/;"	m	struct:__anon383
Get16	PiPcd.h	/^  EFI_PCD_PROTOCOL_GET_16               Get16;$/;"	m	struct:_EFI_PCD_PROTOCOL
Get16Ex	Pcd.h	/^  PCD_PROTOCOL_GET_EX_16            Get16Ex;$/;"	m	struct:__anon383
Get32	Pcd.h	/^  PCD_PROTOCOL_GET32                Get32;$/;"	m	struct:__anon383
Get32	PiPcd.h	/^  EFI_PCD_PROTOCOL_GET_32               Get32;$/;"	m	struct:_EFI_PCD_PROTOCOL
Get32Ex	Pcd.h	/^  PCD_PROTOCOL_GET_EX_32            Get32Ex;$/;"	m	struct:__anon383
Get64	Pcd.h	/^  PCD_PROTOCOL_GET64                Get64;$/;"	m	struct:__anon383
Get64	PiPcd.h	/^  EFI_PCD_PROTOCOL_GET_64               Get64;$/;"	m	struct:_EFI_PCD_PROTOCOL
Get64Ex	Pcd.h	/^  PCD_PROTOCOL_GET_EX_64            Get64Ex;$/;"	m	struct:__anon383
Get8	Pcd.h	/^  PCD_PROTOCOL_GET8                 Get8;$/;"	m	struct:__anon383
Get8	PiPcd.h	/^  EFI_PCD_PROTOCOL_GET_8                Get8;$/;"	m	struct:_EFI_PCD_PROTOCOL
Get8Ex	Pcd.h	/^  PCD_PROTOCOL_GET_EX_8             Get8Ex;$/;"	m	struct:__anon383
GetAcpiTable	AcpiSystemDescriptionTable.h	/^  EFI_ACPI_GET_ACPI_TABLE2  GetAcpiTable;$/;"	m	struct:_EFI_ACPI_SDT_PROTOCOL
GetActivePcrBanks	Tcg2Protocol.h	/^  EFI_TCG2_GET_ACTIVE_PCR_BANKS               GetActivePcrBanks;$/;"	m	struct:tdEFI_TCG2_PROTOCOL
GetAlias	Shell.h	/^  EFI_SHELL_GET_ALIAS                       GetAlias;$/;"	m	struct:_EFI_SHELL_PROTOCOL
GetAllocAttributes	PciHostBridgeResourceAllocation.h	/^  EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL_GET_ATTRIBUTES         GetAllocAttributes;$/;"	m	struct:_EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL
GetAltConfig	HiiConfigRouting.h	/^  EFI_HII_GET_ALT_CFG     GetAltConfig;$/;"	m	struct:_EFI_HII_CONFIG_ROUTING_PROTOCOL
GetArpMap	SmbusHc.h	/^  EFI_SMBUS_HC_PROTOCOL_GET_ARP_MAP GetArpMap;$/;"	m	struct:_EFI_SMBUS_HC_PROTOCOL
GetAttributes	FirmwareVolumeBlock.h	/^  EFI_FVB_GET_ATTRIBUTES        GetAttributes;$/;"	m	struct:_EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL
GetAttributes	PciRootBridgeIo.h	/^  EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_GET_ATTRIBUTES  GetAttributes;$/;"	m	struct:_EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL
GetBarAttributes	PciIo.h	/^  EFI_PCI_IO_PROTOCOL_GET_BAR_ATTRIBUTES  GetBarAttributes;$/;"	m	struct:_EFI_PCI_IO_PROTOCOL
GetBlockSize	FirmwareVolumeBlock.h	/^  EFI_FVB_GET_BLOCK_SIZE        GetBlockSize;$/;"	m	struct:_EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL
GetBool	Pcd.h	/^  PCD_PROTOCOL_GET_BOOLEAN          GetBool;$/;"	m	struct:__anon383
GetBool	PiPcd.h	/^  EFI_PCD_PROTOCOL_GET_BOOLEAN          GetBool;$/;"	m	struct:_EFI_PCD_PROTOCOL
GetBoolEx	Pcd.h	/^  PCD_PROTOCOL_GET_EX_BOOLEAN       GetBoolEx;$/;"	m	struct:__anon383
GetBootObjectAuthorizationCertificate	Bis.h	/^  EFI_BIS_GET_BOOT_OBJECT_AUTHORIZATION_CERTIFICATE   GetBootObjectAuthorizationCertificate;$/;"	m	struct:_EFI_BIS_PROTOCOL
GetBootObjectAuthorizationCheckFlag	Bis.h	/^  EFI_BIS_GET_BOOT_OBJECT_AUTHORIZATION_CHECKFLAG     GetBootObjectAuthorizationCheckFlag;$/;"	m	struct:_EFI_BIS_PROTOCOL
GetBootObjectAuthorizationUpdateToken	Bis.h	/^  EFI_BIS_GET_BOOT_OBJECT_AUTHORIZATION_UPDATE_TOKEN  GetBootObjectAuthorizationUpdateToken;$/;"	m	struct:_EFI_BIS_PROTOCOL
GetBusFrequency	I2cEnumerate.h	/^  EFI_I2C_ENUMERATE_PROTOCOL_GET_BUS_FREQUENCY GetBusFrequency;$/;"	m	struct:_EFI_I2C_ENUMERATE_PROTOCOL
GetCapabilities	BlockIoCrypto.h	/^  EFI_BLOCK_IO_CRYPTO_GET_CAPABILITIES      GetCapabilities;$/;"	m	struct:_EFI_BLOCK_IO_CRYPTO_PROTOCOL
GetCapabilities	MmAccess.h	/^  EFI_MM_CAPABILITIES  GetCapabilities;$/;"	m	struct:_EFI_MM_ACCESS_PROTOCOL
GetCapability	Tcg2Protocol.h	/^  EFI_TCG2_GET_CAPABILITY                     GetCapability;$/;"	m	struct:tdEFI_TCG2_PROTOCOL
GetCapability	TrEEProtocol.h	/^  EFI_TREE_GET_CAPABILITY        GetCapability;$/;"	m	struct:_EFI_TREE_PROTOCOL
GetCapability	Usb2HostController.h	/^  EFI_USB2_HC_PROTOCOL_GET_CAPABILITY              GetCapability;$/;"	m	struct:_EFI_USB2_HC_PROTOCOL
GetChannelInfo	IdeControllerInit.h	/^  EFI_IDE_CONTROLLER_GET_CHANNEL_INFO    GetChannelInfo;$/;"	m	struct:_EFI_IDE_CONTROLLER_INIT_PROTOCOL
GetChild	AcpiSystemDescriptionTable.h	/^  EFI_ACPI_GET_CHILD        GetChild;$/;"	m	struct:_EFI_ACPI_SDT_PROTOCOL
GetConfiguration	BlockIoCrypto.h	/^  EFI_BLOCK_IO_CRYPTO_GET_CONFIGURATION     GetConfiguration;$/;"	m	struct:_EFI_BLOCK_IO_CRYPTO_PROTOCOL
GetContext	SmartCardEdge.h	/^  EFI_SMART_CARD_EDGE_GET_CONTEXT          GetContext;$/;"	m	struct:_EFI_SMART_CARD_EDGE_PROTOCOL
GetControl	SerialIo.h	/^  EFI_SERIAL_GET_CONTROL_BITS GetControl;$/;"	m	struct:_EFI_SERIAL_IO_PROTOCOL
GetControllerName	ComponentName.h	/^  EFI_COMPONENT_NAME_GET_CONTROLLER_NAME  GetControllerName;$/;"	m	struct:_EFI_COMPONENT_NAME_PROTOCOL
GetControllerName	ComponentName2.h	/^  EFI_COMPONENT_NAME2_GET_CONTROLLER_NAME  GetControllerName;$/;"	m	struct:_EFI_COMPONENT_NAME2_PROTOCOL
GetCredential	SmartCardEdge.h	/^  EFI_SMART_CARD_EDGE_GET_CREDENTIAL       GetCredential;$/;"	m	struct:_EFI_SMART_CARD_EDGE_PROTOCOL
GetCsn	SmartCardEdge.h	/^  EFI_SMART_CARD_EDGE_GET_CSN              GetCsn;$/;"	m	struct:_EFI_SMART_CARD_EDGE_PROTOCOL
GetCurDir	Shell.h	/^  EFI_SHELL_GET_CUR_DIR                     GetCurDir;$/;"	m	struct:_EFI_SHELL_PROTOCOL
GetData	BluetoothConfig.h	/^  EFI_BLUETOOTH_CONFIG_GET_DATA                           GetData;$/;"	m	struct:_EFI_BLUETOOTH_CONFIG_PROTOCOL
GetData	BluetoothLeConfig.h	/^  EFI_BLUETOOTH_LE_CONFIG_GET_DATA                           GetData;$/;"	m	struct:_EFI_BLUETOOTH_LE_CONFIG_PROTOCOL
GetData	EapConfiguration.h	/^  EFI_EAP_CONFIGURATION_GET_DATA          GetData;$/;"	m	struct:_EFI_EAP_CONFIGURATION_PROTOCOL
GetData	HiiConfigKeyword.h	/^  EFI_CONFIG_KEYWORD_HANDLER_GET_DATA  GetData;$/;"	m	struct:_EFI_CONFIG_KEYWORD_HANDLER_PROTOCOL
GetData	Ip4Config.h	/^  EFI_IP4_CONFIG_GET_DATA      GetData;$/;"	m	struct:_EFI_IP4_CONFIG_PROTOCOL
GetData	Ip4Config2.h	/^  EFI_IP4_CONFIG2_GET_DATA           GetData;$/;"	m	struct:_EFI_IP4_CONFIG2_PROTOCOL
GetData	Ip6Config.h	/^  EFI_IP6_CONFIG_GET_DATA           GetData;$/;"	m	struct:_EFI_IP6_CONFIG_PROTOCOL
GetData	IpSecConfig.h	/^  EFI_IPSEC_CONFIG_GET_DATA           GetData;$/;"	m	struct:_EFI_IPSEC_CONFIG_PROTOCOL
GetData	SmartCardEdge.h	/^  EFI_SMART_CARD_EDGE_GET_DATA             GetData;$/;"	m	struct:_EFI_SMART_CARD_EDGE_PROTOCOL
GetData	Supplicant.h	/^  EFI_SUPPLICANT_GET_DATA                 GetData;$/;"	m	struct:_EFI_SUPPLICANT_PROTOCOL
GetData	TlsConfig.h	/^  EFI_TLS_CONFIGURATION_GET_DATA     GetData;$/;"	m	struct:_EFI_TLS_CONFIGURATION_PROTOCOL
GetDevice	AtaPassThru.h	/^  EFI_ATA_PASS_THRU_GET_DEVICE         GetDevice;$/;"	m	struct:_EFI_ATA_PASS_THRU_PROTOCOL
GetDeviceInfo	BluetoothAttribute.h	/^  EFI_BLUETOOTH_ATTRIBUTE_GET_DEVICE_INFO                  GetDeviceInfo;$/;"	m	struct:_EFI_BLUETOOTH_ATTRIBUTE_PROTOCOL
GetDeviceInfo	BluetoothIo.h	/^  EFI_BLUETOOTH_IO_GET_DEVICE_INFO            GetDeviceInfo;$/;"	m	struct:_EFI_BLUETOOTH_IO_PROTOCOL
GetDeviceInfo	UsbFunctionIo.h	/^  EFI_USBFN_IO_GET_DEVICE_INFO              GetDeviceInfo;$/;"	m	struct:_EFI_USBFN_IO_PROTOCOL
GetDeviceLocation	ScsiIo.h	/^  EFI_SCSI_IO_PROTOCOL_GET_DEVICE_LOCATION  GetDeviceLocation;$/;"	m	struct:_EFI_SCSI_IO_PROTOCOL
GetDeviceName	Shell.h	/^  EFI_SHELL_GET_DEVICE_NAME                 GetDeviceName;$/;"	m	struct:_EFI_SHELL_PROTOCOL
GetDevicePathFromFilePath	Shell.h	/^  EFI_SHELL_GET_DEVICE_PATH_FROM_FILE_PATH  GetDevicePathFromFilePath;$/;"	m	struct:_EFI_SHELL_PROTOCOL
GetDevicePathFromMap	Shell.h	/^  EFI_SHELL_GET_DEVICE_PATH_FROM_MAP        GetDevicePathFromMap;$/;"	m	struct:_EFI_SHELL_PROTOCOL
GetDevicePathSize	DevicePathUtilities.h	/^  EFI_DEVICE_PATH_UTILS_GET_DEVICE_PATH_SIZE GetDevicePathSize;$/;"	m	struct:__anon147
GetDeviceType	ScsiIo.h	/^  EFI_SCSI_IO_PROTOCOL_GET_DEVICE_TYPE      GetDeviceType;$/;"	m	struct:_EFI_SCSI_IO_PROTOCOL
GetDriver	BusSpecificDriverOverride.h	/^  EFI_BUS_SPECIFIC_DRIVER_OVERRIDE_GET_DRIVER GetDriver;$/;"	m	struct:_EFI_BUS_SPECIFIC_DRIVER_OVERRIDE_PROTOCOL
GetDriver	PlatformDriverOverride.h	/^  EFI_PLATFORM_DRIVER_OVERRIDE_GET_DRIVER       GetDriver;$/;"	m	struct:_EFI_PLATFORM_DRIVER_OVERRIDE_PROTOCOL
GetDriverName	ComponentName.h	/^  EFI_COMPONENT_NAME_GET_DRIVER_NAME      GetDriverName;$/;"	m	struct:_EFI_COMPONENT_NAME_PROTOCOL
GetDriverName	ComponentName2.h	/^  EFI_COMPONENT_NAME2_GET_DRIVER_NAME      GetDriverName;$/;"	m	struct:_EFI_COMPONENT_NAME2_PROTOCOL
GetDriverPath	PlatformDriverOverride.h	/^  EFI_PLATFORM_DRIVER_OVERRIDE_GET_DRIVER_PATH  GetDriverPath;$/;"	m	struct:_EFI_PLATFORM_DRIVER_OVERRIDE_PROTOCOL
GetEdid	EdidOverride.h	/^  EFI_EDID_OVERRIDE_PROTOCOL_GET_EDID   GetEdid;$/;"	m	struct:_EFI_EDID_OVERRIDE_PROTOCOL
GetEndpointMaxPacketSize	UsbFunctionIo.h	/^  EFI_USBFN_IO_GET_ENDPOINT_MAXPACKET_SIZE  GetEndpointMaxPacketSize;$/;"	m	struct:_EFI_USBFN_IO_PROTOCOL
GetEndpointPolicy	UsbFunctionIo.h	/^  EFI_USBFN_IO_GET_ENDPOINT_POLICY          GetEndpointPolicy;$/;"	m	struct:_EFI_USBFN_IO_PROTOCOL
GetEndpointStallState	UsbFunctionIo.h	/^  EFI_USBFN_IO_GET_ENDPOINT_STALL_STATE     GetEndpointStallState;$/;"	m	struct:_EFI_USBFN_IO_PROTOCOL
GetEnv	Shell.h	/^  EFI_SHELL_GET_ENV                         GetEnv;$/;"	m	struct:_EFI_SHELL_PROTOCOL
GetEnvEx	Shell.h	/^  EFI_SHELL_GET_ENV_EX                      GetEnvEx;$/;"	m	struct:_EFI_SHELL_PROTOCOL
GetEventLog	Tcg2Protocol.h	/^  EFI_TCG2_GET_EVENT_LOG                      GetEventLog;$/;"	m	struct:tdEFI_TCG2_PROTOCOL
GetEventLog	TrEEProtocol.h	/^  EFI_TREE_GET_EVENT_LOG         GetEventLog;$/;"	m	struct:_EFI_TREE_PROTOCOL
GetFileInfo	Shell.h	/^  EFI_SHELL_GET_FILE_INFO                   GetFileInfo;$/;"	m	struct:_EFI_SHELL_PROTOCOL
GetFilePathFromDevicePath	Shell.h	/^  EFI_SHELL_GET_FILE_PATH_FROM_DEVICE_PATH  GetFilePathFromDevicePath;$/;"	m	struct:_EFI_SHELL_PROTOCOL
GetFilePosition	Shell.h	/^  EFI_SHELL_GET_FILE_POSITION               GetFilePosition;$/;"	m	struct:_EFI_SHELL_PROTOCOL
GetFileSize	Shell.h	/^  EFI_SHELL_GET_FILE_SIZE                   GetFileSize;$/;"	m	struct:_EFI_SHELL_PROTOCOL
GetFlashid	SpiNorFlash.h	/^  EFI_SPI_NOR_FLASH_PROTOCOL_GET_FLASH_ID GetFlashid;$/;"	m	struct:_EFI_SPI_NOR_FLASH_PROTOCOL
GetFontInfo	HiiFont.h	/^  EFI_HII_GET_FONT_INFO       GetFontInfo;$/;"	m	struct:_EFI_HII_FONT_PROTOCOL
GetGlyph	HiiFont.h	/^  EFI_HII_GET_GLYPH           GetGlyph;$/;"	m	struct:_EFI_HII_FONT_PROTOCOL
GetGuidFromName	Shell.h	/^  EFI_SHELL_GET_GUID_FROM_NAME              GetGuidFromName;$/;"	m	struct:_EFI_SHELL_PROTOCOL
GetGuidName	Shell.h	/^  EFI_SHELL_GET_GUID_NAME                   GetGuidName;$/;"	m	struct:_EFI_SHELL_PROTOCOL
GetHashSize	Hash.h	/^  EFI_HASH_GET_HASH_SIZE          GetHashSize;$/;"	m	struct:_EFI_HASH_PROTOCOL
GetHashSize	Hash2.h	/^  EFI_HASH2_GET_HASH_SIZE          GetHashSize;$/;"	m	struct:_EFI_HASH2_PROTOCOL
GetHealthStatus	DriverHealth.h	/^  EFI_DRIVER_HEALTH_GET_HEALTH_STATUS  GetHealthStatus;$/;"	m	struct:_EFI_DRIVER_HEALTH_PROTOCOL
GetHelp	ShellDynamicCommand.h	/^  SHELL_COMMAND_GETHELP  GetHelp;$/;"	m	struct:_EFI_SHELL_DYNAMIC_COMMAND_PROTOCOL
GetHelpText	Shell.h	/^  EFI_SHELL_GET_HELP_TEXT                   GetHelpText;$/;"	m	struct:_EFI_SHELL_PROTOCOL
GetImage	FirmwareManagement.h	/^  EFI_FIRMWARE_MANAGEMENT_PROTOCOL_GET_IMAGE         GetImage;$/;"	m	struct:_EFI_FIRMWARE_MANAGEMENT_PROTOCOL
GetImage	HiiImage.h	/^  EFI_HII_GET_IMAGE     GetImage;$/;"	m	struct:_EFI_HII_IMAGE_PROTOCOL
GetImageDecoderName	HiiImageDecoder.h	/^  EFI_HII_IMAGE_DECODER_GET_NAME          GetImageDecoderName;$/;"	m	struct:_EFI_HII_IMAGE_DECODER_PROTOCOL
GetImageEx	HiiImageEx.h	/^  EFI_HII_GET_IMAGE_EX      GetImageEx;$/;"	m	struct:_EFI_HII_IMAGE_EX_PROTOCOL
GetImageInfo	DeferredImageLoad.h	/^  EFI_DEFERRED_IMAGE_INFO  GetImageInfo;$/;"	m	struct:_EFI_DEFERRED_IMAGE_LOAD_PROTOCOL
GetImageInfo	FirmwareManagement.h	/^  EFI_FIRMWARE_MANAGEMENT_PROTOCOL_GET_IMAGE_INFO    GetImageInfo;$/;"	m	struct:_EFI_FIRMWARE_MANAGEMENT_PROTOCOL
GetImageInfo	HiiImageDecoder.h	/^  EFI_HII_IMAGE_DECODER_GET_IMAGE_INFO    GetImageInfo;$/;"	m	struct:_EFI_HII_IMAGE_DECODER_PROTOCOL
GetImageInfo	HiiImageEx.h	/^  EFI_HII_GET_IMAGE_INFO    GetImageInfo;$/;"	m	struct:_EFI_HII_IMAGE_EX_PROTOCOL
GetInfo	Decompress.h	/^  EFI_DECOMPRESS_GET_INFO   GetInfo;$/;"	m	struct:_EFI_DECOMPRESS_PROTOCOL
GetInfo	FirmwareVolume2.h	/^  EFI_FV_GET_INFO         GetInfo;$/;"	m	struct:_EFI_FIRMWARE_VOLUME2_PROTOCOL
GetInfo	LegacyRegion2.h	/^  EFI_LEGACY_REGION_GET_INFO    GetInfo;$/;"	m	struct:_EFI_LEGACY_REGION2_PROTOCOL
GetInfo	Mtftp4.h	/^  EFI_MTFTP4_GET_INFO          GetInfo;$/;"	m	struct:_EFI_MTFTP4_PROTOCOL
GetInfo	Mtftp6.h	/^  EFI_MTFTP6_GET_INFO       GetInfo;$/;"	m	struct:_EFI_MTFTP6_PROTOCOL
GetInfo	PcdInfo.h	/^  GET_PCD_INFO_PROTOCOL_GET_INFO             GetInfo;$/;"	m	struct:_GET_PCD_INFO_PROTOCOL
GetInfo	PiPcdInfo.h	/^  EFI_GET_PCD_INFO_PROTOCOL_GET_INFO    GetInfo;$/;"	m	struct:_EFI_GET_PCD_INFO_PROTOCOL
GetInfo	RegularExpressionProtocol.h	/^  EFI_REGULAR_EXPRESSION_GET_INFO  GetInfo;$/;"	m	struct:_EFI_REGULAR_EXPRESSION_PROTOCOL
GetInfo	Rng.h	/^  EFI_RNG_GET_INFO                GetInfo;$/;"	m	struct:_EFI_RNG_PROTOCOL
GetInfo	SimpleFileSystem.h	/^  EFI_FILE_GET_INFO     GetInfo;$/;"	m	struct:_EFI_FILE_PROTOCOL
GetInfo	UserCredential.h	/^  EFI_CREDENTIAL_GET_INFO       GetInfo;$/;"	m	struct:_EFI_USER_CREDENTIAL_PROTOCOL
GetInfo	UserCredential2.h	/^  EFI_CREDENTIAL2_GET_INFO      GetInfo;$/;"	m	struct:_EFI_USER_CREDENTIAL2_PROTOCOL
GetInfo	UserManager.h	/^  EFI_USER_PROFILE_GET_INFO       GetInfo;$/;"	m	struct:_EFI_USER_MANAGER_PROTOCOL
GetInfoEx	PcdInfo.h	/^  GET_PCD_INFO_PROTOCOL_GET_INFO_EX          GetInfoEx;$/;"	m	struct:_GET_PCD_INFO_PROTOCOL
GetInformation	AdapterInformation.h	/^  EFI_ADAPTER_INFO_GET_INFO              GetInformation;$/;"	m	struct:_EFI_ADAPTER_INFORMATION_PROTOCOL
GetInterruptState	Cpu.h	/^  EFI_CPU_GET_INTERRUPT_STATE         GetInterruptState;$/;"	m	struct:_EFI_CPU_ARCH_PROTOCOL
GetKey	EapManagement2.h	/^  EFI_EAP_GET_KEY                         GetKey;$/;"	m	struct:_EFI_EAP_MANAGEMENT2_PROTOCOL
GetKey	Kms.h	/^  EFI_KMS_GET_KEY                   GetKey;$/;"	m	struct:_EFI_KMS_PROTOCOL
GetKeyAttributes	Kms.h	/^  EFI_KMS_GET_KEY_ATTRIBUTES        GetKeyAttributes;$/;"	m	struct:_EFI_KMS_PROTOCOL
GetKeyByAttributes	Kms.h	/^  EFI_KMS_GET_KEY_BY_ATTRIBUTES     GetKeyByAttributes;$/;"	m	struct:_EFI_KMS_PROTOCOL
GetKeyboardLayout	HiiDatabase.h	/^  EFI_HII_GET_KEYBOARD_LAYOUT         GetKeyboardLayout;$/;"	m	struct:_EFI_HII_DATABASE_PROTOCOL
GetLanguages	HiiString.h	/^  EFI_HII_GET_LANGUAGES     GetLanguages;$/;"	m	struct:_EFI_HII_STRING_PROTOCOL
GetLocation	PciIo.h	/^  EFI_PCI_IO_PROTOCOL_GET_LOCATION        GetLocation;$/;"	m	struct:_EFI_PCI_IO_PROTOCOL
GetMapFromDevicePath	Shell.h	/^  EFI_SHELL_GET_MAP_FROM_DEVICE_PATH        GetMapFromDevicePath;$/;"	m	struct:_EFI_SHELL_PROTOCOL
GetMaxTransferSize	UsbFunctionIo.h	/^  EFI_USBFN_IO_GET_MAXTRANSFER_SIZE         GetMaxTransferSize;$/;"	m	struct:_EFI_USBFN_IO_PROTOCOL
GetMaximumProcessorIndex	DebugSupport.h	/^  EFI_GET_MAXIMUM_PROCESSOR_INDEX   GetMaximumProcessorIndex;$/;"	m	struct:_EFI_DEBUG_SUPPORT_PROTOCOL
GetMmstLocation	MmBase.h	/^  EFI_MM_GET_MMST_LOCATION  GetMmstLocation;$/;"	m	struct:_EFI_MM_BASE_PROTOCOL
GetMode	UgaDraw.h	/^  EFI_UGA_DRAW_PROTOCOL_GET_MODE  GetMode;$/;"	m	struct:_EFI_UGA_DRAW_PROTOCOL
GetModeData	Dhcp4.h	/^  EFI_DHCP4_GET_MODE_DATA      GetModeData;$/;"	m	struct:_EFI_DHCP4_PROTOCOL
GetModeData	Dhcp6.h	/^  EFI_DHCP6_GET_MODE_DATA      GetModeData;$/;"	m	struct:_EFI_DHCP6_PROTOCOL
GetModeData	Dns4.h	/^  EFI_DNS4_GET_MODE_DATA        GetModeData;$/;"	m	struct:_EFI_DNS4_PROTOCOL
GetModeData	Dns6.h	/^  EFI_DNS6_GET_MODE_DATA        GetModeData;$/;"	m	struct:_EFI_DNS6_PROTOCOL
GetModeData	Ftp4.h	/^  EFI_FTP4_GET_MODE_DATA     GetModeData;$/;"	m	struct:_EFI_FTP4_PROTOCOL
GetModeData	Http.h	/^  EFI_HTTP_GET_MODE_DATA        GetModeData;$/;"	m	struct:_EFI_HTTP_PROTOCOL
GetModeData	Ip4.h	/^  EFI_IP4_GET_MODE_DATA        GetModeData;$/;"	m	struct:_EFI_IP4_PROTOCOL
GetModeData	Ip6.h	/^  EFI_IP6_GET_MODE_DATA   GetModeData;$/;"	m	struct:_EFI_IP6_PROTOCOL
GetModeData	ManagedNetwork.h	/^  EFI_MANAGED_NETWORK_GET_MODE_DATA       GetModeData;$/;"	m	struct:_EFI_MANAGED_NETWORK_PROTOCOL
GetModeData	Mtftp4.h	/^  EFI_MTFTP4_GET_MODE_DATA     GetModeData;$/;"	m	struct:_EFI_MTFTP4_PROTOCOL
GetModeData	Mtftp6.h	/^  EFI_MTFTP6_GET_MODE_DATA  GetModeData;$/;"	m	struct:_EFI_MTFTP6_PROTOCOL
GetModeData	RestEx.h	/^  EFI_REST_EX_GET_MODE_DATA      GetModeData;$/;"	m	struct:_EFI_REST_EX_PROTOCOL
GetModeData	Tcp4.h	/^  EFI_TCP4_GET_MODE_DATA                 GetModeData;$/;"	m	struct:_EFI_TCP4_PROTOCOL
GetModeData	Tcp6.h	/^  EFI_TCP6_GET_MODE_DATA  GetModeData;$/;"	m	struct:_EFI_TCP6_PROTOCOL
GetModeData	Udp4.h	/^  EFI_UDP4_GET_MODE_DATA        GetModeData;$/;"	m	struct:_EFI_UDP4_PROTOCOL
GetModeData	Udp6.h	/^  EFI_UDP6_GET_MODE_DATA  GetModeData;$/;"	m	struct:_EFI_UDP6_PROTOCOL
GetNamespace	NvmExpressPassthru.h	/^  EFI_NVM_EXPRESS_PASS_THRU_GET_NAMESPACE            GetNamespace;$/;"	m	struct:_EFI_NVM_EXPRESS_PASS_THRU_PROTOCOL
GetNetworks	WiFi2.h	/^  EFI_WIRELESS_MAC_CONNECTION_II_GET_NETWORKS         GetNetworks;$/;"	m	struct:_EFI_WIRELESS_MAC_CONNECTION_II_PROTOCOL
GetNext	Smbios.h	/^  EFI_SMBIOS_GET_NEXT      GetNext;$/;"	m	struct:_EFI_SMBIOS_PROTOCOL
GetNext	UserManager.h	/^  EFI_USER_PROFILE_GET_NEXT       GetNext;$/;"	m	struct:_EFI_USER_MANAGER_PROTOCOL
GetNextDevice	AtaPassThru.h	/^  EFI_ATA_PASS_THRU_GET_NEXT_DEVICE    GetNextDevice;$/;"	m	struct:_EFI_ATA_PASS_THRU_PROTOCOL
GetNextDevice	ScsiPassThru.h	/^  EFI_SCSI_PASS_THRU_GET_NEXT_DEVICE    GetNextDevice;$/;"	m	struct:_EFI_SCSI_PASS_THRU_PROTOCOL
GetNextDevicePathInstance	DevicePathUtilities.h	/^  EFI_DEVICE_PATH_UTILS_GET_NEXT_INSTANCE    GetNextDevicePathInstance;$/;"	m	struct:__anon147
GetNextFile	FirmwareVolume2.h	/^  EFI_FV_GET_NEXT_FILE    GetNextFile;$/;"	m	struct:_EFI_FIRMWARE_VOLUME2_PROTOCOL
GetNextInfo	UserCredential.h	/^  EFI_CREDENTIAL_GET_NEXT_INFO  GetNextInfo;$/;"	m	struct:_EFI_USER_CREDENTIAL_PROTOCOL
GetNextInfo	UserCredential2.h	/^  EFI_CREDENTIAL2_GET_NEXT_INFO GetNextInfo;$/;"	m	struct:_EFI_USER_CREDENTIAL2_PROTOCOL
GetNextInfo	UserManager.h	/^  EFI_USER_PROFILE_GET_NEXT_INFO  GetNextInfo;$/;"	m	struct:_EFI_USER_MANAGER_PROTOCOL
GetNextNamespace	NvmExpressPassthru.h	/^  EFI_NVM_EXPRESS_PASS_THRU_GET_NEXT_NAMESPACE       GetNextNamespace;$/;"	m	struct:_EFI_NVM_EXPRESS_PASS_THRU_PROTOCOL
GetNextPort	AtaPassThru.h	/^  EFI_ATA_PASS_THRU_GET_NEXT_PORT      GetNextPort;$/;"	m	struct:_EFI_ATA_PASS_THRU_PROTOCOL
GetNextRootBridge	PciHostBridgeResourceAllocation.h	/^  EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL_GET_NEXT_ROOT_BRIDGE   GetNextRootBridge;$/;"	m	struct:_EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL
GetNextSelector	IpSecConfig.h	/^  EFI_IPSEC_CONFIG_GET_NEXT_SELECTOR  GetNextSelector;$/;"	m	struct:_EFI_IPSEC_CONFIG_PROTOCOL
GetNextShorterInterval	MmPeriodicTimerDispatch.h	/^  EFI_MM_PERIODIC_TIMER_INTERVAL    GetNextShorterInterval;$/;"	m	struct:_EFI_MM_PERIODIC_TIMER_DISPATCH_PROTOCOL
GetNextShorterInterval	SmmPeriodicTimerDispatch2.h	/^  EFI_SMM_PERIODIC_TIMER_INTERVAL2    GetNextShorterInterval;$/;"	m	struct:_EFI_SMM_PERIODIC_TIMER_DISPATCH2_PROTOCOL
GetNextSlot	SdMmcPassThru.h	/^  EFI_SD_MMC_PASS_THRU_GET_NEXT_SLOT         GetNextSlot;$/;"	m	struct:_EFI_SD_MMC_PASS_THRU_PROTOCOL
GetNextTarget	ScsiPassThruExt.h	/^  EFI_EXT_SCSI_PASS_THRU_GET_NEXT_TARGET     GetNextTarget;$/;"	m	struct:_EFI_EXT_SCSI_PASS_THRU_PROTOCOL
GetNextTargetLun	ScsiPassThruExt.h	/^  EFI_EXT_SCSI_PASS_THRU_GET_NEXT_TARGET_LUN GetNextTargetLun;$/;"	m	struct:_EFI_EXT_SCSI_PASS_THRU_PROTOCOL
GetNextToken	Pcd.h	/^  PCD_PROTOCOL_GET_NEXT_TOKEN       GetNextToken;$/;"	m	struct:__anon383
GetNextToken	PiPcd.h	/^  EFI_PCD_PROTOCOL_GET_NEXT_TOKEN       GetNextToken;$/;"	m	struct:_EFI_PCD_PROTOCOL
GetNextTokenSpace	Pcd.h	/^  PCD_PROTOCOL_GET_NEXT_TOKENSPACE  GetNextTokenSpace;$/;"	m	struct:__anon383
GetNextTokenSpace	PiPcd.h	/^  EFI_PCD_PROTOCOL_GET_NEXT_TOKEN_SPACE GetNextTokenSpace;$/;"	m	struct:_EFI_PCD_PROTOCOL
GetNumberOfProcessors	MmMp.h	/^  EFI_MM_GET_NUMBER_OF_PROCESSORS   GetNumberOfProcessors;$/;"	m	struct:_EFI_MM_MP_PROTOCOL
GetNumberOfProcessors	MpService.h	/^  EFI_MP_SERVICES_GET_NUMBER_OF_PROCESSORS  GetNumberOfProcessors;$/;"	m	struct:_EFI_MP_SERVICES_PROTOCOL
GetOption	AcpiSystemDescriptionTable.h	/^  EFI_ACPI_GET_OPTION       GetOption;$/;"	m	struct:_EFI_ACPI_SDT_PROTOCOL
GetPackageInfo	FirmwareManagement.h	/^  EFI_FIRMWARE_MANAGEMENT_PROTOCOL_GET_PACKAGE_INFO  GetPackageInfo;$/;"	m	struct:_EFI_FIRMWARE_MANAGEMENT_PROTOCOL
GetPackageListHandle	HiiDatabase.h	/^  EFI_HII_DATABASE_GET_PACK_HANDLE    GetPackageListHandle;$/;"	m	struct:_EFI_HII_DATABASE_PROTOCOL
GetPageBreak	Shell.h	/^  EFI_SHELL_GET_PAGE_BREAK                  GetPageBreak;$/;"	m	struct:_EFI_SHELL_PROTOCOL
GetPciRom	PciPlatform.h	/^  EFI_PCI_PLATFORM_GET_PCI_ROM           GetPciRom;$/;"	m	struct:_EFI_PCI_PLATFORM_PROTOCOL
GetPhysicalAddress	FirmwareVolumeBlock.h	/^  EFI_FVB_GET_PHYSICAL_ADDRESS  GetPhysicalAddress;$/;"	m	struct:_EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL
GetPinRemaining	SmartCardEdge.h	/^  EFI_SMART_CARD_EDGE_GET_PIN_REMAINING    GetPinRemaining;$/;"	m	struct:_EFI_SMART_CARD_EDGE_PROTOCOL
GetPlatformPolicy	PciPlatform.h	/^  EFI_PCI_PLATFORM_GET_PLATFORM_POLICY   GetPlatformPolicy;$/;"	m	struct:_EFI_PCI_PLATFORM_PROTOCOL
GetPosition	SimpleFileSystem.h	/^  EFI_FILE_GET_POSITION GetPosition;$/;"	m	struct:_EFI_FILE_PROTOCOL
GetProcessorInfo	MpService.h	/^  EFI_MP_SERVICES_GET_PROCESSOR_INFO        GetProcessorInfo;$/;"	m	struct:_EFI_MP_SERVICES_PROTOCOL
GetProperties	Timestamp.h	/^  TIMESTAMP_GET_PROPERTIES             GetProperties;$/;"	m	struct:_EFI_TIMESTAMP_PROTOCOL
GetProposedResources	PciHostBridgeResourceAllocation.h	/^  EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL_GET_PROPOSED_RESOURCES GetProposedResources;$/;"	m	struct:_EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL
GetPtr	Pcd.h	/^  PCD_PROTOCOL_GET_POINTER          GetPtr;$/;"	m	struct:__anon383
GetPtr	PiPcd.h	/^  EFI_PCD_PROTOCOL_GET_POINTER          GetPtr;$/;"	m	struct:_EFI_PCD_PROTOCOL
GetPtrEx	Pcd.h	/^  PCD_PROTOCOL_GET_EX_POINTER       GetPtrEx;$/;"	m	struct:__anon383
GetRNG	Rng.h	/^  EFI_RNG_GET_RNG                 GetRNG;$/;"	m	struct:_EFI_RNG_PROTOCOL
GetReaderName	SmartCardEdge.h	/^  EFI_SMART_CARD_EDGE_GET_READER_NAME      GetReaderName;$/;"	m	struct:_EFI_SMART_CARD_EDGE_PROTOCOL
GetRemoteData	BluetoothConfig.h	/^  EFI_BLUETOOTH_CONFIG_GET_REMOTE_DATA                    GetRemoteData;$/;"	m	struct:_EFI_BLUETOOTH_CONFIG_PROTOCOL
GetRemoteData	BluetoothLeConfig.h	/^  EFI_BLUETOOTH_LE_CONFIG_GET_REMOTE_DATA                    GetRemoteData;$/;"	m	struct:_EFI_BLUETOOTH_LE_CONFIG_PROTOCOL
GetResourcePadding	PciHotPlugInit.h	/^  EFI_GET_HOT_PLUG_PADDING  GetResourcePadding;$/;"	m	struct:_EFI_PCI_HOT_PLUG_INIT_PROTOCOL
GetResources	SuperIo.h	/^  EFI_SIO_GET_RESOURCES         GetResources;$/;"	m	struct:_EFI_SIO_PROTOCOL
GetResultOfSetActivePcrBanks	Tcg2Protocol.h	/^  EFI_TCG2_GET_RESULT_OF_SET_ACTIVE_PCR_BANKS GetResultOfSetActivePcrBanks;$/;"	m	struct:tdEFI_TCG2_PROTOCOL
GetRootHpcList	PciHotPlugInit.h	/^  EFI_GET_ROOT_HPC_LIST     GetRootHpcList;$/;"	m	struct:_EFI_PCI_HOT_PLUG_INIT_PROTOCOL
GetRootHubPortNumber	UsbHostController.h	/^  EFI_USB_HC_PROTOCOL_GET_ROOTHUB_PORT_NUMBER     GetRootHubPortNumber;$/;"	m	struct:_EFI_USB_HC_PROTOCOL
GetRootHubPortStatus	Usb2HostController.h	/^  EFI_USB2_HC_PROTOCOL_GET_ROOTHUB_PORT_STATUS     GetRootHubPortStatus;$/;"	m	struct:_EFI_USB2_HC_PROTOCOL
GetRootHubPortStatus	UsbHostController.h	/^  EFI_USB_HC_PROTOCOL_GET_ROOTHUB_PORT_STATUS     GetRootHubPortStatus;$/;"	m	struct:_EFI_USB_HC_PROTOCOL
GetSdpInfo	BluetoothIo.h	/^  EFI_BLUETOOTH_IO_GET_SDP_INFO               GetSdpInfo;$/;"	m	struct:_EFI_BLUETOOTH_IO_PROTOCOL
GetSecondaryLanguages	HiiString.h	/^  EFI_HII_GET_2ND_LANGUAGES GetSecondaryLanguages;$/;"	m	struct:_EFI_HII_STRING_PROTOCOL
GetService	RestEx.h	/^  EFI_REST_EX_GET_SERVICE        GetService;$/;"	m	struct:_EFI_REST_EX_PROTOCOL
GetServiceInfo	BluetoothAttribute.h	/^  EFI_BLUETOOTH_ATTRIBUTE_GET_SERVICE_INFO                 GetServiceInfo;$/;"	m	struct:_EFI_BLUETOOTH_ATTRIBUTE_PROTOCOL
GetServiceStatus	Kms.h	/^  EFI_KMS_GET_SERVICE_STATUS        GetServiceStatus;$/;"	m	struct:_EFI_KMS_PROTOCOL
GetServiceTime	Rest.h	/^  EFI_REST_GET_TIME             GetServiceTime;$/;"	m	struct:_EFI_REST_PROTOCOL
GetServiceTime	RestEx.h	/^  EFI_REST_GET_TIME              GetServiceTime;$/;"	m	struct:_EFI_REST_EX_PROTOCOL
GetSessionData	Tls.h	/^  EFI_TLS_GET_SESSION_DATA           GetSessionData;$/;"	m	struct:_EFI_TLS_PROTOCOL
GetSignatureInfo	Bis.h	/^  EFI_BIS_GET_SIGNATURE_INFO                          GetSignatureInfo;$/;"	m	struct:_EFI_BIS_PROTOCOL
GetSize	Pcd.h	/^  PCD_PROTOCOL_GET_SIZE             GetSize;$/;"	m	struct:__anon383
GetSize	PiPcd.h	/^  EFI_PCD_PROTOCOL_GET_SIZE             GetSize;$/;"	m	struct:_EFI_PCD_PROTOCOL
GetSizeEx	Pcd.h	/^  PCD_PROTOCOL_GET_EX_SIZE          GetSizeEx;$/;"	m	struct:__anon383
GetSku	PcdInfo.h	/^  GET_PCD_INFO_PROTOCOL_GET_SKU              GetSku;$/;"	m	struct:_GET_PCD_INFO_PROTOCOL
GetSku	PiPcdInfo.h	/^  EFI_GET_PCD_INFO_PROTOCOL_GET_SKU     GetSku;$/;"	m	struct:_EFI_GET_PCD_INFO_PROTOCOL
GetSlotNumber	SdMmcPassThru.h	/^  EFI_SD_MMC_PASS_THRU_GET_SLOT_NUMBER       GetSlotNumber;$/;"	m	struct:_EFI_SD_MMC_PASS_THRU_PROTOCOL
GetSmstLocation	SmmBase2.h	/^  EFI_SMM_GET_SMST_LOCATION2  GetSmstLocation;$/;"	m	struct:_EFI_SMM_BASE2_PROTOCOL
GetState	AbsolutePointer.h	/^  EFI_ABSOLUTE_POINTER_GET_STATE  GetState;$/;"	m	struct:_EFI_ABSOLUTE_POINTER_PROTOCOL
GetState	SimplePointer.h	/^  EFI_SIMPLE_POINTER_GET_STATE  GetState;$/;"	m	struct:_EFI_SIMPLE_POINTER_PROTOCOL
GetState	Usb2HostController.h	/^  EFI_USB2_HC_PROTOCOL_GET_STATE                   GetState;$/;"	m	struct:_EFI_USB2_HC_PROTOCOL
GetState	UsbHostController.h	/^  EFI_USB_HC_PROTOCOL_GET_STATE                   GetState;$/;"	m	struct:_EFI_USB_HC_PROTOCOL
GetStatus	SimpleNetwork.h	/^  EFI_SIMPLE_NETWORK_GET_STATUS       GetStatus;$/;"	m	struct:_EFI_SIMPLE_NETWORK_PROTOCOL
GetString	HiiString.h	/^  EFI_HII_GET_STRING        GetString;$/;"	m	struct:_EFI_HII_STRING_PROTOCOL
GetSupplicantStatistics	EapManagement.h	/^  EFI_EAP_GET_SUPPLICANT_STATISTICS       GetSupplicantStatistics;$/;"	m	struct:_EFI_EAP_MANAGEMENT_PROTOCOL
GetSupplicantStatistics	EapManagement2.h	/^  EFI_EAP_GET_SUPPLICANT_STATISTICS       GetSupplicantStatistics;$/;"	m	struct:_EFI_EAP_MANAGEMENT2_PROTOCOL
GetSupplicantStatus	EapManagement.h	/^  EFI_EAP_GET_SUPPLICANT_STATUS           GetSupplicantStatus;$/;"	m	struct:_EFI_EAP_MANAGEMENT_PROTOCOL
GetSupplicantStatus	EapManagement2.h	/^  EFI_EAP_GET_SUPPLICANT_STATUS           GetSupplicantStatus;$/;"	m	struct:_EFI_EAP_MANAGEMENT2_PROTOCOL
GetSupportedTypes	AdapterInformation.h	/^  EFI_ADAPTER_INFO_GET_SUPPORTED_TYPES   GetSupportedTypes;$/;"	m	struct:_EFI_ADAPTER_INFORMATION_PROTOCOL
GetSystemConfiguration	EapManagement.h	/^  EFI_EAP_GET_SYSTEM_CONFIGURATION        GetSystemConfiguration;$/;"	m	struct:_EFI_EAP_MANAGEMENT_PROTOCOL
GetSystemConfiguration	EapManagement2.h	/^  EFI_EAP_GET_SYSTEM_CONFIGURATION        GetSystemConfiguration;$/;"	m	struct:_EFI_EAP_MANAGEMENT2_PROTOCOL
GetTargetLun	ScsiPassThru.h	/^  EFI_SCSI_PASS_THRU_GET_TARGET_LUN     GetTargetLun;$/;"	m	struct:_EFI_SCSI_PASS_THRU_PROTOCOL
GetTargetLun	ScsiPassThruExt.h	/^  EFI_EXT_SCSI_PASS_THRU_GET_TARGET_LUN      GetTargetLun;$/;"	m	struct:_EFI_EXT_SCSI_PASS_THRU_PROTOCOL
GetTimerPeriod	Timer.h	/^  EFI_TIMER_GET_TIMER_PERIOD          GetTimerPeriod;$/;"	m	struct:_EFI_TIMER_ARCH_PROTOCOL
GetTimerPeriod	WatchdogTimer.h	/^  EFI_WATCHDOG_TIMER_GET_TIMER_PERIOD  GetTimerPeriod;$/;"	m	struct:_EFI_WATCHDOG_TIMER_ARCH_PROTOCOL
GetTimerValue	Cpu.h	/^  EFI_CPU_GET_TIMER_VALUE             GetTimerValue;$/;"	m	struct:_EFI_CPU_ARCH_PROTOCOL
GetTimestamp	Timestamp.h	/^  TIMESTAMP_GET                        GetTimestamp;$/;"	m	struct:_EFI_TIMESTAMP_PROTOCOL
GetVendorIdProductId	UsbFunctionIo.h	/^  EFI_USBFN_IO_GET_VENDOR_ID_PRODUCT_ID     GetVendorIdProductId;$/;"	m	struct:_EFI_USBFN_IO_PROTOCOL
GetVersion	DriverFamilyOverride.h	/^  EFI_DRIVER_FAMILY_OVERRIDE_GET_VERSION GetVersion;$/;"	m	struct:_EFI_DRIVER_FAMILY_OVERRIDE_PROTOCOL
GetVersion	Ebc.h	/^  EFI_EBC_GET_VERSION           GetVersion;$/;"	m	struct:_EFI_EBC_PROTOCOL
GetVolumeAttributes	FirmwareVolume2.h	/^  EFI_FV_GET_ATTRIBUTES   GetVolumeAttributes;$/;"	m	struct:_EFI_FIRMWARE_VOLUME2_PROTOCOL
GmtUnixTime	Tls.h	/^  UINT32                        GmtUnixTime;$/;"	m	struct:__anon286
GpiNum	MmGpiDispatch.h	/^  UINT64 GpiNum;$/;"	m	struct:__anon12
Gpt	PartitionInfo.h	/^    EFI_PARTITION_ENTRY      Gpt;$/;"	m	union:__anon482::__anon483
Granularity	LegacyRegion2.h	/^  UINT32                      Granularity;$/;"	m	struct:__anon485
Green	GraphicsOutput.h	/^  UINT8 Green;$/;"	m	struct:__anon238
Green	UgaDraw.h	/^  UINT8 Green;$/;"	m	struct:__anon78
GreenMask	GraphicsOutput.h	/^  UINT32            GreenMask;$/;"	m	struct:__anon235
Group	Supplicant.h	/^  Group,$/;"	e	enum:__anon120
GroupCount	Ip4.h	/^  UINT32                  GroupCount;$/;"	m	struct:__anon338
GroupCount	Ip6.h	/^  UINT32                  GroupCount;$/;"	m	struct:__anon405
GroupDataCipherSuite	WiFi.h	/^  UINT32                             GroupDataCipherSuite;$/;"	m	struct:__anon194
GroupTable	Ip4.h	/^  EFI_IPv4_ADDRESS        *GroupTable;$/;"	m	struct:__anon338
GroupTable	Ip6.h	/^  EFI_IPv6_ADDRESS        *GroupTable;$/;"	m	struct:__anon405
Groups	Ip4.h	/^  EFI_IP4_GROUPS               Groups;$/;"	m	struct:_EFI_IP4_PROTOCOL
Groups	Ip6.h	/^  EFI_IP6_GROUPS          Groups;$/;"	m	struct:_EFI_IP6_PROTOCOL
Groups	ManagedNetwork.h	/^  EFI_MANAGED_NETWORK_GROUPS              Groups;$/;"	m	struct:_EFI_MANAGED_NETWORK_PROTOCOL
Groups	Udp4.h	/^  EFI_UDP4_GROUPS               Groups;$/;"	m	struct:_EFI_UDP4_PROTOCOL
Groups	Udp6.h	/^  EFI_UDP6_GROUPS         Groups;$/;"	m	struct:_EFI_UDP6_PROTOCOL
Gs	DebugSupport.h	/^  UINT32                 Gs;$/;"	m	struct:__anon487
Gs	DebugSupport.h	/^  UINT64                Gs;$/;"	m	struct:__anon489
Guid	AuthenticationInfo.h	/^  EFI_GUID         Guid;$/;"	m	struct:__anon362
Guid	DebugPort.h	/^  EFI_GUID                  Guid;$/;"	m	struct:__anon259
Guid	DevicePath.h	/^  EFI_GUID                        Guid;$/;"	m	struct:__anon28
Guid	DevicePath.h	/^  EFI_GUID                        Guid;$/;"	m	struct:__anon52
Guid	DevicePath.h	/^  EFI_GUID                        Guid;$/;"	m	struct:__anon53
Guid	DevicePath.h	/^  UINT64                          Guid;$/;"	m	struct:__anon39
GwAddr	PxeBaseCode.h	/^  EFI_IP_ADDRESS  GwAddr;$/;"	m	struct:__anon108
H2AData	Dns4.h	/^    DNS_HOST_TO_ADDR_DATA         *H2AData;$/;"	m	union:__anon464::__anon465
H2AData	Dns6.h	/^    DNS6_HOST_TO_ADDR_DATA      *H2AData;$/;"	m	union:__anon395::__anon396
HARDDRIVE_DEVICE_PATH	DevicePath.h	/^} HARDDRIVE_DEVICE_PATH;$/;"	t	typeref:struct:__anon66
HARDWARE_DEVICE_PATH	DevicePath.h	69;"	d
HBAPortNumber	DevicePath.h	/^  UINT16                          HBAPortNumber;$/;"	m	struct:__anon44
HELD_PERIOD_FIELD_VALID	EapManagement.h	78;"	d
HID	DevicePath.h	/^  UINT32                          HID;$/;"	m	struct:__anon31
HID	DevicePath.h	/^  UINT32                          HID;$/;"	m	struct:__anon32
HTTP_STATUS_100_CONTINUE	Http.h	/^  HTTP_STATUS_100_CONTINUE,$/;"	e	enum:__anon521
HTTP_STATUS_101_SWITCHING_PROTOCOLS	Http.h	/^  HTTP_STATUS_101_SWITCHING_PROTOCOLS,$/;"	e	enum:__anon521
HTTP_STATUS_200_OK	Http.h	/^  HTTP_STATUS_200_OK,$/;"	e	enum:__anon521
HTTP_STATUS_201_CREATED	Http.h	/^  HTTP_STATUS_201_CREATED,$/;"	e	enum:__anon521
HTTP_STATUS_202_ACCEPTED	Http.h	/^  HTTP_STATUS_202_ACCEPTED,$/;"	e	enum:__anon521
HTTP_STATUS_203_NON_AUTHORITATIVE_INFORMATION	Http.h	/^  HTTP_STATUS_203_NON_AUTHORITATIVE_INFORMATION,$/;"	e	enum:__anon521
HTTP_STATUS_204_NO_CONTENT	Http.h	/^  HTTP_STATUS_204_NO_CONTENT,$/;"	e	enum:__anon521
HTTP_STATUS_205_RESET_CONTENT	Http.h	/^  HTTP_STATUS_205_RESET_CONTENT,$/;"	e	enum:__anon521
HTTP_STATUS_206_PARTIAL_CONTENT	Http.h	/^  HTTP_STATUS_206_PARTIAL_CONTENT,$/;"	e	enum:__anon521
HTTP_STATUS_300_MULTIPLE_CHOICES	Http.h	/^  HTTP_STATUS_300_MULTIPLE_CHOICES,$/;"	e	enum:__anon521
HTTP_STATUS_301_MOVED_PERMANENTLY	Http.h	/^  HTTP_STATUS_301_MOVED_PERMANENTLY,$/;"	e	enum:__anon521
HTTP_STATUS_302_FOUND	Http.h	/^  HTTP_STATUS_302_FOUND,$/;"	e	enum:__anon521
HTTP_STATUS_303_SEE_OTHER	Http.h	/^  HTTP_STATUS_303_SEE_OTHER,$/;"	e	enum:__anon521
HTTP_STATUS_304_NOT_MODIFIED	Http.h	/^  HTTP_STATUS_304_NOT_MODIFIED,$/;"	e	enum:__anon521
HTTP_STATUS_305_USE_PROXY	Http.h	/^  HTTP_STATUS_305_USE_PROXY,$/;"	e	enum:__anon521
HTTP_STATUS_307_TEMPORARY_REDIRECT	Http.h	/^  HTTP_STATUS_307_TEMPORARY_REDIRECT,$/;"	e	enum:__anon521
HTTP_STATUS_308_PERMANENT_REDIRECT	Http.h	/^  HTTP_STATUS_308_PERMANENT_REDIRECT$/;"	e	enum:__anon521
HTTP_STATUS_400_BAD_REQUEST	Http.h	/^  HTTP_STATUS_400_BAD_REQUEST,$/;"	e	enum:__anon521
HTTP_STATUS_401_UNAUTHORIZED	Http.h	/^  HTTP_STATUS_401_UNAUTHORIZED,$/;"	e	enum:__anon521
HTTP_STATUS_402_PAYMENT_REQUIRED	Http.h	/^  HTTP_STATUS_402_PAYMENT_REQUIRED,$/;"	e	enum:__anon521
HTTP_STATUS_403_FORBIDDEN	Http.h	/^  HTTP_STATUS_403_FORBIDDEN,$/;"	e	enum:__anon521
HTTP_STATUS_404_NOT_FOUND	Http.h	/^  HTTP_STATUS_404_NOT_FOUND,$/;"	e	enum:__anon521
HTTP_STATUS_405_METHOD_NOT_ALLOWED	Http.h	/^  HTTP_STATUS_405_METHOD_NOT_ALLOWED,$/;"	e	enum:__anon521
HTTP_STATUS_406_NOT_ACCEPTABLE	Http.h	/^  HTTP_STATUS_406_NOT_ACCEPTABLE,$/;"	e	enum:__anon521
HTTP_STATUS_407_PROXY_AUTHENTICATION_REQUIRED	Http.h	/^  HTTP_STATUS_407_PROXY_AUTHENTICATION_REQUIRED,$/;"	e	enum:__anon521
HTTP_STATUS_408_REQUEST_TIME_OUT	Http.h	/^  HTTP_STATUS_408_REQUEST_TIME_OUT,$/;"	e	enum:__anon521
HTTP_STATUS_409_CONFLICT	Http.h	/^  HTTP_STATUS_409_CONFLICT,$/;"	e	enum:__anon521
HTTP_STATUS_410_GONE	Http.h	/^  HTTP_STATUS_410_GONE,$/;"	e	enum:__anon521
HTTP_STATUS_411_LENGTH_REQUIRED	Http.h	/^  HTTP_STATUS_411_LENGTH_REQUIRED,$/;"	e	enum:__anon521
HTTP_STATUS_412_PRECONDITION_FAILED	Http.h	/^  HTTP_STATUS_412_PRECONDITION_FAILED,$/;"	e	enum:__anon521
HTTP_STATUS_413_REQUEST_ENTITY_TOO_LARGE	Http.h	/^  HTTP_STATUS_413_REQUEST_ENTITY_TOO_LARGE,$/;"	e	enum:__anon521
HTTP_STATUS_414_REQUEST_URI_TOO_LARGE	Http.h	/^  HTTP_STATUS_414_REQUEST_URI_TOO_LARGE,$/;"	e	enum:__anon521
HTTP_STATUS_415_UNSUPPORTED_MEDIA_TYPE	Http.h	/^  HTTP_STATUS_415_UNSUPPORTED_MEDIA_TYPE,$/;"	e	enum:__anon521
HTTP_STATUS_416_REQUESTED_RANGE_NOT_SATISFIED	Http.h	/^  HTTP_STATUS_416_REQUESTED_RANGE_NOT_SATISFIED,$/;"	e	enum:__anon521
HTTP_STATUS_417_EXPECTATION_FAILED	Http.h	/^  HTTP_STATUS_417_EXPECTATION_FAILED,$/;"	e	enum:__anon521
HTTP_STATUS_500_INTERNAL_SERVER_ERROR	Http.h	/^  HTTP_STATUS_500_INTERNAL_SERVER_ERROR,$/;"	e	enum:__anon521
HTTP_STATUS_501_NOT_IMPLEMENTED	Http.h	/^  HTTP_STATUS_501_NOT_IMPLEMENTED,$/;"	e	enum:__anon521
HTTP_STATUS_502_BAD_GATEWAY	Http.h	/^  HTTP_STATUS_502_BAD_GATEWAY,$/;"	e	enum:__anon521
HTTP_STATUS_503_SERVICE_UNAVAILABLE	Http.h	/^  HTTP_STATUS_503_SERVICE_UNAVAILABLE,$/;"	e	enum:__anon521
HTTP_STATUS_504_GATEWAY_TIME_OUT	Http.h	/^  HTTP_STATUS_504_GATEWAY_TIME_OUT,$/;"	e	enum:__anon521
HTTP_STATUS_505_HTTP_VERSION_NOT_SUPPORTED	Http.h	/^  HTTP_STATUS_505_HTTP_VERSION_NOT_SUPPORTED,$/;"	e	enum:__anon521
HTTP_STATUS_UNSUPPORTED_STATUS	Http.h	/^  HTTP_STATUS_UNSUPPORTED_STATUS = 0,$/;"	e	enum:__anon521
HW_BMC_DP	DevicePath.h	171;"	d
HW_CONTROLLER_DP	DevicePath.h	155;"	d
HW_MEMMAP_DP	DevicePath.h	110;"	d
HW_PCCARD_DP	DevicePath.h	94;"	d
HW_PCI_DP	DevicePath.h	74;"	d
HW_VENDOR_DP	DevicePath.h	134;"	d
Handle	Runtime.h	/^  EFI_HANDLE              Handle;$/;"	m	struct:_EFI_RUNTIME_IMAGE_ENTRY
Handle	Shell.h	/^  SHELL_FILE_HANDLE Handle;     \/\/\/< Handle for interacting with the opened file or NULL if closed.$/;"	m	struct:__anon502
Handler	ShellDynamicCommand.h	/^  SHELL_COMMAND_HANDLER  Handler;$/;"	m	struct:_EFI_SHELL_DYNAMIC_COMMAND_PROTOCOL
HardDrive	DevicePath.h	/^  HARDDRIVE_DEVICE_PATH                      *HardDrive;$/;"	m	union:__anon76
HardDrive	DevicePath.h	/^  HARDDRIVE_DEVICE_PATH                      HardDrive;$/;"	m	union:__anon75
HardLifetime	IpSecConfig.h	/^  UINT64        HardLifetime;$/;"	m	struct:_EFI_IPSEC_SA_LIFETIME
HardwareInstance	FirmwareManagement.h	/^  UINT64                           HardwareInstance;$/;"	m	struct:__anon10
HardwareRevision	I2cIo.h	/^  UINT32                                    HardwareRevision;$/;"	m	struct:_EFI_I2C_IO_PROTOCOL
Hash	Hash.h	/^  EFI_HASH_HASH                   Hash;$/;"	m	struct:_EFI_HASH_PROTOCOL
Hash	Hash2.h	/^  EFI_HASH2_HASH                   Hash;$/;"	m	struct:_EFI_HASH2_PROTOCOL
HashAlgorithmBitmap	Tcg2Protocol.h	/^  EFI_TCG2_EVENT_ALGORITHM_BITMAP  HashAlgorithmBitmap;$/;"	m	struct:tdEFI_TCG2_BOOT_SERVICE_CAPABILITY
HashAlgorithmBitmap	TcgService.h	/^  UINT8          HashAlgorithmBitmap; \/\/\/ Hash algorithms .$/;"	m	struct:_TCG_EFI_BOOT_SERVICE_CAPABILITY
HashAlgorithmBitmap	TrEEProtocol.h	/^  UINT32                HashAlgorithmBitmap;$/;"	m	struct:_TREE_BOOT_SERVICE_CAPABILITY
HashAll	TcgService.h	/^  EFI_TCG_HASH_ALL                  HashAll;$/;"	m	struct:_EFI_TCG_PROTOCOL
HashFinal	Hash2.h	/^  EFI_HASH2_HASH_FINAL             HashFinal;$/;"	m	struct:_EFI_HASH2_PROTOCOL
HashInit	Hash2.h	/^  EFI_HASH2_HASH_INIT              HashInit;$/;"	m	struct:_EFI_HASH2_PROTOCOL
HashLogExtendEvent	Tcg2Protocol.h	/^  EFI_TCG2_HASH_LOG_EXTEND_EVENT              HashLogExtendEvent;$/;"	m	struct:tdEFI_TCG2_PROTOCOL
HashLogExtendEvent	TcgService.h	/^  EFI_TCG_HASH_LOG_EXTEND_EVENT     HashLogExtendEvent;$/;"	m	struct:_EFI_TCG_PROTOCOL
HashLogExtendEvent	TrEEProtocol.h	/^  EFI_TREE_HASH_LOG_EXTEND_EVENT HashLogExtendEvent;$/;"	m	struct:_EFI_TREE_PROTOCOL
HashUpdate	Hash2.h	/^  EFI_HASH2_HASH_UPDATE            HashUpdate;$/;"	m	struct:_EFI_HASH2_PROTOCOL
Hdr	WiFi.h	/^  EFI_80211_ELEMENT_HEADER                Hdr;$/;"	m	struct:__anon204
Hdr	WiFi.h	/^  EFI_80211_ELEMENT_HEADER           Hdr;$/;"	m	struct:__anon187
Hdr	WiFi.h	/^  EFI_80211_ELEMENT_HEADER           Hdr;$/;"	m	struct:__anon188
Hdr	WiFi.h	/^  EFI_80211_ELEMENT_HEADER           Hdr;$/;"	m	struct:__anon193
Hdr	WiFi.h	/^  EFI_80211_ELEMENT_HEADER           Hdr;$/;"	m	struct:__anon195
Hdr	WiFi.h	/^  EFI_80211_ELEMENT_HEADER           Hdr;$/;"	m	struct:__anon196
Hdr	WiFi.h	/^  EFI_80211_ELEMENT_HEADER           Hdr;$/;"	m	struct:__anon199
Hdr	WiFi.h	/^  EFI_80211_ELEMENT_HEADER           Hdr;$/;"	m	struct:__anon206
Header	AuthenticationInfo.h	/^  AUTH_NODE_HEADER Header;$/;"	m	struct:__anon363
Header	AuthenticationInfo.h	/^  AUTH_NODE_HEADER Header;$/;"	m	struct:__anon364
Header	BlockIoCrypto.h	/^  EFI_BLOCK_IO_CRYPTO_IV_INPUT  Header;$/;"	m	struct:__anon351
Header	BlockIoCrypto.h	/^  EFI_BLOCK_IO_CRYPTO_IV_INPUT Header;$/;"	m	struct:__anon350
Header	BluetoothAttribute.h	/^  EFI_BLUETOOTH_ATTRIBUTE_HEADER Header;$/;"	m	struct:__anon153
Header	BluetoothAttribute.h	/^  EFI_BLUETOOTH_ATTRIBUTE_HEADER Header;$/;"	m	struct:__anon154
Header	BluetoothAttribute.h	/^  EFI_BLUETOOTH_ATTRIBUTE_HEADER Header;$/;"	m	struct:__anon155
Header	BluetoothAttribute.h	/^  EFI_BLUETOOTH_ATTRIBUTE_HEADER Header;$/;"	m	struct:__anon156
Header	DebugPort.h	/^  EFI_DEVICE_PATH_PROTOCOL  Header;$/;"	m	struct:__anon259
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL        Header;$/;"	m	struct:__anon25
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL        Header;$/;"	m	struct:__anon26
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL        Header;$/;"	m	struct:__anon27
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL        Header;$/;"	m	struct:__anon28
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL        Header;$/;"	m	struct:__anon29
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL        Header;$/;"	m	struct:__anon30
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL        Header;$/;"	m	struct:__anon31
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL        Header;$/;"	m	struct:__anon32
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL        Header;$/;"	m	struct:__anon33
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL        Header;$/;"	m	struct:__anon34
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL        Header;$/;"	m	struct:__anon35
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL        Header;$/;"	m	struct:__anon36
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL        Header;$/;"	m	struct:__anon37
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL        Header;$/;"	m	struct:__anon38
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL        Header;$/;"	m	struct:__anon39
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL        Header;$/;"	m	struct:__anon44
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL        Header;$/;"	m	struct:__anon45
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL        Header;$/;"	m	struct:__anon46
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL        Header;$/;"	m	struct:__anon47
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL        Header;$/;"	m	struct:__anon48
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL        Header;$/;"	m	struct:__anon49
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL        Header;$/;"	m	struct:__anon50
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL        Header;$/;"	m	struct:__anon51
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL        Header;$/;"	m	struct:__anon52
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL        Header;$/;"	m	struct:__anon53
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL        Header;$/;"	m	struct:__anon54
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL        Header;$/;"	m	struct:__anon55
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL        Header;$/;"	m	struct:__anon56
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL        Header;$/;"	m	struct:__anon57
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL        Header;$/;"	m	struct:__anon58
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL        Header;$/;"	m	struct:__anon59
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL        Header;$/;"	m	struct:__anon60
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL        Header;$/;"	m	struct:__anon61
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL        Header;$/;"	m	struct:__anon62
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL        Header;$/;"	m	struct:__anon63
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL        Header;$/;"	m	struct:__anon64
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL        Header;$/;"	m	struct:__anon65
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL        Header;$/;"	m	struct:__anon66
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL        Header;$/;"	m	struct:__anon67
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL        Header;$/;"	m	struct:__anon68
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL        Header;$/;"	m	struct:__anon69
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL        Header;$/;"	m	struct:__anon70
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL        Header;$/;"	m	struct:__anon71
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL        Header;$/;"	m	struct:__anon73
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL        Header;$/;"	m	struct:__anon74
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL      Header;$/;"	m	struct:__anon40
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL      Header;$/;"	m	struct:__anon41
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL      Header;$/;"	m	struct:__anon42
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL      Header;$/;"	m	struct:__anon43
Header	DevicePath.h	/^  EFI_DEVICE_PATH_PROTOCOL  Header;$/;"	m	struct:__anon72
Header	Dhcp4.h	/^    EFI_DHCP4_HEADER  Header;$/;"	m	struct:__anon138::__anon139
Header	Dhcp6.h	/^    EFI_DHCP6_HEADER           Header;$/;"	m	struct:__anon510::__anon511
Header	HiiImageDecoder.h	/^  EFI_HII_IMAGE_DECODER_IMAGE_INFO_HEADER  Header;$/;"	m	struct:_EFI_HII_IMAGE_DECODER_JPEG_INFO
Header	HiiImageDecoder.h	/^  EFI_HII_IMAGE_DECODER_IMAGE_INFO_HEADER  Header;$/;"	m	struct:_EFI_HII_IMAGE_DECODER_PNG_INFO
Header	HiiImageDecoder.h	/^  EFI_HII_IMAGE_DECODER_IMAGE_INFO_HEADER Header;$/;"	m	struct:_EFI_HII_IMAGE_DECODER_OTHER_INFO
Header	Ip4.h	/^  EFI_IP4_HEADER         *Header;$/;"	m	struct:__anon341
Header	Ip6.h	/^  EFI_IP6_HEADER          *Header;$/;"	m	struct:_EFI_IP6_RECEIVE_DATA
Header	Tcg2Protocol.h	/^  EFI_TCG2_EVENT_HEADER Header;$/;"	m	struct:tdEFI_TCG2_EVENT
Header	TrEEProtocol.h	/^  TrEE_EVENT_HEADER Header;$/;"	m	struct:__anon562
HeaderCount	Http.h	/^  UINTN                         HeaderCount;$/;"	m	struct:__anon529
HeaderGuid	MmCommunication.h	/^  EFI_GUID  HeaderGuid;$/;"	m	struct:__anon346
HeaderLength	Ip4.h	/^  UINT32                 HeaderLength;$/;"	m	struct:__anon341
HeaderLength	Ip4.h	/^  UINT8                   HeaderLength:4;$/;"	m	struct:__anon339
HeaderLength	Ip6.h	/^  UINT32                  HeaderLength;$/;"	m	struct:_EFI_IP6_RECEIVE_DATA
HeaderLength	ManagedNetwork.h	/^  UINT16                            HeaderLength;        \/\/OPTIONAL$/;"	m	struct:__anon176
HeaderLength	ManagedNetwork.h	/^  UINT32        HeaderLength;$/;"	m	struct:__anon174
HeaderSize	Tcg2Protocol.h	/^  UINT32            HeaderSize;$/;"	m	struct:__anon223
HeaderSize	TrEEProtocol.h	/^  UINT32            HeaderSize;$/;"	m	struct:__anon561
HeaderSize	UgaIo.h	/^  UINT32  HeaderSize;$/;"	m	struct:__anon536
HeaderVersion	Tcg2Protocol.h	/^  UINT16            HeaderVersion;$/;"	m	struct:__anon223
HeaderVersion	TrEEProtocol.h	/^  UINT16            HeaderVersion;$/;"	m	struct:__anon561
Headers	Http.h	/^  EFI_HTTP_HEADER               *Headers;$/;"	m	struct:__anon529
Height	HiiImage.h	/^  UINT16                          Height;$/;"	m	struct:_EFI_IMAGE_INPUT
Height	HiiImage.h	/^  UINT16  Height;$/;"	m	struct:_EFI_IMAGE_OUTPUT
Held	EapManagement.h	/^  Held,$/;"	e	enum:_EFI_EAPOL_SUPPLICANT_PAE_STATE
HeldPeriod	EapManagement.h	/^  UINTN       HeldPeriod;$/;"	m	struct:_EFI_EAPOL_SUPPLICANT_PAE_CONFIGURATION
HiiHandle	DriverHealth.h	/^  EFI_HII_HANDLE  HiiHandle;$/;"	m	struct:__anon441
HopLimit	Ip6.h	/^  UINT8                   HopLimit;   \/\/\/< Hop-Limit override.$/;"	m	struct:_EFI_IP6_OVERRIDE_DATA
HopLimit	Ip6.h	/^  UINT8                   HopLimit;$/;"	m	struct:_EFI_IP6_HEADER
HopLimit	Ip6.h	/^  UINT8                   HopLimit;$/;"	m	struct:__anon399
HopLimit	Tcp6.h	/^  UINT8                 HopLimit;$/;"	m	struct:__anon470
HopLimit	Udp6.h	/^  UINT8             HopLimit;$/;"	m	struct:__anon87
Hops	Dhcp4.h	/^  UINT8             Hops;$/;"	m	struct:__anon137
HorizontalResolution	GraphicsOutput.h	/^  UINT32                     HorizontalResolution;$/;"	m	struct:__anon237
HostAdapterStatus	ScsiIo.h	/^  UINT8                               HostAdapterStatus;$/;"	m	struct:__anon330
HostAdapterStatus	ScsiPassThru.h	/^  UINT8   HostAdapterStatus;$/;"	m	struct:__anon166
HostAdapterStatus	ScsiPassThruExt.h	/^  UINT8  HostAdapterStatus;$/;"	m	struct:__anon439
HostName	Dns4.h	/^  CHAR16                        *HostName;$/;"	m	struct:__anon458
HostName	Dns4.h	/^  CHAR16                        *HostName;$/;"	m	struct:__anon461
HostName	Dns6.h	/^  CHAR16                        *HostName;$/;"	m	struct:__anon389
HostName	Dns6.h	/^  CHAR16                        *HostName;$/;"	m	struct:__anon392
HostName	Tls.h	/^  CHAR8                    *HostName;$/;"	m	struct:__anon285
HostNameToIp	Dns4.h	/^  EFI_DNS4_HOST_NAME_TO_IP      HostNameToIp;$/;"	m	struct:_EFI_DNS4_PROTOCOL
HostNameToIp	Dns6.h	/^  EFI_DNS6_HOST_NAME_TO_IP      HostNameToIp;$/;"	m	struct:_EFI_DNS6_PROTOCOL
HpbDevicePath	PciHotPlugInit.h	/^  EFI_DEVICE_PATH_PROTOCOL  *HpbDevicePath;$/;"	m	struct:__anon355
HpcDevicePath	PciHotPlugInit.h	/^  EFI_DEVICE_PATH_PROTOCOL  *HpcDevicePath;$/;"	m	struct:__anon355
HttpBootDhcp4	HttpBootCallback.h	/^  HttpBootDhcp4,$/;"	e	enum:__anon292
HttpBootDhcp6	HttpBootCallback.h	/^  HttpBootDhcp6,$/;"	e	enum:__anon292
HttpBootHttpEntityBody	HttpBootCallback.h	/^  HttpBootHttpEntityBody,$/;"	e	enum:__anon292
HttpBootHttpRequest	HttpBootCallback.h	/^  HttpBootHttpRequest,$/;"	e	enum:__anon292
HttpBootHttpResponse	HttpBootCallback.h	/^  HttpBootHttpResponse,$/;"	e	enum:__anon292
HttpBootTypeMax	HttpBootCallback.h	/^  HttpBootTypeMax$/;"	e	enum:__anon292
HttpConfigData	RestEx.h	/^  EFI_HTTP_CONFIG_DATA    HttpConfigData;$/;"	m	struct:__anon233
HttpMethodConnect	Http.h	/^  HttpMethodConnect,$/;"	e	enum:__anon520
HttpMethodDelete	Http.h	/^  HttpMethodDelete,$/;"	e	enum:__anon520
HttpMethodGet	Http.h	/^  HttpMethodGet,$/;"	e	enum:__anon520
HttpMethodHead	Http.h	/^  HttpMethodHead,$/;"	e	enum:__anon520
HttpMethodMax	Http.h	/^  HttpMethodMax$/;"	e	enum:__anon520
HttpMethodOptions	Http.h	/^  HttpMethodOptions,$/;"	e	enum:__anon520
HttpMethodPatch	Http.h	/^  HttpMethodPatch,$/;"	e	enum:__anon520
HttpMethodPost	Http.h	/^  HttpMethodPost,$/;"	e	enum:__anon520
HttpMethodPut	Http.h	/^  HttpMethodPut,$/;"	e	enum:__anon520
HttpMethodTrace	Http.h	/^  HttpMethodTrace,$/;"	e	enum:__anon520
HttpVersion	Http.h	/^  EFI_HTTP_VERSION                   HttpVersion;$/;"	m	struct:__anon524
HttpVersion10	Http.h	/^  HttpVersion10,$/;"	e	enum:__anon519
HttpVersion11	Http.h	/^  HttpVersion11,$/;"	e	enum:__anon519
HttpVersionUnsupported	Http.h	/^  HttpVersionUnsupported$/;"	e	enum:__anon519
HwAddrLen	Dhcp4.h	/^  UINT8             HwAddrLen;$/;"	m	struct:__anon137
HwAddress	Ip4Config2.h	/^  EFI_MAC_ADDRESS       HwAddress;$/;"	m	struct:__anon5
HwAddress	Ip6Config.h	/^  EFI_MAC_ADDRESS       HwAddress;$/;"	m	struct:__anon14
HwAddressLength	Arp.h	/^  UINT8                       HwAddressLength;$/;"	m	struct:__anon81
HwAddressSize	Ip4Config2.h	/^  UINT32                HwAddressSize;$/;"	m	struct:__anon5
HwAddressSize	Ip6Config.h	/^  UINT32                HwAddressSize;$/;"	m	struct:__anon14
HwAddressSize	SimpleNetwork.h	/^  UINT32          HwAddressSize;$/;"	m	struct:__anon266
HwAddressType	Arp.h	/^  UINT16                      HwAddressType;$/;"	m	struct:__anon81
HwType	Dhcp4.h	/^  UINT8             HwType;$/;"	m	struct:__anon137
Hz	SpiConfiguration.h	25;"	d
I2O	DevicePath.h	/^  I2O_DEVICE_PATH                            *I2O;$/;"	m	union:__anon76
I2O	DevicePath.h	/^  I2O_DEVICE_PATH                            I2O;$/;"	m	union:__anon75
I2O_DEVICE_PATH	DevicePath.h	/^} I2O_DEVICE_PATH;$/;"	t	typeref:struct:__anon45
I2cControllerCapabilities	I2cHost.h	/^  CONST EFI_I2C_CONTROLLER_CAPABILITIES   *I2cControllerCapabilities;$/;"	m	struct:_EFI_I2C_HOST_PROTOCOL
I2cControllerCapabilities	I2cIo.h	/^  CONST EFI_I2C_CONTROLLER_CAPABILITIES     *I2cControllerCapabilities;$/;"	m	struct:_EFI_I2C_IO_PROTOCOL
I2cControllerCapabilities	I2cMaster.h	/^  CONST EFI_I2C_CONTROLLER_CAPABILITIES     *I2cControllerCapabilities;$/;"	m	struct:_EFI_I2C_MASTER_PROTOCOL
ICMP_V6_ADDR_UNREACHABLE	Ip6.h	111;"	d
ICMP_V6_BEYOND_SCOPE	Ip6.h	110;"	d
ICMP_V6_COMM_PROHIBITED	Ip6.h	109;"	d
ICMP_V6_DEST_UNREACHABLE	Ip6.h	81;"	d
ICMP_V6_ECHO_REPLY	Ip6.h	92;"	d
ICMP_V6_ECHO_REQUEST	Ip6.h	91;"	d
ICMP_V6_ERRONEOUS_HEADER	Ip6.h	129;"	d
ICMP_V6_LISTENER_DONE	Ip6.h	95;"	d
ICMP_V6_LISTENER_QUERY	Ip6.h	93;"	d
ICMP_V6_LISTENER_REPORT	Ip6.h	94;"	d
ICMP_V6_LISTENER_REPORT_2	Ip6.h	101;"	d
ICMP_V6_NEIGHBOR_ADVERTISE	Ip6.h	99;"	d
ICMP_V6_NEIGHBOR_SOLICIT	Ip6.h	98;"	d
ICMP_V6_NO_ROUTE_TO_DEST	Ip6.h	108;"	d
ICMP_V6_PACKET_TOO_BIG	Ip6.h	82;"	d
ICMP_V6_PARAMETER_PROBLEM	Ip6.h	84;"	d
ICMP_V6_PORT_UNREACHABLE	Ip6.h	112;"	d
ICMP_V6_REDIRECT	Ip6.h	100;"	d
ICMP_V6_ROUTER_ADVERTISE	Ip6.h	97;"	d
ICMP_V6_ROUTER_SOLICIT	Ip6.h	96;"	d
ICMP_V6_ROUTE_REJECTED	Ip6.h	114;"	d
ICMP_V6_SOURCE_ADDR_FAILED	Ip6.h	113;"	d
ICMP_V6_TIMEOUT_HOP_LIMIT	Ip6.h	121;"	d
ICMP_V6_TIMEOUT_REASSEMBLE	Ip6.h	122;"	d
ICMP_V6_TIME_EXCEEDED	Ip6.h	83;"	d
ICMP_V6_UNRECOGNIZE_NEXT_HDR	Ip6.h	130;"	d
ICMP_V6_UNRECOGNIZE_OPTION	Ip6.h	131;"	d
IFAR	DebugSupport.h	/^  UINT32  IFAR;$/;"	m	struct:__anon492
IFSR	DebugSupport.h	/^  UINT32  IFSR;$/;"	m	struct:__anon492
IGTK	Supplicant.h	/^  IGTK$/;"	e	enum:__anon120
IMAGE_ATTRIBUTE_AUTHENTICATION_REQUIRED	FirmwareManagement.h	162;"	d
IMAGE_ATTRIBUTE_DEPENDENCY	FirmwareManagement.h	176;"	d
IMAGE_ATTRIBUTE_IMAGE_UPDATABLE	FirmwareManagement.h	150;"	d
IMAGE_ATTRIBUTE_IN_USE	FirmwareManagement.h	167;"	d
IMAGE_ATTRIBUTE_RESET_REQUIRED	FirmwareManagement.h	156;"	d
IMAGE_ATTRIBUTE_UEFI_IMAGE	FirmwareManagement.h	171;"	d
IMAGE_COMPATIBILITY_CHECK_SUPPORTED	FirmwareManagement.h	187;"	d
IMAGE_UPDATABLE_INVALID	FirmwareManagement.h	229;"	d
IMAGE_UPDATABLE_INVALID_OLD	FirmwareManagement.h	241;"	d
IMAGE_UPDATABLE_INVALID_TYPE	FirmwareManagement.h	234;"	d
IMAGE_UPDATABLE_VALID	FirmwareManagement.h	224;"	d
IMAGE_UPDATABLE_VALID_WITH_VENDOR_CODE	FirmwareManagement.h	247;"	d
INFINIBAND_DEVICE_PATH	DevicePath.h	/^} INFINIBAND_DEVICE_PATH;$/;"	t	typeref:struct:__anon49
INFINIBAND_RESOURCE_FLAG_CONSOLE_PROTOCOL	DevicePath.h	686;"	d
INFINIBAND_RESOURCE_FLAG_EXTENDED_BOOT_ENVIRONMENT	DevicePath.h	685;"	d
INFINIBAND_RESOURCE_FLAG_IOC_SERVICE	DevicePath.h	684;"	d
INFINIBAND_RESOURCE_FLAG_NETWORK_PROTOCOL	DevicePath.h	688;"	d
INFINIBAND_RESOURCE_FLAG_STORAGE_PROTOCOL	DevicePath.h	687;"	d
IO_UINT16	DeviceIo.h	/^  IO_UINT16 = 1,$/;"	e	enum:__anon503
IO_UINT32	DeviceIo.h	/^  IO_UINT32 = 2,$/;"	e	enum:__anon503
IO_UINT64	DeviceIo.h	/^  IO_UINT64 = 3,$/;"	e	enum:__anon503
IO_UINT8	DeviceIo.h	/^  IO_UINT8  = 0,$/;"	e	enum:__anon503
IP4_CONFIG_VARIABLE_ATTRIBUTES	Ip4Config.h	24;"	d
IPsecConfigDataTypeMaximum	IpSecConfig.h	/^  IPsecConfigDataTypeMaximum$/;"	e	enum:__anon446
IPsecConfigDataTypePad	IpSecConfig.h	/^  IPsecConfigDataTypePad,$/;"	e	enum:__anon446
IPsecConfigDataTypeSad	IpSecConfig.h	/^  IPsecConfigDataTypeSad,$/;"	e	enum:__anon446
IPsecConfigDataTypeSpd	IpSecConfig.h	/^  IPsecConfigDataTypeSpd,$/;"	e	enum:__anon446
IPv4Node	Http.h	/^    EFI_HTTPv4_ACCESS_POINT          *IPv4Node;$/;"	m	union:__anon524::__anon525
IPv4_DEVICE_PATH	DevicePath.h	/^} IPv4_DEVICE_PATH;$/;"	t	typeref:struct:__anon47
IPv6Node	Http.h	/^    EFI_HTTPv6_ACCESS_POINT          *IPv6Node;$/;"	m	union:__anon524::__anon525
IPv6_DEVICE_PATH	DevicePath.h	/^} IPv6_DEVICE_PATH;$/;"	t	typeref:struct:__anon48
ISCSI_DEVICE_PATH	DevicePath.h	/^} ISCSI_DEVICE_PATH;$/;"	t	typeref:struct:__anon61
ISCSI_LOGIN_OPTION_AUTHMETHOD_CHAP	DevicePath.h	937;"	d
ISCSI_LOGIN_OPTION_AUTHMETHOD_NON	DevicePath.h	938;"	d
ISCSI_LOGIN_OPTION_CHAP_BI	DevicePath.h	939;"	d
ISCSI_LOGIN_OPTION_CHAP_UNI	DevicePath.h	940;"	d
ISCSI_LOGIN_OPTION_DATA_DIGEST_USING_CRC32C	DevicePath.h	936;"	d
ISCSI_LOGIN_OPTION_HEADER_DIGEST_USING_CRC32C	DevicePath.h	934;"	d
ISCSI_LOGIN_OPTION_NO_DATA_DIGEST	DevicePath.h	935;"	d
ISCSI_LOGIN_OPTION_NO_HEADER_DIGEST	DevicePath.h	933;"	d
Ia	Dhcp6.h	/^  EFI_DHCP6_IA                 *Ia;$/;"	m	struct:__anon517
IaAddress	Dhcp6.h	/^  EFI_DHCP6_IA_ADDRESS         IaAddress[1];$/;"	m	struct:__anon516
IaAddressCount	Dhcp6.h	/^  UINT32                       IaAddressCount;$/;"	m	struct:__anon516
IaDescriptor	Dhcp6.h	/^  EFI_DHCP6_IA_DESCRIPTOR      IaDescriptor;$/;"	m	struct:__anon518
IaId	Dhcp6.h	/^  UINT32                       IaId; \/\/\/< The identifier for an IA.$/;"	m	struct:__anon515
IaInfoEvent	Dhcp6.h	/^  EFI_EVENT                    IaInfoEvent;$/;"	m	struct:__anon518
Ibr0	DebugSupport.h	/^  UINT64  Ibr0;$/;"	m	struct:__anon490
Ibr1	DebugSupport.h	/^  UINT64  Ibr1;$/;"	m	struct:__anon490
Ibr2	DebugSupport.h	/^  UINT64  Ibr2;$/;"	m	struct:__anon490
Ibr3	DebugSupport.h	/^  UINT64  Ibr3;$/;"	m	struct:__anon490
Ibr4	DebugSupport.h	/^  UINT64  Ibr4;$/;"	m	struct:__anon490
Ibr5	DebugSupport.h	/^  UINT64  Ibr5;$/;"	m	struct:__anon490
Ibr6	DebugSupport.h	/^  UINT64  Ibr6;$/;"	m	struct:__anon490
Ibr7	DebugSupport.h	/^  UINT64  Ibr7;$/;"	m	struct:__anon490
IcmpError	PxeBaseCode.h	/^  EFI_PXE_BASE_CODE_ICMP_ERROR  IcmpError;$/;"	m	struct:__anon116
IcmpErrorReceived	PxeBaseCode.h	/^  BOOLEAN                       IcmpErrorReceived;$/;"	m	struct:__anon116
IcmpTypeCount	Ip4.h	/^  UINT32                  IcmpTypeCount;$/;"	m	struct:__anon338
IcmpTypeCount	Ip6.h	/^  UINT32                  IcmpTypeCount;$/;"	m	struct:__anon405
IcmpTypeList	Ip4.h	/^  EFI_IP4_ICMP_TYPE       *IcmpTypeList;$/;"	m	struct:__anon338
IcmpTypeList	Ip6.h	/^  EFI_IP6_ICMP_TYPE       *IcmpTypeList;$/;"	m	struct:__anon405
Id	Ip6Config.h	/^  UINT8                 Id[8];$/;"	m	struct:__anon15
Id	IpSecConfig.h	/^  } Id;$/;"	m	struct:_EFI_IPSEC_PAD_ID	typeref:union:_EFI_IPSEC_PAD_ID::__anon453
Id	NetworkInterfaceIdentifier.h	/^  UINT64    Id;         \/\/\/< The address of the first byte of the identifying structure for this network$/;"	m	struct:_EFI_NETWORK_INTERFACE_IDENTIFIER_PROTOCOL
Identification	Ip4.h	/^  UINT16                  Identification;$/;"	m	struct:__anon339
Identifier	PxeBaseCode.h	/^      UINT16  Identifier;$/;"	m	struct:__anon102::__anon103::__anon104
Identifier	UserCredential.h	/^  EFI_GUID                      Identifier;  \/\/\/< Uniquely identifies this credential provider.$/;"	m	struct:_EFI_USER_CREDENTIAL_PROTOCOL
Identifier	UserCredential2.h	/^  EFI_GUID                      Identifier;  \/\/\/< Uniquely identifies this credential provider.$/;"	m	struct:_EFI_USER_CREDENTIAL2_PROTOCOL
Identify	DiskInfo.h	/^  EFI_DISK_INFO_IDENTIFY    Identify;$/;"	m	struct:_EFI_DISK_INFO_PROTOCOL
Identify	UserManager.h	/^  EFI_USER_PROFILE_IDENTIFY       Identify;$/;"	m	struct:_EFI_USER_MANAGER_PROTOCOL
Idtr	DebugSupport.h	/^  UINT32                 Idtr[2];$/;"	m	struct:__anon487
Idtr	DebugSupport.h	/^  UINT64                Idtr[2];$/;"	m	struct:__anon489
Ieee80211AuthenticatedAssociated	Supplicant.h	/^  Ieee80211AuthenticatedAssociated$/;"	e	enum:__anon119
Ieee80211AuthenticatedUnassociated	Supplicant.h	/^  Ieee80211AuthenticatedUnassociated,$/;"	e	enum:__anon119
Ieee80211Class2FrameNonauthenticated	WiFi.h	/^  Ieee80211Class2FrameNonauthenticated = 6,$/;"	e	enum:__anon182
Ieee80211Class3FrameNonassociated	WiFi.h	/^  Ieee80211Class3FrameNonassociated    = 7,$/;"	e	enum:__anon182
Ieee80211DeauthenticatedSinceLeaving	WiFi.h	/^  Ieee80211DeauthenticatedSinceLeaving = 3,$/;"	e	enum:__anon182
Ieee80211DisassociatedDueToInactive	WiFi.h	/^  Ieee80211DisassociatedDueToInactive  = 4,$/;"	e	enum:__anon182
Ieee80211DisassociatedSinceApUnable	WiFi.h	/^  Ieee80211DisassociatedSinceApUnable  = 5,$/;"	e	enum:__anon182
Ieee80211DisassociatedSinceLeaving	WiFi.h	/^  Ieee80211DisassociatedSinceLeaving   = 8,$/;"	e	enum:__anon182
Ieee80211PendingRSNAuthentication	Supplicant.h	/^  Ieee80211PendingRSNAuthentication,$/;"	e	enum:__anon119
Ieee80211PreviousAuthenticateInvalid	WiFi.h	/^  Ieee80211PreviousAuthenticateInvalid = 2,$/;"	e	enum:__anon182
Ieee80211UnauthenticatedUnassociated	Supplicant.h	/^  Ieee80211UnauthenticatedUnassociated,$/;"	e	enum:__anon119
Ieee80211UnspecifiedReason	WiFi.h	/^  Ieee80211UnspecifiedReason           = 1,$/;"	e	enum:__anon182
IeeeAnyBss	WiFi2.h	/^  IeeeAnyBss$/;"	e	enum:__anon300
IeeeChargeablePublic	WiFi.h	/^  IeeeChargeablePublic  = 2,$/;"	e	enum:__anon179
IeeeEmergencyServOnly	WiFi.h	/^  IeeeEmergencyServOnly = 5,$/;"	e	enum:__anon179
IeeeFreePublic	WiFi.h	/^  IeeeFreePublic        = 3,$/;"	e	enum:__anon179
IeeeIndependentBSS	WiFi2.h	/^  IeeeIndependentBSS,$/;"	e	enum:__anon300
IeeeInfrastructureBSS	WiFi2.h	/^  IeeeInfrastructureBSS,$/;"	e	enum:__anon300
IeeeMeshBSS	WiFi2.h	/^  IeeeMeshBSS,$/;"	e	enum:__anon300
IeeePersonal	WiFi.h	/^  IeeePersonal          = 4,$/;"	e	enum:__anon179
IeeePrivate	WiFi.h	/^  IeeePrivate           = 0,$/;"	e	enum:__anon179
IeeePrivatewithGuest	WiFi.h	/^  IeeePrivatewithGuest  = 1,$/;"	e	enum:__anon179
IeeeTestOrExp	WiFi.h	/^  IeeeTestOrExp         = 14,$/;"	e	enum:__anon179
IeeeWildcard	WiFi.h	/^  IeeeWildcard          = 15$/;"	e	enum:__anon179
IfNum	NetworkInterfaceIdentifier.h	/^  UINT16    IfNum;      \/\/\/< The network interface number that is being identified by this Network$/;"	m	struct:_EFI_NETWORK_INTERFACE_IDENTIFIER_PROTOCOL
IfType	DevicePath.h	/^  UINT8                           IfType;$/;"	m	struct:__anon46
IfType	Ip4Config2.h	/^  UINT8                 IfType;$/;"	m	struct:__anon5
IfType	Ip6Config.h	/^  UINT8                 IfType;$/;"	m	struct:__anon14
IfType	SimpleNetwork.h	/^  UINT8           IfType;$/;"	m	struct:__anon266
IkeIdFlag	IpSecConfig.h	/^  BOOLEAN                       IkeIdFlag;$/;"	m	struct:_EFI_IPSEC_PAD_DATA
Image	HiiImage.h	/^  } Image;$/;"	m	struct:_EFI_IMAGE_OUTPUT	typeref:union:_EFI_IMAGE_OUTPUT::__anon299
ImageAddr	NetworkInterfaceIdentifier.h	/^  UINT64    ImageAddr;  \/\/\/< The address of the first byte of the identifying structure for this$/;"	m	struct:_EFI_NETWORK_INTERFACE_IDENTIFIER_PROTOCOL
ImageBase	LoadedImage.h	/^  VOID              *ImageBase;     \/\/\/< The base address at which the image was loaded.$/;"	m	struct:__anon359
ImageBase	Runtime.h	/^  VOID                    *ImageBase;$/;"	m	struct:_EFI_RUNTIME_IMAGE_ENTRY
ImageCodeType	LoadedImage.h	/^  EFI_MEMORY_TYPE   ImageCodeType;  \/\/\/< The memory type that the code sections were loaded as.$/;"	m	struct:__anon359
ImageDataType	LoadedImage.h	/^  EFI_MEMORY_TYPE   ImageDataType;  \/\/\/< The memory type that the data sections were loaded as.$/;"	m	struct:__anon359
ImageExtenion	HiiImageDecoder.h	/^  CHAR16                                  ImageExtenion[1];$/;"	m	struct:_EFI_HII_IMAGE_DECODER_OTHER_INFO
ImageHandle	DriverBinding.h	/^  EFI_HANDLE                    ImageHandle;$/;"	m	struct:_EFI_DRIVER_BINDING_PROTOCOL
ImageHead	Runtime.h	/^  EFI_LIST_ENTRY          ImageHead;    \/\/\/< A list of type EFI_RUNTIME_IMAGE_ENTRY.$/;"	m	struct:_EFI_RUNTIME_ARCH_PROTOCOL
ImageHeight	HiiImageDecoder.h	/^  UINT16                              ImageHeight;$/;"	m	struct:_EFI_HII_IMAGE_DECODER_IMAGE_INFO_HEADER
ImageId	FirmwareManagement.h	/^  UINT64                           ImageId;$/;"	m	struct:__anon10
ImageIdName	FirmwareManagement.h	/^  CHAR16                           *ImageIdName;$/;"	m	struct:__anon10
ImageIndex	FirmwareManagement.h	/^  UINT8                            ImageIndex;$/;"	m	struct:__anon10
ImageInfoSize	HiiImageDecoder.h	/^  UINT16                              ImageInfoSize;$/;"	m	struct:_EFI_HII_IMAGE_DECODER_IMAGE_INFO_HEADER
ImageSize	LoadedImage.h	/^  UINT64            ImageSize;      \/\/\/< The size in bytes of the loaded image.$/;"	m	struct:__anon359
ImageSize	NetworkInterfaceIdentifier.h	/^  UINT32    ImageSize;  \/\/\/< The size of unrelocated network interface image.$/;"	m	struct:_EFI_NETWORK_INTERFACE_IDENTIFIER_PROTOCOL
ImageSize	Runtime.h	/^  UINT64                  ImageSize;$/;"	m	struct:_EFI_RUNTIME_IMAGE_ENTRY
ImageTypeId	FirmwareManagement.h	/^  EFI_GUID                         ImageTypeId;$/;"	m	struct:__anon10
ImageWidth	HiiImageDecoder.h	/^  UINT16                              ImageWidth;$/;"	m	struct:_EFI_HII_IMAGE_DECODER_IMAGE_INFO_HEADER
InDataBuffer	AtaPassThru.h	/^  VOID                           *InDataBuffer;$/;"	m	struct:__anon128
InDataBuffer	ScsiIo.h	/^  VOID                                *InDataBuffer;$/;"	m	struct:__anon330
InDataBuffer	ScsiPassThruExt.h	/^  VOID   *InDataBuffer;$/;"	m	struct:__anon439
InDataBuffer	SdMmcPassThru.h	/^  VOID                              *InDataBuffer;$/;"	m	struct:_EFI_SD_MMC_PASS_THRU_COMMAND_PACKET
InMm	MmBase.h	/^  EFI_MM_INSIDE_OUT         InMm;$/;"	m	struct:_EFI_MM_BASE_PROTOCOL
InSmm	SmmBase2.h	/^  EFI_SMM_INSIDE_OUT2         InSmm;$/;"	m	struct:_EFI_SMM_BASE2_PROTOCOL
InTransferLength	AtaPassThru.h	/^  UINT32                         InTransferLength;$/;"	m	struct:__anon128
InTransferLength	ScsiIo.h	/^  UINT32                              InTransferLength;$/;"	m	struct:__anon330
InTransferLength	ScsiPassThruExt.h	/^  UINT32 InTransferLength;$/;"	m	struct:__anon439
InTransferLength	SdMmcPassThru.h	/^  UINT32                            InTransferLength;$/;"	m	struct:_EFI_SD_MMC_PASS_THRU_COMMAND_PACKET
Index	BlockIoCrypto.h	/^  UINT64                          Index;$/;"	m	struct:__anon353
Index	BlockIoCrypto.h	/^  UINT64                          Index;$/;"	m	struct:__anon354
Indication	BluetoothAttribute.h	/^    EFI_BLUETOOTH_ATTRIBUTE_CALLBACK_PARAMETER_INDICATION    Indication;$/;"	m	union:__anon159::__anon160
Indicator	WiFi.h	/^  UINT8                              Indicator;$/;"	m	struct:__anon199
InfiniBand	DevicePath.h	/^  INFINIBAND_DEVICE_PATH                     *InfiniBand;$/;"	m	union:__anon76
InfiniBand	DevicePath.h	/^  INFINIBAND_DEVICE_PATH                     InfiniBand;$/;"	m	union:__anon75
Info	GraphicsOutput.h	/^  EFI_GRAPHICS_OUTPUT_MODE_INFORMATION   *Info;$/;"	m	struct:__anon241
Info	PartitionInfo.h	/^  } Info;$/;"	m	struct:__anon482	typeref:union:__anon482::__anon483
Info	Shell.h	/^  EFI_FILE_INFO     *Info;      \/\/\/< Pointer to the FileInfo struct for this file or NULL.$/;"	m	struct:__anon502
InfoAttribs	UserManager.h	/^  EFI_USER_INFO_ATTRIBS  InfoAttribs;$/;"	m	struct:__anon253
InfoRequest	Dhcp6.h	/^  EFI_DHCP6_INFO_REQUEST       InfoRequest;$/;"	m	struct:_EFI_DHCP6_PROTOCOL
InfoSize	UserManager.h	/^  UINT32                 InfoSize;$/;"	m	struct:__anon253
InfoType	UserManager.h	/^  UINT8                  InfoType;$/;"	m	struct:__anon253
Init	BluetoothConfig.h	/^  EFI_BLUETOOTH_CONFIG_INIT                               Init;$/;"	m	struct:_EFI_BLUETOOTH_CONFIG_PROTOCOL
Init	BluetoothLeConfig.h	/^  EFI_BLUETOOTH_LE_CONFIG_INIT                               Init;$/;"	m	struct:_EFI_BLUETOOTH_LE_CONFIG_PROTOCOL
Init	Cpu.h	/^  EFI_CPU_INIT                        Init;$/;"	m	struct:_EFI_CPU_ARCH_PROTOCOL
InitialServerPort	Mtftp4.h	/^  UINT16                  InitialServerPort;$/;"	m	struct:__anon434
InitialServerPort	Mtftp6.h	/^  UINT16                 InitialServerPort;$/;"	m	struct:__anon557
Initialize	Bis.h	/^  EFI_BIS_INITIALIZE                                  Initialize;$/;"	m	struct:_EFI_BIS_PROTOCOL
Initialize	SimpleNetwork.h	/^  EFI_SIMPLE_NETWORK_INITIALIZE       Initialize;$/;"	m	struct:_EFI_SIMPLE_NETWORK_PROTOCOL
InitializePort	EapManagement.h	/^  EFI_EAP_INITIALIZE_PORT                 InitializePort;$/;"	m	struct:_EFI_EAP_MANAGEMENT_PROTOCOL
InitializePort	EapManagement2.h	/^  EFI_EAP_INITIALIZE_PORT                 InitializePort;$/;"	m	struct:_EFI_EAP_MANAGEMENT2_PROTOCOL
InitializeRootHpc	PciHotPlugInit.h	/^  EFI_INITIALIZE_ROOT_HPC   InitializeRootHpc;$/;"	m	struct:_EFI_PCI_HOT_PLUG_INIT_PROTOCOL
InputSize	BlockIoCrypto.h	/^  UINT64         InputSize;$/;"	m	struct:__anon349
Inquiry	DiskInfo.h	/^  EFI_DISK_INFO_INQUIRY     Inquiry;$/;"	m	struct:_EFI_DISK_INFO_PROTOCOL
Insert	S3SaveState.h	/^  EFI_S3_SAVE_STATE_INSERT  Insert;$/;"	m	struct:_EFI_S3_SAVE_STATE_PROTOCOL
InstallAcpiTable	AcpiTable.h	/^  EFI_ACPI_TABLE_INSTALL_ACPI_TABLE   InstallAcpiTable;$/;"	m	struct:_EFI_ACPI_TABLE_PROTOCOL
Instance	DevicePath.h	/^  UINT16                          Instance;$/;"	m	struct:__anon73
InstanceHandle	Ip4.h	/^  EFI_HANDLE              InstanceHandle;$/;"	m	struct:__anon333
InstanceHandle	Ip6.h	/^  EFI_HANDLE          InstanceHandle;$/;"	m	struct:__anon397
InstanceHandle	Tcp4.h	/^  EFI_HANDLE              InstanceHandle;$/;"	m	struct:__anon315
InstanceHandle	Tcp6.h	/^  EFI_HANDLE        InstanceHandle;$/;"	m	struct:__anon466
InstanceHandle	Udp4.h	/^  EFI_HANDLE              InstanceHandle;$/;"	m	struct:__anon371
InstanceHandle	Udp6.h	/^  EFI_HANDLE          InstanceHandle;$/;"	m	struct:__anon83
IntNat	DebugSupport.h	/^  UINT64  IntNat;$/;"	m	struct:__anon490
Interface	DiskInfo.h	/^  EFI_GUID                  Interface;$/;"	m	struct:_EFI_DISK_INFO_PROTOCOL
InterfaceDescriptor	UsbFunctionIo.h	/^  EFI_USB_INTERFACE_DESCRIPTOR         *InterfaceDescriptor;$/;"	m	struct:__anon408
InterfaceInfoTable	UsbFunctionIo.h	/^  EFI_USB_INTERFACE_INFO               **InterfaceInfoTable;$/;"	m	struct:__anon409
InterfaceNumber	DevicePath.h	/^  UINT16                        InterfaceNumber;$/;"	m	struct:__anon42
InterfaceNumber	DevicePath.h	/^  UINT8                         InterfaceNumber;$/;"	m	struct:__anon40
InterfaceType	DevicePath.h	/^  UINT8                           InterfaceType;$/;"	m	struct:__anon30
Interval	WiFi.h	/^  UINT8                              Interval;$/;"	m	struct:__anon200
InvalidEapolFramesReceived	EapManagement.h	/^  UINTN     InvalidEapolFramesReceived;$/;"	m	struct:_EFI_EAPOL_SUPPLICANT_PAE_STATISTICS
InvalidateInstructionCache	DebugSupport.h	/^  EFI_INVALIDATE_INSTRUCTION_CACHE  InvalidateInstructionCache;$/;"	m	struct:_EFI_DEBUG_SUPPORT_PROTOCOL
Io	CpuIo2.h	/^  EFI_CPU_IO_PROTOCOL_ACCESS  Io;$/;"	m	struct:_EFI_CPU_IO2_PROTOCOL
Io	DeviceIo.h	/^  EFI_IO_ACCESS           Io;$/;"	m	struct:_EFI_DEVICE_IO_PROTOCOL
Io	MmCpuIo.h	/^  EFI_MM_IO_ACCESS Io;$/;"	m	struct:_EFI_MM_CPU_IO_PROTOCOL
Io	PciIo.h	/^  EFI_PCI_IO_PROTOCOL_ACCESS              Io;$/;"	m	struct:_EFI_PCI_IO_PROTOCOL
Io	PciRootBridgeIo.h	/^  EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_ACCESS          Io;$/;"	m	struct:_EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL
IoAlign	AtaPassThru.h	/^  UINT32 IoAlign;$/;"	m	struct:__anon127
IoAlign	BlockIo.h	/^  UINT32  IoAlign;$/;"	m	struct:__anon222
IoAlign	NvmExpressPassthru.h	/^  UINT32          IoAlign;$/;"	m	struct:__anon541
IoAlign	ScsiIo.h	/^  UINT32                                    IoAlign;$/;"	m	struct:_EFI_SCSI_IO_PROTOCOL
IoAlign	ScsiPassThru.h	/^  UINT32  IoAlign;$/;"	m	struct:__anon167
IoAlign	ScsiPassThruExt.h	/^  UINT32 IoAlign;$/;"	m	struct:__anon438
IoAlign	SdMmcPassThru.h	/^  UINT32                                     IoAlign;$/;"	m	struct:_EFI_SD_MMC_PASS_THRU_PROTOCOL
IoData	MmCpu.h	/^  UINT64                        IoData;$/;"	m	struct:_EFI_MM_SAVE_STATE_IO_INFO
IoPort	MmCpu.h	/^  UINT16                        IoPort;$/;"	m	struct:_EFI_MM_SAVE_STATE_IO_INFO
IoTrapTypeMaximum	MmIoTrapDispatch.h	/^  IoTrapTypeMaximum$/;"	e	enum:__anon99
IoType	MmCpu.h	/^  EFI_MM_SAVE_STATE_IO_TYPE     IoType;$/;"	m	struct:_EFI_MM_SAVE_STATE_IO_INFO
IoWidth	MmCpu.h	/^  EFI_MM_SAVE_STATE_IO_WIDTH    IoWidth;$/;"	m	struct:_EFI_MM_SAVE_STATE_IO_INFO
Ip	DebugSupport.h	/^  UINT64  Ip;$/;"	m	struct:__anon491
Ip4Address	Ip4.h	/^  EFI_IPv4_ADDRESS        Ip4Address;$/;"	m	struct:__anon333
Ip4Config2DataTypeDnsServer	Ip4Config2.h	/^  Ip4Config2DataTypeDnsServer,$/;"	e	enum:__anon4
Ip4Config2DataTypeGateway	Ip4Config2.h	/^  Ip4Config2DataTypeGateway,$/;"	e	enum:__anon4
Ip4Config2DataTypeInterfaceInfo	Ip4Config2.h	/^  Ip4Config2DataTypeInterfaceInfo,$/;"	e	enum:__anon4
Ip4Config2DataTypeManualAddress	Ip4Config2.h	/^  Ip4Config2DataTypeManualAddress,$/;"	e	enum:__anon4
Ip4Config2DataTypeMaximum	Ip4Config2.h	/^  Ip4Config2DataTypeMaximum$/;"	e	enum:__anon4
Ip4Config2DataTypePolicy	Ip4Config2.h	/^  Ip4Config2DataTypePolicy,$/;"	e	enum:__anon4
Ip4Config2PolicyDhcp	Ip4Config2.h	/^  Ip4Config2PolicyDhcp,$/;"	e	enum:__anon6
Ip4Config2PolicyMax	Ip4Config2.h	/^  Ip4Config2PolicyMax$/;"	e	enum:__anon6
Ip4Config2PolicyStatic	Ip4Config2.h	/^  Ip4Config2PolicyStatic,$/;"	e	enum:__anon6
Ip6Address	Ip6.h	/^  EFI_IPv6_ADDRESS    Ip6Address;$/;"	m	struct:__anon397
Ip6ConfigDataTypeAltInterfaceId	Ip6Config.h	/^  Ip6ConfigDataTypeAltInterfaceId,$/;"	e	enum:__anon13
Ip6ConfigDataTypeDnsServer	Ip6Config.h	/^  Ip6ConfigDataTypeDnsServer,$/;"	e	enum:__anon13
Ip6ConfigDataTypeDupAddrDetectTransmits	Ip6Config.h	/^  Ip6ConfigDataTypeDupAddrDetectTransmits,$/;"	e	enum:__anon13
Ip6ConfigDataTypeGateway	Ip6Config.h	/^  Ip6ConfigDataTypeGateway,$/;"	e	enum:__anon13
Ip6ConfigDataTypeInterfaceInfo	Ip6Config.h	/^  Ip6ConfigDataTypeInterfaceInfo,$/;"	e	enum:__anon13
Ip6ConfigDataTypeManualAddress	Ip6Config.h	/^  Ip6ConfigDataTypeManualAddress,$/;"	e	enum:__anon13
Ip6ConfigDataTypeMaximum	Ip6Config.h	/^  Ip6ConfigDataTypeMaximum$/;"	e	enum:__anon13
Ip6ConfigDataTypePolicy	Ip6Config.h	/^  Ip6ConfigDataTypePolicy,$/;"	e	enum:__anon13
Ip6ConfigPolicyAutomatic	Ip6Config.h	/^  Ip6ConfigPolicyAutomatic$/;"	e	enum:__anon16
Ip6ConfigPolicyManual	Ip6Config.h	/^  Ip6ConfigPolicyManual,$/;"	e	enum:__anon16
IpAddr	PxeBaseCode.h	/^  EFI_IP_ADDRESS  IpAddr;$/;"	m	struct:__anon107
IpAddr	PxeBaseCode.h	/^  EFI_IP_ADDRESS  IpAddr;$/;"	m	struct:__anon108
IpAddr	PxeBaseCode.h	/^  EFI_IP_ADDRESS  IpAddr;$/;"	m	struct:__anon109
IpAddress	Dhcp6.h	/^  EFI_IPv6_ADDRESS             IpAddress;$/;"	m	struct:__anon514
IpAddress	Dns4.h	/^  EFI_IPv4_ADDRESS              *IpAddress;$/;"	m	struct:__anon458
IpAddress	Dns6.h	/^  EFI_IPv6_ADDRESS              *IpAddress;$/;"	m	struct:__anon389
IpAddress	IpSecConfig.h	/^    EFI_IP_ADDRESS_INFO   IpAddress;$/;"	m	union:_EFI_IPSEC_PAD_ID::__anon453
IpAddressOrigin	DevicePath.h	/^  UINT8                           IpAddressOrigin;$/;"	m	struct:__anon48
IpCnt	PxeBaseCode.h	/^  UINT16                    IpCnt;$/;"	m	struct:__anon110
IpCnt	PxeBaseCode.h	/^  UINT8           IpCnt;$/;"	m	struct:__anon106
IpCount	Dns4.h	/^  UINT32                        IpCount;$/;"	m	struct:__anon460
IpCount	Dns6.h	/^  UINT32                        IpCount;$/;"	m	struct:__anon391
IpFilter	PxeBaseCode.h	/^  EFI_PXE_BASE_CODE_IP_FILTER   IpFilter;$/;"	m	struct:__anon116
IpList	Dns4.h	/^  EFI_IPv4_ADDRESS              *IpList;$/;"	m	struct:__anon460
IpList	Dns6.h	/^  EFI_IPv6_ADDRESS              *IpList;$/;"	m	struct:__anon391
IpList	PxeBaseCode.h	/^  EFI_IP_ADDRESS  IpList[EFI_PXE_BASE_CODE_MAX_IPCNT];$/;"	m	struct:__anon106
IpToHostName	Dns4.h	/^  EFI_DNS4_IP_TO_HOST_NAME      IpToHostName;$/;"	m	struct:_EFI_DNS4_PROTOCOL
IpToHostName	Dns6.h	/^  EFI_DNS6_IP_TO_HOST_NAME      IpToHostName;$/;"	m	struct:_EFI_DNS6_PROTOCOL
Ipv4	DevicePath.h	/^  IPv4_DEVICE_PATH                           *Ipv4;$/;"	m	union:__anon76
Ipv4	DevicePath.h	/^  IPv4_DEVICE_PATH                           Ipv4;$/;"	m	union:__anon75
Ipv6	DevicePath.h	/^  IPv6_DEVICE_PATH                           *Ipv6;$/;"	m	union:__anon76
Ipv6	DevicePath.h	/^  IPv6_DEVICE_PATH                           Ipv6;$/;"	m	union:__anon75
Ipv6Available	PxeBaseCode.h	/^  BOOLEAN                       Ipv6Available;$/;"	m	struct:__anon116
Ipv6Support	AdapterInformation.h	/^  BOOLEAN                            Ipv6Support;$/;"	m	struct:__anon423
Ipv6Supported	NetworkInterfaceIdentifier.h	/^  BOOLEAN   Ipv6Supported; \/\/\/< TRUE if the network interface supports IPv6; otherwise FALSE.$/;"	m	struct:_EFI_NETWORK_INTERFACE_IDENTIFIER_PROTOCOL
Ipv6Supported	PxeBaseCode.h	/^  BOOLEAN                       Ipv6Supported;$/;"	m	struct:__anon116
Irt	Dhcp6.h	/^  UINT32                       Irt;$/;"	m	struct:__anon513
IsAnycast	Ip6Config.h	/^  BOOLEAN               IsAnycast;     \/\/\/< Set to TRUE if Address is anycast.$/;"	m	struct:__anon18
IsAuthenticator	Supplicant.h	/^  BOOLEAN                                 IsAuthenticator;$/;"	m	struct:__anon123
IsConfigured	Ip4.h	/^  BOOLEAN                 IsConfigured;$/;"	m	struct:__anon338
IsConfigured	Ip6.h	/^  BOOLEAN                 IsConfigured;$/;"	m	struct:__anon405
IsDevicePathMultiInstance	DevicePathUtilities.h	/^  EFI_DEVICE_PATH_UTILS_IS_MULTI_INSTANCE    IsDevicePathMultiInstance;$/;"	m	struct:__anon147
IsIPv6	DevicePath.h	/^  UINT8                           IsIPv6;$/;"	m	struct:__anon56
IsRangeProtected	LegacySpiController.h	/^  EFI_LEGACY_SPI_CONTROLLER_PROTOCOL_IS_RANGE_PROTECTED  IsRangeProtected;$/;"	m	struct:_EFI_LEGACY_SPI_CONTROLLER_PROTOCOL
IsRangeProtected	LegacySpiFlash.h	/^  EFI_LEGACY_SPI_FLASH_PROTOCOL_IS_RANGE_PROTECTED IsRangeProtected;$/;"	m	struct:_EFI_LEGACY_SPI_FLASH_PROTOCOL
IsRootShell	Shell.h	/^  EFI_SHELL_IS_ROOT_SHELL                   IsRootShell;$/;"	m	struct:_EFI_SHELL_PROTOCOL
IsStarted	Ip4.h	/^  BOOLEAN                 IsStarted;$/;"	m	struct:__anon338
IsStarted	Ip6.h	/^  BOOLEAN                 IsStarted;$/;"	m	struct:__anon405
Isa	DebugSupport.h	/^  EFI_INSTRUCTION_SET_ARCHITECTURE  Isa;$/;"	m	struct:_EFI_DEBUG_SUPPORT_PROTOCOL
IsaAArch64	DebugSupport.h	/^  IsaAArch64  = IMAGE_FILE_MACHINE_ARM64       \/\/\/< 0xAA64$/;"	e	enum:__anon496
IsaArm	DebugSupport.h	/^  IsaArm  = IMAGE_FILE_MACHINE_ARMTHUMB_MIXED, \/\/\/< 0x01c2$/;"	e	enum:__anon496
IsaEbc	DebugSupport.h	/^  IsaEbc  = IMAGE_FILE_MACHINE_EBC,            \/\/\/< 0x0EBC$/;"	e	enum:__anon496
IsaIa32	DebugSupport.h	/^  IsaIa32 = IMAGE_FILE_MACHINE_I386,           \/\/\/< 0x014C$/;"	e	enum:__anon496
IsaIpf	DebugSupport.h	/^  IsaIpf  = IMAGE_FILE_MACHINE_IA64,           \/\/\/< 0x0200$/;"	e	enum:__anon496
IsaX64	DebugSupport.h	/^  IsaX64  = IMAGE_FILE_MACHINE_X64,            \/\/\/< 0x8664$/;"	e	enum:__anon496
Iscsi	DevicePath.h	/^  ISCSI_DEVICE_PATH                          *Iscsi;$/;"	m	union:__anon76
Iscsi	DevicePath.h	/^  ISCSI_DEVICE_PATH                          Iscsi;$/;"	m	union:__anon75
IsochronousTransfer	Usb2HostController.h	/^  EFI_USB2_HC_PROTOCOL_ISOCHRONOUS_TRANSFER        IsochronousTransfer;$/;"	m	struct:_EFI_USB2_HC_PROTOCOL
IsochronousTransfer	UsbHostController.h	/^  EFI_USB_HC_PROTOCOL_ISOCHRONOUS_TRANSFER        IsochronousTransfer;$/;"	m	struct:_EFI_USB_HC_PROTOCOL
JMP_M_CONDITIONAL	Ebc.h	154;"	d
JMP_M_CS	Ebc.h	155;"	d
JMP_M_RELATIVE	Ebc.h	153;"	d
JsonRsrcIdentifier	RestJsonStructure.h	/^  EFI_REST_JSON_RESOURCE_TYPE_IDENTIFIER    JsonRsrcIdentifier; \/\/\/< Resource identifier which use to$/;"	m	struct:_EFI_REST_JSON_STRUCTURE_HEADER
JsonStructurePointer	RestJsonStructure.h	/^  VOID  *JsonStructurePointer;$/;"	m	struct:_EFI_REST_JSON_STRUCTURE_HEADER
KEYWORD_HANDLER_ACCESS_NOT_PERMITTED	HiiConfigKeyword.h	31;"	d
KEYWORD_HANDLER_INCOMPATIBLE_VALUE_DETECTED	HiiConfigKeyword.h	30;"	d
KEYWORD_HANDLER_KEYWORD_NOT_FOUND	HiiConfigKeyword.h	29;"	d
KEYWORD_HANDLER_MALFORMED_STRING	HiiConfigKeyword.h	28;"	d
KEYWORD_HANDLER_NAMESPACE_ID_NOT_FOUND	HiiConfigKeyword.h	27;"	d
KEYWORD_HANDLER_NO_ERROR	HiiConfigKeyword.h	26;"	d
KEYWORD_HANDLER_UNDEFINED_PROCESSING_ERROR	HiiConfigKeyword.h	32;"	d
KHz	SpiConfiguration.h	26;"	d
KeepAliveInterval	Tcp4.h	/^  UINT32                  KeepAliveInterval;$/;"	m	struct:__anon318
KeepAliveInterval	Tcp6.h	/^  UINT32   KeepAliveInterval;$/;"	m	struct:__anon469
KeepAliveProbes	Tcp4.h	/^  UINT32                  KeepAliveProbes;$/;"	m	struct:__anon318
KeepAliveProbes	Tcp6.h	/^  UINT32   KeepAliveProbes;$/;"	m	struct:__anon469
KeepAliveTime	Tcp4.h	/^  UINT32                  KeepAliveTime;$/;"	m	struct:__anon318
KeepAliveTime	Tcp6.h	/^  UINT32   KeepAliveTime;$/;"	m	struct:__anon469
Key	SimpleTextInEx.h	/^  EFI_INPUT_KEY   Key;$/;"	m	struct:__anon169
Key	Supplicant.h	/^  UINT8                                   Key[EFI_MAX_KEY_LEN];$/;"	m	struct:__anon123
KeyAttributeData	Kms.h	/^  UINT8         KeyAttributeData[1];$/;"	m	struct:__anon296
KeyAttributeIdMaxCount	Kms.h	/^  UINT16                            KeyAttributeIdMaxCount;$/;"	m	struct:_EFI_KMS_PROTOCOL
KeyAttributeIdStringTypes	Kms.h	/^  UINT8                             KeyAttributeIdStringTypes;$/;"	m	struct:_EFI_KMS_PROTOCOL
KeyAttributeIdentifier	Kms.h	/^  VOID          *KeyAttributeIdentifier;$/;"	m	struct:__anon298
KeyAttributeIdentifierCount	Kms.h	/^  UINT8         KeyAttributeIdentifierCount;$/;"	m	struct:__anon298
KeyAttributeIdentifierType	Kms.h	/^  UINT8         KeyAttributeIdentifierType;$/;"	m	struct:__anon298
KeyAttributeInstance	Kms.h	/^  UINT16        KeyAttributeInstance;$/;"	m	struct:__anon298
KeyAttributeStatus	Kms.h	/^  EFI_STATUS    KeyAttributeStatus;$/;"	m	struct:__anon298
KeyAttributeType	Kms.h	/^  UINT16        KeyAttributeType;$/;"	m	struct:__anon298
KeyAttributeValue	Kms.h	/^  VOID          *KeyAttributeValue;$/;"	m	struct:__anon298
KeyAttributeValueSize	Kms.h	/^  UINT16        KeyAttributeValueSize;$/;"	m	struct:__anon298
KeyAttributes	Kms.h	/^  EFI_KMS_KEY_ATTRIBUTE             *KeyAttributes;$/;"	m	struct:_EFI_KMS_PROTOCOL
KeyAttributesCount	Kms.h	/^  UINTN                             KeyAttributesCount;$/;"	m	struct:_EFI_KMS_PROTOCOL
KeyAttributesSupported	Kms.h	/^  BOOLEAN                           KeyAttributesSupported;$/;"	m	struct:_EFI_KMS_PROTOCOL
KeyCount	BlockIoCrypto.h	/^  UINT64                          KeyCount;$/;"	m	struct:__anon352
KeyData	Kms.h	/^  UINT8         KeyData[1];$/;"	m	struct:__anon293
KeyFormat	Kms.h	/^  EFI_GUID      KeyFormat;$/;"	m	struct:__anon295
KeyFormats	Kms.h	/^  EFI_GUID                          *KeyFormats;$/;"	m	struct:_EFI_KMS_PROTOCOL
KeyFormatsCount	Kms.h	/^  UINTN                             KeyFormatsCount;$/;"	m	struct:_EFI_KMS_PROTOCOL
KeyId	Supplicant.h	/^  UINT8                                   KeyId;$/;"	m	struct:__anon123
KeyIdMaxSize	Kms.h	/^  UINTN                             KeyIdMaxSize;$/;"	m	struct:_EFI_KMS_PROTOCOL
KeyIdVariableLenSupported	Kms.h	/^  BOOLEAN                           KeyIdVariableLenSupported;$/;"	m	struct:_EFI_KMS_PROTOCOL
KeyIdentifier	Kms.h	/^  VOID          *KeyIdentifier;$/;"	m	struct:__anon295
KeyIdentifierSize	Kms.h	/^  UINT8         KeyIdentifierSize;$/;"	m	struct:__anon295
KeyLen	Supplicant.h	/^  UINT8                                   KeyLen;$/;"	m	struct:__anon123
KeyLength	Bis.h	/^  UINT16      KeyLength;      \/\/\/< The length of alg. keys in bits.$/;"	m	struct:__anon172
KeyOwnerGuid	BlockIoCrypto.h	/^  EFI_GUID                        KeyOwnerGuid;$/;"	m	struct:__anon353
KeyOwnerGuid	BlockIoCrypto.h	/^  EFI_GUID                        KeyOwnerGuid;$/;"	m	struct:__anon354
KeyShiftState	SimpleTextInEx.h	/^  UINT32                KeyShiftState;$/;"	m	struct:_EFI_KEY_STATE
KeySize	BlockIoCrypto.h	/^  UINT64         KeySize;$/;"	m	struct:__anon348
KeySize	FirmwareVolume2.h	/^  UINT32                  KeySize;$/;"	m	struct:_EFI_FIRMWARE_VOLUME2_PROTOCOL
KeySize	Kms.h	/^  UINT32        KeySize;$/;"	m	struct:__anon293
KeyState	SimpleTextInEx.h	/^  EFI_KEY_STATE   KeyState;$/;"	m	struct:__anon169
KeyStatus	Kms.h	/^  EFI_STATUS    KeyStatus;$/;"	m	struct:__anon295
KeyToggleState	SimpleTextInEx.h	/^  EFI_KEY_TOGGLE_STATE  KeyToggleState;$/;"	m	struct:_EFI_KEY_STATE
KeyType	Supplicant.h	/^  EFI_SUPPLICANT_KEY_TYPE                 KeyType;$/;"	m	struct:__anon123
KeyValue	Kms.h	/^  VOID          *KeyValue;$/;"	m	struct:__anon295
L2CapAsyncReceive	BluetoothIo.h	/^  EFI_BLUETOOTH_IO_L2CAP_ASYNC_RECEIVE        L2CapAsyncReceive;$/;"	m	struct:_EFI_BLUETOOTH_IO_PROTOCOL
L2CapConnect	BluetoothIo.h	/^  EFI_BLUETOOTH_IO_L2CAP_CONNECT              L2CapConnect;$/;"	m	struct:_EFI_BLUETOOTH_IO_PROTOCOL
L2CapDisconnect	BluetoothIo.h	/^  EFI_BLUETOOTH_IO_L2CAP_DISCONNECT           L2CapDisconnect;$/;"	m	struct:_EFI_BLUETOOTH_IO_PROTOCOL
L2CapRawAsyncReceive	BluetoothIo.h	/^  EFI_BLUETOOTH_IO_L2CAP_RAW_ASYNC_RECEIVE    L2CapRawAsyncReceive;$/;"	m	struct:_EFI_BLUETOOTH_IO_PROTOCOL
L2CapRawReceive	BluetoothIo.h	/^  EFI_BLUETOOTH_IO_L2CAP_RAW_RECEIVE          L2CapRawReceive;$/;"	m	struct:_EFI_BLUETOOTH_IO_PROTOCOL
L2CapRawSend	BluetoothIo.h	/^  EFI_BLUETOOTH_IO_L2CAP_RAW_SEND             L2CapRawSend;$/;"	m	struct:_EFI_BLUETOOTH_IO_PROTOCOL
L2CapReceive	BluetoothIo.h	/^  EFI_BLUETOOTH_IO_L2CAP_RECEIVE              L2CapReceive;$/;"	m	struct:_EFI_BLUETOOTH_IO_PROTOCOL
L2CapRegisterService	BluetoothIo.h	/^  EFI_BLUETOOTH_IO_L2CAP_REGISTER_SERVICE     L2CapRegisterService;$/;"	m	struct:_EFI_BLUETOOTH_IO_PROTOCOL
L2CapSend	BluetoothIo.h	/^  EFI_BLUETOOTH_IO_L2CAP_SEND                 L2CapSend;$/;"	m	struct:_EFI_BLUETOOTH_IO_PROTOCOL
LOADED_IMAGE_PROTOCOL	LoadedImage.h	28;"	d
LOAD_FILE2_PROTOCOL	LoadFile2.h	26;"	d
LOAD_FILE_PROTOCOL	LoadFile.h	26;"	d
LR	DebugSupport.h	/^  UINT32  LR;$/;"	m	struct:__anon492
LR	DebugSupport.h	/^  UINT64  LR;   \/\/ x30 - Link Register$/;"	m	struct:__anon493
Label	S3SaveState.h	/^  EFI_S3_SAVE_STATE_LABEL   Label;$/;"	m	struct:_EFI_S3_SAVE_STATE_PROTOCOL
LabelOff	NvdimmLabel.h	/^  UINT64 LabelOff;$/;"	m	struct:__anon260
LabelSize	NvdimmLabel.h	/^  UINT8  LabelSize;$/;"	m	struct:__anon260
LabelStorageInformation	NvdimmLabel.h	/^  EFI_NVDIMM_LABEL_STORAGE_INFORMATION LabelStorageInformation;$/;"	m	struct:_EFI_NVDIMM_LABEL_PROTOCOL
LabelStorageRead	NvdimmLabel.h	/^  EFI_NVDIMM_LABEL_STORAGE_READ        LabelStorageRead;$/;"	m	struct:_EFI_NVDIMM_LABEL_PROTOCOL
LabelStorageWrite	NvdimmLabel.h	/^  EFI_NVDIMM_LABEL_STORAGE_WRITE       LabelStorageWrite;$/;"	m	struct:_EFI_NVDIMM_LABEL_PROTOCOL
LargeHeader	SuperIo.h	/^  ACPI_LARGE_RESOURCE_HEADER *LargeHeader;$/;"	m	union:__anon224
LastAttemptStatus	FirmwareManagement.h	/^  UINT32                           LastAttemptStatus;$/;"	m	struct:__anon10
LastAttemptVersion	FirmwareManagement.h	/^  UINT32                           LastAttemptVersion;$/;"	m	struct:__anon10
LastBlock	BlockIo.h	/^  EFI_LBA LastBlock;$/;"	m	struct:__anon222
LastEapolFrameSource	EapManagement.h	/^  UINTN     LastEapolFrameSource;$/;"	m	struct:_EFI_EAPOL_SUPPLICANT_PAE_STATISTICS
LastEapolFrameVersion	EapManagement.h	/^  UINTN     LastEapolFrameVersion;$/;"	m	struct:_EFI_EAPOL_SUPPLICANT_PAE_STATISTICS
LbaSize	NvdimmLabel.h	/^  UINT64   LbaSize;$/;"	m	struct:__anon261
Ldtr	DebugSupport.h	/^  UINT32                 Ldtr;$/;"	m	struct:__anon487
Ldtr	DebugSupport.h	/^  UINT64                Ldtr;$/;"	m	struct:__anon489
LeaseTime	Dhcp4.h	/^  UINT32                      LeaseTime;$/;"	m	struct:__anon143
LeftButton	SimplePointer.h	/^  BOOLEAN LeftButton;$/;"	m	struct:__anon369
LeftButton	SimplePointer.h	/^  BOOLEAN LeftButton;$/;"	m	struct:__anon370
LeftColumn	FormBrowser2.h	/^  UINTN   LeftColumn;$/;"	m	struct:__anon243
LegacyRegionBootLocked	LegacyRegion2.h	/^  LegacyRegionBootLocked,      \/\/\/< This region's attributes are locked, cannot be modified until$/;"	e	enum:__anon484
LegacyRegionDecoded	LegacyRegion2.h	/^  LegacyRegionDecoded,         \/\/\/< This region is currently set to allow reads.$/;"	e	enum:__anon484
LegacyRegionNotDecoded	LegacyRegion2.h	/^  LegacyRegionNotDecoded,      \/\/\/< This region is currently set to not allow reads.$/;"	e	enum:__anon484
LegacyRegionNotLocked	LegacyRegion2.h	/^  LegacyRegionNotLocked        \/\/\/< This region's attributes are not locked.$/;"	e	enum:__anon484
LegacyRegionWriteDisabled	LegacyRegion2.h	/^  LegacyRegionWriteDisabled,   \/\/\/< This region is currently set to write protected.$/;"	e	enum:__anon484
LegacyRegionWriteEnabled	LegacyRegion2.h	/^  LegacyRegionWriteEnabled,    \/\/\/< This region is currently set to allow writes.$/;"	e	enum:__anon484
LegacySpiProtocol	SpiIo.h	/^  CONST EFI_LEGACY_SPI_CONTROLLER_PROTOCOL  *LegacySpiProtocol;$/;"	m	struct:_EFI_SPI_IO_PROTOCOL
Length	AcpiSystemDescriptionTable.h	/^  UINT32    Length;$/;"	m	struct:__anon360
Length	AtaPassThru.h	/^  EFI_ATA_PASS_THRU_LENGTH       Length;$/;"	m	struct:__anon128
Length	AuthenticationInfo.h	/^  UINT16           Length;$/;"	m	struct:__anon362
Length	Bis.h	/^  UINT32  Length; \/\/\/< The length of Data in 8 bit bytes.$/;"	m	struct:__anon170
Length	BluetoothAttribute.h	/^  UINT16                             Length;$/;"	m	struct:__anon152
Length	BluetoothAttribute.h	/^  UINT8                 Length;$/;"	m	struct:__anon148
Length	DevicePath.h	/^  UINT8 Length[2];  \/\/\/< Specific Device Path data. Type and Sub-Type define$/;"	m	struct:__anon24
Length	Dhcp4.h	/^  UINT32              Length;$/;"	m	struct:__anon138
Length	Dhcp4.h	/^  UINT8               Length;$/;"	m	struct:__anon136
Length	Dhcp6.h	/^  UINT16                       Length;$/;"	m	struct:__anon512
Length	Dhcp6.h	/^  UINT32                       Length;$/;"	m	struct:__anon510
Length	DriverSupportedEfiVersion.h	/^  UINT32 Length;$/;"	m	struct:_EFI_DRIVER_SUPPORTED_EFI_VERSION_PROTOCOL
Length	Kms.h	/^  UINT32        Length;$/;"	m	struct:__anon296
Length	LegacyRegion2.h	/^  UINT32                      Length;$/;"	m	struct:__anon485
Length	MmIoTrapDispatch.h	/^  UINT16                         Length;$/;"	m	struct:__anon100
Length	RegularExpressionProtocol.h	/^  UINTN        Length;      \/\/ Length of captured sub-expression.$/;"	m	struct:__anon361
Length	RestEx.h	/^  UINT32                         Length;$/;"	m	struct:__anon227
Length	Tls.h	/^  UINT16                        Length;$/;"	m	struct:__anon284
Length	Tls.h	/^  UINT16                        Length;$/;"	m	struct:__anon288
Length	UserManager.h	/^  UINT32  Length;  \/\/\/< The length of this block, in bytes, including this header.$/;"	m	struct:__anon255
Length	WiFi.h	/^  UINT8                              Length;$/;"	m	struct:__anon186
Length	WiFi.h	/^  UINT8                              Length;$/;"	m	struct:__anon198
LfReadData	SpiNorFlash.h	/^  EFI_SPI_NOR_FLASH_PROTOCOL_READ_DATA    LfReadData;$/;"	m	struct:_EFI_SPI_NOR_FLASH_PROTOCOL
LineHeight	HiiFont.h	/^  UINTN   LineHeight; \/\/\/< The height of the line, in pixels.$/;"	m	struct:_EFI_HII_ROW_INFO
LineWidth	HiiFont.h	/^  UINTN   LineWidth;  \/\/\/< The width of the text on the line, in pixels.$/;"	m	struct:_EFI_HII_ROW_INFO
Link	Runtime.h	/^  EFI_LIST_ENTRY          Link;$/;"	m	struct:_EFI_RUNTIME_EVENT_ENTRY
Link	Runtime.h	/^  EFI_LIST_ENTRY          Link;$/;"	m	struct:_EFI_RUNTIME_IMAGE_ENTRY
Link	Shell.h	/^  LIST_ENTRY        Link;       \/\/\/< Linked list members.$/;"	m	struct:__anon502
LinkAddress	Ip6.h	/^  EFI_MAC_ADDRESS         LinkAddress; \/\/\/< Link-layer address of the neighbor.$/;"	m	struct:__anon403
ListPackageLists	HiiDatabase.h	/^  EFI_HII_DATABASE_LIST_PACKS         ListPackageLists;$/;"	m	struct:_EFI_HII_DATABASE_PROTOCOL
ListenAddress	Dhcp4.h	/^  EFI_IPv4_ADDRESS            ListenAddress;$/;"	m	struct:__anon144
ListenInterval	WiFi.h	/^  UINT32                             ListenInterval;$/;"	m	struct:__anon205
ListenPointCount	Dhcp4.h	/^  UINT32                  ListenPointCount;$/;"	m	struct:__anon145
ListenPoints	Dhcp4.h	/^  EFI_DHCP4_LISTEN_POINT  *ListenPoints;$/;"	m	struct:__anon145
ListenPort	Dhcp4.h	/^  UINT16                      ListenPort;$/;"	m	struct:__anon144
ListenTimeout	PxeBaseCode.h	/^  UINT16                      ListenTimeout;$/;"	m	struct:__anon112
LoadFile	LoadFile.h	/^  EFI_LOAD_FILE LoadFile;$/;"	m	struct:_EFI_LOAD_FILE_PROTOCOL
LoadFile	LoadFile2.h	/^  EFI_LOAD_FILE2 LoadFile;$/;"	m	struct:_EFI_LOAD_FILE2_PROTOCOL
LoadOptions	LoadedImage.h	/^  VOID              *LoadOptions;   \/\/\/< A pointer to the image's binary load options.$/;"	m	struct:__anon359
LoadOptionsSize	LoadedImage.h	/^  UINT32            LoadOptionsSize;\/\/\/< The size in bytes of LoadOptions.$/;"	m	struct:__anon359
LocalAddress	Http.h	/^  EFI_IPv4_ADDRESS              LocalAddress;$/;"	m	struct:__anon522
LocalAddress	Http.h	/^  EFI_IPv6_ADDRESS              LocalAddress;$/;"	m	struct:__anon523
LocalAddress	IpSecConfig.h	/^  EFI_IP_ADDRESS_INFO             *LocalAddress;$/;"	m	struct:_EFI_IPSEC_SPD_SELECTOR
LocalAddress	Tcp4.h	/^  EFI_IPv4_ADDRESS        LocalAddress;$/;"	m	struct:__anon315
LocalAddress	Tcp6.h	/^  EFI_IPv6_ADDRESS  LocalAddress;$/;"	m	struct:__anon466
LocalAddress	Udp4.h	/^  EFI_IPv4_ADDRESS        LocalAddress;$/;"	m	struct:__anon371
LocalAddress	Udp6.h	/^  EFI_IPv6_ADDRESS    LocalAddress;$/;"	m	struct:__anon83
LocalAddressCount	IpSecConfig.h	/^  UINT32                          LocalAddressCount;$/;"	m	struct:_EFI_IPSEC_SPD_SELECTOR
LocalAddressIsIPv6	Http.h	/^  BOOLEAN                            LocalAddressIsIPv6;$/;"	m	struct:__anon524
LocalIpAddress	DevicePath.h	/^  EFI_IPv4_ADDRESS                LocalIpAddress;$/;"	m	struct:__anon47
LocalIpAddress	DevicePath.h	/^  EFI_IPv6_ADDRESS                LocalIpAddress;$/;"	m	struct:__anon48
LocalPort	DevicePath.h	/^  UINT16                          LocalPort;$/;"	m	struct:__anon47
LocalPort	DevicePath.h	/^  UINT16                          LocalPort;$/;"	m	struct:__anon48
LocalPort	Dns4.h	/^  UINT16                        LocalPort;$/;"	m	struct:__anon457
LocalPort	Dns6.h	/^  UINT16                        LocalPort;$/;"	m	struct:__anon388
LocalPort	Http.h	/^  UINT16                        LocalPort;$/;"	m	struct:__anon522
LocalPort	Http.h	/^  UINT16                        LocalPort;$/;"	m	struct:__anon523
LocalPort	IpSecConfig.h	/^  UINT16                          LocalPort;$/;"	m	struct:_EFI_IPSEC_SPD_SELECTOR
LocalPort	Mtftp4.h	/^  UINT16                  LocalPort;$/;"	m	struct:__anon434
LocalPort	Mtftp6.h	/^  UINT16                 LocalPort;$/;"	m	struct:__anon557
LocalPort	Tcp4.h	/^  UINT16                  LocalPort;$/;"	m	struct:__anon315
LocalPort	Tcp6.h	/^  UINT16            LocalPort;$/;"	m	struct:__anon466
LocalPort	Udp4.h	/^  UINT16                  LocalPort;$/;"	m	struct:__anon371
LocalPort	Udp6.h	/^  UINT16              LocalPort;$/;"	m	struct:__anon83
LocalPortRange	IpSecConfig.h	/^  UINT16                          LocalPortRange;$/;"	m	struct:_EFI_IPSEC_SPD_SELECTOR
LocalSubnet	Http.h	/^  EFI_IPv4_ADDRESS              LocalSubnet;$/;"	m	struct:__anon522
LocalTunnelAddress	IpSecConfig.h	/^  EFI_IP_ADDRESS              LocalTunnelAddress;$/;"	m	struct:_EFI_IPSEC_TUNNEL_OPTION
Location	MpService.h	/^  EFI_CPU_PHYSICAL_LOCATION  Location;$/;"	m	struct:__anon500
Location2	MpService.h	/^  EFI_CPU_PHYSICAL_LOCATION2  Location2;$/;"	m	union:__anon499
Lock	LegacyRegion2.h	/^  EFI_LEGACY_REGION2_LOCK       Lock;$/;"	m	struct:_EFI_LEGACY_REGION2_PROTOCOL
Lock	MmAccess.h	/^  EFI_MM_LOCK          Lock;$/;"	m	struct:_EFI_MM_ACCESS_PROTOCOL
LockController	LegacySpiController.h	/^  EFI_LEGACY_SPI_CONTROLLER_PROTOCOL_LOCK_CONTROLLER     LockController;$/;"	m	struct:_EFI_LEGACY_SPI_CONTROLLER_PROTOCOL
LockController	LegacySpiFlash.h	/^  EFI_LEGACY_SPI_FLASH_PROTOCOL_LOCK_CONTROLLER    LockController;$/;"	m	struct:_EFI_LEGACY_SPI_FLASH_PROTOCOL
LockState	MmAccess.h	/^  BOOLEAN               LockState;$/;"	m	struct:_EFI_MM_ACCESS_PROTOCOL
LogEvent	TcgService.h	/^  EFI_TCG_LOG_EVENT                 LogEvent;$/;"	m	struct:_EFI_TCG_PROTOCOL
LogicUnit	DevicePath.h	/^  DEVICE_LOGICAL_UNIT_DEVICE_PATH            *LogicUnit;$/;"	m	union:__anon76
LogicUnit	DevicePath.h	/^  DEVICE_LOGICAL_UNIT_DEVICE_PATH            LogicUnit;$/;"	m	union:__anon75
LogicalBlocksPerPhysicalBlock	BlockIo.h	/^  UINT32 LogicalBlocksPerPhysicalBlock;$/;"	m	struct:__anon222
LogicalPartition	BlockIo.h	/^  BOOLEAN LogicalPartition;$/;"	m	struct:__anon222
LoginOption	DevicePath.h	/^  UINT16                          LoginOption;$/;"	m	struct:__anon61
Logoff	EapManagement.h	/^  Logoff,$/;"	e	enum:_EFI_EAPOL_SUPPLICANT_PAE_STATE
LowestAlignedLba	BlockIo.h	/^  EFI_LBA LowestAlignedLba;$/;"	m	struct:__anon222
LowestSupportedImageVersion	FirmwareManagement.h	/^  UINT32                           LowestSupportedImageVersion;$/;"	m	struct:__anon10
Lun	DevicePath.h	/^  UINT16                          Lun;$/;"	m	struct:__anon35
Lun	DevicePath.h	/^  UINT16                          Lun;$/;"	m	struct:__anon36
Lun	DevicePath.h	/^  UINT16                          Lun;$/;"	m	struct:__anon44
Lun	DevicePath.h	/^  UINT64                          Lun;$/;"	m	struct:__anon37
Lun	DevicePath.h	/^  UINT64                          Lun;$/;"	m	struct:__anon53
Lun	DevicePath.h	/^  UINT64                          Lun;$/;"	m	struct:__anon61
Lun	DevicePath.h	/^  UINT8                           Lun;$/;"	m	struct:__anon58
Lun	DevicePath.h	/^  UINT8                           Lun[8];$/;"	m	struct:__anon38
Lun	DevicePath.h	/^  UINT8                           Lun[8];$/;"	m	struct:__anon54
Lun	DevicePath.h	/^  UINT8                         Lun;$/;"	m	struct:__anon43
MAC_ADDR_DEVICE_PATH	DevicePath.h	/^} MAC_ADDR_DEVICE_PATH;$/;"	t	typeref:struct:__anon46
MAX_AARCH64_EXCEPTION	DebugSupport.h	529;"	d
MAX_ARM_EXCEPTION	DebugSupport.h	488;"	d
MAX_EBC_EXCEPTION	DebugSupport.h	452;"	d
MAX_MCAST_FILTER_CNT	SimpleNetwork.h	162;"	d
MAX_PCR_INDEX	Tcg2Protocol.h	105;"	d
MAX_PCR_INDEX	TrEEProtocol.h	93;"	d
MAX_PEERID_LEN	IpSecConfig.h	321;"	d
MAX_START_FIELD_VALID	EapManagement.h	80;"	d
MAX_TLS_SESSION_ID_LENGTH	Tls.h	263;"	d
MBRType	DevicePath.h	/^  UINT8                           MBRType;$/;"	m	struct:__anon66
MBR_TYPE_EFI_PARTITION_TABLE_HEADER	DevicePath.h	1041;"	d
MBR_TYPE_PCAT	DevicePath.h	1040;"	d
MCastFilter	SimpleNetwork.h	/^  EFI_MAC_ADDRESS MCastFilter[MAX_MCAST_FILTER_CNT];$/;"	m	struct:__anon266
MCastFilterCount	SimpleNetwork.h	/^  UINT32          MCastFilterCount;$/;"	m	struct:__anon266
MCastIp	PxeBaseCode.h	/^  EFI_IP_ADDRESS              MCastIp;$/;"	m	struct:__anon112
MCastIpToMac	SimpleNetwork.h	/^  EFI_SIMPLE_NETWORK_MCAST_IP_TO_MAC  MCastIpToMac;$/;"	m	struct:_EFI_SIMPLE_NETWORK_PROTOCOL
MEDIA_CDROM_DP	DevicePath.h	1050;"	d
MEDIA_DEVICE_PATH	DevicePath.h	990;"	d
MEDIA_FILEPATH_DP	DevicePath.h	1079;"	d
MEDIA_FW_VOL_DEVICE_PATH	DevicePath.h	/^} MEDIA_FW_VOL_DEVICE_PATH;$/;"	t	typeref:struct:__anon71
MEDIA_FW_VOL_FILEPATH_DEVICE_PATH	DevicePath.h	/^} MEDIA_FW_VOL_FILEPATH_DEVICE_PATH;$/;"	t	typeref:struct:__anon70
MEDIA_HARDDRIVE_DP	DevicePath.h	995;"	d
MEDIA_PIWG_FW_FILE_DP	DevicePath.h	1111;"	d
MEDIA_PIWG_FW_VOL_DP	DevicePath.h	1127;"	d
MEDIA_PROTOCOL_DEVICE_PATH	DevicePath.h	/^} MEDIA_PROTOCOL_DEVICE_PATH;$/;"	t	typeref:struct:__anon69
MEDIA_PROTOCOL_DP	DevicePath.h	1093;"	d
MEDIA_RAM_DISK_DEVICE_PATH	DevicePath.h	/^} MEDIA_RAM_DISK_DEVICE_PATH;$/;"	t	typeref:struct:__anon73
MEDIA_RAM_DISK_DP	DevicePath.h	1186;"	d
MEDIA_RELATIVE_OFFSET_RANGE_DEVICE_PATH	DevicePath.h	/^} MEDIA_RELATIVE_OFFSET_RANGE_DEVICE_PATH;$/;"	t	typeref:struct:__anon72
MEDIA_RELATIVE_OFFSET_RANGE_DP	DevicePath.h	1143;"	d
MEDIA_VENDOR_DP	DevicePath.h	1074;"	d
MEMMAP_DEVICE_PATH	DevicePath.h	/^} MEMMAP_DEVICE_PATH;$/;"	t	typeref:struct:__anon27
MESSAGING_DEVICE_PATH	DevicePath.h	322;"	d
MFI_SCSI_IO_TYPE_A	ScsiIo.h	38;"	d
MFI_SCSI_IO_TYPE_B	ScsiIo.h	39;"	d
MFI_SCSI_IO_TYPE_BRIDGE	ScsiIo.h	44;"	d
MFI_SCSI_IO_TYPE_OCRW	ScsiIo.h	43;"	d
MFI_SCSI_IO_TYPE_OSD	ScsiIo.h	45;"	d
MFI_SCSI_IO_TYPE_RAID	ScsiIo.h	40;"	d
MFI_SCSI_IO_TYPE_RBC	ScsiIo.h	42;"	d
MFI_SCSI_IO_TYPE_SES	ScsiIo.h	41;"	d
MHz	SpiConfiguration.h	27;"	d
MMIO_COPY_UINT16	DeviceIo.h	/^  MMIO_COPY_UINT16 = 5,$/;"	e	enum:__anon503
MMIO_COPY_UINT32	DeviceIo.h	/^  MMIO_COPY_UINT32 = 6,$/;"	e	enum:__anon503
MMIO_COPY_UINT64	DeviceIo.h	/^  MMIO_COPY_UINT64 = 7$/;"	e	enum:__anon503
MMIO_COPY_UINT8	DeviceIo.h	/^  MMIO_COPY_UINT8  = 4,$/;"	e	enum:__anon503
MM_COMPLETION	MmMp.h	/^typedef VOID* MM_COMPLETION;$/;"	t
MM_DISPATCH_COMPLETION_TOKEN	MmMp.h	/^} MM_DISPATCH_COMPLETION_TOKEN;$/;"	t	typeref:struct:__anon252
MM_IO_UINT16	MmCpuIo.h	/^  MM_IO_UINT16 = 1,$/;"	e	enum:__anon257
MM_IO_UINT32	MmCpuIo.h	/^  MM_IO_UINT32 = 2,$/;"	e	enum:__anon257
MM_IO_UINT64	MmCpuIo.h	/^  MM_IO_UINT64 = 3$/;"	e	enum:__anon257
MM_IO_UINT8	MmCpuIo.h	/^  MM_IO_UINT8  = 0,$/;"	e	enum:__anon257
MOVI_DATAWIDTH16	Ebc.h	130;"	d
MOVI_DATAWIDTH32	Ebc.h	131;"	d
MOVI_DATAWIDTH64	Ebc.h	132;"	d
MOVI_MOVEWIDTH16	Ebc.h	135;"	d
MOVI_MOVEWIDTH32	Ebc.h	136;"	d
MOVI_MOVEWIDTH64	Ebc.h	137;"	d
MOVI_MOVEWIDTH8	Ebc.h	134;"	d
MOVI_M_DATAWIDTH	Ebc.h	129;"	d
MOVI_M_IMMDATA	Ebc.h	128;"	d
MOVI_M_MOVEWIDTH	Ebc.h	133;"	d
MSG_1394_DP	DevicePath.h	403;"	d
MSG_ATAPI_DP	DevicePath.h	327;"	d
MSG_BLUETOOTH_DP	DevicePath.h	957;"	d
MSG_BLUETOOTH_LE_DP	DevicePath.h	981;"	d
MSG_DEVICE_LOGICAL_UNIT_DP	DevicePath.h	499;"	d
MSG_DNS_DP	DevicePath.h	844;"	d
MSG_EMMC_DP	DevicePath.h	897;"	d
MSG_FIBRECHANNELEX_DP	DevicePath.h	383;"	d
MSG_FIBRECHANNEL_DP	DevicePath.h	363;"	d
MSG_I2O_DP	DevicePath.h	539;"	d
MSG_INFINIBAND_DP	DevicePath.h	652;"	d
MSG_IPv4_DP	DevicePath.h	567;"	d
MSG_IPv6_DP	DevicePath.h	608;"	d
MSG_ISCSI_DP	DevicePath.h	906;"	d
MSG_MAC_ADDR_DP	DevicePath.h	551;"	d
MSG_NVME_NAMESPACE_DP	DevicePath.h	834;"	d
MSG_SASEX_DP	DevicePath.h	810;"	d
MSG_SATA_DP	DevicePath.h	511;"	d
MSG_SCSI_DP	DevicePath.h	347;"	d
MSG_SD_DP	DevicePath.h	888;"	d
MSG_UART_DP	DevicePath.h	693;"	d
MSG_UFS_DP	DevicePath.h	872;"	d
MSG_URI_DP	DevicePath.h	860;"	d
MSG_USB_CLASS_DP	DevicePath.h	435;"	d
MSG_USB_DP	DevicePath.h	419;"	d
MSG_USB_WWID_DP	DevicePath.h	468;"	d
MSG_VENDOR_DP	DevicePath.h	745;"	d
MSG_VLAN_DP	DevicePath.h	945;"	d
MSG_WIFI_DP	DevicePath.h	969;"	d
MacAddr	DevicePath.h	/^  MAC_ADDR_DEVICE_PATH                       *MacAddr;$/;"	m	union:__anon76
MacAddr	DevicePath.h	/^  MAC_ADDR_DEVICE_PATH                       MacAddr;$/;"	m	union:__anon75
MacAddr	PxeBaseCode.h	/^  EFI_MAC_ADDRESS MacAddr;$/;"	m	struct:__anon107
MacAddress	DevicePath.h	/^  EFI_MAC_ADDRESS                 MacAddress;$/;"	m	struct:__anon46
MacAddressChangeable	SimpleNetwork.h	/^  BOOLEAN         MacAddressChangeable;$/;"	m	struct:__anon266
Magik	Dhcp4.h	/^    UINT32            Magik;$/;"	m	struct:__anon138::__anon139
Major	Bis.h	/^  UINT32  Major;  \/\/\/< The major BIS version number.$/;"	m	struct:__anon171
Major	NvdimmLabel.h	/^  UINT16 Major;$/;"	m	struct:__anon260
Major	RestEx.h	/^  UINT8  Major;$/;"	m	struct:__anon226
Major	Tcg2Protocol.h	/^  UINT8 Major;$/;"	m	struct:tdEFI_TCG2_VERSION
Major	TcgService.h	/^  UINT8  Major;$/;"	m	struct:__anon357
Major	Tls.h	/^  UINT8                         Major;$/;"	m	struct:__anon281
Major	TrEEProtocol.h	/^  UINT8 Major;$/;"	m	struct:_TREE_VERSION
MajorRevision	Usb2HostController.h	/^  UINT16                                           MajorRevision;$/;"	m	struct:_EFI_USB2_HC_PROTOCOL
MajorRevision	UsbHostController.h	/^  UINT16                                          MajorRevision;$/;"	m	struct:_EFI_USB_HC_PROTOCOL
MajorVer	NetworkInterfaceIdentifier.h	/^  UINT8     MajorVer;   \/\/\/< Major version number.$/;"	m	struct:_EFI_NETWORK_INTERFACE_IDENTIFIER_PROTOCOL
MajorVersion	RestJsonStructure.h	/^  CHAR8 *MajorVersion;       \/\/\/< Resource major version$/;"	m	struct:_EFI_REST_JSON_RESOURCE_TYPE_NAMESPACE
MajorVersion	Shell.h	/^  UINT32                                    MajorVersion;$/;"	m	struct:_EFI_SHELL_PROTOCOL
MajorVersion	Smbios.h	/^  UINT8                    MajorVersion;    \/\/\/< The major revision of the SMBIOS specification supported.$/;"	m	struct:_EFI_SMBIOS_PROTOCOL
MakeCallbacks	PxeBaseCode.h	/^  BOOLEAN                       MakeCallbacks;$/;"	m	struct:__anon116
ManualSet	IpSecConfig.h	/^  BOOLEAN                         ManualSet;$/;"	m	struct:_EFI_IPSEC_SA_DATA
ManualSet	IpSecConfig.h	/^  BOOLEAN                    ManualSet;$/;"	m	struct:_EFI_IPSEC_SA_DATA2
ManufacturerID	Tcg2Protocol.h	/^  UINT32                           ManufacturerID;$/;"	m	struct:tdEFI_TCG2_BOOT_SERVICE_CAPABILITY
ManufacturerID	TrEEProtocol.h	/^  UINT32                ManufacturerID;$/;"	m	struct:_TREE_BOOT_SERVICE_CAPABILITY
ManufacturingDate	NvdimmLabel.h	/^  UINT16 ManufacturingDate;$/;"	m	struct:__anon262
ManufacturingLocation	NvdimmLabel.h	/^  UINT8  ManufacturingLocation;$/;"	m	struct:__anon262
Map	DeviceIo.h	/^  EFI_IO_MAP              Map;$/;"	m	struct:_EFI_DEVICE_IO_PROTOCOL
Map	PciIo.h	/^  EFI_PCI_IO_PROTOCOL_MAP                 Map;$/;"	m	struct:_EFI_PCI_IO_PROTOCOL
Map	PciRootBridgeIo.h	/^  EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_MAP             Map;$/;"	m	struct:_EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL
Mapping	NvdimmLabel.h	/^  EFI_NVDIMM_LABEL_SET_COOKIE_MAP Mapping[0];$/;"	m	struct:__anon263
MarkParity	SerialIo.h	/^  MarkParity,$/;"	e	enum:__anon546
MatchString	RegularExpressionProtocol.h	/^  EFI_REGULAR_EXPRESSION_MATCH     MatchString;$/;"	m	struct:_EFI_REGULAR_EXPRESSION_PROTOCOL
MaxChannelTime	WiFi.h	/^  UINT32                             MaxChannelTime;$/;"	m	struct:__anon189
MaxClockHz	SpiConfiguration.h	/^  UINT32                   MaxClockHz;$/;"	m	struct:_EFI_SPI_PERIPHERAL
MaxClockHz	SpiConfiguration.h	/^  UINT32       MaxClockHz;$/;"	m	struct:_EFI_SPI_PART
MaxCommandSize	Tcg2Protocol.h	/^  UINT16                           MaxCommandSize;$/;"	m	struct:tdEFI_TCG2_BOOT_SERVICE_CAPABILITY
MaxCommandSize	TrEEProtocol.h	/^  UINT16                MaxCommandSize;$/;"	m	struct:_TREE_BOOT_SERVICE_CAPABILITY
MaxMCastFilterCount	SimpleNetwork.h	/^  UINT32          MaxMCastFilterCount;$/;"	m	struct:__anon266
MaxMode	GraphicsOutput.h	/^  UINT32                                 MaxMode;$/;"	m	struct:__anon241
MaxMode	SimpleTextOut.h	/^  INT32   MaxMode;$/;"	m	struct:__anon218
MaxPacketSize	Ip4.h	/^  UINT32                  MaxPacketSize;$/;"	m	struct:__anon338
MaxPacketSize	Ip6.h	/^  UINT32                  MaxPacketSize;$/;"	m	struct:__anon405
MaxPacketSize	SimpleNetwork.h	/^  UINT32          MaxPacketSize;$/;"	m	struct:__anon266
MaxResponseSize	Tcg2Protocol.h	/^  UINT16                           MaxResponseSize;$/;"	m	struct:tdEFI_TCG2_BOOT_SERVICE_CAPABILITY
MaxResponseSize	TrEEProtocol.h	/^  UINT16                MaxResponseSize;$/;"	m	struct:_TREE_BOOT_SERVICE_CAPABILITY
MaxStart	EapManagement.h	/^  UINTN       MaxStart;$/;"	m	struct:_EFI_EAPOL_SUPPLICANT_PAE_CONFIGURATION
MaxSupplicantPaeState	EapManagement.h	/^  MaxSupplicantPaeState$/;"	e	enum:_EFI_EAPOL_SUPPLICANT_PAE_STATE
MaxSynBackLog	Tcp4.h	/^  UINT32                  MaxSynBackLog;$/;"	m	struct:__anon318
MaxSynBackLog	Tcp6.h	/^  UINT32   MaxSynBackLog;$/;"	m	struct:__anon469
MaxTxPowerLevel	WiFi.h	/^  UINT8                              MaxTxPowerLevel;$/;"	m	struct:__anon190
MaximumChipsetPhase	PciPlatform.h	/^  MaximumChipsetPhase$/;"	e	enum:__anon246
MaximumOffset	LegacySpiController.h	/^  UINT32                                                 MaximumOffset;$/;"	m	struct:_EFI_LEGACY_SPI_CONTROLLER_PROTOCOL
MaximumRangeBytes	LegacySpiController.h	/^  UINT32                                                 MaximumRangeBytes;$/;"	m	struct:_EFI_LEGACY_SPI_CONTROLLER_PROTOCOL
MaximumSwiValue	MmSwDispatch.h	/^  UINTN                 MaximumSwiValue;$/;"	m	struct:_EFI_MM_SW_DISPATCH_PROTOCOL
MaximumSwiValue	SmmSwDispatch2.h	/^  UINTN                  MaximumSwiValue;$/;"	m	struct:_EFI_SMM_SW_DISPATCH2_PROTOCOL
MaximumTransferBytes	SpiHc.h	/^  UINT32                          MaximumTransferBytes;$/;"	m	struct:_EFI_SPI_HC_PROTOCOL
MaximumTransferBytes	SpiIo.h	/^  UINT32                                    MaximumTransferBytes;$/;"	m	struct:_EFI_SPI_IO_PROTOCOL
Mbr	PartitionInfo.h	/^    MBR_PARTITION_RECORD     Mbr;$/;"	m	union:__anon482::__anon483
McastIpToMac	ManagedNetwork.h	/^  EFI_MANAGED_NETWORK_MCAST_IP_TO_MAC     McastIpToMac;$/;"	m	struct:_EFI_MANAGED_NETWORK_PROTOCOL
Md5Hash	Hash.h	/^  EFI_MD5_HASH     *Md5Hash;$/;"	m	union:__anon481
Md5Hash	Hash2.h	/^  EFI_MD5_HASH2     Md5Hash;$/;"	m	union:__anon97
Media	BlockIo.h	/^  EFI_BLOCK_IO_MEDIA  *Media;$/;"	m	struct:_EFI_BLOCK_IO_PROTOCOL
Media	BlockIo2.h	/^  EFI_BLOCK_IO_MEDIA      *Media;$/;"	m	struct:_EFI_BLOCK_IO2_PROTOCOL
Media	BlockIoCrypto.h	/^  EFI_BLOCK_IO_MEDIA                        *Media;$/;"	m	struct:_EFI_BLOCK_IO_CRYPTO_PROTOCOL
MediaHeader	ManagedNetwork.h	/^  VOID          *MediaHeader;$/;"	m	struct:__anon174
MediaHeaderSize	SimpleNetwork.h	/^  UINT32          MediaHeaderSize;$/;"	m	struct:__anon266
MediaId	BlockIo.h	/^  UINT32  MediaId;$/;"	m	struct:__anon222
MediaPresent	BlockIo.h	/^  BOOLEAN MediaPresent;$/;"	m	struct:__anon222
MediaPresent	SimpleNetwork.h	/^  BOOLEAN         MediaPresent;$/;"	m	struct:__anon266
MediaPresentSupported	SimpleNetwork.h	/^  BOOLEAN         MediaPresentSupported;$/;"	m	struct:__anon266
MediaProtocol	DevicePath.h	/^  MEDIA_PROTOCOL_DEVICE_PATH                 *MediaProtocol;$/;"	m	union:__anon76
MediaProtocol	DevicePath.h	/^  MEDIA_PROTOCOL_DEVICE_PATH                 MediaProtocol;$/;"	m	union:__anon75
MediaState	AdapterInformation.h	/^  EFI_STATUS                    MediaState;$/;"	m	struct:__anon419
MediaType	AdapterInformation.h	/^  UINT8 MediaType;$/;"	m	struct:__anon420
Mem	CpuIo2.h	/^  EFI_CPU_IO_PROTOCOL_ACCESS  Mem;$/;"	m	struct:_EFI_CPU_IO2_PROTOCOL
Mem	DeviceIo.h	/^  EFI_IO_ACCESS           Mem;$/;"	m	struct:_EFI_DEVICE_IO_PROTOCOL
Mem	MmCpuIo.h	/^  EFI_MM_IO_ACCESS Mem;$/;"	m	struct:_EFI_MM_CPU_IO_PROTOCOL
Mem	PciIo.h	/^  EFI_PCI_IO_PROTOCOL_ACCESS              Mem;$/;"	m	struct:_EFI_PCI_IO_PROTOCOL
Mem	PciRootBridgeIo.h	/^  EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_ACCESS          Mem;$/;"	m	struct:_EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL
MemMap	DevicePath.h	/^  MEMMAP_DEVICE_PATH                         *MemMap;$/;"	m	union:__anon76
MemMap	DevicePath.h	/^  MEMMAP_DEVICE_PATH                         MemMap;$/;"	m	union:__anon75
MemoryDesciptorVersion	Runtime.h	/^  UINT32                  MemoryDesciptorVersion; \/\/\/< Version of a memory descriptor that is returned by GetMemoryMap().$/;"	m	struct:_EFI_RUNTIME_ARCH_PROTOCOL
MemoryDescriptorSize	Runtime.h	/^  UINTN                   MemoryDescriptorSize;   \/\/\/< Size of a memory descriptor that is returned by GetMemoryMap().$/;"	m	struct:_EFI_RUNTIME_ARCH_PROTOCOL
MemoryMapPhysical	Runtime.h	/^  EFI_MEMORY_DESCRIPTOR   *MemoryMapPhysical;     \/\/\/< Pointer to a runtime buffer that contains a copy of$/;"	m	struct:_EFI_RUNTIME_ARCH_PROTOCOL
MemoryMapSize	Runtime.h	/^  UINTN                   MemoryMapSize;\/\/\/< Size of the memory map in bytes contained in MemoryMapPhysical and MemoryMapVirtual.$/;"	m	struct:_EFI_RUNTIME_ARCH_PROTOCOL
MemoryMapVirtual	Runtime.h	/^  EFI_MEMORY_DESCRIPTOR   *MemoryMapVirtual;      \/\/\/< Pointer to MemoryMapPhysical that is updated to virtual mode after SetVirtualAddressMap().$/;"	m	struct:_EFI_RUNTIME_ARCH_PROTOCOL
MemoryType	DevicePath.h	/^  UINT32                          MemoryType;$/;"	m	struct:__anon27
Message	Http.h	/^  EFI_HTTP_MESSAGE              *Message;$/;"	m	struct:__anon531
MessageCode	DriverHealth.h	/^  UINT64          MessageCode;$/;"	m	struct:__anon441
MessageLength	MmCommunication.h	/^  UINTN     MessageLength;$/;"	m	struct:__anon346
MessageType	Dhcp6.h	/^  UINT32                       MessageType:8;$/;"	m	struct:__anon509
MessageType	PxeBaseCode.h	/^  UINT32  MessageType:8;$/;"	m	struct:__anon114
MetadataBuffer	NvmExpressPassthru.h	/^  VOID                              *MetadataBuffer;$/;"	m	struct:__anon545
MetadataLength	NvmExpressPassthru.h	/^  UINT32                            MetadataLength;$/;"	m	struct:__anon545
MetaiMatch	UnicodeCollation.h	/^  EFI_UNICODE_COLLATION_METAIMATCH  MetaiMatch;$/;"	m	struct:_EFI_UNICODE_COLLATION_PROTOCOL
Method	Http.h	/^  EFI_HTTP_METHOD               Method;$/;"	m	struct:__anon526
MinChannelTime	WiFi.h	/^  UINT32                             MinChannelTime;$/;"	m	struct:__anon189
MinClockHz	SpiConfiguration.h	/^  UINT32       MinClockHz;$/;"	m	struct:_EFI_SPI_PART
MinimumTriggerPeriod	MmControl.h	/^  EFI_MM_PERIOD      MinimumTriggerPeriod;$/;"	m	struct:_EFI_MM_CONTROL_PROTOCOL
Minor	Bis.h	/^  UINT32  Minor;  \/\/\/< A minor BIS version number.$/;"	m	struct:__anon171
Minor	NvdimmLabel.h	/^  UINT16 Minor;$/;"	m	struct:__anon260
Minor	RestEx.h	/^  UINT8  Minor;$/;"	m	struct:__anon226
Minor	Tcg2Protocol.h	/^  UINT8 Minor;$/;"	m	struct:tdEFI_TCG2_VERSION
Minor	TcgService.h	/^  UINT8  Minor;$/;"	m	struct:__anon357
Minor	Tls.h	/^  UINT8                         Minor;$/;"	m	struct:__anon281
Minor	TrEEProtocol.h	/^  UINT8 Minor;$/;"	m	struct:_TREE_VERSION
MinorRevision	Usb2HostController.h	/^  UINT16                                           MinorRevision;$/;"	m	struct:_EFI_USB2_HC_PROTOCOL
MinorRevision	UsbHostController.h	/^  UINT16                                          MinorRevision;$/;"	m	struct:_EFI_USB_HC_PROTOCOL
MinorVer	NetworkInterfaceIdentifier.h	/^  UINT8     MinorVer;   \/\/\/< Minor version number.$/;"	m	struct:_EFI_NETWORK_INTERFACE_IDENTIFIER_PROTOCOL
MinorVersion	RestJsonStructure.h	/^  CHAR8 *MinorVersion;       \/\/\/< Resource minor version$/;"	m	struct:_EFI_REST_JSON_RESOURCE_TYPE_NAMESPACE
MinorVersion	Shell.h	/^  UINT32                                    MinorVersion;$/;"	m	struct:_EFI_SHELL_PROTOCOL
MinorVersion	Smbios.h	/^  UINT8                    MinorVersion;    \/\/\/< The minor revision of the SMBIOS specification supported.$/;"	m	struct:_EFI_SMBIOS_PROTOCOL
MmiTickInterval	MmPeriodicTimerDispatch.h	/^  UINT64  MmiTickInterval;$/;"	m	struct:__anon384
MmramReservedRegions	MmConfiguration.h	/^  EFI_MM_RESERVED_MMRAM_REGION  *MmramReservedRegions;$/;"	m	struct:_EFI_MM_CONFIGURATION_PROTOCOL
MmramReservedSize	MmConfiguration.h	/^  UINT64                  MmramReservedSize;$/;"	m	struct:_EFI_MM_RESERVED_MMRAM_REGION
MmramReservedStart	MmConfiguration.h	/^  EFI_PHYSICAL_ADDRESS    MmramReservedStart;$/;"	m	struct:_EFI_MM_RESERVED_MMRAM_REGION
Mode	AbsolutePointer.h	/^  EFI_ABSOLUTE_POINTER_MODE       *Mode;$/;"	m	struct:_EFI_ABSOLUTE_POINTER_PROTOCOL
Mode	AtaPassThru.h	/^  EFI_ATA_PASS_THRU_MODE               *Mode;$/;"	m	struct:_EFI_ATA_PASS_THRU_PROTOCOL
Mode	GraphicsOutput.h	/^  EFI_GRAPHICS_OUTPUT_PROTOCOL_MODE        *Mode;$/;"	m	struct:_EFI_GRAPHICS_OUTPUT_PROTOCOL
Mode	GraphicsOutput.h	/^  UINT32                                 Mode;$/;"	m	struct:__anon241
Mode	IdeControllerInit.h	/^  UINT32                         Mode;$/;"	m	struct:__anon132
Mode	IdeControllerInit.h	/^  UINT32       Mode;    \/\/\/< The actual ATA mode. This field is not a bit map.$/;"	m	struct:__anon131
Mode	IpSecConfig.h	/^  EFI_IPSEC_MODE                  Mode;$/;"	m	struct:_EFI_IPSEC_SA_DATA
Mode	IpSecConfig.h	/^  EFI_IPSEC_MODE             Mode;$/;"	m	struct:_EFI_IPSEC_SA_DATA2
Mode	IpSecConfig.h	/^  EFI_IPSEC_MODE          Mode;$/;"	m	struct:_EFI_IPSEC_PROCESS_POLICY
Mode	NvmExpressPassthru.h	/^  EFI_NVM_EXPRESS_PASS_THRU_MODE                     *Mode;$/;"	m	struct:_EFI_NVM_EXPRESS_PASS_THRU_PROTOCOL
Mode	PxeBaseCode.h	/^  EFI_PXE_BASE_CODE_MODE            *Mode;$/;"	m	struct:_EFI_PXE_BASE_CODE_PROTOCOL
Mode	ScsiPassThru.h	/^  EFI_SCSI_PASS_THRU_MODE               *Mode;$/;"	m	struct:_EFI_SCSI_PASS_THRU_PROTOCOL
Mode	ScsiPassThruExt.h	/^  EFI_EXT_SCSI_PASS_THRU_MODE                *Mode;$/;"	m	struct:_EFI_EXT_SCSI_PASS_THRU_PROTOCOL
Mode	SerialIo.h	/^  EFI_SERIAL_IO_MODE          *Mode;$/;"	m	struct:_EFI_SERIAL_IO_PROTOCOL
Mode	SimpleNetwork.h	/^  EFI_SIMPLE_NETWORK_MODE             *Mode;$/;"	m	struct:_EFI_SIMPLE_NETWORK_PROTOCOL
Mode	SimplePointer.h	/^  EFI_SIMPLE_POINTER_MODE       *Mode;$/;"	m	struct:_EFI_SIMPLE_POINTER_PROTOCOL
Mode	SimpleTextOut.h	/^  EFI_SIMPLE_TEXT_OUTPUT_MODE   *Mode;$/;"	m	struct:_EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL
Mode	SimpleTextOut.h	/^  INT32   Mode;$/;"	m	struct:__anon218
ModeStr	Mtftp4.h	/^  UINT8                       *ModeStr;$/;"	m	struct:_EFI_MTFTP4_TOKEN
ModeStr	Mtftp6.h	/^  UINT8                       *ModeStr;$/;"	m	struct:_EFI_MTFTP6_TOKEN
Modify	SuperIo.h	/^  EFI_SIO_MODIFY Modify;$/;"	m	struct:_EFI_SIO_PROTOCOL
Module	MpService.h	/^UINT32  Module;$/;"	m	struct:__anon498
MonotonicCount	FirmwareManagement.h	/^  UINT64                                  MonotonicCount;$/;"	m	struct:__anon11
Mrc	Dhcp6.h	/^  UINT32                       Mrc;$/;"	m	struct:__anon513
Mrd	Dhcp6.h	/^  UINT32                       Mrd;$/;"	m	struct:__anon513
Mrt	Dhcp6.h	/^  UINT32                       Mrt;$/;"	m	struct:__anon513
Mtftp	PxeBaseCode.h	/^  EFI_PXE_BASE_CODE_MTFTP           Mtftp;$/;"	m	struct:_EFI_PXE_BASE_CODE_PROTOCOL
Mtu	PxeBaseCode.h	/^    UINT32  Mtu;$/;"	m	union:__anon102::__anon103
MultiWordDmaMode	IdeControllerInit.h	/^  EFI_ATA_MODE           MultiWordDmaMode;$/;"	m	struct:__anon133
MulticastFlag	ManagedNetwork.h	/^  BOOLEAN       MulticastFlag;$/;"	m	struct:__anon174
MultipleBSSID	WiFi.h	/^  EFI_80211_MULTIPLE_BSSID           *MultipleBSSID;$/;"	m	struct:__anon200
MultipleTxSupported	SimpleNetwork.h	/^  BOOLEAN         MultipleTxSupported;$/;"	m	struct:__anon266
MustUseList	PxeBaseCode.h	/^  BOOLEAN                   MustUseList;$/;"	m	struct:__anon110
MyOff	NvdimmLabel.h	/^  UINT64 MyOff;$/;"	m	struct:__anon260
MySize	NvdimmLabel.h	/^  UINT64 MySize;$/;"	m	struct:__anon260
NFITDeviceHandle	DevicePath.h	/^  UINT32                          NFITDeviceHandle;$/;"	m	struct:__anon34
NII_InterfacePointer	NetworkInterfaceIdentifier.h	/^    VOID             *NII_InterfacePointer; \/\/\/< Pointer to the NII interface structure.$/;"	m	struct:undiconfig_table::__anon3
NII_entry	NetworkInterfaceIdentifier.h	/^  } NII_entry[1];$/;"	m	struct:undiconfig_table	typeref:struct:undiconfig_table::__anon3
NLabel	NvdimmLabel.h	/^  UINT16   NLabel;$/;"	m	struct:__anon261
NORMAL_CMD	NvmExpressPassthru.h	54;"	d
NO_DISK_SIGNATURE	DevicePath.h	1043;"	d
NSlot	NvdimmLabel.h	/^  UINT32 NSlot;$/;"	m	struct:__anon260
NVDIMM_NAMESPACE_DEVICE_PATH	DevicePath.h	/^} NVDIMM_NAMESPACE_DEVICE_PATH;$/;"	t	typeref:struct:__anon51
NVDIMM_NAMESPACE_DP	DevicePath.h	733;"	d
NVME_ADMIN_QUEUE	NvmExpressPassthru.h	79;"	d
NVME_CDW0	NvmExpressPassthru.h	/^} NVME_CDW0;$/;"	t	typeref:struct:__anon542
NVME_IO_QUEUE	NvmExpressPassthru.h	80;"	d
NVME_NAMESPACE_DEVICE_PATH	DevicePath.h	/^} NVME_NAMESPACE_DEVICE_PATH;$/;"	t	typeref:struct:__anon55
Name	Ip4Config2.h	/^  CHAR16                Name[EFI_IP4_CONFIG2_INTERFACE_INFO_NAME_SIZE];$/;"	m	struct:__anon5
Name	Ip6Config.h	/^  CHAR16                Name[32];$/;"	m	struct:__anon14
Name	IpSecConfig.h	/^  UINT8                           Name[MAX_PEERID_LEN];$/;"	m	struct:_EFI_IPSEC_SPD_DATA
Name	NvdimmLabel.h	/^  CHAR8    Name[EFI_NVDIMM_LABEL_NAME_LEN];$/;"	m	struct:__anon261
NameGuid	FirmwareVolume2.h	/^  EFI_GUID                *NameGuid;$/;"	m	struct:__anon539
NameSpace	RestJsonStructure.h	/^  EFI_REST_JSON_RESOURCE_TYPE_NAMESPACE NameSpace; \/\/\/< Namespace of this resource type.$/;"	m	struct:_EFI_REST_JSON_RESOURCE_TYPE_IDENTIFIER
NamespaceId	DevicePath.h	/^  UINT32                          NamespaceId;$/;"	m	struct:__anon55
NamespaceUuid	DevicePath.h	/^  UINT64                          NamespaceUuid;$/;"	m	struct:__anon55
NasIpAddr	AuthenticationInfo.h	/^  UINT8            NasIpAddr[16];            \/\/\/< IPv4 or IPv6 address.$/;"	m	struct:__anon363
NasSecret	AuthenticationInfo.h	/^  UINT8            NasSecret[1];$/;"	m	struct:__anon363
NasSecretLength	AuthenticationInfo.h	/^  UINT16           NasSecretLength;$/;"	m	struct:__anon363
Neighbor	Ip6.h	/^  EFI_IPv6_ADDRESS        Neighbor;    \/\/\/< The on-link unicast\/anycast IP address of the neighbor.$/;"	m	struct:__anon403
NeighborCache	Ip6.h	/^  EFI_IP6_NEIGHBOR_CACHE  *NeighborCache;$/;"	m	struct:__anon405
NeighborCount	Ip6.h	/^  UINT32                  NeighborCount;$/;"	m	struct:__anon405
Neighbors	Ip6.h	/^  EFI_IP6_NEIGHBORS       Neighbors;$/;"	m	struct:_EFI_IP6_PROTOCOL
Network	WiFi2.h	/^  EFI_80211_NETWORK                         *Network;$/;"	m	struct:__anon312
Network	WiFi2.h	/^  EFI_80211_NETWORK                         Network;$/;"	m	struct:__anon309
NetworkDesc	WiFi2.h	/^  EFI_80211_NETWORK_DESCRIPTION             NetworkDesc[1];$/;"	m	struct:__anon310
NetworkProtocol	DevicePath.h	/^  UINT16                          NetworkProtocol;$/;"	m	struct:__anon61
NetworkQuality	WiFi2.h	/^  UINT8                                     NetworkQuality;$/;"	m	struct:__anon309
NewChildHandle	Tcp4.h	/^  EFI_HANDLE                NewChildHandle;$/;"	m	struct:__anon323
NewChildHandle	Tcp6.h	/^  EFI_HANDLE                NewChildHandle;$/;"	m	struct:__anon474
NewImage	HiiImage.h	/^  EFI_HII_NEW_IMAGE     NewImage;$/;"	m	struct:_EFI_HII_IMAGE_PROTOCOL
NewImageEx	HiiImageEx.h	/^  EFI_HII_NEW_IMAGE_EX      NewImageEx;$/;"	m	struct:_EFI_HII_IMAGE_EX_PROTOCOL
NewPackageList	HiiDatabase.h	/^  EFI_HII_DATABASE_NEW_PACK           NewPackageList;$/;"	m	struct:_EFI_HII_DATABASE_PROTOCOL
NewString	HiiString.h	/^  EFI_HII_NEW_STRING        NewString;$/;"	m	struct:_EFI_HII_STRING_PROTOCOL
NextHeader	Ip6.h	/^  UINT8                   NextHeader;$/;"	m	struct:_EFI_IP6_HEADER
NextHeader	Ip6.h	/^  UINT8                   NextHeader;$/;"	m	struct:_EFI_IP6_TRANSMIT_DATA
NextLayerProtocol	IpSecConfig.h	/^  UINT16                          NextLayerProtocol;$/;"	m	struct:_EFI_IPSEC_SPD_SELECTOR
NextSpiPeripheral	SpiConfiguration.h	/^  CONST EFI_SPI_PERIPHERAL *NextSpiPeripheral;$/;"	m	struct:_EFI_SPI_PERIPHERAL
NextSupportedRsrcInterp	RestJsonStructure.h	/^  LIST_ENTRY NextSupportedRsrcInterp;                        \/\/\/< Linklist to next supported conversion.$/;"	m	struct:_EFI_REST_JSON_STRUCTURE_SUPPORTED
NoParity	SerialIo.h	/^  NoParity,$/;"	e	enum:__anon546
Notification	BluetoothAttribute.h	/^    EFI_BLUETOOTH_ATTRIBUTE_CALLBACK_PARAMETER_NOTIFICATION  Notification;$/;"	m	union:__anon159::__anon160
Notify	PciHotPlugRequest.h	/^  EFI_PCI_HOTPLUG_REQUEST_NOTIFY  Notify;$/;"	m	struct:_EFI_PCI_HOTPLUG_REQUEST_PROTOCOL
Notify	SmbusHc.h	/^  EFI_SMBUS_HC_PROTOCOL_NOTIFY      Notify;$/;"	m	struct:_EFI_SMBUS_HC_PROTOCOL
Notify	UserManager.h	/^  EFI_USER_PROFILE_NOTIFY         Notify;$/;"	m	struct:_EFI_USER_MANAGER_PROTOCOL
NotifyContext	Runtime.h	/^  VOID                    *NotifyContext;$/;"	m	struct:_EFI_RUNTIME_EVENT_ENTRY
NotifyFunction	Runtime.h	/^  EFI_EVENT_NOTIFY        NotifyFunction;$/;"	m	struct:_EFI_RUNTIME_EVENT_ENTRY
NotifyPhase	IdeControllerInit.h	/^  EFI_IDE_CONTROLLER_NOTIFY_PHASE        NotifyPhase;$/;"	m	struct:_EFI_IDE_CONTROLLER_INIT_PROTOCOL
NotifyPhase	PciHostBridgeResourceAllocation.h	/^  EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL_NOTIFY_PHASE           NotifyPhase;$/;"	m	struct:_EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL
NotifyTpl	Runtime.h	/^  EFI_TPL                 NotifyTpl;$/;"	m	struct:_EFI_RUNTIME_EVENT_ENTRY
Nsid	NvmExpressPassthru.h	/^  UINT32                            Nsid;$/;"	m	struct:__anon543
NumOfBSSDesp	WiFi.h	/^  UINTN                              NumOfBSSDesp;$/;"	m	struct:__anon201
NumOfChannels	WiFi.h	/^  UINT8                              NumOfChannels;$/;"	m	struct:__anon190
NumOfNetworkDesc	WiFi2.h	/^  UINT8                                     NumOfNetworkDesc;$/;"	m	struct:__anon310
NumOfSSID	WiFi2.h	/^  UINT32                                    NumOfSSID;$/;"	m	struct:__anon304
NumSupportedGpis	MmGpiDispatch.h	/^  UINTN                   NumSupportedGpis;$/;"	m	struct:_EFI_MM_GPI_DISPATCH_PROTOCOL
NumberOfChannels	WiFi.h	/^  UINT8                              NumberOfChannels;$/;"	m	struct:__anon203
NumberOfEntries	UgaIo.h	/^  UINT32  NumberOfEntries;$/;"	m	struct:__anon536
NumberOfEvents	Tcg2Protocol.h	/^  UINT64                  NumberOfEvents;$/;"	m	struct:tdEFI_TCG2_FINAL_EVENTS_TABLE
NumberOfInterfaces	NetworkInterfaceIdentifier.h	/^  UINT32             NumberOfInterfaces;    \/\/\/< The number of NIC devices$/;"	m	struct:undiconfig_table
NumberOfPCRBanks	Tcg2Protocol.h	/^  UINT32                           NumberOfPCRBanks;$/;"	m	struct:tdEFI_TCG2_BOOT_SERVICE_CAPABILITY
NumberOfTimers	Cpu.h	/^  UINT32                              NumberOfTimers;$/;"	m	struct:_EFI_CPU_ARCH_PROTOCOL
NumofBSSDespFromPilot	WiFi.h	/^  UINTN                              NumofBSSDespFromPilot;$/;"	m	struct:__anon201
NvData	SimpleNetwork.h	/^  EFI_SIMPLE_NETWORK_NVDATA           NvData;$/;"	m	struct:_EFI_SIMPLE_NETWORK_PROTOCOL
NvRamAccessSize	SimpleNetwork.h	/^  UINT32          NvRamAccessSize;$/;"	m	struct:__anon266
NvRamSize	SimpleNetwork.h	/^  UINT32          NvRamSize;$/;"	m	struct:__anon266
NvmeCmd	NvmExpressPassthru.h	/^  EFI_NVM_EXPRESS_COMMAND           *NvmeCmd;$/;"	m	struct:__anon545
NvmeCompletion	NvmExpressPassthru.h	/^  EFI_NVM_EXPRESS_COMPLETION        *NvmeCompletion;$/;"	m	struct:__anon545
NvmeNamespace	DevicePath.h	/^  NVME_NAMESPACE_DEVICE_PATH                 *NvmeNamespace;$/;"	m	union:__anon76
NvmeNamespace	DevicePath.h	/^  NVME_NAMESPACE_DEVICE_PATH                 NvmeNamespace;$/;"	m	union:__anon75
NvmeVersion	NvmExpressPassthru.h	/^  UINT32          NvmeVersion;$/;"	m	struct:__anon541
OPCODE_ADD	Ebc.h	32;"	d
OPCODE_AND	Ebc.h	40;"	d
OPCODE_ASHR	Ebc.h	45;"	d
OPCODE_BREAK	Ebc.h	20;"	d
OPCODE_CALL	Ebc.h	23;"	d
OPCODE_CMPEQ	Ebc.h	25;"	d
OPCODE_CMPGTE	Ebc.h	27;"	d
OPCODE_CMPIEQ	Ebc.h	67;"	d
OPCODE_CMPIGTE	Ebc.h	69;"	d
OPCODE_CMPILTE	Ebc.h	68;"	d
OPCODE_CMPIUGTE	Ebc.h	71;"	d
OPCODE_CMPIULTE	Ebc.h	70;"	d
OPCODE_CMPLTE	Ebc.h	26;"	d
OPCODE_CMPUGTE	Ebc.h	29;"	d
OPCODE_CMPULTE	Ebc.h	28;"	d
OPCODE_DIV	Ebc.h	36;"	d
OPCODE_DIVU	Ebc.h	37;"	d
OPCODE_EXTNDB	Ebc.h	46;"	d
OPCODE_EXTNDD	Ebc.h	48;"	d
OPCODE_EXTNDW	Ebc.h	47;"	d
OPCODE_JMP	Ebc.h	21;"	d
OPCODE_JMP8	Ebc.h	22;"	d
OPCODE_LOADSP	Ebc.h	63;"	d
OPCODE_MOD	Ebc.h	38;"	d
OPCODE_MODU	Ebc.h	39;"	d
OPCODE_MOVBD	Ebc.h	53;"	d
OPCODE_MOVBW	Ebc.h	49;"	d
OPCODE_MOVDD	Ebc.h	55;"	d
OPCODE_MOVDW	Ebc.h	51;"	d
OPCODE_MOVI	Ebc.h	79;"	d
OPCODE_MOVIN	Ebc.h	80;"	d
OPCODE_MOVND	Ebc.h	73;"	d
OPCODE_MOVNW	Ebc.h	72;"	d
OPCODE_MOVQD	Ebc.h	56;"	d
OPCODE_MOVQQ	Ebc.h	62;"	d
OPCODE_MOVQW	Ebc.h	52;"	d
OPCODE_MOVREL	Ebc.h	81;"	d
OPCODE_MOVSND	Ebc.h	58;"	d
OPCODE_MOVSNW	Ebc.h	57;"	d
OPCODE_MOVWD	Ebc.h	54;"	d
OPCODE_MOVWW	Ebc.h	50;"	d
OPCODE_MUL	Ebc.h	34;"	d
OPCODE_MULU	Ebc.h	35;"	d
OPCODE_M_64BIT	Ebc.h	89;"	d
OPCODE_M_CMPI32_DATA	Ebc.h	91;"	d
OPCODE_M_CMPI64	Ebc.h	92;"	d
OPCODE_M_IMMDATA	Ebc.h	87;"	d
OPCODE_M_IMMDATA64	Ebc.h	88;"	d
OPCODE_M_IMMED_OP1	Ebc.h	100;"	d
OPCODE_M_IMMED_OP2	Ebc.h	101;"	d
OPCODE_M_IMMED_OP2	Ebc.h	121;"	d
OPCODE_M_OPCODE	Ebc.h	86;"	d
OPCODE_M_RELADDR	Ebc.h	90;"	d
OPCODE_NEG	Ebc.h	31;"	d
OPCODE_NOT	Ebc.h	30;"	d
OPCODE_OR	Ebc.h	41;"	d
OPCODE_POP	Ebc.h	66;"	d
OPCODE_POPN	Ebc.h	78;"	d
OPCODE_PUSH	Ebc.h	65;"	d
OPCODE_PUSHN	Ebc.h	77;"	d
OPCODE_RET	Ebc.h	24;"	d
OPCODE_SHL	Ebc.h	43;"	d
OPCODE_SHR	Ebc.h	44;"	d
OPCODE_STORESP	Ebc.h	64;"	d
OPCODE_SUB	Ebc.h	33;"	d
OPCODE_XOR	Ebc.h	42;"	d
OPERAND1_CHAR	Ebc.h	169;"	d
OPERAND1_INDIRECT	Ebc.h	160;"	d
OPERAND1_REGNUM	Ebc.h	166;"	d
OPERAND2_CHAR	Ebc.h	170;"	d
OPERAND2_INDIRECT	Ebc.h	161;"	d
OPERAND2_REGNUM	Ebc.h	167;"	d
OPERAND_M_CMPI_INDEX	Ebc.h	94;"	d
OPERAND_M_INDIRECT1	Ebc.h	106;"	d
OPERAND_M_INDIRECT2	Ebc.h	107;"	d
OPERAND_M_MOVIN_N	Ebc.h	93;"	d
OPERAND_M_NATIVE_CALL	Ebc.h	143;"	d
OPERAND_M_OP1	Ebc.h	108;"	d
OPERAND_M_OP2	Ebc.h	109;"	d
OPERAND_M_RELATIVE_ADDR	Ebc.h	142;"	d
OPTIONAL	Ip4Config2.h	/^  EFI_IP4_ROUTE_TABLE   *RouteTable     OPTIONAL;$/;"	m	struct:__anon5
OSVersion	TapeIo.h	/^  CHAR8      OSVersion[40];$/;"	m	struct:_EFI_TAPE_HEADER
Oack	Mtftp4.h	/^  EFI_MTFTP4_OACK_HEADER  Oack;$/;"	m	union:__anon432
Oack	Mtftp6.h	/^  EFI_MTFTP6_OACK_HEADER   Oack;   \/\/\/< Option acknowledge packet header.$/;"	m	union:__anon556
OddParity	SerialIo.h	/^  OddParity,$/;"	e	enum:__anon546
OemId	AcpiSystemDescriptionTable.h	/^  CHAR8     OemId[6];$/;"	m	struct:__anon360
OemRevision	AcpiSystemDescriptionTable.h	/^  UINT32    OemRevision;$/;"	m	struct:__anon360
OemTableId	AcpiSystemDescriptionTable.h	/^  CHAR8     OemTableId[8];$/;"	m	struct:__anon360
OffloadCapability	AdapterInformation.h	/^  BOOLEAN                       OffloadCapability;$/;"	m	struct:__anon421
Offset	DevicePath.h	/^  MEDIA_RELATIVE_OFFSET_RANGE_DEVICE_PATH    *Offset;$/;"	m	union:__anon76
Offset	DevicePath.h	/^  MEDIA_RELATIVE_OFFSET_RANGE_DEVICE_PATH    Offset;$/;"	m	union:__anon75
OneFiveStopBits	SerialIo.h	/^  OneFiveStopBits,$/;"	e	enum:__anon547
OneStopBit	SerialIo.h	/^  OneStopBit,$/;"	e	enum:__anon547
OpCode	Dhcp4.h	/^  UINT8               OpCode;$/;"	m	struct:__anon136
OpCode	Dhcp4.h	/^  UINT8             OpCode;$/;"	m	struct:__anon137
OpCode	Dhcp6.h	/^  UINT16                       OpCode;$/;"	m	struct:__anon508
OpCode	Mtftp4.h	/^  UINT16                  OpCode;$/;"	m	struct:__anon425
OpCode	Mtftp4.h	/^  UINT16                  OpCode;$/;"	m	struct:__anon426
OpCode	Mtftp4.h	/^  UINT16                  OpCode;$/;"	m	struct:__anon427
OpCode	Mtftp4.h	/^  UINT16                  OpCode;$/;"	m	struct:__anon428
OpCode	Mtftp4.h	/^  UINT16                  OpCode;$/;"	m	struct:__anon429
OpCode	Mtftp4.h	/^  UINT16                  OpCode;$/;"	m	struct:__anon430
OpCode	Mtftp4.h	/^  UINT16                  OpCode;$/;"	m	struct:__anon431
OpCode	Mtftp4.h	/^  UINT16                  OpCode;$/;"	m	union:__anon432
OpCode	Mtftp6.h	/^  UINT16                   OpCode; \/\/\/< Type of packets as defined by the MTFTPv6 packet opcodes.$/;"	m	union:__anon556
OpCode	Mtftp6.h	/^  UINT16    OpCode;$/;"	m	struct:__anon549
OpCode	Mtftp6.h	/^  UINT16    OpCode;$/;"	m	struct:__anon550
OpCode	Mtftp6.h	/^  UINT16    OpCode;$/;"	m	struct:__anon551
OpCode	Mtftp6.h	/^  UINT16    OpCode;$/;"	m	struct:__anon552
OpCode	Mtftp6.h	/^  UINT16    OpCode;$/;"	m	struct:__anon553
OpCode	Mtftp6.h	/^  UINT16    OpCode;$/;"	m	struct:__anon554
OpCode	Mtftp6.h	/^  UINT16    OpCode;$/;"	m	struct:__anon555
OpLen	Dhcp6.h	/^  UINT16                       OpLen;$/;"	m	struct:__anon508
Opcode	DebugSupport.h	/^  UINT16  Opcode;$/;"	m	struct:__anon486
Opcode	DebugSupport.h	/^  UINT16  Opcode;$/;"	m	struct:__anon488
Opcode	NvmExpressPassthru.h	/^  UINT32                            Opcode:8;$/;"	m	struct:__anon542
Open	AcpiSystemDescriptionTable.h	/^  EFI_ACPI_OPEN             Open;$/;"	m	struct:_EFI_ACPI_SDT_PROTOCOL
Open	MmAccess.h	/^  EFI_MM_OPEN          Open;$/;"	m	struct:_EFI_MM_ACCESS_PROTOCOL
Open	SimpleFileSystem.h	/^  EFI_FILE_OPEN         Open;$/;"	m	struct:_EFI_FILE_PROTOCOL
OpenEx	SimpleFileSystem.h	/^  EFI_FILE_OPEN_EX      OpenEx;$/;"	m	struct:_EFI_FILE_PROTOCOL
OpenFileByName	Shell.h	/^  EFI_SHELL_OPEN_FILE_BY_NAME               OpenFileByName;$/;"	m	struct:_EFI_SHELL_PROTOCOL
OpenFileList	Shell.h	/^  EFI_SHELL_OPEN_FILE_LIST                  OpenFileList;$/;"	m	struct:_EFI_SHELL_PROTOCOL
OpenIoAperture	IsaHc.h	/^  EFI_ISA_HC_OPEN_IO   OpenIoAperture;$/;"	m	struct:_EFI_ISA_HC_PROTOCOL
OpenRoot	Shell.h	/^  EFI_SHELL_OPEN_ROOT                       OpenRoot;$/;"	m	struct:_EFI_SHELL_PROTOCOL
OpenRootByHandle	Shell.h	/^  EFI_SHELL_OPEN_ROOT_BY_HANDLE             OpenRootByHandle;$/;"	m	struct:_EFI_SHELL_PROTOCOL
OpenSdt	AcpiSystemDescriptionTable.h	/^  EFI_ACPI_OPEN_SDT         OpenSdt;$/;"	m	struct:_EFI_ACPI_SDT_PROTOCOL
OpenState	MmAccess.h	/^  BOOLEAN               OpenState;$/;"	m	struct:_EFI_MM_ACCESS_PROTOCOL
OpenSystem	WiFi.h	/^  OpenSystem,$/;"	e	enum:__anon184
OpenVolume	SimpleFileSystem.h	/^  EFI_SIMPLE_FILE_SYSTEM_PROTOCOL_OPEN_VOLUME OpenVolume;$/;"	m	struct:_EFI_SIMPLE_FILE_SYSTEM_PROTOCOL
Operating	WiFi.h	/^  EFI_80211_COUNTRY_TRIPLET_OPERATE  Operating;$/;"	m	union:__anon192
OperatingClass	WiFi.h	/^  UINT8                              OperatingClass;$/;"	m	struct:__anon191
OperatingClass	WiFi.h	/^  UINT8                              OperatingClass;$/;"	m	struct:__anon200
OperatingExtId	WiFi.h	/^  UINT8                              OperatingExtId;$/;"	m	struct:__anon191
OperationalRateSet	WiFi.h	/^  UINT8                              *OperationalRateSet;$/;"	m	struct:__anon197
OptimalTransferLengthGranularity	BlockIo.h	/^  UINT32 OptimalTransferLengthGranularity;$/;"	m	struct:__anon222
Option	Dhcp4.h	/^    UINT8             Option[1];$/;"	m	struct:__anon138::__anon139
Option	Dhcp6.h	/^    UINT8                      Option[1];$/;"	m	struct:__anon510::__anon511
OptionCount	Dhcp4.h	/^  UINT32                      OptionCount;$/;"	m	struct:__anon142
OptionCount	Dhcp6.h	/^  UINT32                       OptionCount;$/;"	m	struct:__anon518
OptionCount	Mtftp4.h	/^  UINT32                      OptionCount;$/;"	m	struct:_EFI_MTFTP4_TOKEN
OptionCount	Mtftp6.h	/^  UINT32                      OptionCount;$/;"	m	struct:_EFI_MTFTP6_TOKEN
OptionList	Dhcp4.h	/^  EFI_DHCP4_PACKET_OPTION     **OptionList;$/;"	m	struct:__anon142
OptionList	Dhcp6.h	/^  EFI_DHCP6_PACKET_OPTION      **OptionList;$/;"	m	struct:__anon518
OptionList	Mtftp4.h	/^  EFI_MTFTP4_OPTION           *OptionList;$/;"	m	struct:_EFI_MTFTP4_TOKEN
OptionList	Mtftp6.h	/^  EFI_MTFTP6_OPTION           *OptionList;$/;"	m	struct:_EFI_MTFTP6_TOKEN
OptionStr	Mtftp4.h	/^  UINT8                   *OptionStr;$/;"	m	struct:__anon433
OptionStr	Mtftp6.h	/^  UINT8                  *OptionStr; \/\/\/< Pointer to the null-terminated ASCII MTFTPv6 option string.$/;"	m	struct:__anon560
Options	Ip4.h	/^  VOID                   *Options;$/;"	m	struct:__anon341
OptionsBuffer	Ip4.h	/^  VOID                   *OptionsBuffer;     \/\/OPTIONAL$/;"	m	struct:__anon343
OptionsLength	Ip4.h	/^  UINT32                 OptionsLength;      \/\/OPTIONAL$/;"	m	struct:__anon343
OptionsLength	Ip4.h	/^  UINT32                 OptionsLength;$/;"	m	struct:__anon341
OptionsValid	DriverConfiguration.h	/^  EFI_DRIVER_CONFIGURATION_OPTIONS_VALID  OptionsValid;$/;"	m	struct:_EFI_DRIVER_CONFIGURATION_PROTOCOL
OptionsValid	DriverConfiguration2.h	/^  EFI_DRIVER_CONFIGURATION2_OPTIONS_VALID   OptionsValid;$/;"	m	struct:_EFI_DRIVER_CONFIGURATION2_PROTOCOL
OrMask	SuperIo.h	/^  UINT8 OrMask;         \/\/\/< Bitwise OR mask.$/;"	m	struct:__anon225
OriginalSpiPeripheral	SpiIo.h	/^  CONST EFI_SPI_PERIPHERAL                  *OriginalSpiPeripheral;$/;"	m	struct:_EFI_SPI_IO_PROTOCOL
OtherOff	NvdimmLabel.h	/^  UINT64 OtherOff;$/;"	m	struct:__anon260
Oui	WiFi2.h	/^  UINT8                                     Oui[3];$/;"	m	struct:__anon305
OutDataBuffer	AtaPassThru.h	/^  VOID                           *OutDataBuffer;$/;"	m	struct:__anon128
OutDataBuffer	ScsiIo.h	/^  VOID                                *OutDataBuffer;$/;"	m	struct:__anon330
OutDataBuffer	ScsiPassThruExt.h	/^  VOID   *OutDataBuffer;$/;"	m	struct:__anon439
OutDataBuffer	SdMmcPassThru.h	/^  VOID                              *OutDataBuffer;$/;"	m	struct:_EFI_SD_MMC_PASS_THRU_COMMAND_PACKET
OutTransferLength	AtaPassThru.h	/^  UINT32                         OutTransferLength;$/;"	m	struct:__anon128
OutTransferLength	ScsiIo.h	/^  UINT32                              OutTransferLength;$/;"	m	struct:__anon330
OutTransferLength	ScsiPassThruExt.h	/^  UINT32 OutTransferLength;$/;"	m	struct:__anon439
OutTransferLength	SdMmcPassThru.h	/^  UINT32                            OutTransferLength;$/;"	m	struct:_EFI_SD_MMC_PASS_THRU_COMMAND_PACKET
OutputString	SimpleTextOut.h	/^  EFI_TEXT_STRING               OutputString;$/;"	m	struct:_EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL
OverrideData	Ip4.h	/^  EFI_IP4_OVERRIDE_DATA  *OverrideData;      \/\/OPTIONAL$/;"	m	struct:__anon343
OverrideData	Ip6.h	/^  EFI_IP6_OVERRIDE_DATA   *OverrideData;$/;"	m	struct:_EFI_IP6_TRANSMIT_DATA
OverrideData	Mtftp4.h	/^  EFI_MTFTP4_OVERRIDE_DATA    *OverrideData;$/;"	m	struct:_EFI_MTFTP4_TOKEN
OverrideData	Mtftp6.h	/^  EFI_MTFTP6_OVERRIDE_DATA    *OverrideData;$/;"	m	struct:_EFI_MTFTP6_TOKEN
PACKAGE_ATTRIBUTE_AUTHENTICATION_REQUIRED	FirmwareManagement.h	267;"	d
PACKAGE_ATTRIBUTE_RESET_REQUIRED	FirmwareManagement.h	262;"	d
PACKAGE_ATTRIBUTE_VERSION_UPDATABLE	FirmwareManagement.h	257;"	d
PAE_SUPPORT_AUTHENTICATOR	EapManagement.h	33;"	d
PAE_SUPPORT_SUPPLICANT	EapManagement.h	34;"	d
PARTITION_TYPE_GPT	PartitionInfo.h	28;"	d
PARTITION_TYPE_MBR	PartitionInfo.h	27;"	d
PARTITION_TYPE_OTHER	PartitionInfo.h	26;"	d
PC	DebugSupport.h	/^  UINT32  PC;$/;"	m	struct:__anon492
PCCARD_DEVICE_PATH	DevicePath.h	/^} PCCARD_DEVICE_PATH;$/;"	t	typeref:struct:__anon26
PCD_INVALID_TOKEN_NUMBER	Pcd.h	25;"	d
PCD_PROTOCOL	Pcd.h	/^} PCD_PROTOCOL;$/;"	t	typeref:struct:__anon383
PCD_PROTOCOL_CALLBACK	Pcd.h	/^(EFIAPI *PCD_PROTOCOL_CALLBACK)($/;"	t
PCD_PROTOCOL_CALLBACK_ONSET	Pcd.h	/^(EFIAPI *PCD_PROTOCOL_CALLBACK_ONSET)($/;"	t
PCD_PROTOCOL_CANCEL_CALLBACK	Pcd.h	/^(EFIAPI *PCD_PROTOCOL_CANCEL_CALLBACK)($/;"	t
PCD_PROTOCOL_GET16	Pcd.h	/^(EFIAPI *PCD_PROTOCOL_GET16)($/;"	t
PCD_PROTOCOL_GET32	Pcd.h	/^(EFIAPI *PCD_PROTOCOL_GET32)($/;"	t
PCD_PROTOCOL_GET64	Pcd.h	/^(EFIAPI *PCD_PROTOCOL_GET64)($/;"	t
PCD_PROTOCOL_GET8	Pcd.h	/^(EFIAPI *PCD_PROTOCOL_GET8)($/;"	t
PCD_PROTOCOL_GET_BOOLEAN	Pcd.h	/^(EFIAPI *PCD_PROTOCOL_GET_BOOLEAN)($/;"	t
PCD_PROTOCOL_GET_EX_16	Pcd.h	/^(EFIAPI *PCD_PROTOCOL_GET_EX_16)($/;"	t
PCD_PROTOCOL_GET_EX_32	Pcd.h	/^(EFIAPI *PCD_PROTOCOL_GET_EX_32)($/;"	t
PCD_PROTOCOL_GET_EX_64	Pcd.h	/^(EFIAPI *PCD_PROTOCOL_GET_EX_64)($/;"	t
PCD_PROTOCOL_GET_EX_8	Pcd.h	/^(EFIAPI *PCD_PROTOCOL_GET_EX_8)($/;"	t
PCD_PROTOCOL_GET_EX_BOOLEAN	Pcd.h	/^(EFIAPI *PCD_PROTOCOL_GET_EX_BOOLEAN)($/;"	t
PCD_PROTOCOL_GET_EX_POINTER	Pcd.h	/^(EFIAPI *PCD_PROTOCOL_GET_EX_POINTER)($/;"	t
PCD_PROTOCOL_GET_EX_SIZE	Pcd.h	/^(EFIAPI *PCD_PROTOCOL_GET_EX_SIZE)($/;"	t
PCD_PROTOCOL_GET_NEXT_TOKEN	Pcd.h	/^(EFIAPI *PCD_PROTOCOL_GET_NEXT_TOKEN)($/;"	t
PCD_PROTOCOL_GET_NEXT_TOKENSPACE	Pcd.h	/^(EFIAPI *PCD_PROTOCOL_GET_NEXT_TOKENSPACE)($/;"	t
PCD_PROTOCOL_GET_POINTER	Pcd.h	/^(EFIAPI *PCD_PROTOCOL_GET_POINTER)($/;"	t
PCD_PROTOCOL_GET_SIZE	Pcd.h	/^(EFIAPI *PCD_PROTOCOL_GET_SIZE)($/;"	t
PCD_PROTOCOL_GUID	Pcd.h	22;"	d
PCD_PROTOCOL_SET16	Pcd.h	/^(EFIAPI *PCD_PROTOCOL_SET16)($/;"	t
PCD_PROTOCOL_SET32	Pcd.h	/^(EFIAPI *PCD_PROTOCOL_SET32)($/;"	t
PCD_PROTOCOL_SET64	Pcd.h	/^(EFIAPI *PCD_PROTOCOL_SET64)($/;"	t
PCD_PROTOCOL_SET8	Pcd.h	/^(EFIAPI *PCD_PROTOCOL_SET8)($/;"	t
PCD_PROTOCOL_SET_BOOLEAN	Pcd.h	/^(EFIAPI *PCD_PROTOCOL_SET_BOOLEAN)($/;"	t
PCD_PROTOCOL_SET_EX_16	Pcd.h	/^(EFIAPI *PCD_PROTOCOL_SET_EX_16)($/;"	t
PCD_PROTOCOL_SET_EX_32	Pcd.h	/^(EFIAPI *PCD_PROTOCOL_SET_EX_32)($/;"	t
PCD_PROTOCOL_SET_EX_64	Pcd.h	/^(EFIAPI *PCD_PROTOCOL_SET_EX_64)($/;"	t
PCD_PROTOCOL_SET_EX_8	Pcd.h	/^(EFIAPI *PCD_PROTOCOL_SET_EX_8)($/;"	t
PCD_PROTOCOL_SET_EX_BOOLEAN	Pcd.h	/^(EFIAPI *PCD_PROTOCOL_SET_EX_BOOLEAN)($/;"	t
PCD_PROTOCOL_SET_EX_POINTER	Pcd.h	/^(EFIAPI *PCD_PROTOCOL_SET_EX_POINTER)($/;"	t
PCD_PROTOCOL_SET_POINTER	Pcd.h	/^(EFIAPI *PCD_PROTOCOL_SET_POINTER)($/;"	t
PCD_PROTOCOL_SET_SKU	Pcd.h	/^(EFIAPI *PCD_PROTOCOL_SET_SKU)($/;"	t
PCI_DEVICE_PATH	DevicePath.h	/^} PCI_DEVICE_PATH;$/;"	t	typeref:struct:__anon25
PCRIndex	Tcg2Protocol.h	/^  TCG_PCRINDEX      PCRIndex;$/;"	m	struct:__anon223
PCRIndex	TrEEProtocol.h	/^  TrEE_PCRINDEX     PCRIndex;$/;"	m	struct:__anon561
PEFI_ISA_HC_PROTOCOL	IsaHc.h	/^typedef struct _EFI_ISA_HC_PROTOCOL *PEFI_ISA_HC_PROTOCOL;$/;"	t	typeref:struct:_EFI_ISA_HC_PROTOCOL
PEFI_SIO_CONTROL_PROTOCOL	SuperIoControl.h	/^typedef struct _EFI_SIO_CONTROL_PROTOCOL *PEFI_SIO_CONTROL_PROTOCOL;$/;"	t	typeref:struct:_EFI_SIO_CONTROL_PROTOCOL
PE_COFF_IMAGE	Tcg2Protocol.h	103;"	d
PE_COFF_IMAGE	TrEEProtocol.h	88;"	d
PNP_EISA_ID_CONST	DevicePath.h	254;"	d
PNP_EISA_ID_MASK	DevicePath.h	259;"	d
PROCESSOR_AS_BSP_BIT	MpService.h	70;"	d
PROCESSOR_ENABLED_BIT	MpService.h	77;"	d
PROCESSOR_HEALTH_STATUS_BIT	MpService.h	84;"	d
PUGA_DEVICE	UgaIo.h	/^} UGA_DEVICE, *PUGA_DEVICE;$/;"	t	typeref:struct:_UGA_DEVICE
PUGA_DEVICE_DATA	UgaIo.h	/^} UGA_DEVICE_DATA, *PUGA_DEVICE_DATA;$/;"	t	typeref:struct:__anon533
PUGA_DEVICE_ID	UgaIo.h	/^typedef UINT32 UGA_DEVICE_ID, *PUGA_DEVICE_ID;$/;"	t
PUGA_DEVICE_TYPE	UgaIo.h	/^} UGA_DEVICE_TYPE, *PUGA_DEVICE_TYPE;$/;"	t	typeref:enum:__anon532
PUGA_FW_SERVICE_DISPATCH	UgaIo.h	/^(EFIAPI *PUGA_FW_SERVICE_DISPATCH)($/;"	t
PUGA_IO_REQUEST	UgaIo.h	/^} UGA_IO_REQUEST, *PUGA_IO_REQUEST;$/;"	t	typeref:struct:__anon535
PUGA_IO_REQUEST_CODE	UgaIo.h	/^} UGA_IO_REQUEST_CODE, *PUGA_IO_REQUEST_CODE;$/;"	t	typeref:enum:__anon534
PUSHPOP_M_64	Ebc.h	149;"	d
PUSHPOP_M_IMMDATA	Ebc.h	148;"	d
Package	MpService.h	/^  UINT32  Package;$/;"	m	struct:__anon497
Package	MpService.h	/^UINT32  Package;$/;"	m	struct:__anon498
PackageFlag	IpSecConfig.h	/^  UINT32                          PackageFlag;$/;"	m	struct:_EFI_IPSEC_SPD_DATA
Packet	Dhcp4.h	/^  EFI_DHCP4_PACKET        *Packet;$/;"	m	struct:__anon145
Packet	Ip4.h	/^  } Packet;$/;"	m	struct:__anon344	typeref:union:__anon344::__anon345
Packet	Ip6.h	/^  } Packet;$/;"	m	struct:__anon406	typeref:union:__anon406::__anon407
Packet	ManagedNetwork.h	/^  } Packet;$/;"	m	struct:__anon177	typeref:union:__anon177::__anon178
Packet	Tcp4.h	/^  } Packet;$/;"	m	struct:__anon327	typeref:union:__anon327::__anon328
Packet	Tcp6.h	/^  } Packet;$/;"	m	struct:__anon478	typeref:union:__anon478::__anon479
Packet	Udp4.h	/^  } Packet;$/;"	m	struct:__anon378	typeref:union:__anon378::__anon379
Packet	Udp6.h	/^  } Packet;$/;"	m	struct:__anon90	typeref:union:__anon90::__anon91
PacketData	ManagedNetwork.h	/^  VOID          *PacketData;$/;"	m	struct:__anon174
PacketLength	ManagedNetwork.h	/^  UINT32        PacketLength;$/;"	m	struct:__anon174
PacketNeeded	Mtftp4.h	/^  EFI_MTFTP4_PACKET_NEEDED    PacketNeeded;$/;"	m	struct:_EFI_MTFTP4_TOKEN
PacketNeeded	Mtftp6.h	/^  EFI_MTFTP6_PACKET_NEEDED     PacketNeeded;$/;"	m	struct:_EFI_MTFTP6_TOKEN
PadId	IpSecConfig.h	/^  EFI_IPSEC_PAD_ID                    PadId;$/;"	m	union:__anon454
PaeCapabilities	EapManagement.h	/^  UINT8               PaeCapabilities;$/;"	m	struct:_EFI_EAPOL_PORT_INFO
PageScanRepetitionMode	BluetoothIo.h	/^  UINT8                       PageScanRepetitionMode;$/;"	m	struct:__anon418
Pairwise	Supplicant.h	/^  Pairwise,$/;"	e	enum:__anon120
Parameter	BluetoothAttribute.h	/^  } Parameter;$/;"	m	struct:__anon159	typeref:union:__anon159::__anon160
ParentHandle	FirmwareVolume2.h	/^  EFI_HANDLE              ParentHandle;$/;"	m	struct:_EFI_FIRMWARE_VOLUME2_PROTOCOL
ParentHandle	FirmwareVolumeBlock.h	/^  EFI_HANDLE                    ParentHandle;$/;"	m	struct:_EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL
ParentHandle	LoadedImage.h	/^  EFI_HANDLE        ParentHandle;   \/\/\/< Parent image's image handle. NULL if the image is loaded directly from$/;"	m	struct:__anon359
ParentHandle	PciRootBridgeIo.h	/^  EFI_HANDLE                                      ParentHandle;$/;"	m	struct:_EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL
ParentPortNumber	DevicePath.h	/^  UINT8                         ParentPortNumber;$/;"	m	struct:__anon40
Parity	DevicePath.h	/^  UINT8                           Parity;$/;"	m	struct:__anon50
Parity	SerialIo.h	/^  UINT32  Parity;$/;"	m	struct:__anon548
Parse	Dhcp4.h	/^  EFI_DHCP4_PARSE              Parse;$/;"	m	struct:_EFI_DHCP4_PROTOCOL
Parse	Dhcp6.h	/^  EFI_DHCP6_PARSE              Parse;$/;"	m	struct:_EFI_DHCP6_PROTOCOL
Parse	HttpUtilities.h	/^  EFI_HTTP_UTILS_PARSE          Parse;$/;"	m	struct:_EFI_HTTP_UTILITIES_PROTOCOL
ParseOptions	Mtftp4.h	/^  EFI_MTFTP4_PARSE_OPTIONS     ParseOptions;$/;"	m	struct:_EFI_MTFTP4_PROTOCOL
ParseOptions	Mtftp6.h	/^  EFI_MTFTP6_PARSE_OPTIONS  ParseOptions;$/;"	m	struct:_EFI_MTFTP6_PROTOCOL
PartNumber	SpiConfiguration.h	/^  CONST CHAR16 *PartNumber;$/;"	m	struct:_EFI_SPI_PART
PartitionNumber	DevicePath.h	/^  UINT32                          PartitionNumber;$/;"	m	struct:__anon66
PartitionSize	DevicePath.h	/^  UINT64                          PartitionSize;$/;"	m	struct:__anon66
PartitionSize	DevicePath.h	/^  UINT64                          PartitionSize;$/;"	m	struct:__anon67
PartitionStart	DevicePath.h	/^  UINT64                          PartitionStart;$/;"	m	struct:__anon66
PartitionStart	DevicePath.h	/^  UINT64                          PartitionStart;$/;"	m	struct:__anon67
PassThroughToTpm	TcgService.h	/^  EFI_TCG_PASS_THROUGH_TO_TPM       PassThroughToTpm;$/;"	m	struct:_EFI_TCG_PROTOCOL
PassThru	AtaPassThru.h	/^  EFI_ATA_PASS_THRU_PASSTHRU           PassThru;$/;"	m	struct:_EFI_ATA_PASS_THRU_PROTOCOL
PassThru	NvmExpressPassthru.h	/^  EFI_NVM_EXPRESS_PASS_THRU_PASSTHRU                 PassThru;$/;"	m	struct:_EFI_NVM_EXPRESS_PASS_THRU_PROTOCOL
PassThru	ScsiPassThru.h	/^  EFI_SCSI_PASS_THRU_PASSTHRU           PassThru;$/;"	m	struct:_EFI_SCSI_PASS_THRU_PROTOCOL
PassThru	ScsiPassThruExt.h	/^  EFI_EXT_SCSI_PASS_THRU_PASSTHRU            PassThru;$/;"	m	struct:_EFI_EXT_SCSI_PASS_THRU_PROTOCOL
PassThru	SdMmcPassThru.h	/^  EFI_SD_MMC_PASS_THRU_PASSTHRU              PassThru;$/;"	m	struct:_EFI_SD_MMC_PASS_THRU_PROTOCOL
PassiveMode	WiFi.h	/^  BOOLEAN                            PassiveMode;$/;"	m	struct:__anon189
Password	Ftp4.h	/^  UINT8                                *Password;$/;"	m	struct:__anon443
PathMTU	IpSecConfig.h	/^  UINT32                          PathMTU;$/;"	m	struct:_EFI_IPSEC_SA_DATA
PathMTU	IpSecConfig.h	/^  UINT32                     PathMTU;$/;"	m	struct:_EFI_IPSEC_SA_DATA2
PathName	DevicePath.h	/^  CHAR16                          PathName[1];$/;"	m	struct:__anon68
Pathname	Ftp4.h	/^  UINT8                                 *Pathname;$/;"	m	struct:_EFI_FTP4_COMMAND_TOKEN
PayloadLength	Ip6.h	/^  UINT16                  PayloadLength;$/;"	m	struct:_EFI_IP6_HEADER
PcCard	DevicePath.h	/^  PCCARD_DEVICE_PATH                         *PcCard;$/;"	m	union:__anon76
PcCard	DevicePath.h	/^  PCCARD_DEVICE_PATH                         PcCard;$/;"	m	union:__anon75
Pci	DeviceIo.h	/^  EFI_IO_ACCESS           Pci;$/;"	m	struct:_EFI_DEVICE_IO_PROTOCOL
Pci	DevicePath.h	/^  PCI_DEVICE_PATH                            *Pci;$/;"	m	union:__anon76
Pci	DevicePath.h	/^  PCI_DEVICE_PATH                            Pci;$/;"	m	union:__anon75
Pci	PciIo.h	/^  EFI_PCI_IO_PROTOCOL_CONFIG_ACCESS       Pci;$/;"	m	struct:_EFI_PCI_IO_PROTOCOL
Pci	PciRootBridgeIo.h	/^  EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_ACCESS          Pci;$/;"	m	struct:_EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL
PciDevicePath	DeviceIo.h	/^  EFI_PCI_DEVICE_PATH     PciDevicePath;$/;"	m	struct:_EFI_DEVICE_IO_PROTOCOL
PciRomImage	UgaIo.h	/^  VOID                      *PciRomImage;$/;"	m	struct:__anon538
PciRomSize	UgaIo.h	/^  UINT64                    PciRomSize;$/;"	m	struct:__anon538
PeerId	IpSecConfig.h	/^    UINT8                 PeerId[MAX_PEERID_LEN];$/;"	m	union:_EFI_IPSEC_PAD_ID::__anon453
PeerIdValid	IpSecConfig.h	/^  BOOLEAN               PeerIdValid;$/;"	m	struct:_EFI_IPSEC_PAD_ID
PeerKey	Supplicant.h	/^  PeerKey,$/;"	e	enum:__anon120
Period	MmPeriodicTimerDispatch.h	/^  UINT64  Period;$/;"	m	struct:__anon384
Period	SmmPeriodicTimerDispatch2.h	/^  UINT64  Period;$/;"	m	struct:__anon8
Peripherallist	SpiConfiguration.h	/^  CONST EFI_SPI_PERIPHERAL       *Peripherallist;$/;"	m	struct:_EFI_SPI_BUS
PermanentAddress	SimpleNetwork.h	/^  EFI_MAC_ADDRESS PermanentAddress;$/;"	m	struct:__anon266
Permission	BluetoothAttribute.h	/^  } Permission;$/;"	m	union:__anon150	typeref:struct:__anon150::__anon151
Phase	MmPowerButtonDispatch.h	/^  EFI_POWER_BUTTON_PHASE  Phase;$/;"	m	struct:__anon248
Phase	MmStandbyButtonDispatch.h	/^  EFI_STANDBY_BUTTON_PHASE  Phase;$/;"	m	struct:__anon96
Phase	MmSxDispatch.h	/^  EFI_SLEEP_PHASE Phase;$/;"	m	struct:__anon367
PioMode	IdeControllerInit.h	/^  EFI_ATA_MODE           PioMode;$/;"	m	struct:__anon133
Pixel	GraphicsOutput.h	/^  EFI_GRAPHICS_OUTPUT_BLT_PIXEL Pixel;$/;"	m	union:__anon239
Pixel	UgaDraw.h	/^  EFI_UGA_PIXEL Pixel;$/;"	m	union:__anon79
PixelBitMask	GraphicsOutput.h	/^  PixelBitMask,$/;"	e	enum:__anon236
PixelBltOnly	GraphicsOutput.h	/^  PixelBltOnly,$/;"	e	enum:__anon236
PixelBlueGreenRedReserved8BitPerColor	GraphicsOutput.h	/^  PixelBlueGreenRedReserved8BitPerColor,$/;"	e	enum:__anon236
PixelFormat	GraphicsOutput.h	/^  EFI_GRAPHICS_PIXEL_FORMAT  PixelFormat;$/;"	m	struct:__anon237
PixelFormatMax	GraphicsOutput.h	/^  PixelFormatMax$/;"	e	enum:__anon236
PixelInformation	GraphicsOutput.h	/^  EFI_PIXEL_BITMASK          PixelInformation;$/;"	m	struct:__anon237
PixelRedGreenBlueReserved8BitPerColor	GraphicsOutput.h	/^  PixelRedGreenBlueReserved8BitPerColor,$/;"	e	enum:__anon236
PixelsPerScanLine	GraphicsOutput.h	/^  UINT32                     PixelsPerScanLine;$/;"	m	struct:__anon237
PlatformNotify	PciPlatform.h	/^  EFI_PCI_PLATFORM_PHASE_NOTIFY          PlatformNotify;$/;"	m	struct:_EFI_PCI_PLATFORM_PROTOCOL
PlatformPrepController	PciPlatform.h	/^  EFI_PCI_PLATFORM_PREPROCESS_CONTROLLER PlatformPrepController;$/;"	m	struct:_EFI_PCI_PLATFORM_PROTOCOL
Pointer	PxeBaseCode.h	/^    UINT32  Pointer;$/;"	m	union:__anon102::__anon103
Poll	DebugPort.h	/^  EFI_DEBUGPORT_POLL  Poll;$/;"	m	struct:_EFI_DEBUGPORT_PROTOCOL
Poll	Dns4.h	/^  EFI_DNS4_POLL                 Poll;$/;"	m	struct:_EFI_DNS4_PROTOCOL
Poll	Dns6.h	/^  EFI_DNS6_POLL                 Poll;$/;"	m	struct:_EFI_DNS6_PROTOCOL
Poll	Ftp4.h	/^  EFI_FTP4_POLL              Poll;$/;"	m	struct:_EFI_FTP4_PROTOCOL
Poll	Http.h	/^  EFI_HTTP_POLL                 Poll;$/;"	m	struct:_EFI_HTTP_PROTOCOL
Poll	Ip4.h	/^  EFI_IP4_POLL                 Poll;$/;"	m	struct:_EFI_IP4_PROTOCOL
Poll	Ip6.h	/^  EFI_IP6_POLL            Poll;$/;"	m	struct:_EFI_IP6_PROTOCOL
Poll	ManagedNetwork.h	/^  EFI_MANAGED_NETWORK_POLL                Poll;$/;"	m	struct:_EFI_MANAGED_NETWORK_PROTOCOL
Poll	Mtftp4.h	/^  EFI_MTFTP4_POLL              Poll;$/;"	m	struct:_EFI_MTFTP4_PROTOCOL
Poll	Mtftp6.h	/^  EFI_MTFTP6_POLL           Poll;$/;"	m	struct:_EFI_MTFTP6_PROTOCOL
Poll	Tcp4.h	/^  EFI_TCP4_POLL                          Poll;$/;"	m	struct:_EFI_TCP4_PROTOCOL
Poll	Tcp6.h	/^  EFI_TCP6_POLL           Poll;$/;"	m	struct:_EFI_TCP6_PROTOCOL
Poll	Udp4.h	/^  EFI_UDP4_POLL                 Poll;$/;"	m	struct:_EFI_UDP4_PROTOCOL
Poll	Udp6.h	/^  EFI_UDP6_POLL           Poll;$/;"	m	struct:_EFI_UDP6_PROTOCOL
PollIo	PciIo.h	/^  EFI_PCI_IO_PROTOCOL_POLL_IO_MEM         PollIo;$/;"	m	struct:_EFI_PCI_IO_PROTOCOL
PollIo	PciRootBridgeIo.h	/^  EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_POLL_IO_MEM     PollIo;$/;"	m	struct:_EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL
PollMem	PciIo.h	/^  EFI_PCI_IO_PROTOCOL_POLL_IO_MEM         PollMem;$/;"	m	struct:_EFI_PCI_IO_PROTOCOL
PollMem	PciRootBridgeIo.h	/^  EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_POLL_IO_MEM     PollMem;$/;"	m	struct:_EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL
PortChangeStatus	Usb2HostController.h	/^  UINT16          PortChangeStatus;  \/\/\/< Contains current port status change bitmap.$/;"	m	struct:__anon411
PortGid	DevicePath.h	/^  UINT8                           PortGid[16];$/;"	m	struct:__anon49
PortMultiplierPortNumber	DevicePath.h	/^  UINT16                          PortMultiplierPortNumber;$/;"	m	struct:__anon44
PortNumber	EapManagement.h	/^  EFI_PORT_HANDLE     PortNumber;$/;"	m	struct:_EFI_EAPOL_PORT_INFO
PortStatus	Usb2HostController.h	/^  UINT16          PortStatus;        \/\/\/< Contains current port status bitmap.$/;"	m	struct:__anon411
Position	NvdimmLabel.h	/^  UINT16   Position;$/;"	m	struct:__anon261
PossibleResources	SuperIo.h	/^  EFI_SIO_POSSIBLE_RESOURCES    PossibleResources;$/;"	m	struct:_EFI_SIO_PROTOCOL
Pr	DebugSupport.h	/^  UINT64  Pr;$/;"	m	struct:__anon490
PreferredLifetime	Dhcp6.h	/^  UINT32                       PreferredLifetime;$/;"	m	struct:__anon514
PrefixCount	Ip6.h	/^  UINT32                  PrefixCount;$/;"	m	struct:__anon405
PrefixLength	DevicePath.h	/^  UINT8                           PrefixLength;$/;"	m	struct:__anon48
PrefixLength	Ip6.h	/^  UINT8                   PrefixLength;  \/\/\/< The length of the prefix associated with the Address.$/;"	m	struct:__anon400
PrefixLength	Ip6.h	/^  UINT8                   PrefixLength;$/;"	m	struct:__anon401
PrefixLength	Ip6.h	/^  UINT8               PrefixLength;$/;"	m	struct:__anon397
PrefixLength	Ip6Config.h	/^  UINT8                 PrefixLength;  \/\/\/< The length, in bits, of the prefix associated with this Address.$/;"	m	struct:__anon18
PrefixLength	IpSecConfig.h	/^  UINT8           PrefixLength; \/\/\/< The length of the prefix associated with the Address.$/;"	m	struct:_EFI_IP_ADDRESS_INFO
PrefixTable	Ip6.h	/^  EFI_IP6_ADDRESS_INFO    *PrefixTable;$/;"	m	struct:__anon405
PreprocessController	PciHostBridgeResourceAllocation.h	/^  EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL_PREPROCESS_CONTROLLER  PreprocessController;$/;"	m	struct:_EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL
PrimarySecondary	DevicePath.h	/^  UINT8                           PrimarySecondary;$/;"	m	struct:__anon35
Priority	VlanConfig.h	/^  UINT8           Priority;   \/\/\/< Priority of this VLAN.$/;"	m	struct:__anon168
ProbeDelay	WiFi.h	/^  UINT32                             ProbeDelay;$/;"	m	struct:__anon189
Process	IpSec.h	/^  EFI_IPSEC_PROCESS      Process;           \/\/\/< Handle the IPsec message.$/;"	m	struct:_EFI_IPSEC_PROTOCOL
ProcessExt	IpSec.h	/^EFI_IPSEC_PROCESSEXT ProcessExt;$/;"	m	struct:_EFI_IPSEC2_PROTOCOL
ProcessPacket	Supplicant.h	/^  EFI_SUPPLICANT_PROCESS_PACKET           ProcessPacket;$/;"	m	struct:_EFI_SUPPLICANT_PROTOCOL
ProcessPacket	Tls.h	/^  EFI_TLS_PROCESS_PACKET             ProcessPacket;$/;"	m	struct:_EFI_TLS_PROTOCOL
ProcessingPolicy	IpSecConfig.h	/^  EFI_IPSEC_PROCESS_POLICY        *ProcessingPolicy;$/;"	m	struct:_EFI_IPSEC_SPD_DATA
ProcessorId	MpService.h	/^  UINT64                     ProcessorId;$/;"	m	struct:__anon500
ProductId	DevicePath.h	/^  UINT16                        ProductId;$/;"	m	struct:__anon41
ProductId	DevicePath.h	/^  UINT16                        ProductId;$/;"	m	struct:__anon42
PromiscuousFlag	ManagedNetwork.h	/^  BOOLEAN       PromiscuousFlag;$/;"	m	struct:__anon174
ProtectNextRange	LegacySpiController.h	/^  EFI_LEGACY_SPI_CONTROLLER_PROTOCOL_PROTECT_NEXT_RANGE  ProtectNextRange;$/;"	m	struct:_EFI_LEGACY_SPI_CONTROLLER_PROTOCOL
ProtectNextRange	LegacySpiFlash.h	/^  EFI_LEGACY_SPI_FLASH_PROTOCOL_PROTECT_NEXT_RANGE ProtectNextRange;$/;"	m	struct:_EFI_LEGACY_SPI_FLASH_PROTOCOL
Proto	IpSecConfig.h	/^  EFI_IPSEC_PROTOCOL_TYPE         Proto;$/;"	m	struct:_EFI_IPSEC_SA_ID
Proto	IpSecConfig.h	/^  EFI_IPSEC_PROTOCOL_TYPE Proto;$/;"	m	struct:_EFI_IPSEC_PROCESS_POLICY
Protocol	AtaPassThru.h	/^  EFI_ATA_PASS_THRU_CMD_PROTOCOL Protocol;$/;"	m	struct:__anon128
Protocol	DevicePath.h	/^  EFI_GUID                        Protocol;$/;"	m	struct:__anon69
Protocol	DevicePath.h	/^  UINT16                          Protocol;$/;"	m	struct:__anon47
Protocol	DevicePath.h	/^  UINT16                          Protocol;$/;"	m	struct:__anon48
Protocol	Dns4.h	/^  UINT8                         Protocol;$/;"	m	struct:__anon457
Protocol	Dns6.h	/^  UINT8                         Protocol;$/;"	m	struct:__anon388
Protocol	Ip4.h	/^  UINT8                   Protocol;$/;"	m	struct:__anon339
Protocol	Ip4.h	/^  UINT8                  Protocol;$/;"	m	struct:__anon342
Protocol	Ip6.h	/^  UINT8                   Protocol;   \/\/\/< Protocol type override.$/;"	m	struct:_EFI_IP6_OVERRIDE_DATA
ProtocolSpecVersion	TcgService.h	/^  TCG_VERSION    ProtocolSpecVersion;$/;"	m	struct:_TCG_EFI_BOOT_SERVICE_CAPABILITY
ProtocolType	ManagedNetwork.h	/^  UINT16                            ProtocolType;        \/\/OPTIONAL$/;"	m	struct:__anon176
ProtocolType	ManagedNetwork.h	/^  UINT16        ProtocolType;$/;"	m	struct:__anon174
ProtocolTypeFilter	ManagedNetwork.h	/^  UINT16     ProtocolTypeFilter;$/;"	m	struct:__anon173
ProtocolVersion	EapManagement.h	/^  UINT8               ProtocolVersion;$/;"	m	struct:_EFI_EAPOL_PORT_INFO
ProtocolVersion	Kms.h	/^  UINT32                            ProtocolVersion;$/;"	m	struct:_EFI_KMS_PROTOCOL
ProtocolVersion	Tcg2Protocol.h	/^  EFI_TCG2_VERSION                 ProtocolVersion;$/;"	m	struct:tdEFI_TCG2_BOOT_SERVICE_CAPABILITY
ProtocolVersion	TrEEProtocol.h	/^  TREE_VERSION          ProtocolVersion;$/;"	m	struct:_TREE_BOOT_SERVICE_CAPABILITY
ProxyOffer	PxeBaseCode.h	/^  EFI_PXE_BASE_CODE_PACKET      ProxyOffer;$/;"	m	struct:__anon116
ProxyOfferReceived	PxeBaseCode.h	/^  BOOLEAN                       ProxyOfferReceived;$/;"	m	struct:__anon116
Pun	DevicePath.h	/^  UINT16                          Pun;$/;"	m	struct:__anon36
Pun	DevicePath.h	/^  UINT8                           Pun;$/;"	m	struct:__anon58
Push	Tcp4.h	/^  BOOLEAN                   Push;$/;"	m	struct:__anon326
Push	Tcp6.h	/^  BOOLEAN                 Push;$/;"	m	struct:__anon477
PxeBisReply	PxeBaseCode.h	/^  EFI_PXE_BASE_CODE_PACKET      PxeBisReply;$/;"	m	struct:__anon116
PxeBisReplyReceived	PxeBaseCode.h	/^  BOOLEAN                       PxeBisReplyReceived;$/;"	m	struct:__anon116
PxeDiscover	PxeBaseCode.h	/^  EFI_PXE_BASE_CODE_PACKET      PxeDiscover;$/;"	m	struct:__anon116
PxeDiscoverValid	PxeBaseCode.h	/^  BOOLEAN                       PxeDiscoverValid;$/;"	m	struct:__anon116
PxeReply	PxeBaseCode.h	/^  EFI_PXE_BASE_CODE_PACKET      PxeReply;$/;"	m	struct:__anon116
PxeReplyReceived	PxeBaseCode.h	/^  BOOLEAN                       PxeReplyReceived;$/;"	m	struct:__anon116
QClass	Dns4.h	/^  UINT16                        QClass;$/;"	m	struct:__anon462
QClass	Dns6.h	/^  UINT16                        QClass;$/;"	m	struct:__anon393
QName	Dns4.h	/^  CHAR8                         *QName;$/;"	m	struct:__anon462
QName	Dns6.h	/^  CHAR8                         *QName;$/;"	m	struct:__anon393
QType	Dns4.h	/^  UINT16                        QType;$/;"	m	struct:__anon462
QType	Dns6.h	/^  UINT16                        QType;$/;"	m	struct:__anon393
Query	PlatformToDriverConfiguration.h	/^  EFI_PLATFORM_TO_DRIVER_CONFIGURATION_QUERY    Query;$/;"	m	struct:_EFI_PLATFORM_TO_DRIVER_CONFIGURATION_PROTOCOL
QueryMode	GraphicsOutput.h	/^  EFI_GRAPHICS_OUTPUT_PROTOCOL_QUERY_MODE  QueryMode;$/;"	m	struct:_EFI_GRAPHICS_OUTPUT_PROTOCOL
QueryMode	SimpleTextOut.h	/^  EFI_TEXT_QUERY_MODE           QueryMode;$/;"	m	struct:_EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL
QueueRequest	I2cHost.h	/^  EFI_I2C_HOST_PROTOCOL_QUEUE_REQUEST     QueueRequest;$/;"	m	struct:_EFI_I2C_HOST_PROTOCOL
QueueRequest	I2cIo.h	/^  EFI_I2C_IO_PROTOCOL_QUEUE_REQUEST         QueueRequest;$/;"	m	struct:_EFI_I2C_IO_PROTOCOL
QueueType	NvmExpressPassthru.h	/^  UINT8                             QueueType;$/;"	m	struct:__anon545
R0	DebugSupport.h	/^  UINT32  R0;$/;"	m	struct:__anon492
R0	DebugSupport.h	/^  UINT64  R0;$/;"	m	struct:__anon491
R1	DebugSupport.h	/^  UINT32  R1;$/;"	m	struct:__anon492
R1	DebugSupport.h	/^  UINT64  R1;$/;"	m	struct:__anon490
R1	DebugSupport.h	/^  UINT64  R1;$/;"	m	struct:__anon491
R10	DebugSupport.h	/^  UINT32  R10;$/;"	m	struct:__anon492
R10	DebugSupport.h	/^  UINT64                R10;$/;"	m	struct:__anon489
R10	DebugSupport.h	/^  UINT64  R10;$/;"	m	struct:__anon490
R11	DebugSupport.h	/^  UINT32  R11;$/;"	m	struct:__anon492
R11	DebugSupport.h	/^  UINT64                R11;$/;"	m	struct:__anon489
R11	DebugSupport.h	/^  UINT64  R11;$/;"	m	struct:__anon490
R12	DebugSupport.h	/^  UINT32  R12;$/;"	m	struct:__anon492
R12	DebugSupport.h	/^  UINT64                R12;$/;"	m	struct:__anon489
R12	DebugSupport.h	/^  UINT64  R12;$/;"	m	struct:__anon490
R13	DebugSupport.h	/^  UINT64                R13;$/;"	m	struct:__anon489
R13	DebugSupport.h	/^  UINT64  R13;$/;"	m	struct:__anon490
R14	DebugSupport.h	/^  UINT64                R14;$/;"	m	struct:__anon489
R14	DebugSupport.h	/^  UINT64  R14;$/;"	m	struct:__anon490
R15	DebugSupport.h	/^  UINT64                R15;$/;"	m	struct:__anon489
R15	DebugSupport.h	/^  UINT64  R15;$/;"	m	struct:__anon490
R16	DebugSupport.h	/^  UINT64  R16;$/;"	m	struct:__anon490
R17	DebugSupport.h	/^  UINT64  R17;$/;"	m	struct:__anon490
R18	DebugSupport.h	/^  UINT64  R18;$/;"	m	struct:__anon490
R19	DebugSupport.h	/^  UINT64  R19;$/;"	m	struct:__anon490
R2	DebugSupport.h	/^  UINT32  R2;$/;"	m	struct:__anon492
R2	DebugSupport.h	/^  UINT64  R2;$/;"	m	struct:__anon490
R2	DebugSupport.h	/^  UINT64  R2;$/;"	m	struct:__anon491
R20	DebugSupport.h	/^  UINT64  R20;$/;"	m	struct:__anon490
R21	DebugSupport.h	/^  UINT64  R21;$/;"	m	struct:__anon490
R22	DebugSupport.h	/^  UINT64  R22;$/;"	m	struct:__anon490
R23	DebugSupport.h	/^  UINT64  R23;$/;"	m	struct:__anon490
R24	DebugSupport.h	/^  UINT64  R24;$/;"	m	struct:__anon490
R25	DebugSupport.h	/^  UINT64  R25;$/;"	m	struct:__anon490
R26	DebugSupport.h	/^  UINT64  R26;$/;"	m	struct:__anon490
R27	DebugSupport.h	/^  UINT64  R27;$/;"	m	struct:__anon490
R28	DebugSupport.h	/^  UINT64  R28;$/;"	m	struct:__anon490
R29	DebugSupport.h	/^  UINT64  R29;$/;"	m	struct:__anon490
R3	DebugSupport.h	/^  UINT32  R3;$/;"	m	struct:__anon492
R3	DebugSupport.h	/^  UINT64  R3;$/;"	m	struct:__anon490
R3	DebugSupport.h	/^  UINT64  R3;$/;"	m	struct:__anon491
R30	DebugSupport.h	/^  UINT64  R30;$/;"	m	struct:__anon490
R31	DebugSupport.h	/^  UINT64  R31;$/;"	m	struct:__anon490
R4	DebugSupport.h	/^  UINT32  R4;$/;"	m	struct:__anon492
R4	DebugSupport.h	/^  UINT64  R4;$/;"	m	struct:__anon490
R4	DebugSupport.h	/^  UINT64  R4;$/;"	m	struct:__anon491
R5	DebugSupport.h	/^  UINT32  R5;$/;"	m	struct:__anon492
R5	DebugSupport.h	/^  UINT64  R5;$/;"	m	struct:__anon490
R5	DebugSupport.h	/^  UINT64  R5;$/;"	m	struct:__anon491
R6	DebugSupport.h	/^  UINT32  R6;$/;"	m	struct:__anon492
R6	DebugSupport.h	/^  UINT64  R6;$/;"	m	struct:__anon490
R6	DebugSupport.h	/^  UINT64  R6;$/;"	m	struct:__anon491
R7	DebugSupport.h	/^  UINT32  R7;$/;"	m	struct:__anon492
R7	DebugSupport.h	/^  UINT64  R7;$/;"	m	struct:__anon490
R7	DebugSupport.h	/^  UINT64  R7;$/;"	m	struct:__anon491
R8	DebugSupport.h	/^  UINT32  R8;$/;"	m	struct:__anon492
R8	DebugSupport.h	/^  UINT64                R8;$/;"	m	struct:__anon489
R8	DebugSupport.h	/^  UINT64  R8;$/;"	m	struct:__anon490
R9	DebugSupport.h	/^  UINT32  R9;$/;"	m	struct:__anon492
R9	DebugSupport.h	/^  UINT64                R9;$/;"	m	struct:__anon489
R9	DebugSupport.h	/^  UINT64  R9;$/;"	m	struct:__anon490
RCPIMeasurement	WiFi.h	/^  UINT8                              RCPIMeasurement;$/;"	m	struct:__anon197
RCPIMeasurement	WiFi.h	/^  UINT8                              RCPIMeasurement;$/;"	m	struct:__anon200
RCPIValue	WiFi.h	/^  UINT8                              RCPIValue;$/;"	m	struct:__anon207
RData	Dns4.h	/^  CHAR8                         *RData;$/;"	m	struct:__anon462
RData	Dns6.h	/^  CHAR8                         *RData;$/;"	m	struct:__anon393
RRCount	Dns4.h	/^  UINTN                         RRCount;$/;"	m	struct:__anon463
RRCount	Dns6.h	/^  UINTN                         RRCount;$/;"	m	struct:__anon394
RRList	Dns4.h	/^  DNS_RESOURCE_RECORD           *RRList;$/;"	m	struct:__anon463
RRList	Dns6.h	/^  DNS6_RESOURCE_RECORD          *RRList;$/;"	m	struct:__anon394
RSN	WiFi.h	/^  EFI_80211_ELEMENT_RSN              RSN;$/;"	m	struct:__anon197
RSN	WiFi.h	/^  EFI_80211_ELEMENT_RSN              RSN;$/;"	m	struct:__anon205
RSNIMeasurement	WiFi.h	/^  UINT8                              RSNIMeasurement;$/;"	m	struct:__anon197
RSNIMeasurement	WiFi.h	/^  UINT8                              RSNIMeasurement;$/;"	m	struct:__anon200
RSNIValue	WiFi.h	/^  UINT8                              RSNIValue;$/;"	m	struct:__anon207
RSSI	BluetoothAttribute.h	/^  UINT8                RSSI;$/;"	m	struct:__anon161
RSSI	BluetoothIo.h	/^  UINT8                       RSSI;$/;"	m	struct:__anon418
RSSI	BluetoothLeConfig.h	/^  INT8                 RSSI;$/;"	m	struct:__anon564
RSSI	WiFi.h	/^  UINT8                              RSSI;$/;"	m	struct:__anon197
RadiusIpAddr	AuthenticationInfo.h	/^  UINT8            RadiusIpAddr[16];         \/\/\/< IPv4 or IPv6 address.$/;"	m	struct:__anon363
RamDisk	DevicePath.h	/^  MEDIA_RAM_DISK_DEVICE_PATH                 *RamDisk;$/;"	m	union:__anon76
RamDisk	DevicePath.h	/^  MEDIA_RAM_DISK_DEVICE_PATH                 RamDisk;$/;"	m	union:__anon75
RandomBytes	Tls.h	/^  UINT8                         RandomBytes[28];$/;"	m	struct:__anon286
RangeRegisterCount	LegacySpiController.h	/^  UINT32                                                 RangeRegisterCount;$/;"	m	struct:_EFI_LEGACY_SPI_CONTROLLER_PROTOCOL
RapidCommit	Dhcp6.h	/^  BOOLEAN                      RapidCommit;$/;"	m	struct:__anon518
Raw	DevicePath.h	/^  UINT8                                      *Raw;$/;"	m	union:__anon76
Raw	GraphicsOutput.h	/^  UINT32                        Raw;$/;"	m	union:__anon239
Raw	PxeBaseCode.h	/^  UINT8                           Raw[1472];$/;"	m	union:__anon115
Raw	UgaDraw.h	/^  UINT32        Raw;$/;"	m	union:__anon79
RawData	Ip4.h	/^  BOOLEAN                 RawData;$/;"	m	struct:__anon335
RawSize	NvdimmLabel.h	/^  UINT64   RawSize;$/;"	m	struct:__anon261
Rax	DebugSupport.h	/^  UINT64                Rax;$/;"	m	struct:__anon489
Rbp	DebugSupport.h	/^  UINT64                Rbp;$/;"	m	struct:__anon489
Rbx	DebugSupport.h	/^  UINT64                Rbx;$/;"	m	struct:__anon489
Rcx	DebugSupport.h	/^  UINT64                Rcx;$/;"	m	struct:__anon489
Rdi	DebugSupport.h	/^  UINT64                Rdi;$/;"	m	struct:__anon489
Rdx	DebugSupport.h	/^  UINT64                Rdx;$/;"	m	struct:__anon489
Read	CpuIo2.h	/^  EFI_CPU_IO_PROTOCOL_IO_MEM  Read;$/;"	m	struct:__anon381
Read	DebugPort.h	/^  EFI_DEBUGPORT_READ  Read;$/;"	m	struct:_EFI_DEBUGPORT_PROTOCOL
Read	DeviceIo.h	/^  EFI_DEVICE_IO Read;$/;"	m	struct:__anon504
Read	FirmwareVolumeBlock.h	/^  EFI_FVB_READ                  Read;$/;"	m	struct:_EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL
Read	MmCpuIo.h	/^  EFI_MM_CPU_IO  Read;$/;"	m	struct:__anon258
Read	PciIo.h	/^  EFI_PCI_IO_PROTOCOL_CONFIG  Read;$/;"	m	struct:__anon23
Read	PciIo.h	/^  EFI_PCI_IO_PROTOCOL_IO_MEM  Read;$/;"	m	struct:__anon22
Read	PciRootBridgeIo.h	/^  EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_IO_MEM  Read;$/;"	m	struct:__anon279
Read	SerialIo.h	/^  EFI_SERIAL_READ             Read;$/;"	m	struct:_EFI_SERIAL_IO_PROTOCOL
Read	SimpleFileSystem.h	/^  EFI_FILE_READ         Read;$/;"	m	struct:_EFI_FILE_PROTOCOL
ReadAuthentication	BluetoothAttribute.h	/^    UINT16  ReadAuthentication  : 1;$/;"	m	struct:__anon150::__anon151
ReadAuthorization	BluetoothAttribute.h	/^    UINT16  ReadAuthorization   : 1;$/;"	m	struct:__anon150::__anon151
ReadBlocks	BlockIo.h	/^  EFI_BLOCK_READ      ReadBlocks;$/;"	m	struct:_EFI_BLOCK_IO_PROTOCOL
ReadBlocksEx	BlockIo2.h	/^  EFI_BLOCK_READ_EX       ReadBlocksEx;$/;"	m	struct:_EFI_BLOCK_IO2_PROTOCOL
ReadBuffer	SpiIo.h	/^  UINT8                    *ReadBuffer;$/;"	m	struct:_EFI_SPI_BUS_TRANSACTION
ReadBytes	SpiIo.h	/^  UINT32                   ReadBytes;$/;"	m	struct:_EFI_SPI_BUS_TRANSACTION
ReadData	SpiNorFlash.h	/^  EFI_SPI_NOR_FLASH_PROTOCOL_READ_DATA    ReadData;$/;"	m	struct:_EFI_SPI_NOR_FLASH_PROTOCOL
ReadDirectory	Ftp4.h	/^  EFI_FTP4_READ_DIRECTORY    ReadDirectory;$/;"	m	struct:_EFI_FTP4_PROTOCOL
ReadDirectory	Mtftp4.h	/^  EFI_MTFTP4_READ_DIRECTORY    ReadDirectory;$/;"	m	struct:_EFI_MTFTP4_PROTOCOL
ReadDirectory	Mtftp6.h	/^  EFI_MTFTP6_READ_DIRECTORY ReadDirectory;$/;"	m	struct:_EFI_MTFTP6_PROTOCOL
ReadDisk	DiskIo.h	/^  EFI_DISK_READ   ReadDisk;$/;"	m	struct:_EFI_DISK_IO_PROTOCOL
ReadDiskEx	DiskIo2.h	/^  EFI_DISK_READ_EX   ReadDiskEx;$/;"	m	struct:_EFI_DISK_IO2_PROTOCOL
ReadEncryption	BluetoothAttribute.h	/^    UINT16  ReadEncryption      : 1;$/;"	m	struct:__anon150::__anon151
ReadEx	SimpleFileSystem.h	/^  EFI_FILE_READ_EX      ReadEx;$/;"	m	struct:_EFI_FILE_PROTOCOL
ReadExtended	BlockIoCrypto.h	/^  EFI_BLOCK_IO_CRYPTO_READ_EXTENDED         ReadExtended;$/;"	m	struct:_EFI_BLOCK_IO_CRYPTO_PROTOCOL
ReadFile	FirmwareVolume2.h	/^  EFI_FV_READ_FILE        ReadFile;$/;"	m	struct:_EFI_FIRMWARE_VOLUME2_PROTOCOL
ReadFile	Ftp4.h	/^  EFI_FTP4_READ_FILE         ReadFile;$/;"	m	struct:_EFI_FTP4_PROTOCOL
ReadFile	Mtftp4.h	/^  EFI_MTFTP4_READ_FILE         ReadFile;$/;"	m	struct:_EFI_MTFTP4_PROTOCOL
ReadFile	Mtftp6.h	/^  EFI_MTFTP6_READ_FILE      ReadFile;$/;"	m	struct:_EFI_MTFTP6_PROTOCOL
ReadFile	Shell.h	/^  EFI_SHELL_READ_FILE                       ReadFile;$/;"	m	struct:_EFI_SHELL_PROTOCOL
ReadKeySize	BluetoothAttribute.h	/^    UINT16  ReadKeySize         : 5;$/;"	m	struct:__anon150::__anon151
ReadKeyStroke	SimpleTextIn.h	/^  EFI_INPUT_READ_KEY  ReadKeyStroke;$/;"	m	struct:_EFI_SIMPLE_TEXT_INPUT_PROTOCOL
ReadKeyStrokeEx	SimpleTextInEx.h	/^  EFI_INPUT_READ_KEY_EX           ReadKeyStrokeEx;$/;"	m	struct:_EFI_SIMPLE_TEXT_INPUT_EX_PROTOCOL
ReadOnly	BlockIo.h	/^  BOOLEAN ReadOnly;$/;"	m	struct:__anon222
ReadSaveState	MmCpu.h	/^  EFI_MM_READ_SAVE_STATE   ReadSaveState;$/;"	m	struct:_EFI_MM_CPU_PROTOCOL
ReadSection	FirmwareVolume2.h	/^  EFI_FV_READ_SECTION     ReadSection;$/;"	m	struct:_EFI_FIRMWARE_VOLUME2_PROTOCOL
ReadStatus	SpiNorFlash.h	/^  EFI_SPI_NOR_FLASH_PROTOCOL_READ_STATUS  ReadStatus;$/;"	m	struct:_EFI_SPI_NOR_FLASH_PROTOCOL
ReadTrap	MmIoTrapDispatch.h	/^  ReadTrap,$/;"	e	enum:__anon99
ReadWriteTrap	MmIoTrapDispatch.h	/^  ReadWriteTrap,$/;"	e	enum:__anon99
Readable	BluetoothAttribute.h	/^    UINT16  Readable            : 1;$/;"	m	struct:__anon150::__anon151
ReasonCode	WiFi.h	/^  EFI_80211_REASON_CODE              ReasonCode;$/;"	m	struct:__anon209
ReasonCode	WiFi.h	/^  EFI_80211_REASON_CODE              ReasonCode;$/;"	m	struct:__anon214
Receive	Ip4.h	/^  EFI_IP4_RECEIVE              Receive;$/;"	m	struct:_EFI_IP4_PROTOCOL
Receive	Ip6.h	/^  EFI_IP6_RECEIVE         Receive;$/;"	m	struct:_EFI_IP6_PROTOCOL
Receive	ManagedNetwork.h	/^  EFI_MANAGED_NETWORK_RECEIVE             Receive;$/;"	m	struct:_EFI_MANAGED_NETWORK_PROTOCOL
Receive	SimpleNetwork.h	/^  EFI_SIMPLE_NETWORK_RECEIVE          Receive;$/;"	m	struct:_EFI_SIMPLE_NETWORK_PROTOCOL
Receive	Supplicant.h	/^  Receive,$/;"	e	enum:__anon121
Receive	Tcp4.h	/^  EFI_TCP4_RECEIVE                       Receive;$/;"	m	struct:_EFI_TCP4_PROTOCOL
Receive	Tcp6.h	/^  EFI_TCP6_RECEIVE        Receive;$/;"	m	struct:_EFI_TCP6_PROTOCOL
Receive	Udp4.h	/^  EFI_UDP4_RECEIVE              Receive;$/;"	m	struct:_EFI_UDP4_PROTOCOL
Receive	Udp6.h	/^  EFI_UDP6_RECEIVE        Receive;$/;"	m	struct:_EFI_UDP6_PROTOCOL
ReceiveACLData	BluetoothHc.h	/^  EFI_BLUETOOTH_HC_RECEIVE_ACL_DATA           ReceiveACLData;$/;"	m	struct:_EFI_BLUETOOTH_HC_PROTOCOL
ReceiveBufferSize	Tcp4.h	/^  UINT32                  ReceiveBufferSize;$/;"	m	struct:__anon318
ReceiveBufferSize	Tcp6.h	/^  UINT32   ReceiveBufferSize;$/;"	m	struct:__anon469
ReceiveData	StorageSecurityCommand.h	/^  EFI_STORAGE_SECURITY_RECEIVE_DATA ReceiveData;$/;"	m	struct:_EFI_STORAGE_SECURITY_COMMAND_PROTOCOL
ReceiveEvent	BluetoothHc.h	/^  EFI_BLUETOOTH_HC_RECEIVE_EVENT              ReceiveEvent;$/;"	m	struct:_EFI_BLUETOOTH_HC_PROTOCOL
ReceiveFifoDepth	SerialIo.h	/^  UINT32  ReceiveFifoDepth;$/;"	m	struct:__anon548
ReceiveFilterMask	SimpleNetwork.h	/^  UINT32          ReceiveFilterMask;$/;"	m	struct:__anon266
ReceiveFilterSetting	SimpleNetwork.h	/^  UINT32          ReceiveFilterSetting;$/;"	m	struct:__anon266
ReceiveFilters	SimpleNetwork.h	/^  EFI_SIMPLE_NETWORK_RECEIVE_FILTERS  ReceiveFilters;$/;"	m	struct:_EFI_SIMPLE_NETWORK_PROTOCOL
ReceiveSCOData	BluetoothHc.h	/^  EFI_BLUETOOTH_HC_RECEIVE_SCO_DATA           ReceiveSCOData;$/;"	m	struct:_EFI_BLUETOOTH_HC_PROTOCOL
ReceiveTimeout	Ip4.h	/^  UINT32                  ReceiveTimeout;$/;"	m	struct:__anon335
ReceiveTimeout	Ip6.h	/^  UINT32                  ReceiveTimeout;$/;"	m	struct:__anon399
ReceiveTimeout	Udp4.h	/^  UINT32             ReceiveTimeout;$/;"	m	struct:__anon375
ReceiveTimeout	Udp6.h	/^  UINT32            ReceiveTimeout;$/;"	m	struct:__anon87
ReceivedQueueTimeoutValue	ManagedNetwork.h	/^  UINT32     ReceivedQueueTimeoutValue;$/;"	m	struct:__anon173
ReconfigureAccept	Dhcp6.h	/^  BOOLEAN                      ReconfigureAccept;$/;"	m	struct:__anon518
RecycleEvent	ManagedNetwork.h	/^  EFI_EVENT     RecycleEvent;$/;"	m	struct:__anon174
RecycleSignal	Ip4.h	/^  EFI_EVENT              RecycleSignal;$/;"	m	struct:__anon341
RecycleSignal	Ip6.h	/^  EFI_EVENT               RecycleSignal;$/;"	m	struct:_EFI_IP6_RECEIVE_DATA
RecycleSignal	Udp4.h	/^  EFI_EVENT                 RecycleSignal;$/;"	m	struct:__anon377
RecycleSignal	Udp6.h	/^  EFI_EVENT                 RecycleSignal;$/;"	m	struct:__anon89
Red	GraphicsOutput.h	/^  UINT8 Red;$/;"	m	struct:__anon238
Red	UgaDraw.h	/^  UINT8 Red;$/;"	m	struct:__anon78
RedMask	GraphicsOutput.h	/^  UINT32            RedMask;$/;"	m	struct:__anon235
RegionOffset	NvdimmLabel.h	/^  UINT64 RegionOffset;$/;"	m	struct:__anon262
Register	MmGpiDispatch.h	/^  EFI_MM_GPI_REGISTER    Register;$/;"	m	struct:_EFI_MM_GPI_DISPATCH_PROTOCOL
Register	MmIoTrapDispatch.h	/^  EFI_MM_IO_TRAP_DISPATCH_REGISTER    Register;$/;"	m	struct:_EFI_MM_IO_TRAP_DISPATCH_PROTOCOL
Register	MmPeriodicTimerDispatch.h	/^  EFI_MM_PERIODIC_TIMER_REGISTER    Register;$/;"	m	struct:_EFI_MM_PERIODIC_TIMER_DISPATCH_PROTOCOL
Register	MmPowerButtonDispatch.h	/^  EFI_MM_POWER_BUTTON_REGISTER    Register;$/;"	m	struct:_EFI_MM_POWER_BUTTON_DISPATCH_PROTOCOL
Register	MmReportStatusCodeHandler.h	/^  EFI_MM_RSC_HANDLER_REGISTER      Register;$/;"	m	struct:_EFI_MM_RSC_HANDLER_PROTOCOL
Register	MmStandbyButtonDispatch.h	/^  EFI_MM_STANDBY_BUTTON_REGISTER    Register;$/;"	m	struct:_EFI_MM_STANDBY_BUTTON_DISPATCH_PROTOCOL
Register	MmSwDispatch.h	/^  EFI_MM_SW_REGISTER    Register;$/;"	m	struct:_EFI_MM_SW_DISPATCH_PROTOCOL
Register	MmSxDispatch.h	/^  EFI_MM_SX_REGISTER    Register;$/;"	m	struct:_EFI_MM_SX_DISPATCH_PROTOCOL
Register	MmUsbDispatch.h	/^  EFI_MM_USB_REGISTER    Register;$/;"	m	struct:_EFI_MM_USB_DISPATCH_PROTOCOL
Register	PciRootBridgeIo.h	/^  UINT8   Register;$/;"	m	struct:__anon278
Register	RamDisk.h	/^  EFI_RAM_DISK_REGISTER_RAMDISK        Register;$/;"	m	struct:_EFI_RAM_DISK_PROTOCOL
Register	ReportStatusCodeHandler.h	/^  EFI_RSC_HANDLER_REGISTER Register;$/;"	m	struct:__anon387
Register	RestJsonStructure.h	/^  EFI_REST_JSON_STRUCTURE_REGISTER           Register;          \/\/\/< Register JSON to C structure convertor$/;"	m	struct:_EFI_REST_JSON_STRUCTURE_PROTOCOL
Register	SmmPeriodicTimerDispatch2.h	/^  EFI_SMM_PERIODIC_TIMER_REGISTER2    Register;$/;"	m	struct:_EFI_SMM_PERIODIC_TIMER_DISPATCH2_PROTOCOL
Register	SmmSwDispatch2.h	/^  EFI_SMM_SW_REGISTER2    Register;$/;"	m	struct:_EFI_SMM_SW_DISPATCH2_PROTOCOL
Register	SuperIo.h	/^  UINT8 Register;       \/\/\/< Register number.$/;"	m	struct:__anon225
RegisterAccess	SuperIo.h	/^  EFI_SIO_REGISTER_ACCESS       RegisterAccess;$/;"	m	struct:_EFI_SIO_PROTOCOL
RegisterAuthMethod	Eap.h	/^  EFI_EAP_REGISTER_AUTHENTICATION_METHOD      RegisterAuthMethod;$/;"	m	struct:_EFI_EAP_PROTOCOL
RegisterClient	Kms.h	/^  EFI_KMS_REGISTER_CLIENT           RegisterClient;$/;"	m	struct:_EFI_KMS_PROTOCOL
RegisterDataNotify	Ip4Config2.h	/^  EFI_IP4_CONFIG2_REGISTER_NOTIFY    RegisterDataNotify;$/;"	m	struct:_EFI_IP4_CONFIG2_PROTOCOL
RegisterDataNotify	Ip6Config.h	/^  EFI_IP6_CONFIG_REGISTER_NOTIFY    RegisterDataNotify;$/;"	m	struct:_EFI_IP6_CONFIG_PROTOCOL
RegisterDataNotify	IpSecConfig.h	/^  EFI_IPSEC_CONFIG_REGISTER_NOTIFY    RegisterDataNotify;$/;"	m	struct:_EFI_IPSEC_CONFIG_PROTOCOL
RegisterExceptionCallback	DebugSupport.h	/^  EFI_REGISTER_EXCEPTION_CALLBACK   RegisterExceptionCallback;$/;"	m	struct:_EFI_DEBUG_SUPPORT_PROTOCOL
RegisterForServerNotification	BluetoothAttribute.h	/^  EFI_BLUETOOTH_ATTRIBUTE_REGISTER_FOR_SERVER_NOTIFICATION RegisterForServerNotification;$/;"	m	struct:_EFI_BLUETOOTH_ATTRIBUTE_PROTOCOL
RegisterGetLinkKeyCallback	BluetoothConfig.h	/^  EFI_BLUETOOTH_CONFIG_REGISTER_GET_LINK_KEY_CALLBACK     RegisterGetLinkKeyCallback;$/;"	m	struct:_EFI_BLUETOOTH_CONFIG_PROTOCOL
RegisterGuidName	Shell.h	/^  EFI_SHELL_REGISTER_GUID_NAME              RegisterGuidName;$/;"	m	struct:_EFI_SHELL_PROTOCOL
RegisterHandler	Timer.h	/^  EFI_TIMER_REGISTER_HANDLER          RegisterHandler;$/;"	m	struct:_EFI_TIMER_ARCH_PROTOCOL
RegisterHandler	WatchdogTimer.h	/^  EFI_WATCHDOG_TIMER_REGISTER_HANDLER  RegisterHandler;$/;"	m	struct:_EFI_WATCHDOG_TIMER_ARCH_PROTOCOL
RegisterICacheFlush	Ebc.h	/^  EFI_EBC_REGISTER_ICACHE_FLUSH RegisterICacheFlush;$/;"	m	struct:_EFI_EBC_PROTOCOL
RegisterInterruptHandler	Cpu.h	/^  EFI_CPU_REGISTER_INTERRUPT_HANDLER  RegisterInterruptHandler;$/;"	m	struct:_EFI_CPU_ARCH_PROTOCOL
RegisterKeyNotify	SimpleTextInEx.h	/^  EFI_REGISTER_KEYSTROKE_NOTIFY   RegisterKeyNotify;$/;"	m	struct:_EFI_SIMPLE_TEXT_INPUT_EX_PROTOCOL
RegisterLinkConnectCompleteCallback	BluetoothConfig.h	/^  EFI_BLUETOOTH_CONFIG_REGISTER_CONNECT_COMPLETE_CALLBACK RegisterLinkConnectCompleteCallback;$/;"	m	struct:_EFI_BLUETOOTH_CONFIG_PROTOCOL
RegisterLinkConnectCompleteCallback	BluetoothLeConfig.h	/^  EFI_BLUETOOTH_LE_CONFIG_REGISTER_CONNECT_COMPLETE_CALLBACK RegisterLinkConnectCompleteCallback;$/;"	m	struct:_EFI_BLUETOOTH_LE_CONFIG_PROTOCOL
RegisterMmEntry	MmConfiguration.h	/^  EFI_MM_REGISTER_MM_ENTRY      RegisterMmEntry;$/;"	m	struct:_EFI_MM_CONFIGURATION_PROTOCOL
RegisterNotify	AcpiSystemDescriptionTable.h	/^  EFI_ACPI_REGISTER_NOTIFY  RegisterNotify;$/;"	m	struct:_EFI_ACPI_SDT_PROTOCOL
RegisterPackageNotify	HiiDatabase.h	/^  EFI_HII_DATABASE_REGISTER_NOTIFY    RegisterPackageNotify;$/;"	m	struct:_EFI_HII_DATABASE_PROTOCOL
RegisterPeriodicCallback	DebugSupport.h	/^  EFI_REGISTER_PERIODIC_CALLBACK    RegisterPeriodicCallback;$/;"	m	struct:_EFI_DEBUG_SUPPORT_PROTOCOL
RegisterPinCallback	BluetoothConfig.h	/^  EFI_BLUETOOTH_CONFIG_REGISTER_PIN_CALLBACK              RegisterPinCallback;$/;"	m	struct:_EFI_BLUETOOTH_CONFIG_PROTOCOL
RegisterResetNotify	ResetNotification.h	/^  EFI_REGISTER_RESET_NOTIFY   RegisterResetNotify;$/;"	m	struct:_EFI_RESET_NOTIFICATION_PROTOCOL
RegisterSetLinkKeyCallback	BluetoothConfig.h	/^  EFI_BLUETOOTH_CONFIG_REGISTER_SET_LINK_KEY_CALLBACK     RegisterSetLinkKeyCallback;$/;"	m	struct:_EFI_BLUETOOTH_CONFIG_PROTOCOL
RegisterSmmEntry	SmmConfiguration.h	/^  EFI_SMM_REGISTER_SMM_ENTRY     RegisterSmmEntry;$/;"	m	struct:_EFI_SMM_CONFIGURATION_PROTOCOL
RegisterSmpAuthCallback	BluetoothLeConfig.h	/^  EFI_BLUETOOTH_LE_REGISTER_SMP_AUTH_CALLBACK                RegisterSmpAuthCallback;$/;"	m	struct:_EFI_BLUETOOTH_LE_CONFIG_PROTOCOL
RegisterSmpGetDataCallback	BluetoothLeConfig.h	/^  EFI_BLUETOOTH_LE_CONFIG_REGISTER_SMP_GET_DATA_CALLBACK     RegisterSmpGetDataCallback;$/;"	m	struct:_EFI_BLUETOOTH_LE_CONFIG_PROTOCOL
RegisterSmpSetDataCallback	BluetoothLeConfig.h	/^  EFI_BLUETOOTH_LE_CONFIG_REGISTER_SMP_SET_DATA_CALLBACK     RegisterSmpSetDataCallback;$/;"	m	struct:_EFI_BLUETOOTH_LE_CONFIG_PROTOCOL
RelativeMovementX	SimplePointer.h	/^  INT32   RelativeMovementX;$/;"	m	struct:__anon369
RelativeMovementY	SimplePointer.h	/^  INT32   RelativeMovementY;$/;"	m	struct:__anon369
RelativeMovementZ	SimplePointer.h	/^  INT32   RelativeMovementZ;$/;"	m	struct:__anon369
RelativeTargetPort	DevicePath.h	/^  UINT16                          RelativeTargetPort;$/;"	m	struct:__anon53
RelativeTargetPort	DevicePath.h	/^  UINT16                          RelativeTargetPort;$/;"	m	struct:__anon54
Release	Dhcp4.h	/^  EFI_DHCP4_RELEASE            Release;$/;"	m	struct:_EFI_DHCP4_PROTOCOL
Release	Dhcp6.h	/^  EFI_DHCP6_RELEASE            Release;$/;"	m	struct:_EFI_DHCP6_PROTOCOL
RelocationData	Runtime.h	/^  VOID                    *RelocationData;$/;"	m	struct:_EFI_RUNTIME_IMAGE_ENTRY
RemoteAddress	Dhcp4.h	/^  EFI_IPv4_ADDRESS        RemoteAddress;$/;"	m	struct:__anon145
RemoteAddress	IpSecConfig.h	/^  EFI_IP_ADDRESS_INFO             *RemoteAddress;$/;"	m	struct:_EFI_IPSEC_SPD_SELECTOR
RemoteAddress	Tcp4.h	/^  EFI_IPv4_ADDRESS        RemoteAddress;$/;"	m	struct:__anon315
RemoteAddress	Tcp4.h	/^  EFI_IPv4_ADDRESS        RemoteAddress;$/;"	m	struct:__anon317
RemoteAddress	Tcp6.h	/^  EFI_IPv6_ADDRESS  RemoteAddress;$/;"	m	struct:__anon466
RemoteAddress	Tcp6.h	/^  EFI_IPv6_ADDRESS  RemoteAddress;$/;"	m	struct:__anon468
RemoteAddress	Udp4.h	/^  EFI_IPv4_ADDRESS        RemoteAddress;$/;"	m	struct:__anon371
RemoteAddress	Udp4.h	/^  EFI_IPv4_ADDRESS   RemoteAddress;$/;"	m	struct:__anon375
RemoteAddress	Udp6.h	/^  EFI_IPv6_ADDRESS    RemoteAddress;$/;"	m	struct:__anon83
RemoteAddress	Udp6.h	/^  EFI_IPv6_ADDRESS  RemoteAddress;$/;"	m	struct:__anon87
RemoteAddressCount	IpSecConfig.h	/^  UINT32                          RemoteAddressCount;$/;"	m	struct:_EFI_IPSEC_SPD_SELECTOR
RemoteDeviceName	BluetoothConfig.h	/^  UINT8                     RemoteDeviceName[BLUETOOTH_HCI_COMMAND_LOCAL_READABLE_NAME_MAX_SIZE];$/;"	m	struct:__anon268
RemoteDeviceState	BluetoothConfig.h	/^  UINT8                     RemoteDeviceState;$/;"	m	struct:__anon268
RemoteDeviceState	BluetoothLeConfig.h	/^  UINT8                RemoteDeviceState;$/;"	m	struct:__anon564
RemoteIpAddress	DevicePath.h	/^  EFI_IPv4_ADDRESS                RemoteIpAddress;$/;"	m	struct:__anon47
RemoteIpAddress	DevicePath.h	/^  EFI_IPv6_ADDRESS                RemoteIpAddress;$/;"	m	struct:__anon48
RemotePort	DevicePath.h	/^  UINT16                          RemotePort;$/;"	m	struct:__anon47
RemotePort	DevicePath.h	/^  UINT16                          RemotePort;$/;"	m	struct:__anon48
RemotePort	Dhcp4.h	/^  UINT16                  RemotePort;$/;"	m	struct:__anon145
RemotePort	IpSecConfig.h	/^  UINT16                          RemotePort;$/;"	m	struct:_EFI_IPSEC_SPD_SELECTOR
RemotePort	Tcp4.h	/^  UINT16                  RemotePort;$/;"	m	struct:__anon315
RemotePort	Tcp4.h	/^  UINT16                  RemotePort;$/;"	m	struct:__anon317
RemotePort	Tcp6.h	/^  UINT16            RemotePort;$/;"	m	struct:__anon466
RemotePort	Tcp6.h	/^  UINT16            RemotePort;$/;"	m	struct:__anon468
RemotePort	Udp4.h	/^  UINT16                  RemotePort;$/;"	m	struct:__anon371
RemotePort	Udp4.h	/^  UINT16             RemotePort;$/;"	m	struct:__anon375
RemotePort	Udp6.h	/^  UINT16              RemotePort;$/;"	m	struct:__anon83
RemotePort	Udp6.h	/^  UINT16            RemotePort;$/;"	m	struct:__anon87
RemotePortRange	IpSecConfig.h	/^  UINT16                          RemotePortRange;$/;"	m	struct:_EFI_IPSEC_SPD_SELECTOR
RemoteTunnelAddress	IpSecConfig.h	/^  EFI_IP_ADDRESS              RemoteTunnelAddress;$/;"	m	struct:_EFI_IPSEC_TUNNEL_OPTION
RemovableMedia	BlockIo.h	/^  BOOLEAN RemovableMedia;$/;"	m	struct:__anon222
Remove	Smbios.h	/^  EFI_SMBIOS_REMOVE        Remove;$/;"	m	struct:_EFI_SMBIOS_PROTOCOL
Remove	VlanConfig.h	/^  EFI_VLAN_CONFIG_REMOVE           Remove;$/;"	m	struct:_EFI_VLAN_CONFIG_PROTOCOL
RemoveDupInFileList	Shell.h	/^  EFI_SHELL_REMOVE_DUP_IN_FILE_LIST         RemoveDupInFileList;$/;"	m	struct:_EFI_SHELL_PROTOCOL
RemovePackageList	HiiDatabase.h	/^  EFI_HII_DATABASE_REMOVE_PACK        RemovePackageList;$/;"	m	struct:_EFI_HII_DATABASE_PROTOCOL
RenewRebind	Dhcp4.h	/^  EFI_DHCP4_RENEW_REBIND       RenewRebind;$/;"	m	struct:_EFI_DHCP4_PROTOCOL
RenewRebind	Dhcp6.h	/^  EFI_DHCP6_RENEW_REBIND       RenewRebind;$/;"	m	struct:_EFI_DHCP6_PROTOCOL
RepType	Ftp4.h	/^  UINT8                                RepType;$/;"	m	struct:__anon443
Repair	DriverHealth.h	/^  EFI_DRIVER_HEALTH_REPAIR             Repair;$/;"	m	struct:_EFI_DRIVER_HEALTH_PROTOCOL
ReplyPacket	Dhcp4.h	/^  EFI_DHCP4_PACKET            *ReplyPacket;$/;"	m	struct:__anon143
ReplyPacket	Dhcp6.h	/^  EFI_DHCP6_PACKET             *ReplyPacket;$/;"	m	struct:__anon516
ReportStatusCode	MmStatusCode.h	/^  EFI_MM_REPORT_STATUS_CODE  ReportStatusCode;$/;"	m	struct:_EFI_MM_STATUS_CODE_PROTOCOL
ReportStatusCode	StatusCode.h	/^  EFI_REPORT_STATUS_CODE         ReportStatusCode;$/;"	m	struct:_EFI_STATUS_CODE_PROTOCOL
Request	Arp.h	/^  EFI_ARP_REQUEST           Request;$/;"	m	struct:_EFI_ARP_PROTOCOL
Request	Http.h	/^    EFI_HTTP_REQUEST_DATA       *Request;$/;"	m	union:__anon529::__anon530
Request	Http.h	/^  EFI_HTTP_REQUEST              Request;$/;"	m	struct:_EFI_HTTP_PROTOCOL
RequestIDs	WiFi.h	/^  UINT8                              RequestIDs[1];$/;"	m	struct:__anon187
RequestInformation	WiFi.h	/^  EFI_80211_ELEMENT_REQ              *RequestInformation;$/;"	m	struct:__anon189
RequestTimeout	Dhcp4.h	/^  UINT32                      *RequestTimeout;$/;"	m	struct:__anon142
RequestTryCount	Dhcp4.h	/^  UINT32                      RequestTryCount;$/;"	m	struct:__anon142
RequestedElements	WiFi.h	/^  UINT8                              *RequestedElements;$/;"	m	struct:__anon197
Reserved	AuthenticationInfo.h	/^  UINT16           Reserved;$/;"	m	struct:__anon363
Reserved	AuthenticationInfo.h	/^  UINT16           Reserved;$/;"	m	struct:__anon364
Reserved	DebugSupport.h	/^  UINT64  Reserved;$/;"	m	struct:__anon490
Reserved	DevicePath.h	/^  UINT32                          Reserved;$/;"	m	struct:__anon37
Reserved	DevicePath.h	/^  UINT32                          Reserved;$/;"	m	struct:__anon38
Reserved	DevicePath.h	/^  UINT32                          Reserved;$/;"	m	struct:__anon39
Reserved	DevicePath.h	/^  UINT32                          Reserved;$/;"	m	struct:__anon50
Reserved	DevicePath.h	/^  UINT32                          Reserved;$/;"	m	struct:__anon53
Reserved	DevicePath.h	/^  UINT32                    Reserved;$/;"	m	struct:__anon72
Reserved	Dhcp4.h	/^  UINT16            Reserved;$/;"	m	struct:__anon137
Reserved	GraphicsOutput.h	/^  UINT8 Reserved;$/;"	m	struct:__anon238
Reserved	HiiImageDecoder.h	/^  UINT64                                    Reserved;$/;"	m	struct:_EFI_HII_IMAGE_DECODER_JPEG_INFO
Reserved	HiiImageDecoder.h	/^  UINT64                                    Reserved;$/;"	m	struct:_EFI_HII_IMAGE_DECODER_PNG_INFO
Reserved	LoadedImage.h	/^  VOID              *Reserved;      \/\/\/< Reserved. DO NOT USE.$/;"	m	struct:__anon359
Reserved	NvdimmLabel.h	/^  UINT8    Reserved[3];$/;"	m	struct:__anon261
Reserved	NvdimmLabel.h	/^  UINT8  Reserved[31];$/;"	m	struct:__anon262
Reserved	NvmExpressPassthru.h	/^  UINT32                            Reserved:22;$/;"	m	struct:__anon542
Reserved	PartitionInfo.h	/^  UINT8                      Reserved[7];$/;"	m	struct:__anon482
Reserved	PxeBaseCode.h	/^  UINT8           Reserved;$/;"	m	struct:__anon109
Reserved	UgaDraw.h	/^  UINT8 Reserved;$/;"	m	struct:__anon78
Reserved1	AtaPassThru.h	/^  UINT8 Reserved1[2];$/;"	m	struct:_EFI_ATA_COMMAND_BLOCK
Reserved1	AtaPassThru.h	/^  UINT8 Reserved1[2];$/;"	m	struct:_EFI_ATA_STATUS_BLOCK
Reserved1	BluetoothAttribute.h	/^    UINT16  Reserved1           : 7;$/;"	m	struct:__anon150::__anon151
Reserved1	DebugSupport.h	/^  UINT16  Reserved1;$/;"	m	struct:__anon486
Reserved1	DebugSupport.h	/^  UINT8   Reserved1[8];$/;"	m	struct:__anon488
Reserved1	NvdimmLabel.h	/^  UINT8    Reserved1[88];$/;"	m	struct:__anon261
Reserved1	UserManager.h	/^  UINT8                  Reserved1;$/;"	m	struct:__anon253
Reserved10	DebugSupport.h	/^  UINT8   St7Mm7[10], Reserved10[6];$/;"	m	struct:__anon486
Reserved11	DebugSupport.h	/^  UINT8   Reserved11[14 * 16];$/;"	m	struct:__anon486
Reserved11	DebugSupport.h	/^  UINT8   Reserved11[14 * 16];$/;"	m	struct:__anon488
Reserved2	AtaPassThru.h	/^  UINT8 Reserved2;$/;"	m	struct:_EFI_ATA_STATUS_BLOCK
Reserved2	AtaPassThru.h	/^  UINT8 Reserved2[6];$/;"	m	struct:_EFI_ATA_COMMAND_BLOCK
Reserved2	BluetoothAttribute.h	/^    UINT16  Reserved2           : 7;$/;"	m	struct:__anon150::__anon151
Reserved2	DebugSupport.h	/^  UINT8   Reserved2[10];$/;"	m	struct:__anon486
Reserved2	DebugSupport.h	/^  UINT8   St0Mm0[10], Reserved2[6];$/;"	m	struct:__anon488
Reserved3	AtaPassThru.h	/^  UINT8 Reserved3[6];$/;"	m	struct:_EFI_ATA_STATUS_BLOCK
Reserved3	DebugSupport.h	/^  UINT8   St0Mm0[10], Reserved3[6];$/;"	m	struct:__anon486
Reserved3	DebugSupport.h	/^  UINT8   St1Mm1[10], Reserved3[6];$/;"	m	struct:__anon488
Reserved4	DebugSupport.h	/^  UINT8   St1Mm1[10], Reserved4[6];$/;"	m	struct:__anon486
Reserved4	DebugSupport.h	/^  UINT8   St2Mm2[10], Reserved4[6];$/;"	m	struct:__anon488
Reserved5	DebugSupport.h	/^  UINT8   St2Mm2[10], Reserved5[6];$/;"	m	struct:__anon486
Reserved5	DebugSupport.h	/^  UINT8   St3Mm3[10], Reserved5[6];$/;"	m	struct:__anon488
Reserved6	DebugSupport.h	/^  UINT8   St3Mm3[10], Reserved6[6];$/;"	m	struct:__anon486
Reserved6	DebugSupport.h	/^  UINT8   St4Mm4[10], Reserved6[6];$/;"	m	struct:__anon488
Reserved7	DebugSupport.h	/^  UINT8   St4Mm4[10], Reserved7[6];$/;"	m	struct:__anon486
Reserved7	DebugSupport.h	/^  UINT8   St5Mm5[10], Reserved7[6];$/;"	m	struct:__anon488
Reserved8	DebugSupport.h	/^  UINT8   St5Mm5[10], Reserved8[6];$/;"	m	struct:__anon486
Reserved8	DebugSupport.h	/^  UINT8   St6Mm6[10], Reserved8[6];$/;"	m	struct:__anon488
Reserved9	DebugSupport.h	/^  UINT8   St6Mm6[10], Reserved9[6];$/;"	m	struct:__anon486
Reserved9	DebugSupport.h	/^  UINT8   St7Mm7[10], Reserved9[6];$/;"	m	struct:__anon488
ReservedMask	GraphicsOutput.h	/^  UINT32            ReservedMask;$/;"	m	struct:__anon235
Reset	AbsolutePointer.h	/^  EFI_ABSOLUTE_POINTER_RESET      Reset;$/;"	m	struct:_EFI_ABSOLUTE_POINTER_PROTOCOL
Reset	BlockIo.h	/^  EFI_BLOCK_RESET     Reset;$/;"	m	struct:_EFI_BLOCK_IO_PROTOCOL
Reset	BlockIo2.h	/^  EFI_BLOCK_RESET_EX      Reset;$/;"	m	struct:_EFI_BLOCK_IO2_PROTOCOL
Reset	BlockIoCrypto.h	/^  EFI_BLOCK_IO_CRYPTO_RESET                 Reset;$/;"	m	struct:_EFI_BLOCK_IO_CRYPTO_PROTOCOL
Reset	DebugPort.h	/^  EFI_DEBUGPORT_RESET Reset;$/;"	m	struct:_EFI_DEBUGPORT_PROTOCOL
Reset	I2cMaster.h	/^  EFI_I2C_MASTER_PROTOCOL_RESET             Reset;$/;"	m	struct:_EFI_I2C_MASTER_PROTOCOL
Reset	SerialIo.h	/^  EFI_SERIAL_RESET            Reset;$/;"	m	struct:_EFI_SERIAL_IO_PROTOCOL
Reset	SimpleNetwork.h	/^  EFI_SIMPLE_NETWORK_RESET            Reset;$/;"	m	struct:_EFI_SIMPLE_NETWORK_PROTOCOL
Reset	SimplePointer.h	/^  EFI_SIMPLE_POINTER_RESET      Reset;$/;"	m	struct:_EFI_SIMPLE_POINTER_PROTOCOL
Reset	SimpleTextIn.h	/^  EFI_INPUT_RESET     Reset;$/;"	m	struct:_EFI_SIMPLE_TEXT_INPUT_PROTOCOL
Reset	SimpleTextInEx.h	/^  EFI_INPUT_RESET_EX              Reset;$/;"	m	struct:_EFI_SIMPLE_TEXT_INPUT_EX_PROTOCOL
Reset	SimpleTextOut.h	/^  EFI_TEXT_RESET                Reset;$/;"	m	struct:_EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL
Reset	Usb2HostController.h	/^  EFI_USB2_HC_PROTOCOL_RESET                       Reset;$/;"	m	struct:_EFI_USB2_HC_PROTOCOL
Reset	UsbHostController.h	/^  EFI_USB_HC_PROTOCOL_RESET                       Reset;$/;"	m	struct:_EFI_USB_HC_PROTOCOL
ResetBus	ScsiIo.h	/^  EFI_SCSI_IO_PROTOCOL_RESET_BUS            ResetBus;$/;"	m	struct:_EFI_SCSI_IO_PROTOCOL
ResetChannel	ScsiPassThru.h	/^  EFI_SCSI_PASS_THRU_RESET_CHANNEL      ResetChannel;$/;"	m	struct:_EFI_SCSI_PASS_THRU_PROTOCOL
ResetChannel	ScsiPassThruExt.h	/^  EFI_EXT_SCSI_PASS_THRU_RESET_CHANNEL       ResetChannel;$/;"	m	struct:_EFI_EXT_SCSI_PASS_THRU_PROTOCOL
ResetDevice	AtaPassThru.h	/^  EFI_ATA_PASS_THRU_RESET_DEVICE       ResetDevice;$/;"	m	struct:_EFI_ATA_PASS_THRU_PROTOCOL
ResetDevice	ScsiIo.h	/^  EFI_SCSI_IO_PROTOCOL_RESET_DEVICE         ResetDevice;$/;"	m	struct:_EFI_SCSI_IO_PROTOCOL
ResetDevice	SdMmcPassThru.h	/^  EFI_SD_MMC_PASS_THRU_RESET_DEVICE          ResetDevice;$/;"	m	struct:_EFI_SD_MMC_PASS_THRU_PROTOCOL
ResetPort	AtaPassThru.h	/^  EFI_ATA_PASS_THRU_RESET_PORT         ResetPort;$/;"	m	struct:_EFI_ATA_PASS_THRU_PROTOCOL
ResetTarget	ScsiPassThru.h	/^  EFI_SCSI_PASS_THRU_RESET_TARGET       ResetTarget;$/;"	m	struct:_EFI_SCSI_PASS_THRU_PROTOCOL
ResetTargetLun	ScsiPassThruExt.h	/^  EFI_EXT_SCSI_PASS_THRU_RESET_TARGET_LUN    ResetTargetLun;$/;"	m	struct:_EFI_EXT_SCSI_PASS_THRU_PROTOCOL
ResolutionX	SimplePointer.h	/^  UINT64  ResolutionX;$/;"	m	struct:__anon370
ResolutionY	SimplePointer.h	/^  UINT64  ResolutionY;$/;"	m	struct:__anon370
ResolutionZ	SimplePointer.h	/^  UINT64  ResolutionZ;$/;"	m	struct:__anon370
ResourceFlags	DevicePath.h	/^  UINT32                          ResourceFlags;$/;"	m	struct:__anon49
ResourceTypeName	RestJsonStructure.h	/^  CHAR8 *ResourceTypeName;   \/\/\/< Resource type name$/;"	m	struct:_EFI_REST_JSON_RESOURCE_TYPE_NAMESPACE
Resp0	SdMmcPassThru.h	/^  UINT32                            Resp0;$/;"	m	struct:_EFI_SD_MMC_STATUS_BLOCK
Resp1	SdMmcPassThru.h	/^  UINT32                            Resp1;$/;"	m	struct:_EFI_SD_MMC_STATUS_BLOCK
Resp2	SdMmcPassThru.h	/^  UINT32                            Resp2;$/;"	m	struct:_EFI_SD_MMC_STATUS_BLOCK
Resp3	SdMmcPassThru.h	/^  UINT32                            Resp3;$/;"	m	struct:_EFI_SD_MMC_STATUS_BLOCK
Response	Http.h	/^    EFI_HTTP_RESPONSE_DATA      *Response;$/;"	m	union:__anon529::__anon530
Response	Http.h	/^  EFI_HTTP_RESPONSE             Response;$/;"	m	struct:_EFI_HTTP_PROTOCOL
Response	PlatformToDriverConfiguration.h	/^  EFI_PLATFORM_TO_DRIVER_CONFIGURATION_RESPONSE Response;$/;"	m	struct:_EFI_PLATFORM_TO_DRIVER_CONFIGURATION_PROTOCOL
ResponseCount	Dhcp4.h	/^  UINT32                  ResponseCount;$/;"	m	struct:__anon145
ResponseList	Dhcp4.h	/^  EFI_DHCP4_PACKET        *ResponseList;$/;"	m	struct:__anon145
ResponseMessage	RestEx.h	/^  EFI_HTTP_MESSAGE  *ResponseMessage;$/;"	m	struct:__anon234
ResponseType	SdMmcPassThru.h	/^  UINT32                            ResponseType;     \/\/ One of the EFI_SD_MMC_RESPONSE_TYPE values$/;"	m	struct:_EFI_SD_MMC_COMMAND_BLOCK
RestExConfigDataLength	RestEx.h	/^  UINT8                            RestExConfigDataLength;$/;"	m	struct:__anon231
RestExConfigType	RestEx.h	/^  EFI_REST_EX_CONFIG_TYPE          RestExConfigType;$/;"	m	struct:__anon231
RestResourceInterp	RestJsonStructure.h	/^  EFI_REST_JSON_RESOURCE_TYPE_IDENTIFIER RestResourceInterp; \/\/\/< JSON resource type this convertor supports.$/;"	m	struct:_EFI_REST_JSON_STRUCTURE_SUPPORTED
RestServiceAccessMode	RestEx.h	/^  EFI_REST_EX_SERVICE_ACCESS_MODE  RestServiceAccessMode;$/;"	m	struct:__anon231
RestServiceInfoVer	RestEx.h	/^  EFI_REST_EX_SERVICE_INFO_VER   RestServiceInfoVer;$/;"	m	struct:__anon227
RestServiceType	RestEx.h	/^  EFI_REST_EX_SERVICE_TYPE         RestServiceType;$/;"	m	struct:__anon231
Result	WiFi.h	/^  EFI_80211_ASSOCIATE_RESULT         *Result;$/;"	m	struct:__anon208
Result	WiFi.h	/^  EFI_80211_AUTHENTICATE_RESULT      *Result;$/;"	m	struct:__anon213
Result	WiFi.h	/^  EFI_80211_SCAN_RESULT              *Result;$/;"	m	struct:__anon202
Result	WiFi2.h	/^  EFI_80211_GET_NETWORKS_RESULT             *Result;$/;"	m	struct:__anon311
ResultCode	WiFi.h	/^  EFI_80211_ASSOCIATE_RESULT_CODE    ResultCode;$/;"	m	struct:__anon208
ResultCode	WiFi.h	/^  EFI_80211_AUTHENTICATE_RESULT_CODE ResultCode;$/;"	m	struct:__anon213
ResultCode	WiFi.h	/^  EFI_80211_DISASSOCIATE_RESULT_CODE ResultCode;$/;"	m	struct:__anon210
ResultCode	WiFi.h	/^  EFI_80211_SCAN_RESULT_CODE         ResultCode;$/;"	m	struct:__anon202
ResultCode	WiFi2.h	/^  EFI_80211_CONNECT_NETWORK_RESULT_CODE     ResultCode;$/;"	m	struct:__anon313
RetryCount	Arp.h	/^  UINT32                    RetryCount;$/;"	m	struct:__anon82
RetryCount	Dns4.h	/^  UINT32                                  RetryCount;$/;"	m	struct:__anon464
RetryCount	Dns4.h	/^  UINT32                        RetryCount;$/;"	m	struct:__anon457
RetryCount	Dns6.h	/^  UINT32                                  RetryCount;$/;"	m	struct:__anon395
RetryCount	Dns6.h	/^  UINT32                        RetryCount;$/;"	m	struct:__anon388
RetryInterval	Dns4.h	/^  UINT32                                  RetryInterval;$/;"	m	struct:__anon464
RetryInterval	Dns4.h	/^  UINT32                        RetryInterval;$/;"	m	struct:__anon457
RetryInterval	Dns6.h	/^  UINT32                                  RetryInterval;$/;"	m	struct:__anon395
RetryInterval	Dns6.h	/^  UINT32                        RetryInterval;$/;"	m	struct:__anon388
RetryTimeOut	Arp.h	/^  UINT32                    RetryTimeOut;$/;"	m	struct:__anon82
RevMajor	TcgService.h	/^  UINT8  RevMajor;$/;"	m	struct:__anon357
RevMinor	TcgService.h	/^  UINT8  RevMinor;$/;"	m	struct:__anon357
Revision	AcpiSystemDescriptionTable.h	/^  UINT8     Revision;$/;"	m	struct:__anon360
Revision	BlockIo.h	/^  UINT64              Revision;$/;"	m	struct:_EFI_BLOCK_IO_PROTOCOL
Revision	BootManagerPolicy.h	/^  UINT64                                       Revision;$/;"	m	struct:_EFI_BOOT_MANAGER_POLICY_PROTOCOL
Revision	DiskIo.h	/^  UINT64          Revision;$/;"	m	struct:_EFI_DISK_IO_PROTOCOL
Revision	DiskIo2.h	/^  UINT64             Revision;$/;"	m	struct:_EFI_DISK_IO2_PROTOCOL
Revision	EraseBlock.h	/^  UINT64                     Revision;$/;"	m	struct:_EFI_ERASE_BLOCK_PROTOCOL
Revision	HiiPopup.h	/^  UINT64                Revision;$/;"	m	struct:_EFI_HII_POPUP_PROTOCOL
Revision	LoadedImage.h	/^  UINT32            Revision;       \/\/\/< Defines the revision of the EFI_LOADED_IMAGE_PROTOCOL structure.$/;"	m	struct:__anon359
Revision	MmMp.h	/^  UINT32                            Revision;$/;"	m	struct:_EFI_MM_MP_PROTOCOL
Revision	NetworkInterfaceIdentifier.h	/^  UINT64    Revision;   \/\/\/< The revision of the EFI_NETWORK_INTERFACE_IDENTIFIER protocol.$/;"	m	struct:_EFI_NETWORK_INTERFACE_IDENTIFIER_PROTOCOL
Revision	PartitionInfo.h	/^  UINT32                     Revision;$/;"	m	struct:__anon482
Revision	PxeBaseCode.h	/^  UINT64                            Revision;$/;"	m	struct:_EFI_PXE_BASE_CODE_PROTOCOL
Revision	PxeBaseCodeCallBack.h	/^  UINT64            Revision;$/;"	m	struct:_EFI_PXE_BASE_CODE_CALLBACK_PROTOCOL
Revision	SerialIo.h	/^  UINT32                      Revision;$/;"	m	struct:_EFI_SERIAL_IO_PROTOCOL
Revision	SimpleFileSystem.h	/^  UINT64                                      Revision;$/;"	m	struct:_EFI_SIMPLE_FILE_SYSTEM_PROTOCOL
Revision	SimpleFileSystem.h	/^  UINT64                Revision;$/;"	m	struct:_EFI_FILE_PROTOCOL
Revision	SimpleNetwork.h	/^  UINT64                              Revision;$/;"	m	struct:_EFI_SIMPLE_NETWORK_PROTOCOL
Revision	TapeIo.h	/^  UINT32     Revision;$/;"	m	struct:_EFI_TAPE_HEADER
Revision	UsbFunctionIo.h	/^  UINT32                                    Revision;$/;"	m	struct:_EFI_USBFN_IO_PROTOCOL
RevocationData	IpSecConfig.h	/^  VOID                          *RevocationData;$/;"	m	struct:_EFI_IPSEC_PAD_DATA
RevocationDataSize	IpSecConfig.h	/^  UINTN                         RevocationDataSize;$/;"	m	struct:_EFI_IPSEC_PAD_DATA
Rflags	DebugSupport.h	/^  UINT64                Rflags;$/;"	m	struct:__anon489
RightButton	SimplePointer.h	/^  BOOLEAN RightButton;$/;"	m	struct:__anon369
RightButton	SimplePointer.h	/^  BOOLEAN RightButton;$/;"	m	struct:__anon370
RightColumn	FormBrowser2.h	/^  UINTN   RightColumn;$/;"	m	struct:__anon243
Rip	DebugSupport.h	/^  UINT64                Rip;$/;"	m	struct:__anon489
Rip	DebugSupport.h	/^  UINT64  Rip;$/;"	m	struct:__anon488
RomImage	PciIo.h	/^  VOID                                    *RomImage;$/;"	m	struct:_EFI_PCI_IO_PROTOCOL
RomSize	PciIo.h	/^  UINT64                                  RomSize;$/;"	m	struct:_EFI_PCI_IO_PROTOCOL
RouteConfig	HiiConfigAccess.h	/^  EFI_HII_ACCESS_ROUTE_CONFIG       RouteConfig;$/;"	m	struct:_EFI_HII_CONFIG_ACCESS_PROTOCOL
RouteConfig	HiiConfigRouting.h	/^  EFI_HII_ROUTE_CONFIG    RouteConfig;$/;"	m	struct:_EFI_HII_CONFIG_ROUTING_PROTOCOL
RouteCount	Ip4.h	/^  UINT32                  RouteCount;$/;"	m	struct:__anon338
RouteCount	Ip6.h	/^  UINT32                  RouteCount;$/;"	m	struct:__anon405
RouteCount	Ip6Config.h	/^  UINT32                RouteCount;$/;"	m	struct:__anon14
RouteTable	Ip4.h	/^  EFI_IP4_ROUTE_TABLE     *RouteTable;$/;"	m	struct:__anon338
RouteTable	Ip4Config.h	/^  EFI_IP4_ROUTE_TABLE          *RouteTable;$/;"	m	struct:__anon386
RouteTable	Ip6.h	/^  EFI_IP6_ROUTE_TABLE     *RouteTable;$/;"	m	struct:__anon405
RouteTable	Ip6Config.h	/^  EFI_IP6_ROUTE_TABLE   *RouteTable;$/;"	m	struct:__anon14
RouteTable	PxeBaseCode.h	/^  EFI_PXE_BASE_CODE_ROUTE_ENTRY RouteTable[EFI_PXE_BASE_CODE_MAX_ROUTE_ENTRIES];$/;"	m	struct:__anon116
RouteTableEntries	PxeBaseCode.h	/^  UINT32                        RouteTableEntries;$/;"	m	struct:__anon116
RouteTableSize	Ip4Config.h	/^  UINT32                       RouteTableSize;$/;"	m	struct:__anon386
RouteTableSize	Ip4Config2.h	/^  UINT32                RouteTableSize;$/;"	m	struct:__anon5
RouterAddress	Dhcp4.h	/^  EFI_IPv4_ADDRESS            RouterAddress;$/;"	m	struct:__anon143
Routes	Ip4.h	/^  EFI_IP4_ROUTES               Routes;$/;"	m	struct:_EFI_IP4_PROTOCOL
Routes	Ip6.h	/^  EFI_IP6_ROUTES          Routes;$/;"	m	struct:_EFI_IP6_PROTOCOL
Routes	Tcp4.h	/^  EFI_TCP4_ROUTES                        Routes;$/;"	m	struct:_EFI_TCP4_PROTOCOL
Routes	Udp4.h	/^  EFI_UDP4_ROUTES               Routes;$/;"	m	struct:_EFI_UDP4_PROTOCOL
Rrq	Mtftp4.h	/^  EFI_MTFTP4_REQ_HEADER   Rrq;$/;"	m	union:__anon432
Rrq	Mtftp6.h	/^  EFI_MTFTP6_REQ_HEADER    Rrq;    \/\/\/< Read request packet header.$/;"	m	union:__anon556
Rsc	Supplicant.h	/^  UINT8                                   Rsc[8];$/;"	m	struct:__anon123
RscLen	Supplicant.h	/^  UINT8                                   RscLen;$/;"	m	struct:__anon123
Rsi	DebugSupport.h	/^  UINT64                Rsi;$/;"	m	struct:__anon489
Rsp	DebugSupport.h	/^  UINT64                Rsp;$/;"	m	struct:__anon489
RspData	Dns4.h	/^  } RspData;$/;"	m	struct:__anon464	typeref:union:__anon464::__anon465
RspData	Dns6.h	/^  } RspData;$/;"	m	struct:__anon395	typeref:union:__anon395::__anon396
RunDiagnostics	DriverDiagnostics.h	/^  EFI_DRIVER_DIAGNOSTICS_RUN_DIAGNOSTICS  RunDiagnostics;$/;"	m	struct:_EFI_DRIVER_DIAGNOSTICS_PROTOCOL
RunDiagnostics	DriverDiagnostics2.h	/^  EFI_DRIVER_DIAGNOSTICS2_RUN_DIAGNOSTICS RunDiagnostics;$/;"	m	struct:_EFI_DRIVER_DIAGNOSTICS2_PROTOCOL
RwUfsAttribute	UfsDeviceConfig.h	/^  EFI_UFS_DEVICE_CONFIG_RW_ATTRIBUTE     RwUfsAttribute;$/;"	m	struct:_EFI_UFS_DEVICE_CONFIG_PROTOCOL
RwUfsDescriptor	UfsDeviceConfig.h	/^  EFI_UFS_DEVICE_CONFIG_RW_DESCRIPTOR    RwUfsDescriptor;$/;"	m	struct:_EFI_UFS_DEVICE_CONFIG_PROTOCOL
RwUfsFlag	UfsDeviceConfig.h	/^  EFI_UFS_DEVICE_CONFIG_RW_FLAG          RwUfsFlag;$/;"	m	struct:_EFI_UFS_DEVICE_CONFIG_PROTOCOL
RxBroadcastFrames	SimpleNetwork.h	/^  UINT64  RxBroadcastFrames;$/;"	m	struct:__anon264
RxCrcErrorFrames	SimpleNetwork.h	/^  UINT64  RxCrcErrorFrames;$/;"	m	struct:__anon264
RxData	Ip4.h	/^    EFI_IP4_RECEIVE_DATA   *RxData;$/;"	m	union:__anon344::__anon345
RxData	Ip6.h	/^    EFI_IP6_RECEIVE_DATA  *RxData;$/;"	m	union:__anon406::__anon407
RxData	ManagedNetwork.h	/^    EFI_MANAGED_NETWORK_RECEIVE_DATA    *RxData;$/;"	m	union:__anon177::__anon178
RxData	Tcp4.h	/^    EFI_TCP4_RECEIVE_DATA   *RxData;$/;"	m	union:__anon327::__anon328
RxData	Tcp6.h	/^    EFI_TCP6_RECEIVE_DATA   *RxData;$/;"	m	union:__anon478::__anon479
RxData	Udp4.h	/^    EFI_UDP4_RECEIVE_DATA   *RxData;$/;"	m	union:__anon378::__anon379
RxData	Udp6.h	/^    EFI_UDP6_RECEIVE_DATA               *RxData;$/;"	m	union:__anon90::__anon91
RxDecryptErrorFrames	SimpleNetwork.h	/^  UINT64  RxDecryptErrorFrames;$/;"	m	struct:__anon264
RxDroppedFrames	SimpleNetwork.h	/^  UINT64  RxDroppedFrames;$/;"	m	struct:__anon264
RxDuplicatedFrames	SimpleNetwork.h	/^  UINT64  RxDuplicatedFrames;$/;"	m	struct:__anon264
RxGoodFrames	SimpleNetwork.h	/^  UINT64  RxGoodFrames;$/;"	m	struct:__anon264
RxMulticastFrames	SimpleNetwork.h	/^  UINT64  RxMulticastFrames;$/;"	m	struct:__anon264
RxOversizeFrames	SimpleNetwork.h	/^  UINT64  RxOversizeFrames;$/;"	m	struct:__anon264
RxTotalBytes	SimpleNetwork.h	/^  UINT64  RxTotalBytes;$/;"	m	struct:__anon264
RxTotalFrames	SimpleNetwork.h	/^  UINT64  RxTotalFrames;$/;"	m	struct:__anon264
RxUndersizeFrames	SimpleNetwork.h	/^  UINT64  RxUndersizeFrames;$/;"	m	struct:__anon264
RxUnicastFrames	SimpleNetwork.h	/^  UINT64  RxUnicastFrames;$/;"	m	struct:__anon264
SAE	WiFi.h	/^  SAE$/;"	e	enum:__anon184
SAEContent	WiFi.h	/^  UINT8                              *SAEContent;$/;"	m	struct:__anon211
SAEContent	WiFi.h	/^  UINT8                              *SAEContent;$/;"	m	struct:__anon212
SASEX_DEVICE_PATH	DevicePath.h	/^} SASEX_DEVICE_PATH;$/;"	t	typeref:struct:__anon54
SAS_DEVICE_PATH	DevicePath.h	/^} SAS_DEVICE_PATH;$/;"	t	typeref:struct:__anon53
SATA_DEVICE_PATH	DevicePath.h	/^} SATA_DEVICE_PATH;$/;"	t	typeref:struct:__anon44
SATA_HBA_DIRECT_CONNECT_FLAG	DevicePath.h	534;"	d
SCAN_BRIGHTNESS_DOWN	SimpleTextInEx.h	141;"	d
SCAN_BRIGHTNESS_UP	SimpleTextInEx.h	140;"	d
SCAN_DELETE	SimpleTextIn.h	59;"	d
SCAN_DOWN	SimpleTextIn.h	53;"	d
SCAN_EJECT	SimpleTextInEx.h	146;"	d
SCAN_END	SimpleTextIn.h	57;"	d
SCAN_ESC	SimpleTextIn.h	72;"	d
SCAN_F1	SimpleTextIn.h	62;"	d
SCAN_F10	SimpleTextIn.h	71;"	d
SCAN_F11	SimpleTextInEx.h	122;"	d
SCAN_F12	SimpleTextInEx.h	123;"	d
SCAN_F13	SimpleTextInEx.h	125;"	d
SCAN_F14	SimpleTextInEx.h	126;"	d
SCAN_F15	SimpleTextInEx.h	127;"	d
SCAN_F16	SimpleTextInEx.h	128;"	d
SCAN_F17	SimpleTextInEx.h	129;"	d
SCAN_F18	SimpleTextInEx.h	130;"	d
SCAN_F19	SimpleTextInEx.h	131;"	d
SCAN_F2	SimpleTextIn.h	63;"	d
SCAN_F20	SimpleTextInEx.h	132;"	d
SCAN_F21	SimpleTextInEx.h	133;"	d
SCAN_F22	SimpleTextInEx.h	134;"	d
SCAN_F23	SimpleTextInEx.h	135;"	d
SCAN_F24	SimpleTextInEx.h	136;"	d
SCAN_F3	SimpleTextIn.h	64;"	d
SCAN_F4	SimpleTextIn.h	65;"	d
SCAN_F5	SimpleTextIn.h	66;"	d
SCAN_F6	SimpleTextIn.h	67;"	d
SCAN_F7	SimpleTextIn.h	68;"	d
SCAN_F8	SimpleTextIn.h	69;"	d
SCAN_F9	SimpleTextIn.h	70;"	d
SCAN_HIBERNATE	SimpleTextInEx.h	143;"	d
SCAN_HOME	SimpleTextIn.h	56;"	d
SCAN_INSERT	SimpleTextIn.h	58;"	d
SCAN_LEFT	SimpleTextIn.h	55;"	d
SCAN_MUTE	SimpleTextInEx.h	137;"	d
SCAN_NULL	SimpleTextIn.h	51;"	d
SCAN_PAGE_DOWN	SimpleTextIn.h	61;"	d
SCAN_PAGE_UP	SimpleTextIn.h	60;"	d
SCAN_PAUSE	SimpleTextInEx.h	124;"	d
SCAN_RECOVERY	SimpleTextInEx.h	145;"	d
SCAN_RIGHT	SimpleTextIn.h	54;"	d
SCAN_SUSPEND	SimpleTextInEx.h	142;"	d
SCAN_TOGGLE_DISPLAY	SimpleTextInEx.h	144;"	d
SCAN_UP	SimpleTextIn.h	52;"	d
SCAN_VOLUME_DOWN	SimpleTextInEx.h	139;"	d
SCAN_VOLUME_UP	SimpleTextInEx.h	138;"	d
SCARD_ABSENT	SmartCardReader.h	46;"	d
SCARD_ACTIVE	SmartCardReader.h	48;"	d
SCARD_AID_MAXSIZE	SmartCardEdge.h	30;"	d
SCARD_AM_CARD	SmartCardReader.h	26;"	d
SCARD_AM_READER	SmartCardReader.h	25;"	d
SCARD_CA_COLDRESET	SmartCardReader.h	31;"	d
SCARD_CA_EJECT	SmartCardReader.h	34;"	d
SCARD_CA_NORESET	SmartCardReader.h	30;"	d
SCARD_CA_UNPOWER	SmartCardReader.h	33;"	d
SCARD_CA_WARMRESET	SmartCardReader.h	32;"	d
SCARD_CSN_SIZE	SmartCardEdge.h	34;"	d
SCARD_CTL_CODE	SmartCardReader.h	52;"	d
SCARD_INACTIVE	SmartCardReader.h	47;"	d
SCARD_PROTOCOL_RAW	SmartCardReader.h	41;"	d
SCARD_PROTOCOL_T0	SmartCardReader.h	39;"	d
SCARD_PROTOCOL_T1	SmartCardReader.h	40;"	d
SCARD_PROTOCOL_UNDEFINED	SmartCardReader.h	38;"	d
SCARD_UNKNOWN	SmartCardReader.h	45;"	d
SCSI_DEVICE_PATH	DevicePath.h	/^} SCSI_DEVICE_PATH;$/;"	t	typeref:struct:__anon36
SC_EDGE_ECDH_256	SmartCardEdge.h	137;"	d
SC_EDGE_ECDH_384	SmartCardEdge.h	141;"	d
SC_EDGE_ECDH_521	SmartCardEdge.h	145;"	d
SC_EDGE_ECDSA_256	SmartCardEdge.h	125;"	d
SC_EDGE_ECDSA_384	SmartCardEdge.h	129;"	d
SC_EDGE_ECDSA_521	SmartCardEdge.h	133;"	d
SC_EDGE_L_SIZE_CERT	SmartCardEdge.h	78;"	d
SC_EDGE_L_SIZE_HEADER	SmartCardEdge.h	74;"	d
SC_EDGE_L_SIZE_KEY_ID	SmartCardEdge.h	82;"	d
SC_EDGE_L_SIZE_KEY_SIZE	SmartCardEdge.h	90;"	d
SC_EDGE_L_SIZE_KEY_TYPE	SmartCardEdge.h	86;"	d
SC_EDGE_L_VALUE_HEADER	SmartCardEdge.h	97;"	d
SC_EDGE_L_VALUE_KEY_ID	SmartCardEdge.h	101;"	d
SC_EDGE_L_VALUE_KEY_SIZE	SmartCardEdge.h	109;"	d
SC_EDGE_L_VALUE_KEY_TYPE	SmartCardEdge.h	105;"	d
SC_EDGE_RSA_EXCHANGE	SmartCardEdge.h	117;"	d
SC_EDGE_RSA_SIGNATURE	SmartCardEdge.h	121;"	d
SC_EDGE_TAG_CERT	SmartCardEdge.h	54;"	d
SC_EDGE_TAG_HEADER	SmartCardEdge.h	50;"	d
SC_EDGE_TAG_KEY_ID	SmartCardEdge.h	58;"	d
SC_EDGE_TAG_KEY_SIZE	SmartCardEdge.h	66;"	d
SC_EDGE_TAG_KEY_TYPE	SmartCardEdge.h	62;"	d
SCardConnect	SmartCardReader.h	/^  EFI_SMART_CARD_READER_CONNECT        SCardConnect;$/;"	m	struct:_EFI_SMART_CARD_READER_PROTOCOL
SCardControl	SmartCardReader.h	/^  EFI_SMART_CARD_READER_CONTROL        SCardControl;$/;"	m	struct:_EFI_SMART_CARD_READER_PROTOCOL
SCardDisconnect	SmartCardReader.h	/^  EFI_SMART_CARD_READER_DISCONNECT     SCardDisconnect;$/;"	m	struct:_EFI_SMART_CARD_READER_PROTOCOL
SCardGetAttrib	SmartCardReader.h	/^  EFI_SMART_CARD_READER_GET_ATTRIB     SCardGetAttrib;$/;"	m	struct:_EFI_SMART_CARD_READER_PROTOCOL
SCardStatus	SmartCardReader.h	/^  EFI_SMART_CARD_READER_STATUS         SCardStatus;$/;"	m	struct:_EFI_SMART_CARD_READER_PROTOCOL
SCardTransmit	SmartCardReader.h	/^  EFI_SMART_CARD_READER_TRANSMIT       SCardTransmit;$/;"	m	struct:_EFI_SMART_CARD_READER_PROTOCOL
SD_DEVICE_PATH	DevicePath.h	/^} SD_DEVICE_PATH;$/;"	t	typeref:struct:__anon59
SERIAL_IO_INTERFACE	SerialIo.h	/^typedef EFI_SERIAL_IO_PROTOCOL  SERIAL_IO_INTERFACE;$/;"	t
SERIAL_IO_INTERFACE_REVISION	SerialIo.h	272;"	d
SERIAL_IO_PROTOCOL	SerialIo.h	28;"	d
SHELL_ABORTED	Shell.h	/^  SHELL_ABORTED               = 21,$/;"	e	enum:__anon501
SHELL_ACCESS_DENIED	Shell.h	/^  SHELL_ACCESS_DENIED         = 15,$/;"	e	enum:__anon501
SHELL_ALREADY_STARTED	Shell.h	/^  SHELL_ALREADY_STARTED       = 20,$/;"	e	enum:__anon501
SHELL_BAD_BUFFER_SIZE	Shell.h	/^  SHELL_BAD_BUFFER_SIZE       = 4,$/;"	e	enum:__anon501
SHELL_BUFFER_TOO_SMALL	Shell.h	/^  SHELL_BUFFER_TOO_SMALL      = 5,$/;"	e	enum:__anon501
SHELL_COMMAND_GETHELP	ShellDynamicCommand.h	/^(EFIAPI * SHELL_COMMAND_GETHELP)($/;"	t
SHELL_COMMAND_HANDLER	ShellDynamicCommand.h	/^(EFIAPI * SHELL_COMMAND_HANDLER)($/;"	t
SHELL_DEVICE_ERROR	Shell.h	/^  SHELL_DEVICE_ERROR          = 7,$/;"	e	enum:__anon501
SHELL_FILE_HANDLE	Shell.h	/^typedef VOID *SHELL_FILE_HANDLE;$/;"	t
SHELL_INCOMPATIBLE_VERSION	Shell.h	/^  SHELL_INCOMPATIBLE_VERSION  = 25,$/;"	e	enum:__anon501
SHELL_INVALID_PARAMETER	Shell.h	/^  SHELL_INVALID_PARAMETER     = 2,$/;"	e	enum:__anon501
SHELL_LOAD_ERROR	Shell.h	/^  SHELL_LOAD_ERROR            = 1,$/;"	e	enum:__anon501
SHELL_MAJOR_VERSION	Shell.h	/^  SHELL_MAJOR_VERSION = 2,$/;"	e	enum:ShellVersion
SHELL_MEDIA_CHANGED	Shell.h	/^  SHELL_MEDIA_CHANGED         = 13,$/;"	e	enum:__anon501
SHELL_MINOR_VERSION	Shell.h	/^  SHELL_MINOR_VERSION = 2$/;"	e	enum:ShellVersion
SHELL_NOT_EQUAL	Shell.h	/^  SHELL_NOT_EQUAL             = 27$/;"	e	enum:__anon501
SHELL_NOT_FOUND	Shell.h	/^  SHELL_NOT_FOUND             = 14,$/;"	e	enum:__anon501
SHELL_NOT_READY	Shell.h	/^  SHELL_NOT_READY             = 6,$/;"	e	enum:__anon501
SHELL_NOT_STARTED	Shell.h	/^  SHELL_NOT_STARTED           = 19,$/;"	e	enum:__anon501
SHELL_NO_MEDIA	Shell.h	/^  SHELL_NO_MEDIA              = 12,$/;"	e	enum:__anon501
SHELL_OUT_OF_RESOURCES	Shell.h	/^  SHELL_OUT_OF_RESOURCES      = 9,$/;"	e	enum:__anon501
SHELL_SECURITY_VIOLATION	Shell.h	/^  SHELL_SECURITY_VIOLATION    = 26,$/;"	e	enum:__anon501
SHELL_STATUS	Shell.h	/^} SHELL_STATUS;$/;"	t	typeref:enum:__anon501
SHELL_SUCCESS	Shell.h	/^  SHELL_SUCCESS               = 0,$/;"	e	enum:__anon501
SHELL_TIMEOUT	Shell.h	/^  SHELL_TIMEOUT               = 18,$/;"	e	enum:__anon501
SHELL_UNSUPPORTED	Shell.h	/^  SHELL_UNSUPPORTED           = 3,$/;"	e	enum:__anon501
SHELL_VOLUME_CORRUPTED	Shell.h	/^  SHELL_VOLUME_CORRUPTED      = 10,$/;"	e	enum:__anon501
SHELL_VOLUME_FULL	Shell.h	/^  SHELL_VOLUME_FULL           = 11,$/;"	e	enum:__anon501
SHELL_WRITE_PROTECTED	Shell.h	/^  SHELL_WRITE_PROTECTED       = 8,$/;"	e	enum:__anon501
SIGNATURE_TYPE_GUID	DevicePath.h	1045;"	d
SIGNATURE_TYPE_MBR	DevicePath.h	1044;"	d
SIMPLE_FILE_SYSTEM_PROTOCOL	SimpleFileSystem.h	31;"	d
SIMPLE_INPUT_INTERFACE	SimpleTextIn.h	/^typedef struct _EFI_SIMPLE_TEXT_INPUT_PROTOCOL  SIMPLE_INPUT_INTERFACE;$/;"	t	typeref:struct:_EFI_SIMPLE_TEXT_INPUT_PROTOCOL
SIMPLE_INPUT_PROTOCOL	SimpleTextIn.h	25;"	d
SIMPLE_TEXT_OUTPUT_INTERFACE	SimpleTextOut.h	/^typedef EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL   SIMPLE_TEXT_OUTPUT_INTERFACE;$/;"	t
SIMPLE_TEXT_OUTPUT_PROTOCOL	SimpleTextOut.h	25;"	d
SIZE_OF_FILEPATH_DEVICE_PATH	DevicePath.h	1088;"	d
SMART_CARD_AID	SmartCardEdge.h	/^typedef UINT8 SMART_CARD_AID[SCARD_AID_MAXSIZE];$/;"	t
SMART_CARD_CSN	SmartCardEdge.h	/^typedef UINT8 SMART_CARD_CSN[SCARD_CSN_SIZE];$/;"	t
SMART_CARD_EDGE_PROTOCOL_VERSION_1	SmartCardEdge.h	38;"	d
SMM_IO_UINT16	SmmCpuIo2.h	24;"	d
SMM_IO_UINT32	SmmCpuIo2.h	25;"	d
SMM_IO_UINT64	SmmCpuIo2.h	26;"	d
SMM_IO_UINT8	SmmCpuIo2.h	23;"	d
SNCount	IpSecConfig.h	/^  UINT64                          SNCount;$/;"	m	struct:_EFI_IPSEC_SA_DATA
SNCount	IpSecConfig.h	/^  UINT64                     SNCount;$/;"	m	struct:_EFI_IPSEC_SA_DATA2
SP	DebugSupport.h	/^  UINT32  SP;$/;"	m	struct:__anon492
SP	DebugSupport.h	/^  UINT64  SP;   \/\/ x31 - Stack pointer$/;"	m	struct:__anon493
SPI_TRANSACTION_FULL_DUPLEX	SpiIo.h	/^  SPI_TRANSACTION_FULL_DUPLEX,$/;"	e	enum:__anon98
SPI_TRANSACTION_READ_ONLY	SpiIo.h	/^  SPI_TRANSACTION_READ_ONLY,$/;"	e	enum:__anon98
SPI_TRANSACTION_WRITE_ONLY	SpiIo.h	/^  SPI_TRANSACTION_WRITE_ONLY,$/;"	e	enum:__anon98
SPI_TRANSACTION_WRITE_THEN_READ	SpiIo.h	/^  SPI_TRANSACTION_WRITE_THEN_READ$/;"	e	enum:__anon98
SPSR	DebugSupport.h	/^  UINT64  SPSR; \/\/ Saved Processor Status Register$/;"	m	struct:__anon493
SPort	PxeBaseCode.h	/^  EFI_PXE_BASE_CODE_UDP_PORT  SPort;$/;"	m	struct:__anon112
SSIDList	WiFi.h	/^  EFI_80211_ELEMENT_SSID             *SSIDList;$/;"	m	struct:__anon189
SSIDList	WiFi2.h	/^  EFI_80211_SSID                            SSIDList[1];$/;"	m	struct:__anon304
SSId	DevicePath.h	/^  UINT8                           SSId[32];$/;"	m	struct:__anon64
SSId	WiFi.h	/^  UINT8                              *SSId;$/;"	m	struct:__anon189
SSId	WiFi.h	/^  UINT8                              *SSId;$/;"	m	struct:__anon197
SSId	WiFi.h	/^  UINT8                              SSId[32];$/;"	m	struct:__anon188
SSId	WiFi2.h	/^  EFI_80211_SSID                            SSId;$/;"	m	struct:__anon308
SSId	WiFi2.h	/^  UINT8                                     SSId[EFI_MAX_SSID_LEN];$/;"	m	struct:__anon303
SSIdLen	WiFi.h	/^  UINT8                              SSIdLen;$/;"	m	struct:__anon189
SSIdLen	WiFi.h	/^  UINT8                              SSIdLen;$/;"	m	struct:__anon197
SSIdLen	WiFi2.h	/^  UINT8                                     SSIdLen;$/;"	m	struct:__anon303
START_PERIOD_FIELD_VALID	EapManagement.h	79;"	d
SaId	IpSecConfig.h	/^  EFI_IPSEC_SA_ID                     SaId;$/;"	m	union:__anon454
SaId	IpSecConfig.h	/^  EFI_IPSEC_SA_ID                 SaId[1];$/;"	m	struct:_EFI_IPSEC_SPD_DATA
SaIdCount	IpSecConfig.h	/^  UINTN                           SaIdCount;$/;"	m	struct:_EFI_IPSEC_SPD_DATA
SaLifetime	IpSecConfig.h	/^  EFI_IPSEC_SA_LIFETIME           SaLifetime;$/;"	m	struct:_EFI_IPSEC_SA_DATA
SaLifetime	IpSecConfig.h	/^  EFI_IPSEC_SA_LIFETIME      SaLifetime;$/;"	m	struct:_EFI_IPSEC_SA_DATA2
SaLifetime	IpSecConfig.h	/^  EFI_IPSEC_SA_LIFETIME   SaLifetime;$/;"	m	struct:_EFI_IPSEC_PROCESS_POLICY
SanMacAddress	AdapterInformation.h	/^  EFI_MAC_ADDRESS                    SanMacAddress;$/;"	m	struct:__anon422
Sas	DevicePath.h	/^  SAS_DEVICE_PATH                            *Sas;$/;"	m	union:__anon76
Sas	DevicePath.h	/^  SAS_DEVICE_PATH                            Sas;$/;"	m	union:__anon75
SasAddress	DevicePath.h	/^  UINT64                          SasAddress;$/;"	m	struct:__anon53
SasAddress	DevicePath.h	/^  UINT8                           SasAddress[8];$/;"	m	struct:__anon54
SasEx	DevicePath.h	/^  SASEX_DEVICE_PATH                          *SasEx;$/;"	m	union:__anon76
SasEx	DevicePath.h	/^  SASEX_DEVICE_PATH                          SasEx;$/;"	m	union:__anon75
Sata	DevicePath.h	/^  SATA_DEVICE_PATH                           *Sata;$/;"	m	union:__anon76
Sata	DevicePath.h	/^  SATA_DEVICE_PATH                           Sata;$/;"	m	union:__anon75
Scan	BluetoothConfig.h	/^  EFI_BLUETOOTH_CONFIG_SCAN                               Scan;$/;"	m	struct:_EFI_BLUETOOTH_CONFIG_PROTOCOL
Scan	BluetoothLeConfig.h	/^  EFI_BLUETOOTH_LE_CONFIG_SCAN                               Scan;$/;"	m	struct:_EFI_BLUETOOTH_LE_CONFIG_PROTOCOL
Scan	WiFi.h	/^  EFI_WIRELESS_MAC_CONNECTION_SCAN               Scan;$/;"	m	struct:_EFI_WIRELESS_MAC_CONNECTION_PROTOCOL
ScanCode	SimpleTextIn.h	/^  UINT16  ScanCode;$/;"	m	struct:__anon358
ScanInterval	BluetoothLeConfig.h	/^  UINT16                    ScanInterval;$/;"	m	struct:__anon563
ScanInterval	BluetoothLeConfig.h	/^  UINT16                    ScanInterval;$/;"	m	struct:__anon565
ScanNotSupported	WiFi.h	/^  ScanNotSupported$/;"	e	enum:__anon181
ScanSuccess	WiFi.h	/^  ScanSuccess,$/;"	e	enum:__anon181
ScanType	BluetoothLeConfig.h	/^  UINT8                     ScanType;$/;"	m	struct:__anon563
ScanType	HiiImageDecoder.h	/^  UINT16                                    ScanType;$/;"	m	struct:_EFI_HII_IMAGE_DECODER_JPEG_INFO
ScanWindow	BluetoothLeConfig.h	/^  UINT16                    ScanWindow;$/;"	m	struct:__anon563
ScanWindow	BluetoothLeConfig.h	/^  UINT16                    ScanWindow;$/;"	m	struct:__anon565
ScanningFilterPolicy	BluetoothLeConfig.h	/^  UINT8                     ScanningFilterPolicy;$/;"	m	struct:__anon563
Screen	HiiImage.h	/^    EFI_GRAPHICS_OUTPUT_PROTOCOL  *Screen;$/;"	m	union:_EFI_IMAGE_OUTPUT::__anon299
Scsi	DevicePath.h	/^  SCSI_DEVICE_PATH                           *Scsi;$/;"	m	union:__anon76
Scsi	DevicePath.h	/^  SCSI_DEVICE_PATH                           Scsi;$/;"	m	union:__anon75
Sd	DevicePath.h	/^  SD_DEVICE_PATH                             *Sd;$/;"	m	union:__anon76
Sd	DevicePath.h	/^  SD_DEVICE_PATH                             Sd;$/;"	m	union:__anon75
SdMmcCmdBlk	SdMmcPassThru.h	/^  EFI_SD_MMC_COMMAND_BLOCK          *SdMmcCmdBlk;$/;"	m	struct:_EFI_SD_MMC_PASS_THRU_COMMAND_PACKET
SdMmcCommandTypeAc	SdMmcPassThru.h	/^  SdMmcCommandTypeAc,  \/\/ Addressed(point-to-point) commands$/;"	e	enum:__anon444
SdMmcCommandTypeAdtc	SdMmcPassThru.h	/^  SdMmcCommandTypeAdtc \/\/ Addressed(point-to-point) data transfer commands$/;"	e	enum:__anon444
SdMmcCommandTypeBc	SdMmcPassThru.h	/^  SdMmcCommandTypeBc,  \/\/ Broadcast commands, no response$/;"	e	enum:__anon444
SdMmcCommandTypeBcr	SdMmcPassThru.h	/^  SdMmcCommandTypeBcr, \/\/ Broadcast commands with response$/;"	e	enum:__anon444
SdMmcResponseTypeR1	SdMmcPassThru.h	/^  SdMmcResponseTypeR1,$/;"	e	enum:__anon445
SdMmcResponseTypeR1b	SdMmcPassThru.h	/^  SdMmcResponseTypeR1b,$/;"	e	enum:__anon445
SdMmcResponseTypeR2	SdMmcPassThru.h	/^  SdMmcResponseTypeR2,$/;"	e	enum:__anon445
SdMmcResponseTypeR3	SdMmcPassThru.h	/^  SdMmcResponseTypeR3,$/;"	e	enum:__anon445
SdMmcResponseTypeR4	SdMmcPassThru.h	/^  SdMmcResponseTypeR4,$/;"	e	enum:__anon445
SdMmcResponseTypeR5	SdMmcPassThru.h	/^  SdMmcResponseTypeR5,$/;"	e	enum:__anon445
SdMmcResponseTypeR5b	SdMmcPassThru.h	/^  SdMmcResponseTypeR5b,$/;"	e	enum:__anon445
SdMmcResponseTypeR6	SdMmcPassThru.h	/^  SdMmcResponseTypeR6,$/;"	e	enum:__anon445
SdMmcResponseTypeR7	SdMmcPassThru.h	/^  SdMmcResponseTypeR7$/;"	e	enum:__anon445
SdMmcStatusBlk	SdMmcPassThru.h	/^  EFI_SD_MMC_STATUS_BLOCK           *SdMmcStatusBlk;$/;"	m	struct:_EFI_SD_MMC_PASS_THRU_COMMAND_PACKET
Seconds	Dhcp4.h	/^  UINT16            Seconds;$/;"	m	struct:__anon137
SegmentNumber	PciRootBridgeIo.h	/^  UINT32                                          SegmentNumber;$/;"	m	struct:_EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL
Select	UserCredential.h	/^  EFI_CREDENTIAL_SELECT         Select;$/;"	m	struct:_EFI_USER_CREDENTIAL_PROTOCOL
Select	UserCredential2.h	/^  EFI_CREDENTIAL2_SELECT        Select;$/;"	m	struct:_EFI_USER_CREDENTIAL2_PROTOCOL
SendACLData	BluetoothHc.h	/^  EFI_BLUETOOTH_HC_SEND_ACL_DATA              SendACLData;$/;"	m	struct:_EFI_BLUETOOTH_HC_PROTOCOL
SendBufferSize	Tcp4.h	/^  UINT32                  SendBufferSize;$/;"	m	struct:__anon318
SendBufferSize	Tcp6.h	/^  UINT32   SendBufferSize;$/;"	m	struct:__anon469
SendCommand	BluetoothHc.h	/^  EFI_BLUETOOTH_HC_SEND_COMMAND               SendCommand;$/;"	m	struct:_EFI_BLUETOOTH_HC_PROTOCOL
SendData	StorageSecurityCommand.h	/^  EFI_STORAGE_SECURITY_SEND_DATA    SendData;$/;"	m	struct:_EFI_STORAGE_SECURITY_COMMAND_PROTOCOL
SendForm	FormBrowser2.h	/^  EFI_SEND_FORM2         SendForm;$/;"	m	struct:_EFI_FORM_BROWSER2_PROTOCOL
SendGUID	PxeBaseCode.h	/^  BOOLEAN                       SendGUID;$/;"	m	struct:__anon116
SendReceive	Rest.h	/^  EFI_REST_SEND_RECEIVE         SendReceive;$/;"	m	struct:_EFI_REST_PROTOCOL
SendReceive	RestEx.h	/^  EFI_REST_SEND_RECEIVE          SendReceive;$/;"	m	struct:_EFI_REST_EX_PROTOCOL
SendReceiveTimeout	RestEx.h	/^  UINT32                  SendReceiveTimeout;$/;"	m	struct:__anon233
SendRequest	BluetoothAttribute.h	/^  EFI_BLUETOOTH_ATTRIBUTE_SEND_REQUEST                     SendRequest;$/;"	m	struct:_EFI_BLUETOOTH_ATTRIBUTE_PROTOCOL
SendSCOData	BluetoothHc.h	/^  EFI_BLUETOOTH_HC_SEND_SCO_DATA              SendSCOData;$/;"	m	struct:_EFI_BLUETOOTH_HC_PROTOCOL
SendSmpAuthData	BluetoothLeConfig.h	/^  EFI_BLUETOOTH_LE_SEND_SMP_AUTH_DATA                        SendSmpAuthData;$/;"	m	struct:_EFI_BLUETOOTH_LE_CONFIG_PROTOCOL
SenseData	DiskInfo.h	/^  EFI_DISK_INFO_SENSE_DATA  SenseData;$/;"	m	struct:_EFI_DISK_INFO_PROTOCOL
SenseData	ScsiIo.h	/^  VOID                                *SenseData;$/;"	m	struct:__anon330
SenseData	ScsiPassThru.h	/^  VOID    *SenseData;$/;"	m	struct:__anon166
SenseData	ScsiPassThruExt.h	/^  VOID   *SenseData;$/;"	m	struct:__anon439
SenseDataLength	ScsiIo.h	/^  UINT8                               SenseDataLength;$/;"	m	struct:__anon330
SenseDataLength	ScsiPassThru.h	/^  UINT8   SenseDataLength;$/;"	m	struct:__anon166
SenseDataLength	ScsiPassThruExt.h	/^  UINT8  SenseDataLength;$/;"	m	struct:__anon439
Seq	NvdimmLabel.h	/^  UINT32 Seq;$/;"	m	struct:__anon260
SeqOverflow	IpSecConfig.h	/^  BOOLEAN                 SeqOverflow;$/;"	m	struct:_EFI_IPSEC_PROCESS_POLICY
Sequence	PxeBaseCode.h	/^      UINT16  Sequence;$/;"	m	struct:__anon102::__anon103::__anon104
SerialNumber	NvdimmLabel.h	/^  UINT32 SerialNumber;$/;"	m	struct:__anon262
ServerAddr	Dhcp4.h	/^  EFI_IPv4_ADDRESS  ServerAddr;       \/\/\/< IP address of next server in bootstrap.$/;"	m	struct:__anon137
ServerAddress	Dhcp4.h	/^  EFI_IPv4_ADDRESS            ServerAddress;$/;"	m	struct:__anon143
ServerIp	Ftp4.h	/^  EFI_IPv4_ADDRESS                     ServerIp;$/;"	m	struct:__anon443
ServerIp	Mtftp4.h	/^  EFI_IPv4_ADDRESS        ServerIp;$/;"	m	struct:__anon434
ServerIp	Mtftp4.h	/^  EFI_IPv4_ADDRESS        ServerIp;$/;"	m	struct:__anon436
ServerIp	Mtftp6.h	/^  EFI_IPv6_ADDRESS       ServerIp;$/;"	m	struct:__anon557
ServerIp	Mtftp6.h	/^  EFI_IPv6_ADDRESS       ServerIp;$/;"	m	struct:__anon559
ServerMCastIp	PxeBaseCode.h	/^  EFI_IP_ADDRESS            ServerMCastIp;$/;"	m	struct:__anon110
ServerName	Dhcp4.h	/^  CHAR8             ServerName[64];$/;"	m	struct:__anon137
ServerPort	Ftp4.h	/^  UINT16                               ServerPort;$/;"	m	struct:__anon443
ServerPort	Mtftp4.h	/^  UINT16                  ServerPort;$/;"	m	struct:__anon436
ServerPort	Mtftp6.h	/^  UINT16                 ServerPort;$/;"	m	struct:__anon559
ServiceAvailable	Kms.h	/^  BOOLEAN                           ServiceAvailable;$/;"	m	struct:_EFI_KMS_PROTOCOL
ServiceCount	Tcp4.h	/^  UINT32                  ServiceCount;$/;"	m	struct:__anon316
ServiceCount	Tcp6.h	/^  UINT32                 ServiceCount; \/\/\/< The number of address\/port pairs following this data structure.$/;"	m	struct:__anon467
ServiceCount	Udp4.h	/^  UINT32                  ServiceCount;$/;"	m	struct:__anon372
ServiceCount	Udp6.h	/^  UINT32                  ServiceCount;$/;"	m	struct:__anon84
ServiceId	DevicePath.h	/^  UINT64                          ServiceId;$/;"	m	struct:__anon49
ServiceId	Kms.h	/^  EFI_GUID                          ServiceId;$/;"	m	struct:_EFI_KMS_PROTOCOL
ServiceName	Kms.h	/^  CHAR16                            *ServiceName;$/;"	m	struct:_EFI_KMS_PROTOCOL
ServiceUuid	BluetoothAttribute.h	/^  EFI_BLUETOOTH_UUID             ServiceUuid;$/;"	m	struct:__anon153
ServiceUuid	BluetoothAttribute.h	/^  EFI_BLUETOOTH_UUID             ServiceUuid;$/;"	m	struct:__anon154
ServiceVersion	Kms.h	/^  UINT32                            ServiceVersion;$/;"	m	struct:_EFI_KMS_PROTOCOL
Services	Tcp4.h	/^  EFI_TCP4_SERVICE_POINT  Services[1];$/;"	m	struct:__anon316
Services	Tcp6.h	/^  EFI_TCP6_SERVICE_POINT Services[1];  \/\/\/< List of address\/port pairs that are currently in use.$/;"	m	struct:__anon467
Services	Udp4.h	/^  EFI_UDP4_SERVICE_POINT  Services[1];$/;"	m	struct:__anon372
Services	Udp6.h	/^  EFI_UDP6_SERVICE_POINT  Services[1];$/;"	m	struct:__anon84
Set	AuthenticationInfo.h	/^  EFI_AUTHENTICATION_INFO_PROTOCOL_SET Set;$/;"	m	struct:_EFI_AUTHENTICATION_INFO_PROTOCOL
Set	IScsiInitiatorName.h	/^  EFI_ISCSI_INITIATOR_NAME_SET         Set;$/;"	m	struct:_EFI_ISCSI_INITIATOR_NAME_PROTOCOL
Set	VlanConfig.h	/^  EFI_VLAN_CONFIG_SET              Set;$/;"	m	struct:_EFI_VLAN_CONFIG_PROTOCOL
Set16	Pcd.h	/^  PCD_PROTOCOL_SET16                Set16;$/;"	m	struct:__anon383
Set16	PiPcd.h	/^  EFI_PCD_PROTOCOL_SET_16               Set16;$/;"	m	struct:_EFI_PCD_PROTOCOL
Set16Ex	Pcd.h	/^  PCD_PROTOCOL_SET_EX_16            Set16Ex;$/;"	m	struct:__anon383
Set32	Pcd.h	/^  PCD_PROTOCOL_SET32                Set32;$/;"	m	struct:__anon383
Set32	PiPcd.h	/^  EFI_PCD_PROTOCOL_SET_32               Set32;$/;"	m	struct:_EFI_PCD_PROTOCOL
Set32Ex	Pcd.h	/^  PCD_PROTOCOL_SET_EX_32            Set32Ex;$/;"	m	struct:__anon383
Set64	Pcd.h	/^  PCD_PROTOCOL_SET64                Set64;$/;"	m	struct:__anon383
Set64	PiPcd.h	/^  EFI_PCD_PROTOCOL_SET_64               Set64;$/;"	m	struct:_EFI_PCD_PROTOCOL
Set64Ex	Pcd.h	/^  PCD_PROTOCOL_SET_EX_64            Set64Ex;$/;"	m	struct:__anon383
Set8	Pcd.h	/^  PCD_PROTOCOL_SET8                 Set8;$/;"	m	struct:__anon383
Set8	PiPcd.h	/^  EFI_PCD_PROTOCOL_SET_8                Set8;$/;"	m	struct:_EFI_PCD_PROTOCOL
Set8Ex	Pcd.h	/^  PCD_PROTOCOL_SET_EX_8             Set8Ex;$/;"	m	struct:__anon383
SetActivePcrBanks	Tcg2Protocol.h	/^  EFI_TCG2_SET_ACTIVE_PCR_BANKS               SetActivePcrBanks;$/;"	m	struct:tdEFI_TCG2_PROTOCOL
SetAlias	Shell.h	/^  EFI_SHELL_SET_ALIAS                       SetAlias;$/;"	m	struct:_EFI_SHELL_PROTOCOL
SetAttribute	SimpleTextOut.h	/^  EFI_TEXT_SET_ATTRIBUTE        SetAttribute;$/;"	m	struct:_EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL
SetAttributes	FirmwareVolumeBlock.h	/^  EFI_FVB_SET_ATTRIBUTES        SetAttributes;$/;"	m	struct:_EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL
SetAttributes	PciRootBridgeIo.h	/^  EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_SET_ATTRIBUTES  SetAttributes;$/;"	m	struct:_EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL
SetAttributes	SerialIo.h	/^  EFI_SERIAL_SET_ATTRIBUTES   SetAttributes;$/;"	m	struct:_EFI_SERIAL_IO_PROTOCOL
SetBarAttributes	PciIo.h	/^  EFI_PCI_IO_PROTOCOL_SET_BAR_ATTRIBUTES  SetBarAttributes;$/;"	m	struct:_EFI_PCI_IO_PROTOCOL
SetBool	Pcd.h	/^  PCD_PROTOCOL_SET_BOOLEAN          SetBool;$/;"	m	struct:__anon383
SetBool	PiPcd.h	/^  EFI_PCD_PROTOCOL_SET_BOOLEAN          SetBool;$/;"	m	struct:_EFI_PCD_PROTOCOL
SetBoolEx	Pcd.h	/^  PCD_PROTOCOL_SET_EX_BOOLEAN       SetBoolEx;$/;"	m	struct:__anon383
SetBusFrequency	I2cMaster.h	/^  EFI_I2C_MASTER_PROTOCOL_SET_BUS_FREQUENCY SetBusFrequency;$/;"	m	struct:_EFI_I2C_MASTER_PROTOCOL
SetBusNumbers	PciHostBridgeResourceAllocation.h	/^  EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL_SET_BUS_NUMBERS        SetBusNumbers;$/;"	m	struct:_EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL
SetConfiguration	BlockIoCrypto.h	/^  EFI_BLOCK_IO_CRYPTO_SET_CONFIGURATION     SetConfiguration;$/;"	m	struct:_EFI_BLOCK_IO_CRYPTO_PROTOCOL
SetControl	SerialIo.h	/^  EFI_SERIAL_SET_CONTROL_BITS SetControl;$/;"	m	struct:_EFI_SERIAL_IO_PROTOCOL
SetCookie	NvdimmLabel.h	/^  UINT64   SetCookie;$/;"	m	struct:__anon261
SetCurDir	Shell.h	/^  EFI_SHELL_SET_CUR_DIR                     SetCurDir;$/;"	m	struct:_EFI_SHELL_PROTOCOL
SetCursorPosition	SimpleTextOut.h	/^  EFI_TEXT_SET_CURSOR_POSITION  SetCursorPosition;$/;"	m	struct:_EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL
SetData	BluetoothConfig.h	/^  EFI_BLUETOOTH_CONFIG_SET_DATA                           SetData;$/;"	m	struct:_EFI_BLUETOOTH_CONFIG_PROTOCOL
SetData	BluetoothLeConfig.h	/^  EFI_BLUETOOTH_LE_CONFIG_SET_DATA                           SetData;$/;"	m	struct:_EFI_BLUETOOTH_LE_CONFIG_PROTOCOL
SetData	EapConfiguration.h	/^  EFI_EAP_CONFIGURATION_SET_DATA          SetData;$/;"	m	struct:_EFI_EAP_CONFIGURATION_PROTOCOL
SetData	HiiConfigKeyword.h	/^  EFI_CONFIG_KEYWORD_HANDLER_SET_DATA  SetData;$/;"	m	struct:_EFI_CONFIG_KEYWORD_HANDLER_PROTOCOL
SetData	Ip4Config2.h	/^  EFI_IP4_CONFIG2_SET_DATA           SetData;$/;"	m	struct:_EFI_IP4_CONFIG2_PROTOCOL
SetData	Ip6Config.h	/^  EFI_IP6_CONFIG_SET_DATA           SetData;$/;"	m	struct:_EFI_IP6_CONFIG_PROTOCOL
SetData	IpSecConfig.h	/^  EFI_IPSEC_CONFIG_SET_DATA           SetData;$/;"	m	struct:_EFI_IPSEC_CONFIG_PROTOCOL
SetData	Supplicant.h	/^  EFI_SUPPLICANT_SET_DATA                 SetData;$/;"	m	struct:_EFI_SUPPLICANT_PROTOCOL
SetData	TlsConfig.h	/^  EFI_TLS_CONFIGURATION_SET_DATA     SetData;$/;"	m	struct:_EFI_TLS_CONFIGURATION_PROTOCOL
SetDesiredAuthMethod	Eap.h	/^  EFI_EAP_SET_DESIRED_AUTHENTICATION_METHOD   SetDesiredAuthMethod;$/;"	m	struct:_EFI_EAP_PROTOCOL
SetEndpointPolicy	UsbFunctionIo.h	/^  EFI_USBFN_IO_SET_ENDPOINT_POLICY          SetEndpointPolicy;$/;"	m	struct:_EFI_USBFN_IO_PROTOCOL
SetEndpointStallState	UsbFunctionIo.h	/^  EFI_USBFN_IO_SET_ENDPOINT_STALL_STATE     SetEndpointStallState;$/;"	m	struct:_EFI_USBFN_IO_PROTOCOL
SetEnv	Shell.h	/^  EFI_SHELL_SET_ENV                         SetEnv;$/;"	m	struct:_EFI_SHELL_PROTOCOL
SetFileInfo	Shell.h	/^  EFI_SHELL_SET_FILE_INFO                   SetFileInfo;$/;"	m	struct:_EFI_SHELL_PROTOCOL
SetFilePosition	Shell.h	/^  EFI_SHELL_SET_FILE_POSITION               SetFilePosition;$/;"	m	struct:_EFI_SHELL_PROTOCOL
SetImage	FirmwareManagement.h	/^  EFI_FIRMWARE_MANAGEMENT_PROTOCOL_SET_IMAGE         SetImage;$/;"	m	struct:_EFI_FIRMWARE_MANAGEMENT_PROTOCOL
SetImage	HiiImage.h	/^  EFI_HII_SET_IMAGE     SetImage;$/;"	m	struct:_EFI_HII_IMAGE_PROTOCOL
SetImageEx	HiiImageEx.h	/^  EFI_HII_SET_IMAGE_EX      SetImageEx;$/;"	m	struct:_EFI_HII_IMAGE_EX_PROTOCOL
SetInfo	FirmwareVolume2.h	/^  EFI_FV_SET_INFO         SetInfo;$/;"	m	struct:_EFI_FIRMWARE_VOLUME2_PROTOCOL
SetInfo	SimpleFileSystem.h	/^  EFI_FILE_SET_INFO     SetInfo;$/;"	m	struct:_EFI_FILE_PROTOCOL
SetInfo	UserManager.h	/^  EFI_USER_PROFILE_SET_INFO       SetInfo;$/;"	m	struct:_EFI_USER_MANAGER_PROTOCOL
SetInformation	AdapterInformation.h	/^  EFI_ADAPTER_INFO_SET_INFO              SetInformation;$/;"	m	struct:_EFI_ADAPTER_INFORMATION_PROTOCOL
SetIpFilter	PxeBaseCode.h	/^  EFI_PXE_BASE_CODE_SET_IP_FILTER   SetIpFilter;$/;"	m	struct:_EFI_PXE_BASE_CODE_PROTOCOL
SetKeyboardLayout	HiiDatabase.h	/^  EFI_HII_SET_KEYBOARD_LAYOUT         SetKeyboardLayout;$/;"	m	struct:_EFI_HII_DATABASE_PROTOCOL
SetMap	Shell.h	/^  EFI_SHELL_SET_MAP                         SetMap;$/;"	m	struct:_EFI_SHELL_PROTOCOL
SetMemoryAttributes	Cpu.h	/^  EFI_CPU_SET_MEMORY_ATTRIBUTES       SetMemoryAttributes;$/;"	m	struct:_EFI_CPU_ARCH_PROTOCOL
SetMode	GraphicsOutput.h	/^  EFI_GRAPHICS_OUTPUT_PROTOCOL_SET_MODE    SetMode;$/;"	m	struct:_EFI_GRAPHICS_OUTPUT_PROTOCOL
SetMode	SimpleTextOut.h	/^  EFI_TEXT_SET_MODE             SetMode;$/;"	m	struct:_EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL
SetMode	UgaDraw.h	/^  EFI_UGA_DRAW_PROTOCOL_SET_MODE  SetMode;$/;"	m	struct:_EFI_UGA_DRAW_PROTOCOL
SetOption	AcpiSystemDescriptionTable.h	/^  EFI_ACPI_SET_OPTION       SetOption;$/;"	m	struct:_EFI_ACPI_SDT_PROTOCOL
SetOptions	DriverConfiguration.h	/^  EFI_DRIVER_CONFIGURATION_SET_OPTIONS    SetOptions;$/;"	m	struct:_EFI_DRIVER_CONFIGURATION_PROTOCOL
SetOptions	DriverConfiguration2.h	/^  EFI_DRIVER_CONFIGURATION2_SET_OPTIONS     SetOptions;$/;"	m	struct:_EFI_DRIVER_CONFIGURATION2_PROTOCOL
SetPackageInfo	FirmwareManagement.h	/^  EFI_FIRMWARE_MANAGEMENT_PROTOCOL_SET_PACKAGE_INFO  SetPackageInfo;$/;"	m	struct:_EFI_FIRMWARE_MANAGEMENT_PROTOCOL
SetPackets	PxeBaseCode.h	/^  EFI_PXE_BASE_CODE_SET_PACKETS     SetPackets;$/;"	m	struct:_EFI_PXE_BASE_CODE_PROTOCOL
SetParameters	PxeBaseCode.h	/^  EFI_PXE_BASE_CODE_SET_PARAMETERS  SetParameters;$/;"	m	struct:_EFI_PXE_BASE_CODE_PROTOCOL
SetPosition	SimpleFileSystem.h	/^  EFI_FILE_SET_POSITION SetPosition;$/;"	m	struct:_EFI_FILE_PROTOCOL
SetPtr	Pcd.h	/^  PCD_PROTOCOL_SET_POINTER          SetPtr;$/;"	m	struct:__anon383
SetPtr	PiPcd.h	/^  EFI_PCD_PROTOCOL_SET_POINTER          SetPtr;$/;"	m	struct:_EFI_PCD_PROTOCOL
SetPtrEx	Pcd.h	/^  PCD_PROTOCOL_SET_EX_POINTER       SetPtrEx;$/;"	m	struct:__anon383
SetResources	SuperIo.h	/^  EFI_SIO_SET_RESOURCES         SetResources;$/;"	m	struct:_EFI_SIO_PROTOCOL
SetRootHubPortFeature	Usb2HostController.h	/^  EFI_USB2_HC_PROTOCOL_SET_ROOTHUB_PORT_FEATURE    SetRootHubPortFeature;$/;"	m	struct:_EFI_USB2_HC_PROTOCOL
SetRootHubPortFeature	UsbHostController.h	/^  EFI_USB_HC_PROTOCOL_SET_ROOTHUB_PORT_FEATURE    SetRootHubPortFeature;$/;"	m	struct:_EFI_USB_HC_PROTOCOL
SetSessionData	Tls.h	/^  EFI_TLS_SET_SESSION_DATA           SetSessionData;$/;"	m	struct:_EFI_TLS_PROTOCOL
SetSku	Pcd.h	/^  PCD_PROTOCOL_SET_SKU              SetSku;$/;"	m	struct:__anon383
SetSku	PiPcd.h	/^  EFI_PCD_PROTOCOL_SET_SKU              SetSku;$/;"	m	struct:_EFI_PCD_PROTOCOL
SetStartupProcedure	MmMp.h	/^  EFI_MM_SET_STARTUP_PROCEDURE      SetStartupProcedure;$/;"	m	struct:_EFI_MM_MP_PROTOCOL
SetState	SimpleTextInEx.h	/^  EFI_SET_STATE                   SetState;$/;"	m	struct:_EFI_SIMPLE_TEXT_INPUT_EX_PROTOCOL
SetState	Usb2HostController.h	/^  EFI_USB2_HC_PROTOCOL_SET_STATE                   SetState;$/;"	m	struct:_EFI_USB2_HC_PROTOCOL
SetState	UsbHostController.h	/^  EFI_USB_HC_PROTOCOL_SET_STATE                   SetState;$/;"	m	struct:_EFI_USB_HC_PROTOCOL
SetStationIp	PxeBaseCode.h	/^  EFI_PXE_BASE_CODE_SET_STATION_IP  SetStationIp;$/;"	m	struct:_EFI_PXE_BASE_CODE_PROTOCOL
SetString	HiiString.h	/^  EFI_HII_SET_STRING        SetString;$/;"	m	struct:_EFI_HII_STRING_PROTOCOL
SetSupplicantConfiguration	EapManagement.h	/^  EFI_EAP_SET_SUPPLICANT_CONFIGURATION    SetSupplicantConfiguration;$/;"	m	struct:_EFI_EAP_MANAGEMENT_PROTOCOL
SetSupplicantConfiguration	EapManagement2.h	/^  EFI_EAP_SET_SUPPLICANT_CONFIGURATION    SetSupplicantConfiguration;$/;"	m	struct:_EFI_EAP_MANAGEMENT2_PROTOCOL
SetSystemConfiguration	EapManagement.h	/^  EFI_EAP_SET_SYSTEM_CONFIGURATION        SetSystemConfiguration;$/;"	m	struct:_EFI_EAP_MANAGEMENT_PROTOCOL
SetSystemConfiguration	EapManagement2.h	/^  EFI_EAP_SET_SYSTEM_CONFIGURATION        SetSystemConfiguration;$/;"	m	struct:_EFI_EAP_MANAGEMENT2_PROTOCOL
SetTimerPeriod	Timer.h	/^  EFI_TIMER_SET_TIMER_PERIOD          SetTimerPeriod;$/;"	m	struct:_EFI_TIMER_ARCH_PROTOCOL
SetTimerPeriod	WatchdogTimer.h	/^  EFI_WATCHDOG_TIMER_SET_TIMER_PERIOD  SetTimerPeriod;$/;"	m	struct:_EFI_WATCHDOG_TIMER_ARCH_PROTOCOL
SetTiming	IdeControllerInit.h	/^  EFI_IDE_CONTROLLER_SET_TIMING          SetTiming;$/;"	m	struct:_EFI_IDE_CONTROLLER_INIT_PROTOCOL
SetVolumeAttributes	FirmwareVolume2.h	/^  EFI_FV_SET_ATTRIBUTES   SetVolumeAttributes;$/;"	m	struct:_EFI_FIRMWARE_VOLUME2_PROTOCOL
Sha1Hash	Hash.h	/^  EFI_SHA1_HASH    *Sha1Hash;$/;"	m	union:__anon481
Sha1Hash	Hash2.h	/^  EFI_SHA1_HASH2    Sha1Hash;$/;"	m	union:__anon97
Sha224Hash	Hash.h	/^  EFI_SHA224_HASH  *Sha224Hash;$/;"	m	union:__anon481
Sha224Hash	Hash2.h	/^  EFI_SHA224_HASH2  Sha224Hash;$/;"	m	union:__anon97
Sha256Hash	Hash.h	/^  EFI_SHA256_HASH  *Sha256Hash;$/;"	m	union:__anon481
Sha256Hash	Hash2.h	/^  EFI_SHA256_HASH2  Sha256Hash;$/;"	m	union:__anon97
Sha384Hash	Hash.h	/^  EFI_SHA384_HASH  *Sha384Hash;$/;"	m	union:__anon481
Sha384Hash	Hash2.h	/^  EFI_SHA384_HASH2  Sha384Hash;$/;"	m	union:__anon97
Sha512Hash	Hash.h	/^  EFI_SHA512_HASH  *Sha512Hash;$/;"	m	union:__anon481
Sha512Hash	Hash2.h	/^  EFI_SHA512_HASH2  Sha512Hash;$/;"	m	union:__anon97
SharedKey	WiFi.h	/^  SharedKey,$/;"	e	enum:__anon184
ShellVersion	Shell.h	/^enum ShellVersion {$/;"	g
Shutdown	Bis.h	/^  EFI_BIS_SHUTDOWN                                    Shutdown;$/;"	m	struct:_EFI_BIS_PROTOCOL
Shutdown	SimpleNetwork.h	/^  EFI_SIMPLE_NETWORK_SHUTDOWN         Shutdown;$/;"	m	struct:_EFI_SIMPLE_NETWORK_PROTOCOL
Sig	NvdimmLabel.h	/^  CHAR8  Sig[EFI_NVDIMM_LABEL_INDEX_SIG_LEN];$/;"	m	struct:__anon260
SignData	SmartCardEdge.h	/^  EFI_SMART_CARD_EDGE_SIGN_DATA            SignData;$/;"	m	struct:_EFI_SMART_CARD_EDGE_PROTOCOL
Signature	AcpiSystemDescriptionTable.h	/^  UINT32    Signature;$/;"	m	struct:__anon360
Signature	DevicePath.h	/^  UINT8                           Signature[16];$/;"	m	struct:__anon66
Signature	TapeIo.h	/^  UINT64     Signature;$/;"	m	struct:_EFI_TAPE_HEADER
SignatureType	DevicePath.h	/^  UINT8                           SignatureType;$/;"	m	struct:__anon66
SingleWordDmaMode	IdeControllerInit.h	/^  EFI_ATA_MODE           SingleWordDmaMode;$/;"	m	struct:__anon133
Size	Arp.h	/^  UINT32                      Size;$/;"	m	struct:__anon81
Size	Dhcp4.h	/^  UINT32              Size;$/;"	m	struct:__anon138
Size	Dhcp6.h	/^  UINT32                       Size;$/;"	m	struct:__anon510
Size	FirmwareManagement.h	/^  UINTN                            Size;$/;"	m	struct:__anon10
Size	Tcg2Protocol.h	/^  UINT32                Size;$/;"	m	struct:tdEFI_TCG2_EVENT
Size	Tcg2Protocol.h	/^  UINT8                            Size;$/;"	m	struct:tdEFI_TCG2_BOOT_SERVICE_CAPABILITY
Size	TcgService.h	/^  UINT8          Size;                \/\/\/ Size of this structure.$/;"	m	struct:_TCG_EFI_BOOT_SERVICE_CAPABILITY
Size	TrEEProtocol.h	/^  UINT32            Size;$/;"	m	struct:__anon562
Size	TrEEProtocol.h	/^  UINT8                 Size;$/;"	m	struct:_TREE_BOOT_SERVICE_CAPABILITY
Size	UserManager.h	/^  UINT32  Size;  \/\/\/< Specifies the size of the user access control record, in bytes, including this header.$/;"	m	struct:__anon254
Size	UserManager.h	/^  UINT64   Size;  \/\/\/< Total size of the user information table, in bytes.$/;"	m	struct:__anon256
SizeOfEdid	EdidActive.h	/^  UINT32   SizeOfEdid;$/;"	m	struct:__anon267
SizeOfEdid	EdidDiscovered.h	/^  UINT32   SizeOfEdid;$/;"	m	struct:__anon242
SizeOfEntries	UgaIo.h	/^  UINT32  SizeOfEntries;$/;"	m	struct:__anon536
SizeOfInfo	GraphicsOutput.h	/^  UINTN                                  SizeOfInfo;$/;"	m	struct:__anon241
SlaveMaster	DevicePath.h	/^  UINT8                           SlaveMaster;$/;"	m	struct:__anon35
Slot	NvdimmLabel.h	/^  UINT32   Slot;$/;"	m	struct:__anon261
SlotNumber	DevicePath.h	/^  UINT8                           SlotNumber;$/;"	m	struct:__anon59
SlotNumber	DevicePath.h	/^  UINT8                           SlotNumber;$/;"	m	struct:__anon60
SmallHeader	SuperIo.h	/^  ACPI_SMALL_RESOURCE_HEADER *SmallHeader;$/;"	m	union:__anon224
SmiTickInterval	SmmPeriodicTimerDispatch2.h	/^  UINT64  SmiTickInterval;$/;"	m	struct:__anon8
SmramReservedRegions	SmmConfiguration.h	/^  EFI_SMM_RESERVED_SMRAM_REGION  *SmramReservedRegions;$/;"	m	struct:_EFI_SMM_CONFIGURATION_PROTOCOL
SmramReservedSize	SmmConfiguration.h	/^  UINT64                  SmramReservedSize;$/;"	m	struct:_EFI_SMM_RESERVED_SMRAM_REGION
SmramReservedStart	SmmConfiguration.h	/^  EFI_PHYSICAL_ADDRESS    SmramReservedStart;$/;"	m	struct:_EFI_SMM_RESERVED_SMRAM_REGION
SoftLifetime	IpSecConfig.h	/^  UINT64        SoftLifetime;$/;"	m	struct:_EFI_IPSEC_SA_LIFETIME
SolicitRetransmission	Dhcp6.h	/^  EFI_DHCP6_RETRANSMISSION     *SolicitRetransmission;$/;"	m	struct:__anon518
SourceAddress	Ip4.h	/^  EFI_IPv4_ADDRESS        SourceAddress;$/;"	m	struct:__anon339
SourceAddress	Ip4.h	/^  EFI_IPv4_ADDRESS       SourceAddress;$/;"	m	struct:__anon342
SourceAddress	Ip6.h	/^  EFI_IPv6_ADDRESS        SourceAddress;$/;"	m	struct:_EFI_IP6_HEADER
SourceAddress	ManagedNetwork.h	/^  EFI_MAC_ADDRESS                   *SourceAddress;      \/\/OPTIONAL$/;"	m	struct:__anon176
SourceAddress	ManagedNetwork.h	/^  VOID          *SourceAddress;$/;"	m	struct:__anon174
SourceAddress	Udp4.h	/^  EFI_IPv4_ADDRESS   SourceAddress;$/;"	m	struct:__anon374
SourceAddress	Udp6.h	/^  EFI_IPv6_ADDRESS   SourceAddress;$/;"	m	struct:__anon86
SourcePort	Udp4.h	/^  UINT16             SourcePort;$/;"	m	struct:__anon374
SourcePort	Udp6.h	/^  UINT16             SourcePort;$/;"	m	struct:__anon86
SpaceParity	SerialIo.h	/^  SpaceParity$/;"	e	enum:__anon546
SpdSelector	IpSecConfig.h	/^  EFI_IPSEC_SPD_SELECTOR              SpdSelector;$/;"	m	union:__anon454
SpdSelector	IpSecConfig.h	/^  EFI_IPSEC_SPD_SELECTOR          *SpdSelector;$/;"	m	struct:_EFI_IPSEC_SA_DATA
SpdSelector	IpSecConfig.h	/^  EFI_IPSEC_SPD_SELECTOR     *SpdSelector;$/;"	m	struct:_EFI_IPSEC_SA_DATA2
Spi	IpSecConfig.h	/^  UINT32                          Spi;$/;"	m	struct:_EFI_IPSEC_SA_ID
SpiBus	SpiConfiguration.h	/^  CONST EFI_SPI_BUS        *SpiBus;$/;"	m	struct:_EFI_SPI_PERIPHERAL
SpiPart	SpiConfiguration.h	/^  CONST EFI_SPI_PART       *SpiPart;$/;"	m	struct:_EFI_SPI_PERIPHERAL
SpiPeripheral	SpiIo.h	/^  CONST EFI_SPI_PERIPHERAL                  *SpiPeripheral;$/;"	m	struct:_EFI_SPI_IO_PROTOCOL
SpiPeripheral	SpiIo.h	/^  CONST EFI_SPI_PERIPHERAL *SpiPeripheral;$/;"	m	struct:_EFI_SPI_BUS_TRANSACTION
SpiPeripheral	SpiNorFlash.h	/^  CONST EFI_SPI_PERIPHERAL                *SpiPeripheral;$/;"	m	struct:_EFI_SPI_NOR_FLASH_PROTOCOL
SpiPeripheralDriverGuid	SpiConfiguration.h	/^  CONST GUID               *SpiPeripheralDriverGuid;$/;"	m	struct:_EFI_SPI_PERIPHERAL
SrvList	PxeBaseCode.h	/^  EFI_PXE_BASE_CODE_SRVLIST SrvList[1];$/;"	m	struct:__anon110
Ss	DebugSupport.h	/^  UINT32                 Ss;$/;"	m	struct:__anon487
Ss	DebugSupport.h	/^  UINT64                Ss;$/;"	m	struct:__anon489
St0Mm0	DebugSupport.h	/^  UINT8   St0Mm0[10], Reserved2[6];$/;"	m	struct:__anon488
St0Mm0	DebugSupport.h	/^  UINT8   St0Mm0[10], Reserved3[6];$/;"	m	struct:__anon486
St1Mm1	DebugSupport.h	/^  UINT8   St1Mm1[10], Reserved3[6];$/;"	m	struct:__anon488
St1Mm1	DebugSupport.h	/^  UINT8   St1Mm1[10], Reserved4[6];$/;"	m	struct:__anon486
St2Mm2	DebugSupport.h	/^  UINT8   St2Mm2[10], Reserved4[6];$/;"	m	struct:__anon488
St2Mm2	DebugSupport.h	/^  UINT8   St2Mm2[10], Reserved5[6];$/;"	m	struct:__anon486
St3Mm3	DebugSupport.h	/^  UINT8   St3Mm3[10], Reserved5[6];$/;"	m	struct:__anon488
St3Mm3	DebugSupport.h	/^  UINT8   St3Mm3[10], Reserved6[6];$/;"	m	struct:__anon486
St4Mm4	DebugSupport.h	/^  UINT8   St4Mm4[10], Reserved6[6];$/;"	m	struct:__anon488
St4Mm4	DebugSupport.h	/^  UINT8   St4Mm4[10], Reserved7[6];$/;"	m	struct:__anon486
St5Mm5	DebugSupport.h	/^  UINT8   St5Mm5[10], Reserved7[6];$/;"	m	struct:__anon488
St5Mm5	DebugSupport.h	/^  UINT8   St5Mm5[10], Reserved8[6];$/;"	m	struct:__anon486
St6Mm6	DebugSupport.h	/^  UINT8   St6Mm6[10], Reserved8[6];$/;"	m	struct:__anon488
St6Mm6	DebugSupport.h	/^  UINT8   St6Mm6[10], Reserved9[6];$/;"	m	struct:__anon486
St7Mm7	DebugSupport.h	/^  UINT8   St7Mm7[10], Reserved10[6];$/;"	m	struct:__anon486
St7Mm7	DebugSupport.h	/^  UINT8   St7Mm7[10], Reserved9[6];$/;"	m	struct:__anon488
Start	Dhcp4.h	/^  EFI_DHCP4_START              Start;$/;"	m	struct:_EFI_DHCP4_PROTOCOL
Start	Dhcp6.h	/^  EFI_DHCP6_START              Start;$/;"	m	struct:_EFI_DHCP6_PROTOCOL
Start	DriverBinding.h	/^  EFI_DRIVER_BINDING_START      Start;$/;"	m	struct:_EFI_DRIVER_BINDING_PROTOCOL
Start	Ip4Config.h	/^  EFI_IP4_CONFIG_START         Start;$/;"	m	struct:_EFI_IP4_CONFIG_PROTOCOL
Start	LegacyRegion2.h	/^  UINT32                      Start;$/;"	m	struct:__anon485
Start	PxeBaseCode.h	/^  EFI_PXE_BASE_CODE_START           Start;$/;"	m	struct:_EFI_PXE_BASE_CODE_PROTOCOL
Start	SimpleNetwork.h	/^  EFI_SIMPLE_NETWORK_START            Start;$/;"	m	struct:_EFI_SIMPLE_NETWORK_PROTOCOL
StartBusEnumeration	PciHostBridgeResourceAllocation.h	/^  EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL_START_BUS_ENUMERATION  StartBusEnumeration;$/;"	m	struct:_EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL
StartController	UsbFunctionIo.h	/^  EFI_USBFN_IO_START_CONTROLLER             StartController;$/;"	m	struct:_EFI_USBFN_IO_PROTOCOL
StartGroupHandle	BluetoothAttribute.h	/^  UINT16                         StartGroupHandle;$/;"	m	struct:__anon154
StartIndex	HiiFont.h	/^  UINTN   StartIndex;$/;"	m	struct:_EFI_HII_ROW_INFO
StartPeriod	EapManagement.h	/^  UINTN       StartPeriod;$/;"	m	struct:_EFI_EAPOL_SUPPLICANT_PAE_CONFIGURATION
StartRequest	I2cMaster.h	/^  EFI_I2C_MASTER_PROTOCOL_START_REQUEST     StartRequest;$/;"	m	struct:_EFI_I2C_MASTER_PROTOCOL
Started	PxeBaseCode.h	/^  BOOLEAN                       Started;$/;"	m	struct:__anon116
StartingAddr	DevicePath.h	/^  UINT32                          StartingAddr[2];$/;"	m	struct:__anon73
StartingAddress	DevicePath.h	/^  EFI_PHYSICAL_ADDRESS            StartingAddress;$/;"	m	struct:__anon27
StartingOffset	DevicePath.h	/^  UINT64                    StartingOffset;$/;"	m	struct:__anon72
StartupAllAPs	MpService.h	/^  EFI_MP_SERVICES_STARTUP_ALL_APS           StartupAllAPs;$/;"	m	struct:_EFI_MP_SERVICES_PROTOCOL
StartupThisAP	MpService.h	/^  EFI_MP_SERVICES_STARTUP_THIS_AP           StartupThisAP;$/;"	m	struct:_EFI_MP_SERVICES_PROTOCOL
State	Dhcp4.h	/^  EFI_DHCP4_STATE             State;$/;"	m	struct:__anon143
State	Dhcp6.h	/^  EFI_DHCP6_STATE              State;$/;"	m	struct:__anon516
State	Ip6.h	/^  EFI_IP6_NEIGHBOR_STATE  State;       \/\/\/< State of this neighbor cache entry.$/;"	m	struct:__anon403
State	SimpleNetwork.h	/^  UINT32          State;$/;"	m	struct:__anon266
StaticFlag	Arp.h	/^  BOOLEAN                     StaticFlag;$/;"	m	struct:__anon81
StaticIpAddress	DevicePath.h	/^  BOOLEAN                         StaticIpAddress;$/;"	m	struct:__anon47
StationAddress	Arp.h	/^  VOID                      *StationAddress;$/;"	m	struct:__anon82
StationAddress	Ip4.h	/^  EFI_IPv4_ADDRESS        StationAddress;$/;"	m	struct:__anon335
StationAddress	Ip4Config.h	/^  EFI_IPv4_ADDRESS             StationAddress;$/;"	m	struct:__anon386
StationAddress	Ip4Config2.h	/^  EFI_IPv4_ADDRESS      StationAddress;$/;"	m	struct:__anon5
StationAddress	Ip6.h	/^  EFI_IPv6_ADDRESS        StationAddress;$/;"	m	struct:__anon399
StationAddress	SimpleNetwork.h	/^  EFI_SIMPLE_NETWORK_STATION_ADDRESS  StationAddress;$/;"	m	struct:_EFI_SIMPLE_NETWORK_PROTOCOL
StationAddress	Tcp4.h	/^  EFI_IPv4_ADDRESS        StationAddress;$/;"	m	struct:__anon317
StationAddress	Tcp6.h	/^  EFI_IPv6_ADDRESS  StationAddress;$/;"	m	struct:__anon468
StationAddress	Udp4.h	/^  EFI_IPv4_ADDRESS   StationAddress;$/;"	m	struct:__anon375
StationAddress	Udp6.h	/^  EFI_IPv6_ADDRESS  StationAddress;$/;"	m	struct:__anon87
StationIp	Dns4.h	/^  EFI_IPv4_ADDRESS              StationIp;$/;"	m	struct:__anon457
StationIp	Dns6.h	/^  EFI_IPv6_ADDRESS              StationIp;$/;"	m	struct:__anon388
StationIp	Ftp4.h	/^  EFI_IPv4_ADDRESS                     StationIp;$/;"	m	struct:__anon443
StationIp	Mtftp4.h	/^  EFI_IPv4_ADDRESS        StationIp;$/;"	m	struct:__anon434
StationIp	Mtftp6.h	/^  EFI_IPv6_ADDRESS       StationIp;$/;"	m	struct:__anon557
StationIp	PxeBaseCode.h	/^  EFI_IP_ADDRESS                StationIp;$/;"	m	struct:__anon116
StationPort	Tcp4.h	/^  UINT16                  StationPort;$/;"	m	struct:__anon317
StationPort	Tcp6.h	/^  UINT16            StationPort;$/;"	m	struct:__anon468
StationPort	Udp4.h	/^  UINT16             StationPort;$/;"	m	struct:__anon375
StationPort	Udp6.h	/^  UINT16            StationPort;$/;"	m	struct:__anon87
Statistics	SimpleNetwork.h	/^  EFI_SIMPLE_NETWORK_STATISTICS       Statistics;$/;"	m	struct:_EFI_SIMPLE_NETWORK_PROTOCOL
Status	Dhcp4.h	/^  EFI_STATUS              Status;$/;"	m	struct:__anon145
Status	Dns4.h	/^  EFI_STATUS                              Status;$/;"	m	struct:__anon464
Status	Dns6.h	/^  EFI_STATUS                              Status;$/;"	m	struct:__anon395
Status	Ftp4.h	/^  EFI_STATUS                            Status;$/;"	m	struct:_EFI_FTP4_COMMAND_TOKEN
Status	Ftp4.h	/^  EFI_STATUS                           Status;$/;"	m	struct:__anon442
Status	Http.h	/^  EFI_STATUS                    Status;$/;"	m	struct:__anon531
Status	Ip4.h	/^  EFI_STATUS               Status;$/;"	m	struct:__anon344
Status	Ip6.h	/^  EFI_STATUS              Status;$/;"	m	struct:__anon406
Status	ManagedNetwork.h	/^  EFI_STATUS                            Status;$/;"	m	struct:__anon177
Status	MmMp.h	/^  EFI_STATUS     Status;$/;"	m	struct:__anon252
Status	Mtftp4.h	/^  EFI_STATUS                  Status;$/;"	m	struct:_EFI_MTFTP4_TOKEN
Status	Mtftp6.h	/^  EFI_STATUS                  Status;$/;"	m	struct:_EFI_MTFTP6_TOKEN
Status	RestEx.h	/^  EFI_STATUS        Status;$/;"	m	struct:__anon234
Status	Shell.h	/^  EFI_STATUS        Status;     \/\/\/< Status of opening the file.  Valid only if Handle != NULL.$/;"	m	struct:__anon502
Status	SimpleFileSystem.h	/^  EFI_STATUS                  Status;$/;"	m	struct:__anon135
Status	Tcp4.h	/^  EFI_STATUS  Status;$/;"	m	struct:__anon321
Status	Tcp6.h	/^  EFI_STATUS  Status;$/;"	m	struct:__anon472
Status	Udp4.h	/^  EFI_STATUS                Status;$/;"	m	struct:__anon378
Status	Udp6.h	/^  EFI_STATUS                            Status;$/;"	m	struct:__anon90
Status	WiFi.h	/^  EFI_STATUS                         Status;$/;"	m	struct:__anon202
Status	WiFi.h	/^  EFI_STATUS                         Status;$/;"	m	struct:__anon208
Status	WiFi.h	/^  EFI_STATUS                         Status;$/;"	m	struct:__anon210
Status	WiFi.h	/^  EFI_STATUS                         Status;$/;"	m	struct:__anon213
Status	WiFi.h	/^  EFI_STATUS                         Status;$/;"	m	struct:__anon215
Status	WiFi2.h	/^  EFI_STATUS                                Status;$/;"	m	struct:__anon311
Status	WiFi2.h	/^  EFI_STATUS                                Status;$/;"	m	struct:__anon313
Status	WiFi2.h	/^  EFI_STATUS                                Status;$/;"	m	struct:__anon314
StatusCheck	TcgService.h	/^  EFI_TCG_STATUS_CHECK              StatusCheck;$/;"	m	struct:_EFI_TCG_PROTOCOL
StatusCode	Http.h	/^  EFI_HTTP_STATUS_CODE          StatusCode;$/;"	m	struct:__anon527
StatusFlag	DevicePath.h	/^  UINT16                          StatusFlag;$/;"	m	struct:__anon74
StatusFlag	MpService.h	/^  UINT32                     StatusFlag;$/;"	m	struct:__anon500
StdErr	ShellParameters.h	/^  SHELL_FILE_HANDLE StdErr;$/;"	m	struct:_EFI_SHELL_PARAMETERS_PROTOCOL
StdIn	ShellParameters.h	/^  SHELL_FILE_HANDLE StdIn;$/;"	m	struct:_EFI_SHELL_PARAMETERS_PROTOCOL
StdOut	ShellParameters.h	/^  SHELL_FILE_HANDLE StdOut;$/;"	m	struct:_EFI_SHELL_PARAMETERS_PROTOCOL
Stop	Dhcp4.h	/^  EFI_DHCP4_STOP               Stop;$/;"	m	struct:_EFI_DHCP4_PROTOCOL
Stop	Dhcp6.h	/^  EFI_DHCP6_STOP               Stop;$/;"	m	struct:_EFI_DHCP6_PROTOCOL
Stop	DriverBinding.h	/^  EFI_DRIVER_BINDING_STOP       Stop;$/;"	m	struct:_EFI_DRIVER_BINDING_PROTOCOL
Stop	Ip4Config.h	/^  EFI_IP4_CONFIG_STOP          Stop;$/;"	m	struct:_EFI_IP4_CONFIG_PROTOCOL
Stop	PxeBaseCode.h	/^  EFI_PXE_BASE_CODE_STOP            Stop;$/;"	m	struct:_EFI_PXE_BASE_CODE_PROTOCOL
Stop	SimpleNetwork.h	/^  EFI_SIMPLE_NETWORK_STOP             Stop;$/;"	m	struct:_EFI_SIMPLE_NETWORK_PROTOCOL
StopBits	DevicePath.h	/^  UINT8                           StopBits;$/;"	m	struct:__anon50
StopBits	SerialIo.h	/^  UINT32  StopBits;$/;"	m	struct:__anon548
StopController	UsbFunctionIo.h	/^  EFI_USBFN_IO_STOP_CONTROLLER              StopController;$/;"	m	struct:_EFI_USBFN_IO_PROTOCOL
StrLwr	UnicodeCollation.h	/^  EFI_UNICODE_COLLATION_STRLWR      StrLwr;$/;"	m	struct:_EFI_UNICODE_COLLATION_PROTOCOL
StrToFat	UnicodeCollation.h	/^  EFI_UNICODE_COLLATION_STRTOFAT    StrToFat;$/;"	m	struct:_EFI_UNICODE_COLLATION_PROTOCOL
StrUpr	UnicodeCollation.h	/^  EFI_UNICODE_COLLATION_STRUPR      StrUpr;$/;"	m	struct:_EFI_UNICODE_COLLATION_PROTOCOL
StriColl	UnicodeCollation.h	/^  EFI_UNICODE_COLLATION_STRICOLL    StriColl;$/;"	m	struct:_EFI_UNICODE_COLLATION_PROTOCOL
String	DevicePath.h	/^  CHAR8                           String[1];$/;"	m	struct:__anon74
StringId	DriverHealth.h	/^  EFI_STRING_ID   StringId;$/;"	m	struct:__anon441
StringId	NetworkInterfaceIdentifier.h	/^  CHAR8     StringId[4];\/\/\/< A four-character ASCII string that is sent in the class identifier field of$/;"	m	struct:_EFI_NETWORK_INTERFACE_IDENTIFIER_PROTOCOL
StringIdToImage	HiiFont.h	/^  EFI_HII_STRING_ID_TO_IMAGE  StringIdToImage;$/;"	m	struct:_EFI_HII_FONT_PROTOCOL
StringToImage	HiiFont.h	/^  EFI_HII_STRING_TO_IMAGE     StringToImage;$/;"	m	struct:_EFI_HII_FONT_PROTOCOL
StructureVersion	Tcg2Protocol.h	/^  EFI_TCG2_VERSION                 StructureVersion;$/;"	m	struct:tdEFI_TCG2_BOOT_SERVICE_CAPABILITY
StructureVersion	TcgService.h	/^  TCG_VERSION    StructureVersion;$/;"	m	struct:_TCG_EFI_BOOT_SERVICE_CAPABILITY
StructureVersion	TrEEProtocol.h	/^  TREE_VERSION          StructureVersion;$/;"	m	struct:_TREE_BOOT_SERVICE_CAPABILITY
SubElement	WiFi.h	/^  EFI_80211_SUBELEMENT_INFO          SubElement[1];$/;"	m	struct:__anon199
SubElementID	WiFi.h	/^  UINT8                              SubElementID;$/;"	m	struct:__anon198
SubType	DevicePath.h	/^  UINT8 SubType;    \/\/\/< Varies by Type$/;"	m	struct:__anon24
Subband	WiFi.h	/^  EFI_80211_COUNTRY_TRIPLET_SUBBAND  Subband;$/;"	m	union:__anon192
Subband	WiFi.h	/^  EFI_80211_ELEMENT_SUPP_CHANNEL_TUPLE    Subband[1];$/;"	m	struct:__anon204
SubmitCommand	Tcg2Protocol.h	/^  EFI_TCG2_SUBMIT_COMMAND                     SubmitCommand;$/;"	m	struct:tdEFI_TCG2_PROTOCOL
SubmitCommand	TrEEProtocol.h	/^  EFI_TREE_SUBMIT_COMMAND        SubmitCommand;$/;"	m	struct:_EFI_TREE_PROTOCOL
SubmitData	IdeControllerInit.h	/^  EFI_IDE_CONTROLLER_SUBMIT_DATA         SubmitData;$/;"	m	struct:_EFI_IDE_CONTROLLER_INIT_PROTOCOL
SubmitResources	PciHostBridgeResourceAllocation.h	/^  EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL_SUBMIT_RESOURCES       SubmitResources;$/;"	m	struct:_EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL
SubnetAddress	Ip4.h	/^  EFI_IPv4_ADDRESS        SubnetAddress;$/;"	m	struct:__anon336
SubnetMask	DevicePath.h	/^  EFI_IPv4_ADDRESS                SubnetMask;$/;"	m	struct:__anon47
SubnetMask	Dhcp4.h	/^  EFI_IPv4_ADDRESS            SubnetMask;$/;"	m	struct:__anon143
SubnetMask	Dhcp4.h	/^  EFI_IPv4_ADDRESS            SubnetMask;$/;"	m	struct:__anon144
SubnetMask	Dns4.h	/^  EFI_IPv4_ADDRESS              SubnetMask;$/;"	m	struct:__anon457
SubnetMask	Ftp4.h	/^  EFI_IPv4_ADDRESS                     SubnetMask;$/;"	m	struct:__anon443
SubnetMask	Ip4.h	/^  EFI_IPv4_ADDRESS        SubnetMask;$/;"	m	struct:__anon333
SubnetMask	Ip4.h	/^  EFI_IPv4_ADDRESS        SubnetMask;$/;"	m	struct:__anon335
SubnetMask	Ip4.h	/^  EFI_IPv4_ADDRESS        SubnetMask;$/;"	m	struct:__anon336
SubnetMask	Ip4Config.h	/^  EFI_IPv4_ADDRESS             SubnetMask;$/;"	m	struct:__anon386
SubnetMask	Ip4Config2.h	/^  EFI_IPv4_ADDRESS        SubnetMask;$/;"	m	struct:__anon7
SubnetMask	Ip4Config2.h	/^  EFI_IPv4_ADDRESS      SubnetMask;$/;"	m	struct:__anon5
SubnetMask	Mtftp4.h	/^  EFI_IPv4_ADDRESS        SubnetMask;$/;"	m	struct:__anon434
SubnetMask	PxeBaseCode.h	/^  EFI_IP_ADDRESS                SubnetMask;$/;"	m	struct:__anon116
SubnetMask	PxeBaseCode.h	/^  EFI_IP_ADDRESS  SubnetMask;$/;"	m	struct:__anon108
SubnetMask	Tcp4.h	/^  EFI_IPv4_ADDRESS        SubnetMask;$/;"	m	struct:__anon317
SubnetMask	Udp4.h	/^  EFI_IPv4_ADDRESS   SubnetMask;$/;"	m	struct:__anon375
SuiteType	WiFi2.h	/^  UINT8                                     SuiteType;$/;"	m	struct:__anon305
SupervisionTimeout	BluetoothLeConfig.h	/^  UINT16                    SupervisionTimeout;$/;"	m	struct:__anon565
Supported	BlockIoCrypto.h	/^  BOOLEAN                         Supported;$/;"	m	struct:__anon352
Supported	DriverBinding.h	/^  EFI_DRIVER_BINDING_SUPPORTED  Supported;$/;"	m	struct:_EFI_DRIVER_BINDING_PROTOCOL
SupportedEventLogs	Tcg2Protocol.h	/^  EFI_TCG2_EVENT_LOG_BITMAP        SupportedEventLogs;$/;"	m	struct:tdEFI_TCG2_BOOT_SERVICE_CAPABILITY
SupportedEventLogs	TrEEProtocol.h	/^  TREE_EVENT_LOG_BITMAP SupportedEventLogs;$/;"	m	struct:_TREE_BOOT_SERVICE_CAPABILITY
SupportedLanguages	ComponentName.h	/^  CHAR8                                   *SupportedLanguages;$/;"	m	struct:_EFI_COMPONENT_NAME_PROTOCOL
SupportedLanguages	ComponentName2.h	/^  CHAR8                                    *SupportedLanguages;$/;"	m	struct:_EFI_COMPONENT_NAME2_PROTOCOL
SupportedLanguages	DriverConfiguration.h	/^  CHAR8                                   *SupportedLanguages;$/;"	m	struct:_EFI_DRIVER_CONFIGURATION_PROTOCOL
SupportedLanguages	DriverConfiguration2.h	/^  CHAR8                                     *SupportedLanguages;$/;"	m	struct:_EFI_DRIVER_CONFIGURATION2_PROTOCOL
SupportedLanguages	DriverDiagnostics.h	/^  CHAR8                                   *SupportedLanguages;$/;"	m	struct:_EFI_DRIVER_DIAGNOSTICS_PROTOCOL
SupportedLanguages	DriverDiagnostics2.h	/^  CHAR8                                   *SupportedLanguages;$/;"	m	struct:_EFI_DRIVER_DIAGNOSTICS2_PROTOCOL
SupportedLanguages	UnicodeCollation.h	/^  CHAR8                             *SupportedLanguages;$/;"	m	struct:_EFI_UNICODE_COLLATION_PROTOCOL
SupportedOptionCount	Mtftp4.h	/^  UINT8                   SupportedOptionCount;$/;"	m	struct:__anon435
SupportedOptionCount	Mtftp6.h	/^  UINT8                   SupportedOptionCount;$/;"	m	struct:__anon558
SupportedOptions	Mtftp6.h	/^  UINT8                   **SupportedOptions;$/;"	m	struct:__anon558
SupportedOptoins	Mtftp4.h	/^  UINT8                   **SupportedOptoins;$/;"	m	struct:__anon435
SwAddressLength	Arp.h	/^  UINT8                       SwAddressLength;$/;"	m	struct:__anon81
SwAddressLength	Arp.h	/^  UINT8                     SwAddressLength;$/;"	m	struct:__anon82
SwAddressType	Arp.h	/^  UINT16                      SwAddressType;$/;"	m	struct:__anon81
SwAddressType	Arp.h	/^  UINT16                    SwAddressType;$/;"	m	struct:__anon82
SwMmiCpuIndex	MmSwDispatch.h	/^  UINTN SwMmiCpuIndex;$/;"	m	struct:__anon163
SwMmiInputValue	MmSwDispatch.h	/^  UINTN SwMmiInputValue;$/;"	m	struct:__anon162
SwSmiCpuIndex	SmmSwDispatch2.h	/^  UINTN SwSmiCpuIndex;$/;"	m	struct:__anon93
SwSmiInputValue	SmmSwDispatch2.h	/^  UINTN SwSmiInputValue;$/;"	m	struct:__anon92
SwitchBSP	MpService.h	/^  EFI_MP_SERVICES_SWITCH_BSP                SwitchBSP;$/;"	m	struct:_EFI_MP_SERVICES_PROTOCOL
SxEntry	MmSxDispatch.h	/^  SxEntry,$/;"	e	enum:__anon366
SxExit	MmSxDispatch.h	/^  SxExit,$/;"	e	enum:__anon366
SxS0	MmSxDispatch.h	/^  SxS0,$/;"	e	enum:__anon365
SxS1	MmSxDispatch.h	/^  SxS1,$/;"	e	enum:__anon365
SxS2	MmSxDispatch.h	/^  SxS2,$/;"	e	enum:__anon365
SxS3	MmSxDispatch.h	/^  SxS3,$/;"	e	enum:__anon365
SxS4	MmSxDispatch.h	/^  SxS4,$/;"	e	enum:__anon365
SxS5	MmSxDispatch.h	/^  SxS5,$/;"	e	enum:__anon365
SyncInterruptTransfer	Usb2HostController.h	/^  EFI_USB2_HC_PROTOCOL_SYNC_INTERRUPT_TRANSFER     SyncInterruptTransfer;$/;"	m	struct:_EFI_USB2_HC_PROTOCOL
SyncInterruptTransfer	UsbHostController.h	/^  EFI_USB_HC_PROTOCOL_SYNC_INTERRUPT_TRANSFER     SyncInterruptTransfer;$/;"	m	struct:_EFI_USB_HC_PROTOCOL
System	PartitionInfo.h	/^  UINT8                      System;$/;"	m	struct:__anon482
SystemContextAArch64	DebugSupport.h	/^  EFI_SYSTEM_CONTEXT_AARCH64  *SystemContextAArch64;$/;"	m	union:__anon495
SystemContextArm	DebugSupport.h	/^  EFI_SYSTEM_CONTEXT_ARM  *SystemContextArm;$/;"	m	union:__anon495
SystemContextEbc	DebugSupport.h	/^  EFI_SYSTEM_CONTEXT_EBC  *SystemContextEbc;$/;"	m	union:__anon495
SystemContextIa32	DebugSupport.h	/^  EFI_SYSTEM_CONTEXT_IA32 *SystemContextIa32;$/;"	m	union:__anon495
SystemContextIpf	DebugSupport.h	/^  EFI_SYSTEM_CONTEXT_IPF  *SystemContextIpf;$/;"	m	union:__anon495
SystemContextRiscV64	DebugSupport.h	/^  EFI_SYSTEM_CONTEXT_RISCV64  *SystemContextRiscV64;$/;"	m	union:__anon495
SystemContextX64	DebugSupport.h	/^  EFI_SYSTEM_CONTEXT_X64  *SystemContextX64;$/;"	m	union:__anon495
SystemName	TapeIo.h	/^  CHAR8      SystemName[256];  \/\/ UTF-8$/;"	m	struct:_EFI_TAPE_HEADER
SystemTable	LoadedImage.h	/^  EFI_SYSTEM_TABLE  *SystemTable;   \/\/\/< the image's EFI system table pointer.$/;"	m	struct:__anon359
TARGET_MAX_BYTES	ScsiPassThruExt.h	21;"	d
TCG_ALGORITHM_ID	TcgService.h	/^typedef UINT32   TCG_ALGORITHM_ID;$/;"	t
TCG_EFI_BOOT_SERVICE_CAPABILITY	TcgService.h	/^} TCG_EFI_BOOT_SERVICE_CAPABILITY;$/;"	t	typeref:struct:_TCG_EFI_BOOT_SERVICE_CAPABILITY
TCG_VERSION	TcgService.h	/^} TCG_VERSION;$/;"	t	typeref:struct:__anon357
TIMESTAMP_GET	Timestamp.h	/^(EFIAPI *TIMESTAMP_GET)($/;"	t
TIMESTAMP_GET_PROPERTIES	Timestamp.h	/^(EFIAPI *TIMESTAMP_GET_PROPERTIES)($/;"	t
TPMDeactivatedFlag	TcgService.h	/^  BOOLEAN        TPMDeactivatedFlag;  \/\/\/ 01h = TPM currently deactivated.$/;"	m	struct:_TCG_EFI_BOOT_SERVICE_CAPABILITY
TPMPresentFlag	Tcg2Protocol.h	/^  BOOLEAN                          TPMPresentFlag;$/;"	m	struct:tdEFI_TCG2_BOOT_SERVICE_CAPABILITY
TPMPresentFlag	TcgService.h	/^  BOOLEAN        TPMPresentFlag;      \/\/\/ 00h = TPM not present.$/;"	m	struct:_TCG_EFI_BOOT_SERVICE_CAPABILITY
TREE_BOOT_HASH_ALG_SHA1	TrEEProtocol.h	76;"	d
TREE_BOOT_HASH_ALG_SHA256	TrEEProtocol.h	77;"	d
TREE_BOOT_HASH_ALG_SHA384	TrEEProtocol.h	78;"	d
TREE_BOOT_HASH_ALG_SHA512	TrEEProtocol.h	79;"	d
TREE_BOOT_SERVICE_CAPABILITY	TrEEProtocol.h	/^typedef TREE_BOOT_SERVICE_CAPABILITY_1_0 TREE_BOOT_SERVICE_CAPABILITY;$/;"	t
TREE_BOOT_SERVICE_CAPABILITY_1_0	TrEEProtocol.h	/^} TREE_BOOT_SERVICE_CAPABILITY_1_0;$/;"	t	typeref:struct:_TREE_BOOT_SERVICE_CAPABILITY
TREE_EVENT_HEADER_VERSION	TrEEProtocol.h	94;"	d
TREE_EVENT_LOG_BITMAP	TrEEProtocol.h	/^typedef UINT32 TREE_EVENT_LOG_BITMAP;$/;"	t
TREE_EVENT_LOG_FORMAT	TrEEProtocol.h	/^typedef UINT32 TREE_EVENT_LOG_FORMAT;$/;"	t
TREE_EVENT_LOG_FORMAT_TCG_1_2	TrEEProtocol.h	28;"	d
TREE_EXTEND_ONLY	TrEEProtocol.h	84;"	d
TREE_VERSION	TrEEProtocol.h	/^} TREE_VERSION;$/;"	t	typeref:struct:_TREE_VERSION
TTL	Dns4.h	/^  UINT32                        TTL;$/;"	m	struct:__anon462
TTL	Dns6.h	/^  UINT32                        TTL;$/;"	m	struct:__anon393
TTL	PxeBaseCode.h	/^  UINT8                         TTL;$/;"	m	struct:__anon116
Tag	Kms.h	/^  UINT16        Tag;$/;"	m	struct:__anon296
TapeGUID	TapeIo.h	/^  EFI_GUID   TapeGUID;$/;"	m	struct:_EFI_TAPE_HEADER
TapeRead	TapeIo.h	/^  EFI_TAPE_READ           TapeRead;$/;"	m	struct:_EFI_TAPE_IO_PROTOCOL
TapeReset	TapeIo.h	/^  EFI_TAPE_RESET          TapeReset;$/;"	m	struct:_EFI_TAPE_IO_PROTOCOL
TapeRewind	TapeIo.h	/^  EFI_TAPE_REWIND         TapeRewind;$/;"	m	struct:_EFI_TAPE_IO_PROTOCOL
TapeSpace	TapeIo.h	/^  EFI_TAPE_SPACE          TapeSpace;$/;"	m	struct:_EFI_TAPE_IO_PROTOCOL
TapeTitle	TapeIo.h	/^  CHAR8      TapeTitle[120];   \/\/ UTF-8$/;"	m	struct:_EFI_TAPE_HEADER
TapeType	TapeIo.h	/^  EFI_GUID   TapeType;$/;"	m	struct:_EFI_TAPE_HEADER
TapeUnique	TapeIo.h	/^  EFI_GUID   TapeUnique;$/;"	m	struct:_EFI_TAPE_HEADER
TapeWrite	TapeIo.h	/^  EFI_TAPE_WRITE          TapeWrite;$/;"	m	struct:_EFI_TAPE_IO_PROTOCOL
TapeWriteFM	TapeIo.h	/^  EFI_TAPE_WRITEFM        TapeWriteFM;$/;"	m	struct:_EFI_TAPE_IO_PROTOCOL
TargetPortId	DevicePath.h	/^  UINT64                          TargetPortId;$/;"	m	struct:__anon49
TargetPortalGroupTag	DevicePath.h	/^  UINT16                          TargetPortalGroupTag;$/;"	m	struct:__anon61
TargetStatus	ScsiIo.h	/^  UINT8                               TargetStatus;$/;"	m	struct:__anon330
TargetStatus	ScsiPassThru.h	/^  UINT8   TargetStatus;$/;"	m	struct:__anon166
TargetStatus	ScsiPassThruExt.h	/^  UINT8  TargetStatus;$/;"	m	struct:__anon439
Tcp4StateCloseWait	Tcp4.h	/^  Tcp4StateCloseWait      = 9,$/;"	e	enum:__anon320
Tcp4StateClosed	Tcp4.h	/^  Tcp4StateClosed         = 0,$/;"	e	enum:__anon320
Tcp4StateClosing	Tcp4.h	/^  Tcp4StateClosing        = 7,$/;"	e	enum:__anon320
Tcp4StateEstablished	Tcp4.h	/^  Tcp4StateEstablished    = 4,$/;"	e	enum:__anon320
Tcp4StateFinWait1	Tcp4.h	/^  Tcp4StateFinWait1       = 5,$/;"	e	enum:__anon320
Tcp4StateFinWait2	Tcp4.h	/^  Tcp4StateFinWait2       = 6,$/;"	e	enum:__anon320
Tcp4StateLastAck	Tcp4.h	/^  Tcp4StateLastAck        = 10$/;"	e	enum:__anon320
Tcp4StateListen	Tcp4.h	/^  Tcp4StateListen         = 1,$/;"	e	enum:__anon320
Tcp4StateSynReceived	Tcp4.h	/^  Tcp4StateSynReceived    = 3,$/;"	e	enum:__anon320
Tcp4StateSynSent	Tcp4.h	/^  Tcp4StateSynSent        = 2,$/;"	e	enum:__anon320
Tcp4StateTimeWait	Tcp4.h	/^  Tcp4StateTimeWait       = 8,$/;"	e	enum:__anon320
Tcp6StateCloseWait	Tcp6.h	/^  Tcp6StateCloseWait   = 9,$/;"	e	enum:__anon471
Tcp6StateClosed	Tcp6.h	/^  Tcp6StateClosed      = 0,$/;"	e	enum:__anon471
Tcp6StateClosing	Tcp6.h	/^  Tcp6StateClosing     = 7,$/;"	e	enum:__anon471
Tcp6StateEstablished	Tcp6.h	/^  Tcp6StateEstablished = 4,$/;"	e	enum:__anon471
Tcp6StateFinWait1	Tcp6.h	/^  Tcp6StateFinWait1    = 5,$/;"	e	enum:__anon471
Tcp6StateFinWait2	Tcp6.h	/^  Tcp6StateFinWait2    = 6,$/;"	e	enum:__anon471
Tcp6StateLastAck	Tcp6.h	/^  Tcp6StateLastAck     = 10$/;"	e	enum:__anon471
Tcp6StateListen	Tcp6.h	/^  Tcp6StateListen      = 1,$/;"	e	enum:__anon471
Tcp6StateSynReceived	Tcp6.h	/^  Tcp6StateSynReceived = 3,$/;"	e	enum:__anon471
Tcp6StateSynSent	Tcp6.h	/^  Tcp6StateSynSent     = 2,$/;"	e	enum:__anon471
Tcp6StateTimeWait	Tcp6.h	/^  Tcp6StateTimeWait    = 8,$/;"	e	enum:__anon471
TestString	SimpleTextOut.h	/^  EFI_TEXT_TEST_STRING          TestString;$/;"	m	struct:_EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL
TftpError	PxeBaseCode.h	/^  EFI_PXE_BASE_CODE_TFTP_ERROR  TftpError;$/;"	m	struct:__anon116
TftpErrorReceived	PxeBaseCode.h	/^  BOOLEAN                       TftpErrorReceived;$/;"	m	struct:__anon116
Thread	MpService.h	/^  UINT32  Thread;$/;"	m	struct:__anon497
Thread	MpService.h	/^UINT32  Thread;$/;"	m	struct:__anon498
TickPeriod	Metronome.h	/^  UINT32                       TickPeriod;$/;"	m	struct:_EFI_METRONOME_ARCH_PROTOCOL
Tid	DevicePath.h	/^  UINT32                          Tid;$/;"	m	struct:__anon45
Tile	MpService.h	/^UINT32  Tile;$/;"	m	struct:__anon498
Tile	UserCredential.h	/^  EFI_CREDENTIAL_TILE           Tile;$/;"	m	struct:_EFI_USER_CREDENTIAL_PROTOCOL
Tile	UserCredential2.h	/^  EFI_CREDENTIAL2_TILE          Tile;$/;"	m	struct:_EFI_USER_CREDENTIAL2_PROTOCOL
TimeOutMillisec	Http.h	/^  UINT32                             TimeOutMillisec;$/;"	m	struct:__anon524
TimeStamp	Ip4.h	/^  EFI_TIME               TimeStamp;$/;"	m	struct:__anon341
TimeStamp	Ip6.h	/^  EFI_TIME                TimeStamp;$/;"	m	struct:_EFI_IP6_RECEIVE_DATA
TimeStamp	Udp4.h	/^  EFI_TIME                  TimeStamp;$/;"	m	struct:__anon377
TimeStamp	Udp6.h	/^  EFI_TIME                  TimeStamp;$/;"	m	struct:__anon89
TimeToLive	Ip4.h	/^  UINT8                   TimeToLive;$/;"	m	struct:__anon335
TimeToLive	Ip4.h	/^  UINT8                   TimeToLive;$/;"	m	struct:__anon339
TimeToLive	Ip4.h	/^  UINT8                  TimeToLive;$/;"	m	struct:__anon342
TimeToLive	Tcp4.h	/^  UINT8                   TimeToLive;$/;"	m	struct:__anon319
TimeToLive	Udp4.h	/^  UINT8              TimeToLive;$/;"	m	struct:__anon375
TimeWaitTimeout	Tcp4.h	/^  UINT32                  TimeWaitTimeout;$/;"	m	struct:__anon318
TimeWaitTimeout	Tcp6.h	/^  UINT32   TimeWaitTimeout;$/;"	m	struct:__anon469
Timeout	AtaPassThru.h	/^  UINT64                         Timeout;$/;"	m	struct:__anon128
Timeout	Dns4.h	/^  UINT32                        Timeout;$/;"	m	struct:__anon458
Timeout	Dns6.h	/^  UINT32                        Timeout;$/;"	m	struct:__anon389
Timeout	ScsiIo.h	/^  UINT64                              Timeout;$/;"	m	struct:__anon330
Timeout	ScsiPassThru.h	/^  UINT64  Timeout;$/;"	m	struct:__anon166
Timeout	ScsiPassThruExt.h	/^  UINT64 Timeout;$/;"	m	struct:__anon439
Timeout	SdMmcPassThru.h	/^  UINT64                            Timeout;$/;"	m	struct:_EFI_SD_MMC_PASS_THRU_COMMAND_PACKET
Timeout	SerialIo.h	/^  UINT32  Timeout;$/;"	m	struct:__anon548
TimeoutCallback	Mtftp4.h	/^  EFI_MTFTP4_TIMEOUT_CALLBACK TimeoutCallback;$/;"	m	struct:_EFI_MTFTP4_TOKEN
TimeoutCallback	Mtftp6.h	/^  EFI_MTFTP6_TIMEOUT_CALLBACK  TimeoutCallback;$/;"	m	struct:_EFI_MTFTP6_TOKEN
TimeoutInterval	WiFi.h	/^  EFI_80211_ELEMENT_TIMEOUT_VAL      TimeoutInterval;$/;"	m	struct:__anon207
TimeoutValue	Dhcp4.h	/^  UINT32                  TimeoutValue;$/;"	m	struct:__anon145
TimeoutValue	Mtftp4.h	/^  UINT16                  TimeoutValue;$/;"	m	struct:__anon434
TimeoutValue	Mtftp4.h	/^  UINT16                  TimeoutValue;$/;"	m	struct:__anon436
TimeoutValue	Mtftp6.h	/^  UINT16                 TimeoutValue;$/;"	m	struct:__anon557
TimeoutValue	Mtftp6.h	/^  UINT16                 TimeoutValue;$/;"	m	struct:__anon559
Timestamp	ManagedNetwork.h	/^  EFI_TIME      Timestamp;$/;"	m	struct:__anon174
Timestamp	WiFi.h	/^  UINT64                             Timestamp;$/;"	m	struct:__anon197
Title	UserCredential.h	/^  EFI_CREDENTIAL_TITLE          Title;$/;"	m	struct:_EFI_USER_CREDENTIAL_PROTOCOL
Title	UserCredential2.h	/^  EFI_CREDENTIAL2_TITLE         Title;$/;"	m	struct:_EFI_USER_CREDENTIAL2_PROTOCOL
ToJson	RestJsonStructure.h	/^  EFI_REST_JSON_STRUCTURE_TO_JSON            ToJson;            \/\/\/< The function to convert C structure to JSON$/;"	m	struct:_EFI_REST_JSON_STRUCTURE_PROTOCOL
ToS	PxeBaseCode.h	/^  UINT8                         ToS;$/;"	m	struct:__anon116
ToStructure	RestJsonStructure.h	/^  EFI_REST_JSON_STRUCTURE_TO_STRUCTURE       ToStructure;       \/\/\/< The function to convert JSON to C structure$/;"	m	struct:_EFI_REST_JSON_STRUCTURE_PROTOCOL
TopRow	FormBrowser2.h	/^  UINTN   TopRow;$/;"	m	struct:__anon243
TotalDataLength	Ip4.h	/^  UINT32                 TotalDataLength;$/;"	m	struct:__anon343
TotalLength	Ip4.h	/^  UINT16                  TotalLength;$/;"	m	struct:__anon339
Tr	DebugSupport.h	/^  UINT32                 Tr;$/;"	m	struct:__anon487
Tr	DebugSupport.h	/^  UINT64                Tr;$/;"	m	struct:__anon489
TrEEPresentFlag	TrEEProtocol.h	/^  BOOLEAN               TrEEPresentFlag;$/;"	m	struct:_TREE_BOOT_SERVICE_CAPABILITY
TrEE_EVENT	TrEEProtocol.h	/^} TrEE_EVENT;$/;"	t	typeref:struct:__anon562
TrEE_EVENTTYPE	TrEEProtocol.h	/^typedef UINT32 TrEE_EVENTTYPE;$/;"	t
TrEE_EVENT_HEADER	TrEEProtocol.h	/^} TrEE_EVENT_HEADER;$/;"	t	typeref:struct:__anon561
TrEE_PCRINDEX	TrEEProtocol.h	/^typedef UINT32 TrEE_PCRINDEX;$/;"	t
TrafficClass	Ip6.h	/^  UINT8                   TrafficClass;$/;"	m	struct:__anon399
TrafficClass	Tcp6.h	/^  UINT8                 TrafficClass;$/;"	m	struct:__anon470
TrafficClass	Udp6.h	/^  UINT8             TrafficClass;$/;"	m	struct:__anon87
TrafficClassH	Ip6.h	/^  UINT8                   TrafficClassH:4;$/;"	m	struct:_EFI_IP6_HEADER
TrafficClassL	Ip6.h	/^  UINT8                   TrafficClassL:4;$/;"	m	struct:_EFI_IP6_HEADER
TrafficDirection	IpSecConfig.h	/^  EFI_IPSEC_TRAFFIC_DIR           TrafficDirection;$/;"	m	struct:_EFI_IPSEC_SPD_DATA
TransMode	Ftp4.h	/^  UINT8                                TransMode;$/;"	m	struct:__anon443
Transaction	SpiHc.h	/^  EFI_SPI_HC_PROTOCOL_TRANSACTION Transaction;$/;"	m	struct:_EFI_SPI_HC_PROTOCOL
Transaction	SpiIo.h	/^  EFI_SPI_IO_PROTOCOL_TRANSACTION           Transaction;$/;"	m	struct:_EFI_SPI_IO_PROTOCOL
TransactionId	Dhcp6.h	/^  UINT32                       TransactionId:24;$/;"	m	struct:__anon509
TransactionId	PxeBaseCode.h	/^  UINT32  TransactionId:24;$/;"	m	struct:__anon114
TransactionStatus	BlockIo2.h	/^  EFI_STATUS              TransactionStatus;$/;"	m	struct:__anon1
TransactionStatus	BlockIoCrypto.h	/^  EFI_STATUS              TransactionStatus;$/;"	m	struct:__anon347
TransactionStatus	DiskIo2.h	/^  EFI_STATUS TransactionStatus;$/;"	m	struct:__anon540
TransactionStatus	EraseBlock.h	/^  EFI_STATUS            TransactionStatus;$/;"	m	struct:__anon368
TransactionStatus	SdMmcPassThru.h	/^  EFI_STATUS                        TransactionStatus;$/;"	m	struct:_EFI_SD_MMC_PASS_THRU_COMMAND_PACKET
TransactionType	SpiIo.h	/^  EFI_SPI_TRANSACTION_TYPE TransactionType;$/;"	m	struct:_EFI_SPI_BUS_TRANSACTION
Transfer	UsbFunctionIo.h	/^  EFI_USBFN_IO_TRANSFER                     Transfer;$/;"	m	struct:_EFI_USBFN_IO_PROTOCOL
TransferBuffer	NvmExpressPassthru.h	/^  VOID                              *TransferBuffer;$/;"	m	struct:__anon545
TransferLength	NvmExpressPassthru.h	/^  UINT32                            TransferLength;$/;"	m	struct:__anon545
TransferLength	ScsiPassThru.h	/^  UINT32  TransferLength;$/;"	m	struct:__anon166
TransferProtocol	IdeControllerInit.h	/^  EFI_ATA_EXT_TRANSFER_PROTOCOL  TransferProtocol;$/;"	m	struct:__anon132
TransferStatus	UsbFunctionIo.h	/^  EFI_USBFN_TRANSFER_STATUS     TransferStatus;$/;"	m	struct:_EFI_USBFN_TRANSFER_RESULT
TranslatorHubAddress	Usb2HostController.h	/^  UINT8      TranslatorHubAddress; \/\/\/< device address$/;"	m	struct:__anon413
TranslatorPortNumber	Usb2HostController.h	/^  UINT8      TranslatorPortNumber; \/\/\/< the port number of the hub that device is connected to.$/;"	m	struct:__anon413
Transmit	Ip4.h	/^  EFI_IP4_TRANSMIT             Transmit;$/;"	m	struct:_EFI_IP4_PROTOCOL
Transmit	Ip6.h	/^  EFI_IP6_TRANSMIT        Transmit;$/;"	m	struct:_EFI_IP6_PROTOCOL
Transmit	ManagedNetwork.h	/^  EFI_MANAGED_NETWORK_TRANSMIT            Transmit;$/;"	m	struct:_EFI_MANAGED_NETWORK_PROTOCOL
Transmit	SimpleNetwork.h	/^  EFI_SIMPLE_NETWORK_TRANSMIT         Transmit;$/;"	m	struct:_EFI_SIMPLE_NETWORK_PROTOCOL
Transmit	Supplicant.h	/^  Transmit,$/;"	e	enum:__anon121
Transmit	Tcp4.h	/^  EFI_TCP4_TRANSMIT                      Transmit;$/;"	m	struct:_EFI_TCP4_PROTOCOL
Transmit	Tcp6.h	/^  EFI_TCP6_TRANSMIT       Transmit;$/;"	m	struct:_EFI_TCP6_PROTOCOL
Transmit	Udp4.h	/^  EFI_UDP4_TRANSMIT             Transmit;$/;"	m	struct:_EFI_UDP4_PROTOCOL
Transmit	Udp6.h	/^  EFI_UDP6_TRANSMIT       Transmit;$/;"	m	struct:_EFI_UDP6_PROTOCOL
TransmitQueueTimeoutValue	ManagedNetwork.h	/^  UINT32     TransmitQueueTimeoutValue;$/;"	m	struct:__anon173
TransmitReceive	Dhcp4.h	/^  EFI_DHCP4_TRANSMIT_RECEIVE   TransmitReceive;$/;"	m	struct:_EFI_DHCP4_PROTOCOL
TransmitTimeout	Ip4.h	/^  UINT32                  TransmitTimeout;$/;"	m	struct:__anon335
TransmitTimeout	Ip6.h	/^  UINT32                  TransmitTimeout;$/;"	m	struct:__anon399
TransmitTimeout	PxeBaseCode.h	/^  UINT16                      TransmitTimeout;$/;"	m	struct:__anon112
TransmitTimeout	Udp4.h	/^  UINT32             TransmitTimeout;$/;"	m	struct:__anon375
TransmitTimeout	Udp6.h	/^  UINT32            TransmitTimeout;$/;"	m	struct:__anon87
Trigger	MmControl.h	/^  EFI_MM_ACTIVATE    Trigger;$/;"	m	struct:_EFI_MM_CONTROL_PROTOCOL
TryCount	Mtftp4.h	/^  UINT16                  TryCount;$/;"	m	struct:__anon434
TryCount	Mtftp4.h	/^  UINT16                  TryCount;$/;"	m	struct:__anon436
TryCount	Mtftp6.h	/^  UINT16                 TryCount;$/;"	m	struct:__anon557
TryCount	Mtftp6.h	/^  UINT16                 TryCount;$/;"	m	struct:__anon559
TunnelDestinationAddress	IpSecConfig.h	/^  EFI_IP_ADDRESS             TunnelDestinationAddress;$/;"	m	struct:_EFI_IPSEC_SA_DATA2
TunnelOption	IpSecConfig.h	/^  EFI_IPSEC_TUNNEL_OPTION *TunnelOption;$/;"	m	struct:_EFI_IPSEC_PROCESS_POLICY
TunnelSourceAddress	IpSecConfig.h	/^  EFI_IP_ADDRESS             TunnelSourceAddress;$/;"	m	struct:_EFI_IPSEC_SA_DATA2
TwoStopBits	SerialIo.h	/^  TwoStopBits$/;"	e	enum:__anon547
TxBroadcastFrames	SimpleNetwork.h	/^  UINT64  TxBroadcastFrames;$/;"	m	struct:__anon264
TxCrcErrorFrames	SimpleNetwork.h	/^  UINT64  TxCrcErrorFrames;$/;"	m	struct:__anon264
TxData	Ip4.h	/^    EFI_IP4_TRANSMIT_DATA  *TxData;$/;"	m	union:__anon344::__anon345
TxData	Ip6.h	/^    EFI_IP6_TRANSMIT_DATA *TxData;$/;"	m	union:__anon406::__anon407
TxData	ManagedNetwork.h	/^    EFI_MANAGED_NETWORK_TRANSMIT_DATA   *TxData;$/;"	m	union:__anon177::__anon178
TxData	Tcp4.h	/^    EFI_TCP4_TRANSMIT_DATA  *TxData;$/;"	m	union:__anon327::__anon328
TxData	Tcp6.h	/^    EFI_TCP6_TRANSMIT_DATA  *TxData;$/;"	m	union:__anon478::__anon479
TxData	Udp4.h	/^    EFI_UDP4_TRANSMIT_DATA  *TxData;$/;"	m	union:__anon378::__anon379
TxData	Udp6.h	/^    EFI_UDP6_TRANSMIT_DATA              *TxData;$/;"	m	union:__anon90::__anon91
TxDroppedFrames	SimpleNetwork.h	/^  UINT64  TxDroppedFrames;$/;"	m	struct:__anon264
TxErrorFrames	SimpleNetwork.h	/^  UINT64  TxErrorFrames;$/;"	m	struct:__anon264
TxGoodFrames	SimpleNetwork.h	/^  UINT64  TxGoodFrames;$/;"	m	struct:__anon264
TxMulticastFrames	SimpleNetwork.h	/^  UINT64  TxMulticastFrames;$/;"	m	struct:__anon264
TxOversizeFrames	SimpleNetwork.h	/^  UINT64  TxOversizeFrames;$/;"	m	struct:__anon264
TxRetryFrames	SimpleNetwork.h	/^  UINT64  TxRetryFrames;$/;"	m	struct:__anon264
TxTotalBytes	SimpleNetwork.h	/^  UINT64  TxTotalBytes;$/;"	m	struct:__anon264
TxTotalFrames	SimpleNetwork.h	/^  UINT64  TxTotalFrames;$/;"	m	struct:__anon264
TxUndersizeFrames	SimpleNetwork.h	/^  UINT64  TxUndersizeFrames;$/;"	m	struct:__anon264
TxUnicastFrames	SimpleNetwork.h	/^  UINT64  TxUnicastFrames;$/;"	m	struct:__anon264
Type	BluetoothAttribute.h	/^  EFI_BLUETOOTH_UUID                 Type;$/;"	m	struct:__anon152
Type	DevicePath.h	/^  UINT8 Type;       \/\/\/< 0x01 Hardware Device Path.$/;"	m	struct:__anon24
Type	Dhcp6.h	/^  UINT16                       Type; \/\/\/< Type for an IA.$/;"	m	struct:__anon515
Type	FirmwareVolume2.h	/^  EFI_FV_FILETYPE         Type;$/;"	m	struct:__anon539
Type	Ip4.h	/^  UINT8                   Type;$/;"	m	struct:__anon337
Type	Ip6.h	/^  UINT8                   Type;   \/\/\/< The type of ICMP message.$/;"	m	struct:__anon404
Type	Kms.h	/^  UINT16        Type;$/;"	m	struct:__anon296
Type	MmIoTrapDispatch.h	/^  EFI_MM_IO_TRAP_DISPATCH_TYPE   Type;$/;"	m	struct:__anon100
Type	MmSxDispatch.h	/^  EFI_SLEEP_TYPE  Type;$/;"	m	struct:__anon367
Type	MmUsbDispatch.h	/^  EFI_USB_MMI_TYPE          Type;$/;"	m	struct:__anon251
Type	NetworkInterfaceIdentifier.h	/^  UINT8     Type;       \/\/\/< Network interface type. This will be set to one of the values$/;"	m	struct:_EFI_NETWORK_INTERFACE_IDENTIFIER_PROTOCOL
Type	PartitionInfo.h	/^  UINT32                     Type;$/;"	m	struct:__anon482
Type	PxeBaseCode.h	/^  UINT16          Type;$/;"	m	struct:__anon109
Type	PxeBaseCode.h	/^  UINT8   Type;$/;"	m	struct:__anon102
Type	Runtime.h	/^  UINT32                  Type;$/;"	m	struct:_EFI_RUNTIME_EVENT_ENTRY
Type	UgaIo.h	/^  EFI_DRIVER_HANOFF_ENUM    Type;$/;"	m	struct:__anon538
Type	UserCredential.h	/^  EFI_GUID                      Type;        \/\/\/< Identifies this class of User Credential Provider.$/;"	m	struct:_EFI_USER_CREDENTIAL_PROTOCOL
Type	UserCredential2.h	/^  EFI_GUID                      Type;        \/\/\/< Identifies this class of User Credential Provider.$/;"	m	struct:_EFI_USER_CREDENTIAL2_PROTOCOL
Type	UserManager.h	/^  UINT32  Type;    \/\/\/< Specifies either an operator or a data item.$/;"	m	struct:__anon255
Type	UserManager.h	/^  UINT32  Type;  \/\/\/< Specifies the type of user access control.$/;"	m	struct:__anon254
Type	WiFi.h	/^  UINT8                              Type;$/;"	m	struct:__anon206
TypeGuid	DevicePath.h	/^  EFI_GUID                        TypeGuid;$/;"	m	struct:__anon73
TypeGuid	NvdimmLabel.h	/^  EFI_GUID TypeGuid;$/;"	m	struct:__anon261
TypeOfService	Ip4.h	/^  UINT8                   TypeOfService;$/;"	m	struct:__anon335
TypeOfService	Ip4.h	/^  UINT8                   TypeOfService;$/;"	m	struct:__anon339
TypeOfService	Ip4.h	/^  UINT8                  TypeOfService;$/;"	m	struct:__anon342
TypeOfService	Tcp4.h	/^  UINT8                   TypeOfService;$/;"	m	struct:__anon319
TypeOfService	Udp4.h	/^  UINT8              TypeOfService;$/;"	m	struct:__anon375
UART_DEVICE_PATH	DevicePath.h	/^} UART_DEVICE_PATH;$/;"	t	typeref:struct:__anon50
UART_FLOW_CONTROL_DEVICE_PATH	DevicePath.h	/^} UART_FLOW_CONTROL_DEVICE_PATH;$/;"	t	typeref:struct:__anon52
UART_FLOW_CONTROL_HARDWARE	DevicePath.h	772;"	d
UART_FLOW_CONTROL_XON_XOFF	DevicePath.h	773;"	d
UFS_DEVICE_PATH	DevicePath.h	/^} UFS_DEVICE_PATH;$/;"	t	typeref:struct:__anon58
UGA_DEVICE	UgaIo.h	/^} UGA_DEVICE, *PUGA_DEVICE;$/;"	t	typeref:struct:_UGA_DEVICE
UGA_DEVICE_DATA	UgaIo.h	/^} UGA_DEVICE_DATA, *PUGA_DEVICE_DATA;$/;"	t	typeref:struct:__anon533
UGA_DEVICE_ID	UgaIo.h	/^typedef UINT32 UGA_DEVICE_ID, *PUGA_DEVICE_ID;$/;"	t
UGA_DEVICE_TYPE	UgaIo.h	/^} UGA_DEVICE_TYPE, *PUGA_DEVICE_TYPE;$/;"	t	typeref:enum:__anon532
UGA_IO_REQUEST	UgaIo.h	/^} UGA_IO_REQUEST, *PUGA_IO_REQUEST;$/;"	t	typeref:struct:__anon535
UGA_IO_REQUEST_CODE	UgaIo.h	/^} UGA_IO_REQUEST_CODE, *PUGA_IO_REQUEST_CODE;$/;"	t	typeref:enum:__anon534
UGA_STATUS	UgaIo.h	/^typedef UINT32                      UGA_STATUS;$/;"	t
UID	DevicePath.h	/^  UINT32                          UID;$/;"	m	struct:__anon31
UID	DevicePath.h	/^  UINT32                          UID;$/;"	m	struct:__anon32
UNDI_CONFIG_TABLE	NetworkInterfaceIdentifier.h	/^typedef struct undiconfig_table  UNDI_CONFIG_TABLE;$/;"	t	typeref:struct:undiconfig_table
UNICODE_COLLATION_INTERFACE	UnicodeCollation.h	/^typedef EFI_UNICODE_COLLATION_PROTOCOL          UNICODE_COLLATION_INTERFACE;$/;"	t
UNICODE_COLLATION_PROTOCOL	UnicodeCollation.h	30;"	d
URI_DEVICE_PATH	DevicePath.h	/^} URI_DEVICE_PATH;$/;"	t	typeref:struct:__anon57
USB_CLASS_DEVICE_PATH	DevicePath.h	/^} USB_CLASS_DEVICE_PATH;$/;"	t	typeref:struct:__anon41
USB_DEVICE_PATH	DevicePath.h	/^} USB_DEVICE_PATH;$/;"	t	typeref:struct:__anon40
USB_PORT_STAT_CONNECTION	Usb2HostController.h	36;"	d
USB_PORT_STAT_C_CONNECTION	Usb2HostController.h	50;"	d
USB_PORT_STAT_C_ENABLE	Usb2HostController.h	51;"	d
USB_PORT_STAT_C_OVERCURRENT	Usb2HostController.h	53;"	d
USB_PORT_STAT_C_RESET	Usb2HostController.h	54;"	d
USB_PORT_STAT_C_SUSPEND	Usb2HostController.h	52;"	d
USB_PORT_STAT_ENABLE	Usb2HostController.h	37;"	d
USB_PORT_STAT_HIGH_SPEED	Usb2HostController.h	43;"	d
USB_PORT_STAT_LOW_SPEED	Usb2HostController.h	42;"	d
USB_PORT_STAT_OVERCURRENT	Usb2HostController.h	39;"	d
USB_PORT_STAT_OWNER	Usb2HostController.h	45;"	d
USB_PORT_STAT_POWER	Usb2HostController.h	41;"	d
USB_PORT_STAT_RESET	Usb2HostController.h	40;"	d
USB_PORT_STAT_SUPER_SPEED	Usb2HostController.h	44;"	d
USB_PORT_STAT_SUSPEND	Usb2HostController.h	38;"	d
USB_WWID_DEVICE_PATH	DevicePath.h	/^} USB_WWID_DEVICE_PATH;$/;"	t	typeref:struct:__anon42
UUID_128BIT_TYPE_LEN	BluetoothAttribute.h	46;"	d
UUID_16BIT_TYPE_LEN	BluetoothAttribute.h	44;"	d
UUID_32BIT_TYPE_LEN	BluetoothAttribute.h	45;"	d
Uart	DevicePath.h	/^  UART_DEVICE_PATH                           *Uart;$/;"	m	union:__anon76
Uart	DevicePath.h	/^  UART_DEVICE_PATH                           Uart;$/;"	m	union:__anon75
UartFlowControl	DevicePath.h	/^  UART_FLOW_CONTROL_DEVICE_PATH              *UartFlowControl;$/;"	m	union:__anon76
UartFlowControl	DevicePath.h	/^  UART_FLOW_CONTROL_DEVICE_PATH              UartFlowControl;$/;"	m	union:__anon75
UdmaMode	IdeControllerInit.h	/^  EFI_ATA_MODE           UdmaMode;$/;"	m	struct:__anon133
UdpRead	PxeBaseCode.h	/^  EFI_PXE_BASE_CODE_UDP_READ        UdpRead;$/;"	m	struct:_EFI_PXE_BASE_CODE_PROTOCOL
UdpSession	Udp4.h	/^  EFI_UDP4_SESSION_DATA     UdpSession;$/;"	m	struct:__anon377
UdpSession	Udp6.h	/^  EFI_UDP6_SESSION_DATA     UdpSession;$/;"	m	struct:__anon89
UdpSessionData	Udp4.h	/^  EFI_UDP4_SESSION_DATA     *UdpSessionData;       \/\/OPTIONAL$/;"	m	struct:__anon376
UdpSessionData	Udp6.h	/^  EFI_UDP6_SESSION_DATA     *UdpSessionData;$/;"	m	struct:__anon88
UdpWrite	PxeBaseCode.h	/^  EFI_PXE_BASE_CODE_UDP_WRITE       UdpWrite;$/;"	m	struct:_EFI_PXE_BASE_CODE_PROTOCOL
Ufs	DevicePath.h	/^  UFS_DEVICE_PATH                            *Ufs;$/;"	m	union:__anon76
Ufs	DevicePath.h	/^  UFS_DEVICE_PATH                            Ufs;$/;"	m	union:__anon75
UgaDtGraphicsController	UgaIo.h	/^  UgaDtGraphicsController,$/;"	e	enum:__anon532
UgaDtOther	UgaIo.h	/^  UgaDtOther$/;"	e	enum:__anon532
UgaDtOutputController	UgaIo.h	/^  UgaDtOutputController,$/;"	e	enum:__anon532
UgaDtOutputPort	UgaIo.h	/^  UgaDtOutputPort,$/;"	e	enum:__anon532
UgaDtParentBus	UgaIo.h	/^  UgaDtParentBus          = 1,$/;"	e	enum:__anon532
UgaIoBtPrivateInterface	UgaIo.h	/^  UgaIoBtPrivateInterface$/;"	e	enum:__anon534
UgaIoCopyRectangle	UgaIo.h	/^  UgaIoCopyRectangle,$/;"	e	enum:__anon534
UgaIoDeviceChannelClose	UgaIo.h	/^  UgaIoDeviceChannelClose,$/;"	e	enum:__anon534
UgaIoDeviceChannelOpen	UgaIo.h	/^  UgaIoDeviceChannelOpen,$/;"	e	enum:__anon534
UgaIoDeviceChannelRead	UgaIo.h	/^  UgaIoDeviceChannelRead,$/;"	e	enum:__anon534
UgaIoDeviceChannelWrite	UgaIo.h	/^  UgaIoDeviceChannelWrite,$/;"	e	enum:__anon534
UgaIoFlushDevice	UgaIo.h	/^  UgaIoFlushDevice,$/;"	e	enum:__anon534
UgaIoGetChildDevice	UgaIo.h	/^  UgaIoGetChildDevice,$/;"	e	enum:__anon534
UgaIoGetDeviceProperty	UgaIo.h	/^  UgaIoGetDeviceProperty,$/;"	e	enum:__anon534
UgaIoGetDevicePropertySize	UgaIo.h	/^  UgaIoGetDevicePropertySize,$/;"	e	enum:__anon534
UgaIoGetDeviceState	UgaIo.h	/^  UgaIoGetDeviceState,$/;"	e	enum:__anon534
UgaIoGetEdidSegment	UgaIo.h	/^  UgaIoGetEdidSegment,$/;"	e	enum:__anon534
UgaIoGetMemoryConfiguration	UgaIo.h	/^  UgaIoGetMemoryConfiguration,$/;"	e	enum:__anon534
UgaIoGetPersistentData	UgaIo.h	/^  UgaIoGetPersistentData,$/;"	e	enum:__anon534
UgaIoGetPersistentDataSize	UgaIo.h	/^  UgaIoGetPersistentDataSize,$/;"	e	enum:__anon534
UgaIoGetVersion	UgaIo.h	/^  UgaIoGetVersion             = 1,$/;"	e	enum:__anon534
UgaIoResetDevice	UgaIo.h	/^  UgaIoResetDevice,$/;"	e	enum:__anon534
UgaIoSetDeviceState	UgaIo.h	/^  UgaIoSetDeviceState,$/;"	e	enum:__anon534
UgaIoSetPersistentData	UgaIo.h	/^  UgaIoSetPersistentData,$/;"	e	enum:__anon534
UgaIoSetPowerState	UgaIo.h	/^  UgaIoSetPowerState,$/;"	e	enum:__anon534
UgaIoSetVideoMode	UgaIo.h	/^  UgaIoSetVideoMode,$/;"	e	enum:__anon534
UgaIoStartDevice	UgaIo.h	/^  UgaIoStartDevice,$/;"	e	enum:__anon534
UgaIoStopDevice	UgaIo.h	/^  UgaIoStopDevice,$/;"	e	enum:__anon534
UnLock	LegacyRegion2.h	/^  EFI_LEGACY_REGION2_UNLOCK     UnLock;$/;"	m	struct:_EFI_LEGACY_REGION2_PROTOCOL
UnRegister	MmGpiDispatch.h	/^  EFI_MM_GPI_UNREGISTER  UnRegister;$/;"	m	struct:_EFI_MM_GPI_DISPATCH_PROTOCOL
UnRegister	MmIoTrapDispatch.h	/^  EFI_MM_IO_TRAP_DISPATCH_UNREGISTER  UnRegister;$/;"	m	struct:_EFI_MM_IO_TRAP_DISPATCH_PROTOCOL
UnRegister	MmPeriodicTimerDispatch.h	/^  EFI_MM_PERIODIC_TIMER_UNREGISTER  UnRegister;$/;"	m	struct:_EFI_MM_PERIODIC_TIMER_DISPATCH_PROTOCOL
UnRegister	MmPowerButtonDispatch.h	/^  EFI_MM_POWER_BUTTON_UNREGISTER  UnRegister;$/;"	m	struct:_EFI_MM_POWER_BUTTON_DISPATCH_PROTOCOL
UnRegister	MmStandbyButtonDispatch.h	/^  EFI_MM_STANDBY_BUTTON_UNREGISTER  UnRegister;$/;"	m	struct:_EFI_MM_STANDBY_BUTTON_DISPATCH_PROTOCOL
UnRegister	MmSwDispatch.h	/^  EFI_MM_SW_UNREGISTER  UnRegister;$/;"	m	struct:_EFI_MM_SW_DISPATCH_PROTOCOL
UnRegister	MmSxDispatch.h	/^  EFI_MM_SX_UNREGISTER  UnRegister;$/;"	m	struct:_EFI_MM_SX_DISPATCH_PROTOCOL
UnRegister	MmUsbDispatch.h	/^  EFI_MM_USB_UNREGISTER  UnRegister;$/;"	m	struct:_EFI_MM_USB_DISPATCH_PROTOCOL
UnRegister	SmmPeriodicTimerDispatch2.h	/^  EFI_SMM_PERIODIC_TIMER_UNREGISTER2  UnRegister;$/;"	m	struct:_EFI_SMM_PERIODIC_TIMER_DISPATCH2_PROTOCOL
UnRegister	SmmSwDispatch2.h	/^  EFI_SMM_SW_UNREGISTER2  UnRegister;$/;"	m	struct:_EFI_SMM_SW_DISPATCH2_PROTOCOL
UnicodeChar	SimpleTextIn.h	/^  CHAR16  UnicodeChar;$/;"	m	struct:__anon358
UninstallAcpiTable	AcpiTable.h	/^  EFI_ACPI_TABLE_UNINSTALL_ACPI_TABLE UninstallAcpiTable;$/;"	m	struct:_EFI_ACPI_TABLE_PROTOCOL
Unload	LoadedImage.h	/^  EFI_IMAGE_UNLOAD  Unload;$/;"	m	struct:__anon359
UnloadImage	Ebc.h	/^  EFI_EBC_UNLOAD_IMAGE          UnloadImage;$/;"	m	struct:_EFI_EBC_PROTOCOL
Unmap	DeviceIo.h	/^  EFI_IO_UNMAP            Unmap;$/;"	m	struct:_EFI_DEVICE_IO_PROTOCOL
Unmap	PciIo.h	/^  EFI_PCI_IO_PROTOCOL_UNMAP               Unmap;$/;"	m	struct:_EFI_PCI_IO_PROTOCOL
Unmap	PciRootBridgeIo.h	/^  EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_UNMAP           Unmap;$/;"	m	struct:_EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL
Unregister	MmReportStatusCodeHandler.h	/^  EFI_MM_RSC_HANDLER_UNREGISTER    Unregister;$/;"	m	struct:_EFI_MM_RSC_HANDLER_PROTOCOL
Unregister	RamDisk.h	/^  EFI_RAM_DISK_UNREGISTER_RAMDISK      Unregister;$/;"	m	struct:_EFI_RAM_DISK_PROTOCOL
Unregister	ReportStatusCodeHandler.h	/^  EFI_RSC_HANDLER_UNREGISTER Unregister;$/;"	m	struct:__anon387
UnregisterDataNotify	Ip4Config2.h	/^  EFI_IP4_CONFIG2_UNREGISTER_NOTIFY  UnregisterDataNotify;$/;"	m	struct:_EFI_IP4_CONFIG2_PROTOCOL
UnregisterDataNotify	Ip6Config.h	/^  EFI_IP6_CONFIG_UNREGISTER_NOTIFY  UnregisterDataNotify;$/;"	m	struct:_EFI_IP6_CONFIG_PROTOCOL
UnregisterDataNotify	IpSecConfig.h	/^  EFI_IPSEC_CONFIG_UNREGISTER_NOTIFY  UnregisterDataNotify;$/;"	m	struct:_EFI_IPSEC_CONFIG_PROTOCOL
UnregisterKeyNotify	SimpleTextInEx.h	/^  EFI_UNREGISTER_KEYSTROKE_NOTIFY UnregisterKeyNotify;$/;"	m	struct:_EFI_SIMPLE_TEXT_INPUT_EX_PROTOCOL
UnregisterPackageNotify	HiiDatabase.h	/^  EFI_HII_DATABASE_UNREGISTER_NOTIFY  UnregisterPackageNotify;$/;"	m	struct:_EFI_HII_DATABASE_PROTOCOL
UnregisterResetNotify	ResetNotification.h	/^  EFI_UNREGISTER_RESET_NOTIFY UnregisterResetNotify;$/;"	m	struct:_EFI_RESET_NOTIFICATION_PROTOCOL
UnsupportedOptionCount	Mtftp4.h	/^  UINT8                   UnsupportedOptionCount;$/;"	m	struct:__anon435
UnsupportedOptoins	Mtftp4.h	/^  UINT8                   **UnsupportedOptoins;$/;"	m	struct:__anon435
UnsupportedProtocol	SimpleNetwork.h	/^  UINT64  UnsupportedProtocol;$/;"	m	struct:__anon264
UpdateBootObjectAuthorization	Bis.h	/^  EFI_BIS_UPDATE_BOOT_OBJECT_AUTHORIZATION            UpdateBootObjectAuthorization;$/;"	m	struct:_EFI_BIS_PROTOCOL
UpdateDnsCache	Dns4.h	/^  EFI_DNS4_UPDATE_DNS_CACHE     UpdateDnsCache;$/;"	m	struct:_EFI_DNS4_PROTOCOL
UpdateDnsCache	Dns6.h	/^  EFI_DNS6_UPDATE_DNS_CACHE     UpdateDnsCache;$/;"	m	struct:_EFI_DNS6_PROTOCOL
UpdatePackageList	HiiDatabase.h	/^  EFI_HII_DATABASE_UPDATE_PACK        UpdatePackageList;$/;"	m	struct:_EFI_HII_DATABASE_PROTOCOL
UpdateSpiPeripheral	SpiIo.h	/^  EFI_SPI_IO_PROTOCOL_UPDATE_SPI_PERIPHERAL UpdateSpiPeripheral;$/;"	m	struct:_EFI_SPI_IO_PROTOCOL
UpdateString	Smbios.h	/^  EFI_SMBIOS_UPDATE_STRING UpdateString;$/;"	m	struct:_EFI_SMBIOS_PROTOCOL
Urgent	Tcp4.h	/^  BOOLEAN                   Urgent;$/;"	m	struct:__anon326
Urgent	Tcp6.h	/^  BOOLEAN                 Urgent;$/;"	m	struct:__anon477
UrgentFlag	Tcp4.h	/^  BOOLEAN                   UrgentFlag;$/;"	m	struct:__anon325
UrgentFlag	Tcp6.h	/^  BOOLEAN                 UrgentFlag;$/;"	m	struct:__anon476
Uri	DevicePath.h	/^  CHAR8                           Uri[];$/;"	m	struct:__anon57
Uri	DevicePath.h	/^  URI_DEVICE_PATH                            *Uri;$/;"	m	union:__anon76
Uri	DevicePath.h	/^  URI_DEVICE_PATH                            Uri;$/;"	m	union:__anon75
Url	Http.h	/^  CHAR16                        *Url;$/;"	m	struct:__anon526
Usb	DevicePath.h	/^  USB_DEVICE_PATH                            *Usb;$/;"	m	union:__anon76
Usb	DevicePath.h	/^  USB_DEVICE_PATH                            Usb;$/;"	m	union:__anon75
UsbAsyncInterruptTransfer	UsbIo.h	/^  EFI_USB_IO_ASYNC_INTERRUPT_TRANSFER   UsbAsyncInterruptTransfer;$/;"	m	struct:_EFI_USB_IO_PROTOCOL
UsbAsyncIsochronousTransfer	UsbIo.h	/^  EFI_USB_IO_ASYNC_ISOCHRONOUS_TRANSFER UsbAsyncIsochronousTransfer;$/;"	m	struct:_EFI_USB_IO_PROTOCOL
UsbBulkTransfer	UsbIo.h	/^  EFI_USB_IO_BULK_TRANSFER              UsbBulkTransfer;$/;"	m	struct:_EFI_USB_IO_PROTOCOL
UsbBusSpeedFull	UsbFunctionIo.h	/^  UsbBusSpeedFull,$/;"	e	enum:_EFI_USB_BUS_SPEED
UsbBusSpeedHigh	UsbFunctionIo.h	/^  UsbBusSpeedHigh,$/;"	e	enum:_EFI_USB_BUS_SPEED
UsbBusSpeedLow	UsbFunctionIo.h	/^  UsbBusSpeedLow,$/;"	e	enum:_EFI_USB_BUS_SPEED
UsbBusSpeedMaximum	UsbFunctionIo.h	/^  UsbBusSpeedMaximum = UsbBusSpeedSuper$/;"	e	enum:_EFI_USB_BUS_SPEED
UsbBusSpeedSuper	UsbFunctionIo.h	/^  UsbBusSpeedSuper,$/;"	e	enum:_EFI_USB_BUS_SPEED
UsbBusSpeedUnknown	UsbFunctionIo.h	/^  UsbBusSpeedUnknown = 0,$/;"	e	enum:_EFI_USB_BUS_SPEED
UsbClass	DevicePath.h	/^  USB_CLASS_DEVICE_PATH                      *UsbClass;$/;"	m	union:__anon76
UsbClass	DevicePath.h	/^  USB_CLASS_DEVICE_PATH                      UsbClass;$/;"	m	union:__anon75
UsbControlTransfer	UsbIo.h	/^  EFI_USB_IO_CONTROL_TRANSFER           UsbControlTransfer;$/;"	m	struct:_EFI_USB_IO_PROTOCOL
UsbEndpointBulk	UsbFunctionIo.h	/^  UsbEndpointBulk = 0x02,$/;"	e	enum:_EFI_USB_ENDPOINT_TYPE
UsbEndpointControl	UsbFunctionIo.h	/^  UsbEndpointControl = 0x00,$/;"	e	enum:_EFI_USB_ENDPOINT_TYPE
UsbGetConfigDescriptor	UsbIo.h	/^  EFI_USB_IO_GET_CONFIG_DESCRIPTOR      UsbGetConfigDescriptor;$/;"	m	struct:_EFI_USB_IO_PROTOCOL
UsbGetDeviceDescriptor	UsbIo.h	/^  EFI_USB_IO_GET_DEVICE_DESCRIPTOR      UsbGetDeviceDescriptor;$/;"	m	struct:_EFI_USB_IO_PROTOCOL
UsbGetEndpointDescriptor	UsbIo.h	/^  EFI_USB_IO_GET_ENDPOINT_DESCRIPTOR    UsbGetEndpointDescriptor;$/;"	m	struct:_EFI_USB_IO_PROTOCOL
UsbGetInterfaceDescriptor	UsbIo.h	/^  EFI_USB_IO_GET_INTERFACE_DESCRIPTOR   UsbGetInterfaceDescriptor;$/;"	m	struct:_EFI_USB_IO_PROTOCOL
UsbGetStringDescriptor	UsbIo.h	/^  EFI_USB_IO_GET_STRING_DESCRIPTOR      UsbGetStringDescriptor;$/;"	m	struct:_EFI_USB_IO_PROTOCOL
UsbGetSupportedLanguages	UsbIo.h	/^  EFI_USB_IO_GET_SUPPORTED_LANGUAGE     UsbGetSupportedLanguages;$/;"	m	struct:_EFI_USB_IO_PROTOCOL
UsbIsochronousTransfer	UsbIo.h	/^  EFI_USB_IO_ISOCHRONOUS_TRANSFER       UsbIsochronousTransfer;$/;"	m	struct:_EFI_USB_IO_PROTOCOL
UsbLegacy	MmUsbDispatch.h	/^  UsbLegacy,$/;"	e	enum:__anon250
UsbPortReset	UsbIo.h	/^  EFI_USB_IO_PORT_RESET                 UsbPortReset;$/;"	m	struct:_EFI_USB_IO_PROTOCOL
UsbSyncInterruptTransfer	UsbIo.h	/^  EFI_USB_IO_SYNC_INTERRUPT_TRANSFER    UsbSyncInterruptTransfer;$/;"	m	struct:_EFI_USB_IO_PROTOCOL
UsbTransferStatusAborted	UsbFunctionIo.h	/^  UsbTransferStatusAborted,$/;"	e	enum:_EFI_USBFN_TRANSFER_STATUS
UsbTransferStatusActive	UsbFunctionIo.h	/^  UsbTransferStatusActive,$/;"	e	enum:_EFI_USBFN_TRANSFER_STATUS
UsbTransferStatusComplete	UsbFunctionIo.h	/^  UsbTransferStatusComplete,$/;"	e	enum:_EFI_USBFN_TRANSFER_STATUS
UsbTransferStatusNone	UsbFunctionIo.h	/^  UsbTransferStatusNone$/;"	e	enum:_EFI_USBFN_TRANSFER_STATUS
UsbTransferStatusUnknown	UsbFunctionIo.h	/^  UsbTransferStatusUnknown = 0,$/;"	e	enum:_EFI_USBFN_TRANSFER_STATUS
UsbWake	MmUsbDispatch.h	/^  UsbWake$/;"	e	enum:__anon250
UsbWwid	DevicePath.h	/^  USB_WWID_DEVICE_PATH                       *UsbWwid;$/;"	m	union:__anon76
UsbWwid	DevicePath.h	/^  USB_WWID_DEVICE_PATH                       UsbWwid;$/;"	m	union:__anon75
UseBCast	PxeBaseCode.h	/^  BOOLEAN                   UseBCast;$/;"	m	struct:__anon110
UseDefaultAddress	Http.h	/^  BOOLEAN                       UseDefaultAddress;$/;"	m	struct:__anon522
UseDefaultAddress	Ip4.h	/^  BOOLEAN                 UseDefaultAddress;$/;"	m	struct:__anon335
UseDefaultAddress	Tcp4.h	/^  BOOLEAN                 UseDefaultAddress;$/;"	m	struct:__anon317
UseDefaultAddress	Udp4.h	/^  BOOLEAN            UseDefaultAddress;$/;"	m	struct:__anon375
UseDefaultSetting	Dns4.h	/^  BOOLEAN                       UseDefaultSetting;$/;"	m	struct:__anon457
UseDefaultSetting	Ftp4.h	/^  BOOLEAN                              UseDefaultSetting;$/;"	m	struct:__anon443
UseDefaultSetting	Mtftp4.h	/^  BOOLEAN                 UseDefaultSetting;$/;"	m	struct:__anon434
UseMCast	PxeBaseCode.h	/^  BOOLEAN                   UseMCast;$/;"	m	struct:__anon110
UseUCast	PxeBaseCode.h	/^  BOOLEAN                   UseUCast;$/;"	m	struct:__anon110
User	UserCredential.h	/^  EFI_CREDENTIAL_USER           User;$/;"	m	struct:_EFI_USER_CREDENTIAL_PROTOCOL
User	UserCredential2.h	/^  EFI_CREDENTIAL2_USER          User;$/;"	m	struct:_EFI_USER_CREDENTIAL2_PROTOCOL
UserLogoff	EapManagement.h	/^  EFI_EAP_USER_LOGOFF                     UserLogoff;$/;"	m	struct:_EFI_EAP_MANAGEMENT_PROTOCOL
UserLogoff	EapManagement2.h	/^  EFI_EAP_USER_LOGOFF                     UserLogoff;$/;"	m	struct:_EFI_EAP_MANAGEMENT2_PROTOCOL
UserLogon	EapManagement.h	/^  EFI_EAP_USER_LOGON                      UserLogon;$/;"	m	struct:_EFI_EAP_MANAGEMENT_PROTOCOL
UserLogon	EapManagement2.h	/^  EFI_EAP_USER_LOGON                      UserLogon;$/;"	m	struct:_EFI_EAP_MANAGEMENT2_PROTOCOL
UserSecret	AuthenticationInfo.h	/^  UINT8            UserSecret[1];$/;"	m	struct:__anon364
UserSecretLength	AuthenticationInfo.h	/^  UINT16           UserSecretLength;$/;"	m	struct:__anon364
Username	Ftp4.h	/^  UINT8                                *Username;$/;"	m	struct:__anon443
UsingIpv6	PxeBaseCode.h	/^  BOOLEAN                       UsingIpv6;$/;"	m	struct:__anon116
Uuid	DevicePath.h	/^  EFI_GUID Uuid;$/;"	m	struct:__anon51
Uuid	NvdimmLabel.h	/^  EFI_GUID Uuid;$/;"	m	struct:__anon261
Uuid128	BluetoothAttribute.h	/^    UINT8               Uuid128[16];$/;"	m	union:__anon148::__anon149
Uuid16	BluetoothAttribute.h	/^    UINT16              Uuid16;$/;"	m	union:__anon148::__anon149
Uuid32	BluetoothAttribute.h	/^    UINT32              Uuid32;$/;"	m	union:__anon148::__anon149
V0	DebugSupport.h	/^  UINT64  V0[2];$/;"	m	struct:__anon493
V1	DebugSupport.h	/^  UINT64  V1[2];$/;"	m	struct:__anon493
V10	DebugSupport.h	/^  UINT64  V10[2];$/;"	m	struct:__anon493
V11	DebugSupport.h	/^  UINT64  V11[2];$/;"	m	struct:__anon493
V12	DebugSupport.h	/^  UINT64  V12[2];$/;"	m	struct:__anon493
V13	DebugSupport.h	/^  UINT64  V13[2];$/;"	m	struct:__anon493
V14	DebugSupport.h	/^  UINT64  V14[2];$/;"	m	struct:__anon493
V15	DebugSupport.h	/^  UINT64  V15[2];$/;"	m	struct:__anon493
V16	DebugSupport.h	/^  UINT64  V16[2];$/;"	m	struct:__anon493
V17	DebugSupport.h	/^  UINT64  V17[2];$/;"	m	struct:__anon493
V18	DebugSupport.h	/^  UINT64  V18[2];$/;"	m	struct:__anon493
V19	DebugSupport.h	/^  UINT64  V19[2];$/;"	m	struct:__anon493
V2	DebugSupport.h	/^  UINT64  V2[2];$/;"	m	struct:__anon493
V20	DebugSupport.h	/^  UINT64  V20[2];$/;"	m	struct:__anon493
V21	DebugSupport.h	/^  UINT64  V21[2];$/;"	m	struct:__anon493
V22	DebugSupport.h	/^  UINT64  V22[2];$/;"	m	struct:__anon493
V23	DebugSupport.h	/^  UINT64  V23[2];$/;"	m	struct:__anon493
V24	DebugSupport.h	/^  UINT64  V24[2];$/;"	m	struct:__anon493
V25	DebugSupport.h	/^  UINT64  V25[2];$/;"	m	struct:__anon493
V26	DebugSupport.h	/^  UINT64  V26[2];$/;"	m	struct:__anon493
V27	DebugSupport.h	/^  UINT64  V27[2];$/;"	m	struct:__anon493
V28	DebugSupport.h	/^  UINT64  V28[2];$/;"	m	struct:__anon493
V29	DebugSupport.h	/^  UINT64  V29[2];$/;"	m	struct:__anon493
V3	DebugSupport.h	/^  UINT64  V3[2];$/;"	m	struct:__anon493
V30	DebugSupport.h	/^  UINT64  V30[2];$/;"	m	struct:__anon493
V31	DebugSupport.h	/^  UINT64  V31[2];$/;"	m	struct:__anon493
V4	DebugSupport.h	/^  UINT64  V4[2];$/;"	m	struct:__anon493
V5	DebugSupport.h	/^  UINT64  V5[2];$/;"	m	struct:__anon493
V6	DebugSupport.h	/^  UINT64  V6[2];$/;"	m	struct:__anon493
V7	DebugSupport.h	/^  UINT64  V7[2];$/;"	m	struct:__anon493
V8	DebugSupport.h	/^  UINT64  V8[2];$/;"	m	struct:__anon493
V9	DebugSupport.h	/^  UINT64  V9[2];$/;"	m	struct:__anon493
VENDOR_DEFINED_DEVICE_PATH	DevicePath.h	/^typedef VENDOR_DEVICE_PATH        VENDOR_DEFINED_DEVICE_PATH;$/;"	t
VENDOR_DEVICE_PATH	DevicePath.h	/^} VENDOR_DEVICE_PATH;$/;"	t	typeref:struct:__anon28
VLAN_DEVICE_PATH	DevicePath.h	/^} VLAN_DEVICE_PATH;$/;"	t	typeref:struct:__anon62
Valid	IdeControllerInit.h	/^  BOOLEAN      Valid;   \/\/\/< TRUE if Mode is valid.$/;"	m	struct:__anon131
ValidFieldMask	EapManagement.h	/^  UINT8       ValidFieldMask;$/;"	m	struct:_EFI_EAPOL_SUPPLICANT_PAE_CONFIGURATION
ValidLifetime	Dhcp6.h	/^  UINT32                       ValidLifetime;$/;"	m	struct:__anon514
Value	WiFi.h	/^  UINT32                             Value;$/;"	m	struct:__anon206
ValueStr	Mtftp4.h	/^  UINT8                   *ValueStr;$/;"	m	struct:__anon433
ValueStr	Mtftp6.h	/^  UINT8                  *ValueStr;  \/\/\/< Pointer to the null-terminated ASCII MTFTPv6 value string.$/;"	m	struct:__anon560
Vendor	DevicePath.h	/^  VENDOR_DEVICE_PATH                         *Vendor;$/;"	m	union:__anon76
Vendor	DevicePath.h	/^  VENDOR_DEVICE_PATH                         Vendor;$/;"	m	union:__anon75
Vendor	SpiConfiguration.h	/^  CONST CHAR16 *Vendor;$/;"	m	struct:_EFI_SPI_PART
VendorId	DevicePath.h	/^  UINT16                        VendorId;$/;"	m	struct:__anon41
VendorId	DevicePath.h	/^  UINT16                        VendorId;$/;"	m	struct:__anon42
VendorId	NvdimmLabel.h	/^  UINT16 VendorId;$/;"	m	struct:__anon262
VendorRestServiceName	RestEx.h	/^  EFI_GUID                         VendorRestServiceName;$/;"	m	struct:__anon231
VendorSpecifcData	RestEx.h	/^  UINT8                            *VendorSpecifcData;$/;"	m	struct:__anon231
VendorSpecificDataLength	RestEx.h	/^  UINT32                           VendorSpecificDataLength;$/;"	m	struct:__anon231
VendorSpecificInfo	WiFi.h	/^  UINT8                              *VendorSpecificInfo;$/;"	m	struct:__anon189
VendorSpecificInfo	WiFi.h	/^  UINT8                              *VendorSpecificInfo;$/;"	m	struct:__anon201
VendorSpecificInfo	WiFi.h	/^  UINT8                              *VendorSpecificInfo;$/;"	m	struct:__anon205
VendorSpecificInfo	WiFi.h	/^  UINT8                              *VendorSpecificInfo;$/;"	m	struct:__anon207
VendorSpecificInfo	WiFi.h	/^  UINT8                              *VendorSpecificInfo;$/;"	m	struct:__anon209
VendorSpecificInfo	WiFi.h	/^  UINT8                              *VendorSpecificInfo;$/;"	m	struct:__anon211
VendorSpecificInfo	WiFi.h	/^  UINT8                              *VendorSpecificInfo;$/;"	m	struct:__anon212
VendorSpecificInfo	WiFi.h	/^  UINT8                              *VendorSpecificInfo;$/;"	m	struct:__anon214
VerifyBootObject	Bis.h	/^  EFI_BIS_VERIFY_BOOT_OBJECT                          VerifyBootObject;$/;"	m	struct:_EFI_BIS_PROTOCOL
VerifyBuffer	Pkcs7Verify.h	/^  EFI_PKCS7_VERIFY_BUFFER         VerifyBuffer;$/;"	m	struct:_EFI_PKCS7_VERIFY_PROTOCOL
VerifyObjectWithCredential	Bis.h	/^  EFI_BIS_VERIFY_OBJECT_WITH_CREDENTIAL               VerifyObjectWithCredential;$/;"	m	struct:_EFI_BIS_PROTOCOL
VerifyPin	SmartCardEdge.h	/^  EFI_SMART_CARD_EDGE_VERIFY_PIN           VerifyPin;$/;"	m	struct:_EFI_SMART_CARD_EDGE_PROTOCOL
VerifySignature	Pkcs7Verify.h	/^  EFI_PKCS7_VERIFY_SIGNATURE      VerifySignature;$/;"	m	struct:_EFI_PKCS7_VERIFY_PROTOCOL
Version	BluetoothAttribute.h	/^  UINT32                                                     Version;$/;"	m	struct:__anon159
Version	BluetoothAttribute.h	/^  UINT32               Version;$/;"	m	struct:__anon161
Version	BluetoothIo.h	/^  UINT32                      Version;$/;"	m	struct:__anon418
Version	BluetoothLeConfig.h	/^  UINT32                    Version;$/;"	m	struct:__anon563
Version	BluetoothLeConfig.h	/^  UINT32                    Version;$/;"	m	struct:__anon565
Version	DriverBinding.h	/^  UINT32                        Version;$/;"	m	struct:_EFI_DRIVER_BINDING_PROTOCOL
Version	FirmwareManagement.h	/^  UINT32                           Version;$/;"	m	struct:__anon10
Version	GraphicsOutput.h	/^  UINT32                     Version;$/;"	m	struct:__anon237
Version	Ip4.h	/^  UINT8                   Version:4;$/;"	m	struct:__anon339
Version	Ip6.h	/^  UINT8                   Version:4;$/;"	m	struct:_EFI_IP6_HEADER
Version	IsaHc.h	/^  UINT32               Version;$/;"	m	struct:_EFI_ISA_HC_PROTOCOL
Version	SuperIoControl.h	/^  UINT32                  Version;$/;"	m	struct:_EFI_SIO_CONTROL_PROTOCOL
Version	Tcg2Protocol.h	/^  UINT64                  Version;$/;"	m	struct:tdEFI_TCG2_FINAL_EVENTS_TABLE
Version	UgaIo.h	/^  UINT32  Version;$/;"	m	struct:__anon536
Version	WiFi.h	/^  UINT16                             Version;$/;"	m	struct:__anon194
VersionName	FirmwareManagement.h	/^  CHAR16                           *VersionName;$/;"	m	struct:__anon10
VerticalResolution	GraphicsOutput.h	/^  UINT32                     VerticalResolution;$/;"	m	struct:__anon237
VirtualMode	Runtime.h	/^  BOOLEAN                 VirtualMode;  \/\/\/< Boolean that is TRUE if SetVirtualAddressMap() has been called.$/;"	m	struct:_EFI_RUNTIME_ARCH_PROTOCOL
Vlan	DevicePath.h	/^  VLAN_DEVICE_PATH                           *Vlan;$/;"	m	union:__anon76
Vlan	DevicePath.h	/^  VLAN_DEVICE_PATH                           Vlan;$/;"	m	union:__anon75
VlanId	DevicePath.h	/^  UINT16                          VlanId;$/;"	m	struct:__anon62
VlanId	VlanConfig.h	/^  UINT16          VlanId;     \/\/\/< Vlan Identifier.$/;"	m	struct:__anon168
WIFI_DEVICE_PATH	DevicePath.h	/^} WIFI_DEVICE_PATH;$/;"	t	typeref:struct:__anon64
WWN	DevicePath.h	/^  UINT64                          WWN;$/;"	m	struct:__anon37
WWN	DevicePath.h	/^  UINT8                           WWN[8];$/;"	m	struct:__anon38
WaitForInput	AbsolutePointer.h	/^  EFI_EVENT                       WaitForInput;$/;"	m	struct:_EFI_ABSOLUTE_POINTER_PROTOCOL
WaitForInput	SimplePointer.h	/^  EFI_EVENT                     WaitForInput;$/;"	m	struct:_EFI_SIMPLE_POINTER_PROTOCOL
WaitForKey	SimpleTextIn.h	/^  EFI_EVENT           WaitForKey;$/;"	m	struct:_EFI_SIMPLE_TEXT_INPUT_PROTOCOL
WaitForKeyEx	SimpleTextInEx.h	/^  EFI_EVENT                       WaitForKeyEx;$/;"	m	struct:_EFI_SIMPLE_TEXT_INPUT_EX_PROTOCOL
WaitForPacket	SimpleNetwork.h	/^  EFI_EVENT                           WaitForPacket;$/;"	m	struct:_EFI_SIMPLE_NETWORK_PROTOCOL
WaitForProcedure	MmMp.h	/^  EFI_WAIT_FOR_PROCEDURE            WaitForProcedure;$/;"	m	struct:_EFI_MM_MP_PROTOCOL
WaitForTick	Metronome.h	/^  EFI_METRONOME_WAIT_FOR_TICK  WaitForTick;$/;"	m	struct:_EFI_METRONOME_ARCH_PROTOCOL
WhichIde	DiskInfo.h	/^  EFI_DISK_INFO_WHICH_IDE   WhichIde;$/;"	m	struct:_EFI_DISK_INFO_PROTOCOL
WhoAmI	MpService.h	/^  EFI_MP_SERVICES_WHOAMI                    WhoAmI;$/;"	m	struct:_EFI_MP_SERVICES_PROTOCOL
WiFi	DevicePath.h	/^  WIFI_DEVICE_PATH                           *WiFi;$/;"	m	union:__anon76
WiFi	DevicePath.h	/^  WIFI_DEVICE_PATH                           WiFi;$/;"	m	union:__anon75
Width	HiiImage.h	/^  UINT16                          Width;$/;"	m	struct:_EFI_IMAGE_INPUT
Width	HiiImage.h	/^  UINT16  Width;$/;"	m	struct:_EFI_IMAGE_OUTPUT
Write	CpuIo2.h	/^  EFI_CPU_IO_PROTOCOL_IO_MEM  Write;$/;"	m	struct:__anon381
Write	DebugPort.h	/^  EFI_DEBUGPORT_WRITE Write;$/;"	m	struct:_EFI_DEBUGPORT_PROTOCOL
Write	DeviceIo.h	/^  EFI_DEVICE_IO Write;$/;"	m	struct:__anon504
Write	FirmwareVolumeBlock.h	/^  EFI_FVB_WRITE                 Write;$/;"	m	struct:_EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL
Write	MmCpuIo.h	/^  EFI_MM_CPU_IO  Write;$/;"	m	struct:__anon258
Write	PciIo.h	/^  EFI_PCI_IO_PROTOCOL_CONFIG  Write;$/;"	m	struct:__anon23
Write	PciIo.h	/^  EFI_PCI_IO_PROTOCOL_IO_MEM  Write;$/;"	m	struct:__anon22
Write	PciRootBridgeIo.h	/^  EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_IO_MEM  Write;$/;"	m	struct:__anon279
Write	S3SaveState.h	/^  EFI_S3_SAVE_STATE_WRITE   Write;$/;"	m	struct:_EFI_S3_SAVE_STATE_PROTOCOL
Write	SerialIo.h	/^  EFI_SERIAL_WRITE            Write;$/;"	m	struct:_EFI_SERIAL_IO_PROTOCOL
Write	SimpleFileSystem.h	/^  EFI_FILE_WRITE        Write;$/;"	m	struct:_EFI_FILE_PROTOCOL
WriteAuthentication	BluetoothAttribute.h	/^    UINT16  WriteAuthentication : 1;$/;"	m	struct:__anon150::__anon151
WriteAuthorization	BluetoothAttribute.h	/^    UINT16  WriteAuthorization  : 1;$/;"	m	struct:__anon150::__anon151
WriteBlocks	BlockIo.h	/^  EFI_BLOCK_WRITE     WriteBlocks;$/;"	m	struct:_EFI_BLOCK_IO_PROTOCOL
WriteBlocksEx	BlockIo2.h	/^  EFI_BLOCK_WRITE_EX      WriteBlocksEx;$/;"	m	struct:_EFI_BLOCK_IO2_PROTOCOL
WriteBuffer	SpiIo.h	/^  UINT8                    *WriteBuffer;$/;"	m	struct:_EFI_SPI_BUS_TRANSACTION
WriteBytes	SpiIo.h	/^  UINT32                   WriteBytes;$/;"	m	struct:_EFI_SPI_BUS_TRANSACTION
WriteCaching	BlockIo.h	/^  BOOLEAN WriteCaching;$/;"	m	struct:__anon222
WriteData	MmIoTrapDispatch.h	/^  UINT32  WriteData;$/;"	m	struct:__anon101
WriteData	SpiNorFlash.h	/^  EFI_SPI_NOR_FLASH_PROTOCOL_WRITE_DATA   WriteData;$/;"	m	struct:_EFI_SPI_NOR_FLASH_PROTOCOL
WriteDisk	DiskIo.h	/^  EFI_DISK_WRITE  WriteDisk;$/;"	m	struct:_EFI_DISK_IO_PROTOCOL
WriteDiskEx	DiskIo2.h	/^  EFI_DISK_WRITE_EX  WriteDiskEx;$/;"	m	struct:_EFI_DISK_IO2_PROTOCOL
WriteEncryption	BluetoothAttribute.h	/^    UINT16  WriteEncryption     : 1;$/;"	m	struct:__anon150::__anon151
WriteEx	SimpleFileSystem.h	/^  EFI_FILE_WRITE_EX     WriteEx;$/;"	m	struct:_EFI_FILE_PROTOCOL
WriteExtended	BlockIoCrypto.h	/^  EFI_BLOCK_IO_CRYPTO_WRITE_EXTENDED        WriteExtended;$/;"	m	struct:_EFI_BLOCK_IO_CRYPTO_PROTOCOL
WriteFile	FirmwareVolume2.h	/^  EFI_FV_WRITE_FILE       WriteFile;$/;"	m	struct:_EFI_FIRMWARE_VOLUME2_PROTOCOL
WriteFile	Ftp4.h	/^  EFI_FTP4_WRITE_FILE        WriteFile;$/;"	m	struct:_EFI_FTP4_PROTOCOL
WriteFile	Mtftp4.h	/^  EFI_MTFTP4_WRITE_FILE        WriteFile;$/;"	m	struct:_EFI_MTFTP4_PROTOCOL
WriteFile	Mtftp6.h	/^  EFI_MTFTP6_WRITE_FILE     WriteFile;$/;"	m	struct:_EFI_MTFTP6_PROTOCOL
WriteFile	Shell.h	/^  EFI_SHELL_WRITE_FILE                      WriteFile;$/;"	m	struct:_EFI_SHELL_PROTOCOL
WriteKeySize	BluetoothAttribute.h	/^    UINT16  WriteKeySize        : 5;$/;"	m	struct:__anon150::__anon151
WriteSaveState	MmCpu.h	/^  EFI_MM_WRITE_SAVE_STATE  WriteSaveState;$/;"	m	struct:_EFI_MM_CPU_PROTOCOL
WriteStatus	SpiNorFlash.h	/^  EFI_SPI_NOR_FLASH_PROTOCOL_WRITE_STATUS WriteStatus;$/;"	m	struct:_EFI_SPI_NOR_FLASH_PROTOCOL
WriteStatusPrefix	LegacySpiController.h	/^  EFI_LEGACY_SPI_CONTROLLER_PROTOCOL_WRITE_STATUS_PREFIX WriteStatusPrefix;$/;"	m	struct:_EFI_LEGACY_SPI_CONTROLLER_PROTOCOL
WriteTrap	MmIoTrapDispatch.h	/^  WriteTrap,$/;"	e	enum:__anon99
Writeable	BluetoothAttribute.h	/^    UINT16  Writeable           : 1;$/;"	m	struct:__anon150::__anon151
Wrq	Mtftp4.h	/^  EFI_MTFTP4_REQ_HEADER   Wrq;$/;"	m	union:__anon432
Wrq	Mtftp6.h	/^  EFI_MTFTP6_REQ_HEADER    Wrq;    \/\/\/< write request packet header.$/;"	m	union:__anon556
X0	DebugSupport.h	/^  UINT64  X0;$/;"	m	struct:__anon493
X0	DebugSupport.h	/^  UINT64  X0;$/;"	m	struct:__anon494
X1	DebugSupport.h	/^  UINT64  X1;$/;"	m	struct:__anon493
X1	DebugSupport.h	/^  UINT64  X1;$/;"	m	struct:__anon494
X10	DebugSupport.h	/^  UINT64  X10;$/;"	m	struct:__anon493
X10	DebugSupport.h	/^  UINT64  X10;$/;"	m	struct:__anon494
X11	DebugSupport.h	/^  UINT64  X11;$/;"	m	struct:__anon493
X11	DebugSupport.h	/^  UINT64  X11;$/;"	m	struct:__anon494
X12	DebugSupport.h	/^  UINT64  X12;$/;"	m	struct:__anon493
X12	DebugSupport.h	/^  UINT64  X12;$/;"	m	struct:__anon494
X13	DebugSupport.h	/^  UINT64  X13;$/;"	m	struct:__anon493
X13	DebugSupport.h	/^  UINT64  X13;$/;"	m	struct:__anon494
X14	DebugSupport.h	/^  UINT64  X14;$/;"	m	struct:__anon493
X14	DebugSupport.h	/^  UINT64  X14;$/;"	m	struct:__anon494
X15	DebugSupport.h	/^  UINT64  X15;$/;"	m	struct:__anon493
X15	DebugSupport.h	/^  UINT64  X15;$/;"	m	struct:__anon494
X16	DebugSupport.h	/^  UINT64  X16;$/;"	m	struct:__anon493
X16	DebugSupport.h	/^  UINT64  X16;$/;"	m	struct:__anon494
X17	DebugSupport.h	/^  UINT64  X17;$/;"	m	struct:__anon493
X17	DebugSupport.h	/^  UINT64  X17;$/;"	m	struct:__anon494
X18	DebugSupport.h	/^  UINT64  X18;$/;"	m	struct:__anon493
X18	DebugSupport.h	/^  UINT64  X18;$/;"	m	struct:__anon494
X19	DebugSupport.h	/^  UINT64  X19;$/;"	m	struct:__anon493
X19	DebugSupport.h	/^  UINT64  X19;$/;"	m	struct:__anon494
X2	DebugSupport.h	/^  UINT64  X2;$/;"	m	struct:__anon493
X2	DebugSupport.h	/^  UINT64  X2;$/;"	m	struct:__anon494
X20	DebugSupport.h	/^  UINT64  X20;$/;"	m	struct:__anon493
X20	DebugSupport.h	/^  UINT64  X20;$/;"	m	struct:__anon494
X21	DebugSupport.h	/^  UINT64  X21;$/;"	m	struct:__anon493
X21	DebugSupport.h	/^  UINT64  X21;$/;"	m	struct:__anon494
X22	DebugSupport.h	/^  UINT64  X22;$/;"	m	struct:__anon493
X22	DebugSupport.h	/^  UINT64  X22;$/;"	m	struct:__anon494
X23	DebugSupport.h	/^  UINT64  X23;$/;"	m	struct:__anon493
X23	DebugSupport.h	/^  UINT64  X23;$/;"	m	struct:__anon494
X24	DebugSupport.h	/^  UINT64  X24;$/;"	m	struct:__anon493
X24	DebugSupport.h	/^  UINT64  X24;$/;"	m	struct:__anon494
X25	DebugSupport.h	/^  UINT64  X25;$/;"	m	struct:__anon493
X25	DebugSupport.h	/^  UINT64  X25;$/;"	m	struct:__anon494
X26	DebugSupport.h	/^  UINT64  X26;$/;"	m	struct:__anon493
X26	DebugSupport.h	/^  UINT64  X26;$/;"	m	struct:__anon494
X27	DebugSupport.h	/^  UINT64  X27;$/;"	m	struct:__anon493
X27	DebugSupport.h	/^  UINT64  X27;$/;"	m	struct:__anon494
X28	DebugSupport.h	/^  UINT64  X28;$/;"	m	struct:__anon493
X28	DebugSupport.h	/^  UINT64  X28;$/;"	m	struct:__anon494
X29	DebugSupport.h	/^  UINT64  X29;$/;"	m	struct:__anon494
X3	DebugSupport.h	/^  UINT64  X3;$/;"	m	struct:__anon493
X3	DebugSupport.h	/^  UINT64  X3;$/;"	m	struct:__anon494
X30	DebugSupport.h	/^  UINT64  X30;$/;"	m	struct:__anon494
X31	DebugSupport.h	/^  UINT64  X31;$/;"	m	struct:__anon494
X4	DebugSupport.h	/^  UINT64  X4;$/;"	m	struct:__anon493
X4	DebugSupport.h	/^  UINT64  X4;$/;"	m	struct:__anon494
X5	DebugSupport.h	/^  UINT64  X5;$/;"	m	struct:__anon493
X5	DebugSupport.h	/^  UINT64  X5;$/;"	m	struct:__anon494
X6	DebugSupport.h	/^  UINT64  X6;$/;"	m	struct:__anon493
X6	DebugSupport.h	/^  UINT64  X6;$/;"	m	struct:__anon494
X7	DebugSupport.h	/^  UINT64  X7;$/;"	m	struct:__anon493
X7	DebugSupport.h	/^  UINT64  X7;$/;"	m	struct:__anon494
X8	DebugSupport.h	/^  UINT64  X8;$/;"	m	struct:__anon493
X8	DebugSupport.h	/^  UINT64  X8;$/;"	m	struct:__anon494
X9	DebugSupport.h	/^  UINT64  X9;$/;"	m	struct:__anon493
X9	DebugSupport.h	/^  UINT64  X9;$/;"	m	struct:__anon494
Xid	Dhcp4.h	/^  UINT32            Xid;$/;"	m	struct:__anon137
Xmm0	DebugSupport.h	/^  UINT8   Xmm0[16];$/;"	m	struct:__anon486
Xmm0	DebugSupport.h	/^  UINT8   Xmm0[16];$/;"	m	struct:__anon488
Xmm1	DebugSupport.h	/^  UINT8   Xmm1[16];$/;"	m	struct:__anon486
Xmm1	DebugSupport.h	/^  UINT8   Xmm1[16];$/;"	m	struct:__anon488
Xmm2	DebugSupport.h	/^  UINT8   Xmm2[16];$/;"	m	struct:__anon486
Xmm2	DebugSupport.h	/^  UINT8   Xmm2[16];$/;"	m	struct:__anon488
Xmm3	DebugSupport.h	/^  UINT8   Xmm3[16];$/;"	m	struct:__anon486
Xmm3	DebugSupport.h	/^  UINT8   Xmm3[16];$/;"	m	struct:__anon488
Xmm4	DebugSupport.h	/^  UINT8   Xmm4[16];$/;"	m	struct:__anon486
Xmm4	DebugSupport.h	/^  UINT8   Xmm4[16];$/;"	m	struct:__anon488
Xmm5	DebugSupport.h	/^  UINT8   Xmm5[16];$/;"	m	struct:__anon486
Xmm5	DebugSupport.h	/^  UINT8   Xmm5[16];$/;"	m	struct:__anon488
Xmm6	DebugSupport.h	/^  UINT8   Xmm6[16];$/;"	m	struct:__anon486
Xmm6	DebugSupport.h	/^  UINT8   Xmm6[16];$/;"	m	struct:__anon488
Xmm7	DebugSupport.h	/^  UINT8   Xmm7[16];$/;"	m	struct:__anon486
Xmm7	DebugSupport.h	/^  UINT8   Xmm7[16];$/;"	m	struct:__anon488
YourAddr	Dhcp4.h	/^  EFI_IPv4_ADDRESS  YourAddr;         \/\/\/< Client IP address from server.$/;"	m	struct:__anon137
_DXE_MM_READY_TO_LOCK_H_	DxeMmReadyToLock.h	10;"	d
_DXE_SMM_READY_TO_LOCK_H_	DxeSmmReadyToLock.h	26;"	d
_EFI_ABSOLUTE_POINTER_PROTOCOL	AbsolutePointer.h	/^struct _EFI_ABSOLUTE_POINTER_PROTOCOL {$/;"	s
_EFI_ACPI_SDT_PROTOCOL	AcpiSystemDescriptionTable.h	/^typedef struct _EFI_ACPI_SDT_PROTOCOL {$/;"	s
_EFI_ACPI_TABLE_PROTOCOL	AcpiTable.h	/^struct _EFI_ACPI_TABLE_PROTOCOL {$/;"	s
_EFI_ADAPTER_INFORMATION_PROTOCOL	AdapterInformation.h	/^struct _EFI_ADAPTER_INFORMATION_PROTOCOL {$/;"	s
_EFI_ARP_PROTOCOL	Arp.h	/^struct _EFI_ARP_PROTOCOL {$/;"	s
_EFI_ATA_COMMAND_BLOCK	AtaPassThru.h	/^typedef struct _EFI_ATA_COMMAND_BLOCK {$/;"	s
_EFI_ATA_PASS_THRU_PROTOCOL	AtaPassThru.h	/^struct _EFI_ATA_PASS_THRU_PROTOCOL {$/;"	s
_EFI_ATA_STATUS_BLOCK	AtaPassThru.h	/^typedef struct _EFI_ATA_STATUS_BLOCK {$/;"	s
_EFI_AUTHENTICATION_INFO_PROTOCOL	AuthenticationInfo.h	/^struct _EFI_AUTHENTICATION_INFO_PROTOCOL {$/;"	s
_EFI_BDS_ARCH_PROTOCOL	Bds.h	/^struct _EFI_BDS_ARCH_PROTOCOL {$/;"	s
_EFI_BIS_PROTOCOL	Bis.h	/^struct _EFI_BIS_PROTOCOL {$/;"	s
_EFI_BLOCK_IO2_PROTOCOL	BlockIo2.h	/^struct _EFI_BLOCK_IO2_PROTOCOL {$/;"	s
_EFI_BLOCK_IO_CRYPTO_PROTOCOL	BlockIoCrypto.h	/^struct _EFI_BLOCK_IO_CRYPTO_PROTOCOL {$/;"	s
_EFI_BLOCK_IO_PROTOCOL	BlockIo.h	/^struct _EFI_BLOCK_IO_PROTOCOL {$/;"	s
_EFI_BLUETOOTH_ATTRIBUTE_PROTOCOL	BluetoothAttribute.h	/^struct _EFI_BLUETOOTH_ATTRIBUTE_PROTOCOL {$/;"	s
_EFI_BLUETOOTH_CONFIG_PROTOCOL	BluetoothConfig.h	/^struct _EFI_BLUETOOTH_CONFIG_PROTOCOL {$/;"	s
_EFI_BLUETOOTH_HC_PROTOCOL	BluetoothHc.h	/^struct _EFI_BLUETOOTH_HC_PROTOCOL {$/;"	s
_EFI_BLUETOOTH_IO_PROTOCOL	BluetoothIo.h	/^struct _EFI_BLUETOOTH_IO_PROTOCOL {$/;"	s
_EFI_BLUETOOTH_LE_CONFIG_PROTOCOL	BluetoothLeConfig.h	/^struct _EFI_BLUETOOTH_LE_CONFIG_PROTOCOL {$/;"	s
_EFI_BOOT_MANAGER_POLICY_PROTOCOL	BootManagerPolicy.h	/^struct _EFI_BOOT_MANAGER_POLICY_PROTOCOL {$/;"	s
_EFI_BUS_SPECIFIC_DRIVER_OVERRIDE_PROTOCOL	BusSpecificDriverOverride.h	/^struct _EFI_BUS_SPECIFIC_DRIVER_OVERRIDE_PROTOCOL {$/;"	s
_EFI_BUS_SPECIFIC_DRIVER_OVERRIDE_PROTOCOL_H_	BusSpecificDriverOverride.h	15;"	d
_EFI_COMPONENT_NAME2_PROTOCOL	ComponentName2.h	/^struct _EFI_COMPONENT_NAME2_PROTOCOL {$/;"	s
_EFI_COMPONENT_NAME_PROTOCOL	ComponentName.h	/^struct _EFI_COMPONENT_NAME_PROTOCOL {$/;"	s
_EFI_CONFIG_KEYWORD_HANDLER_PROTOCOL	HiiConfigKeyword.h	/^struct _EFI_CONFIG_KEYWORD_HANDLER_PROTOCOL {$/;"	s
_EFI_CPU_ARCH_PROTOCOL	Cpu.h	/^struct _EFI_CPU_ARCH_PROTOCOL {$/;"	s
_EFI_CPU_IO2_PROTOCOL	CpuIo2.h	/^struct _EFI_CPU_IO2_PROTOCOL {$/;"	s
_EFI_DEBUGPORT_PROTOCOL	DebugPort.h	/^struct _EFI_DEBUGPORT_PROTOCOL {$/;"	s
_EFI_DEBUG_SUPPORT_PROTOCOL	DebugSupport.h	/^struct _EFI_DEBUG_SUPPORT_PROTOCOL {$/;"	s
_EFI_DECOMPRESS_PROTOCOL	Decompress.h	/^struct _EFI_DECOMPRESS_PROTOCOL {$/;"	s
_EFI_DEFERRED_IMAGE_LOAD_PROTOCOL	DeferredImageLoad.h	/^struct _EFI_DEFERRED_IMAGE_LOAD_PROTOCOL {$/;"	s
_EFI_DEVICE_IO_PROTOCOL	DeviceIo.h	/^struct _EFI_DEVICE_IO_PROTOCOL {$/;"	s
_EFI_DHCP4_PROTOCOL	Dhcp4.h	/^struct _EFI_DHCP4_PROTOCOL {$/;"	s
_EFI_DHCP6_PROTOCOL	Dhcp6.h	/^struct _EFI_DHCP6_PROTOCOL {$/;"	s
_EFI_DISK_INFO_PROTOCOL	DiskInfo.h	/^struct _EFI_DISK_INFO_PROTOCOL {$/;"	s
_EFI_DISK_IO2_PROTOCOL	DiskIo2.h	/^struct _EFI_DISK_IO2_PROTOCOL {$/;"	s
_EFI_DISK_IO_PROTOCOL	DiskIo.h	/^struct _EFI_DISK_IO_PROTOCOL {$/;"	s
_EFI_DNS4_PROTOCOL	Dns4.h	/^struct _EFI_DNS4_PROTOCOL {$/;"	s
_EFI_DNS6_PROTOCOL	Dns6.h	/^struct _EFI_DNS6_PROTOCOL {$/;"	s
_EFI_DRIVER_BINDING_PROTOCOL	DriverBinding.h	/^struct _EFI_DRIVER_BINDING_PROTOCOL {$/;"	s
_EFI_DRIVER_CONFIGURATION2_PROTOCOL	DriverConfiguration2.h	/^struct _EFI_DRIVER_CONFIGURATION2_PROTOCOL {$/;"	s
_EFI_DRIVER_CONFIGURATION_PROTOCOL	DriverConfiguration.h	/^struct _EFI_DRIVER_CONFIGURATION_PROTOCOL {$/;"	s
_EFI_DRIVER_DIAGNOSTICS2_PROTOCOL	DriverDiagnostics2.h	/^struct _EFI_DRIVER_DIAGNOSTICS2_PROTOCOL {$/;"	s
_EFI_DRIVER_DIAGNOSTICS_PROTOCOL	DriverDiagnostics.h	/^struct _EFI_DRIVER_DIAGNOSTICS_PROTOCOL {$/;"	s
_EFI_DRIVER_FAMILY_OVERRIDE_PROTOCOL	DriverFamilyOverride.h	/^struct _EFI_DRIVER_FAMILY_OVERRIDE_PROTOCOL {$/;"	s
_EFI_DRIVER_HEALTH_PROTOCOL	DriverHealth.h	/^struct _EFI_DRIVER_HEALTH_PROTOCOL {$/;"	s
_EFI_DRIVER_SUPPORTED_EFI_VERSION_PROTOCOL	DriverSupportedEfiVersion.h	/^typedef struct _EFI_DRIVER_SUPPORTED_EFI_VERSION_PROTOCOL {$/;"	s
_EFI_EAPOL_PORT_INFO	EapManagement.h	/^typedef struct _EFI_EAPOL_PORT_INFO {$/;"	s
_EFI_EAPOL_SUPPLICANT_PAE_CONFIGURATION	EapManagement.h	/^typedef struct _EFI_EAPOL_SUPPLICANT_PAE_CONFIGURATION {$/;"	s
_EFI_EAPOL_SUPPLICANT_PAE_STATE	EapManagement.h	/^typedef enum _EFI_EAPOL_SUPPLICANT_PAE_STATE {$/;"	g
_EFI_EAPOL_SUPPLICANT_PAE_STATISTICS	EapManagement.h	/^typedef struct _EFI_EAPOL_SUPPLICANT_PAE_STATISTICS {$/;"	s
_EFI_EAP_CONFIGURATION_PROTOCOL	EapConfiguration.h	/^struct _EFI_EAP_CONFIGURATION_PROTOCOL {$/;"	s
_EFI_EAP_MANAGEMENT2_PROTOCOL	EapManagement2.h	/^struct _EFI_EAP_MANAGEMENT2_PROTOCOL {$/;"	s
_EFI_EAP_MANAGEMENT_PROTOCOL	EapManagement.h	/^struct _EFI_EAP_MANAGEMENT_PROTOCOL {$/;"	s
_EFI_EAP_PROTOCOL	Eap.h	/^struct _EFI_EAP_PROTOCOL {$/;"	s
_EFI_EBC_PROTOCOL	Ebc.h	/^struct _EFI_EBC_PROTOCOL {$/;"	s
_EFI_EDID_OVERRIDE_PROTOCOL	EdidOverride.h	/^struct _EFI_EDID_OVERRIDE_PROTOCOL {$/;"	s
_EFI_ERASE_BLOCK_PROTOCOL	EraseBlock.h	/^struct _EFI_ERASE_BLOCK_PROTOCOL {$/;"	s
_EFI_EXT_SCSI_PASS_THRU_PROTOCOL	ScsiPassThruExt.h	/^struct _EFI_EXT_SCSI_PASS_THRU_PROTOCOL {$/;"	s
_EFI_FILE_PROTOCOL	SimpleFileSystem.h	/^struct _EFI_FILE_PROTOCOL {$/;"	s
_EFI_FIRMWARE_MANAGEMENT_PROTOCOL	FirmwareManagement.h	/^struct _EFI_FIRMWARE_MANAGEMENT_PROTOCOL {$/;"	s
_EFI_FIRMWARE_VOLUME2_PROTOCOL	FirmwareVolume2.h	/^struct _EFI_FIRMWARE_VOLUME2_PROTOCOL {$/;"	s
_EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL	FirmwareVolumeBlock.h	/^struct _EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL{$/;"	s
_EFI_FONT_DISPLAY_INFO	HiiFont.h	/^typedef struct _EFI_FONT_DISPLAY_INFO {$/;"	s
_EFI_FORM_BROWSER2_PROTOCOL	FormBrowser2.h	/^struct _EFI_FORM_BROWSER2_PROTOCOL {$/;"	s
_EFI_FTP4_COMMAND_TOKEN	Ftp4.h	/^struct _EFI_FTP4_COMMAND_TOKEN {$/;"	s
_EFI_FTP4_PROTOCOL	Ftp4.h	/^struct _EFI_FTP4_PROTOCOL {$/;"	s
_EFI_GET_PCD_INFO_PROTOCOL	PiPcdInfo.h	/^struct _EFI_GET_PCD_INFO_PROTOCOL {$/;"	s
_EFI_GRAPHICS_OUTPUT_PROTOCOL	GraphicsOutput.h	/^struct _EFI_GRAPHICS_OUTPUT_PROTOCOL {$/;"	s
_EFI_GUIDED_SECTION_EXTRACTION_PROTOCOL	GuidedSectionExtraction.h	/^struct _EFI_GUIDED_SECTION_EXTRACTION_PROTOCOL {$/;"	s
_EFI_HASH2_PROTOCOL	Hash2.h	/^struct _EFI_HASH2_PROTOCOL {$/;"	s
_EFI_HASH_PROTOCOL	Hash.h	/^struct _EFI_HASH_PROTOCOL {$/;"	s
_EFI_HII_CONFIG_ACCESS_PROTOCOL	HiiConfigAccess.h	/^struct _EFI_HII_CONFIG_ACCESS_PROTOCOL {$/;"	s
_EFI_HII_CONFIG_ROUTING_PROTOCOL	HiiConfigRouting.h	/^struct _EFI_HII_CONFIG_ROUTING_PROTOCOL {$/;"	s
_EFI_HII_DATABASE_PROTOCOL	HiiDatabase.h	/^struct _EFI_HII_DATABASE_PROTOCOL {$/;"	s
_EFI_HII_FONT_PROTOCOL	HiiFont.h	/^struct _EFI_HII_FONT_PROTOCOL {$/;"	s
_EFI_HII_IMAGE_DECODER_IMAGE_INFO_HEADER	HiiImageDecoder.h	/^typedef struct _EFI_HII_IMAGE_DECODER_IMAGE_INFO_HEADER {$/;"	s
_EFI_HII_IMAGE_DECODER_JPEG_INFO	HiiImageDecoder.h	/^typedef struct _EFI_HII_IMAGE_DECODER_JPEG_INFO {$/;"	s
_EFI_HII_IMAGE_DECODER_OTHER_INFO	HiiImageDecoder.h	/^typedef struct _EFI_HII_IMAGE_DECODER_OTHER_INFO {$/;"	s
_EFI_HII_IMAGE_DECODER_PNG_INFO	HiiImageDecoder.h	/^typedef struct _EFI_HII_IMAGE_DECODER_PNG_INFO {$/;"	s
_EFI_HII_IMAGE_DECODER_PROTOCOL	HiiImageDecoder.h	/^struct _EFI_HII_IMAGE_DECODER_PROTOCOL {$/;"	s
_EFI_HII_IMAGE_EX_PROTOCOL	HiiImageEx.h	/^struct _EFI_HII_IMAGE_EX_PROTOCOL {$/;"	s
_EFI_HII_IMAGE_PROTOCOL	HiiImage.h	/^struct _EFI_HII_IMAGE_PROTOCOL {$/;"	s
_EFI_HII_POPUP_PROTOCOL	HiiPopup.h	/^typedef struct _EFI_HII_POPUP_PROTOCOL {$/;"	s
_EFI_HII_ROW_INFO	HiiFont.h	/^typedef struct _EFI_HII_ROW_INFO {$/;"	s
_EFI_HII_STRING_PROTOCOL	HiiString.h	/^struct _EFI_HII_STRING_PROTOCOL {$/;"	s
_EFI_HTTP_BOOT_CALLBACK_PROTOCOL	HttpBootCallback.h	/^struct _EFI_HTTP_BOOT_CALLBACK_PROTOCOL {$/;"	s
_EFI_HTTP_PROTOCOL	Http.h	/^struct _EFI_HTTP_PROTOCOL {$/;"	s
_EFI_HTTP_UTILITIES_PROTOCOL	HttpUtilities.h	/^struct _EFI_HTTP_UTILITIES_PROTOCOL {$/;"	s
_EFI_I2C_BUS_CONFIGURATION_MANAGEMENT_PROTOCOL	I2cBusConfigurationManagement.h	/^struct _EFI_I2C_BUS_CONFIGURATION_MANAGEMENT_PROTOCOL {$/;"	s
_EFI_I2C_ENUMERATE_PROTOCOL	I2cEnumerate.h	/^struct _EFI_I2C_ENUMERATE_PROTOCOL {$/;"	s
_EFI_I2C_HOST_PROTOCOL	I2cHost.h	/^struct _EFI_I2C_HOST_PROTOCOL {$/;"	s
_EFI_I2C_IO_PROTOCOL	I2cIo.h	/^struct _EFI_I2C_IO_PROTOCOL {$/;"	s
_EFI_I2C_MASTER_PROTOCOL	I2cMaster.h	/^struct _EFI_I2C_MASTER_PROTOCOL {$/;"	s
_EFI_IDE_CONTROLLER_INIT_PROTOCOL	IdeControllerInit.h	/^struct _EFI_IDE_CONTROLLER_INIT_PROTOCOL {$/;"	s
_EFI_IDE_CONTROLLER_INIT_PROTOCOL_H_	IdeControllerInit.h	26;"	d
_EFI_IMAGE_INPUT	HiiImage.h	/^typedef struct _EFI_IMAGE_INPUT {$/;"	s
_EFI_IMAGE_OUTPUT	HiiImage.h	/^typedef struct _EFI_IMAGE_OUTPUT {$/;"	s
_EFI_INCOMPATIBLE_PCI_DEVICE_SUPPORT_PROTOCOL	IncompatiblePciDeviceSupport.h	/^struct _EFI_INCOMPATIBLE_PCI_DEVICE_SUPPORT_PROTOCOL {$/;"	s
_EFI_IP4_CONFIG2_PROTOCOL	Ip4Config2.h	/^struct _EFI_IP4_CONFIG2_PROTOCOL {$/;"	s
_EFI_IP4_CONFIG_PROTOCOL	Ip4Config.h	/^struct _EFI_IP4_CONFIG_PROTOCOL {$/;"	s
_EFI_IP4_PROTOCOL	Ip4.h	/^struct _EFI_IP4_PROTOCOL {$/;"	s
_EFI_IP6_CONFIG_PROTOCOL	Ip6Config.h	/^struct _EFI_IP6_CONFIG_PROTOCOL {$/;"	s
_EFI_IP6_FRAGMENT_DATA	Ip6.h	/^typedef struct _EFI_IP6_FRAGMENT_DATA {$/;"	s
_EFI_IP6_HEADER	Ip6.h	/^typedef struct _EFI_IP6_HEADER {$/;"	s
_EFI_IP6_OVERRIDE_DATA	Ip6.h	/^typedef struct _EFI_IP6_OVERRIDE_DATA {$/;"	s
_EFI_IP6_PROTOCOL	Ip6.h	/^struct _EFI_IP6_PROTOCOL {$/;"	s
_EFI_IP6_RECEIVE_DATA	Ip6.h	/^typedef struct _EFI_IP6_RECEIVE_DATA {$/;"	s
_EFI_IP6_TRANSMIT_DATA	Ip6.h	/^typedef struct _EFI_IP6_TRANSMIT_DATA {$/;"	s
_EFI_IPSEC2_PROTOCOL	IpSec.h	/^struct _EFI_IPSEC2_PROTOCOL {$/;"	s
_EFI_IPSEC_AH_ALGO_INFO	IpSecConfig.h	/^typedef struct _EFI_IPSEC_AH_ALGO_INFO {$/;"	s
_EFI_IPSEC_CONFIG_PROTOCOL	IpSecConfig.h	/^struct _EFI_IPSEC_CONFIG_PROTOCOL {$/;"	s
_EFI_IPSEC_ESP_ALGO_INFO	IpSecConfig.h	/^typedef struct _EFI_IPSEC_ESP_ALGO_INFO {$/;"	s
_EFI_IPSEC_FRAGMENT_DATA	IpSec.h	/^typedef struct _EFI_IPSEC_FRAGMENT_DATA {$/;"	s
_EFI_IPSEC_PAD_DATA	IpSecConfig.h	/^typedef struct _EFI_IPSEC_PAD_DATA {$/;"	s
_EFI_IPSEC_PAD_ID	IpSecConfig.h	/^typedef struct _EFI_IPSEC_PAD_ID {$/;"	s
_EFI_IPSEC_PROCESS_POLICY	IpSecConfig.h	/^typedef struct _EFI_IPSEC_PROCESS_POLICY {$/;"	s
_EFI_IPSEC_PROTOCOL	IpSec.h	/^struct _EFI_IPSEC_PROTOCOL {$/;"	s
_EFI_IPSEC_SA_DATA	IpSecConfig.h	/^typedef struct _EFI_IPSEC_SA_DATA {$/;"	s
_EFI_IPSEC_SA_DATA2	IpSecConfig.h	/^typedef struct _EFI_IPSEC_SA_DATA2 {$/;"	s
_EFI_IPSEC_SA_ID	IpSecConfig.h	/^typedef struct _EFI_IPSEC_SA_ID {$/;"	s
_EFI_IPSEC_SA_LIFETIME	IpSecConfig.h	/^typedef struct _EFI_IPSEC_SA_LIFETIME {$/;"	s
_EFI_IPSEC_SPD_DATA	IpSecConfig.h	/^typedef struct _EFI_IPSEC_SPD_DATA {$/;"	s
_EFI_IPSEC_SPD_SELECTOR	IpSecConfig.h	/^typedef struct _EFI_IPSEC_SPD_SELECTOR {$/;"	s
_EFI_IPSEC_TUNNEL_OPTION	IpSecConfig.h	/^typedef struct _EFI_IPSEC_TUNNEL_OPTION {$/;"	s
_EFI_IP_ADDRESS_INFO	IpSecConfig.h	/^typedef struct _EFI_IP_ADDRESS_INFO {$/;"	s
_EFI_ISA_HC_PROTOCOL	IsaHc.h	/^struct _EFI_ISA_HC_PROTOCOL {$/;"	s
_EFI_ISCSI_INITIATOR_NAME_PROTOCOL	IScsiInitiatorName.h	/^struct _EFI_ISCSI_INITIATOR_NAME_PROTOCOL {$/;"	s
_EFI_KEY_STATE	SimpleTextInEx.h	/^typedef struct _EFI_KEY_STATE {$/;"	s
_EFI_KMS_PROTOCOL	Kms.h	/^struct _EFI_KMS_PROTOCOL {$/;"	s
_EFI_LEGACY_REGION2_PROTOCOL	LegacyRegion2.h	/^struct _EFI_LEGACY_REGION2_PROTOCOL {$/;"	s
_EFI_LEGACY_SPI_CONTROLLER_PROTOCOL	LegacySpiController.h	/^struct _EFI_LEGACY_SPI_CONTROLLER_PROTOCOL {$/;"	s
_EFI_LEGACY_SPI_FLASH_PROTOCOL	LegacySpiFlash.h	/^struct _EFI_LEGACY_SPI_FLASH_PROTOCOL {$/;"	s
_EFI_LOAD_FILE2_PROTOCOL	LoadFile2.h	/^struct _EFI_LOAD_FILE2_PROTOCOL {$/;"	s
_EFI_LOAD_FILE_PROTOCOL	LoadFile.h	/^struct _EFI_LOAD_FILE_PROTOCOL {$/;"	s
_EFI_MANAGED_NETWORK_PROTOCOL	ManagedNetwork.h	/^struct _EFI_MANAGED_NETWORK_PROTOCOL {$/;"	s
_EFI_METRONOME_ARCH_PROTOCOL	Metronome.h	/^struct _EFI_METRONOME_ARCH_PROTOCOL {$/;"	s
_EFI_MM_ACCESS_PROTOCOL	MmAccess.h	/^struct _EFI_MM_ACCESS_PROTOCOL {$/;"	s
_EFI_MM_BASE_PROTOCOL	MmBase.h	/^struct _EFI_MM_BASE_PROTOCOL {$/;"	s
_EFI_MM_COMMUNICATION2_PROTOCOL	MmCommunication2.h	/^struct _EFI_MM_COMMUNICATION2_PROTOCOL {$/;"	s
_EFI_MM_COMMUNICATION_PROTOCOL	MmCommunication.h	/^struct _EFI_MM_COMMUNICATION_PROTOCOL {$/;"	s
_EFI_MM_CONFIGURATION_PROTOCOL	MmConfiguration.h	/^struct _EFI_MM_CONFIGURATION_PROTOCOL {$/;"	s
_EFI_MM_CONTROL_PROTOCOL	MmControl.h	/^struct _EFI_MM_CONTROL_PROTOCOL {$/;"	s
_EFI_MM_CPU_IO_PROTOCOL	MmCpuIo.h	/^struct _EFI_MM_CPU_IO_PROTOCOL {$/;"	s
_EFI_MM_CPU_PROTOCOL	MmCpu.h	/^struct _EFI_MM_CPU_PROTOCOL {$/;"	s
_EFI_MM_GPI_DISPATCH_PROTOCOL	MmGpiDispatch.h	/^struct _EFI_MM_GPI_DISPATCH_PROTOCOL {$/;"	s
_EFI_MM_IO_TRAP_DISPATCH_PROTOCOL	MmIoTrapDispatch.h	/^struct _EFI_MM_IO_TRAP_DISPATCH_PROTOCOL {$/;"	s
_EFI_MM_MP_PROTOCOL	MmMp.h	/^struct _EFI_MM_MP_PROTOCOL {$/;"	s
_EFI_MM_PERIODIC_TIMER_DISPATCH_PROTOCOL	MmPeriodicTimerDispatch.h	/^struct _EFI_MM_PERIODIC_TIMER_DISPATCH_PROTOCOL {$/;"	s
_EFI_MM_POWER_BUTTON_DISPATCH_PROTOCOL	MmPowerButtonDispatch.h	/^struct _EFI_MM_POWER_BUTTON_DISPATCH_PROTOCOL {$/;"	s
_EFI_MM_RESERVED_MMRAM_REGION	MmConfiguration.h	/^typedef struct _EFI_MM_RESERVED_MMRAM_REGION {$/;"	s
_EFI_MM_RSC_HANDLER_PROTOCOL	MmReportStatusCodeHandler.h	/^typedef struct _EFI_MM_RSC_HANDLER_PROTOCOL {$/;"	s
_EFI_MM_SAVE_STATE_IO_INFO	MmCpu.h	/^typedef struct _EFI_MM_SAVE_STATE_IO_INFO {$/;"	s
_EFI_MM_STANDBY_BUTTON_DISPATCH_PROTOCOL	MmStandbyButtonDispatch.h	/^struct _EFI_MM_STANDBY_BUTTON_DISPATCH_PROTOCOL {$/;"	s
_EFI_MM_STATUS_CODE_PROTOCOL	MmStatusCode.h	/^struct _EFI_MM_STATUS_CODE_PROTOCOL {$/;"	s
_EFI_MM_SW_DISPATCH_PROTOCOL	MmSwDispatch.h	/^struct _EFI_MM_SW_DISPATCH_PROTOCOL {$/;"	s
_EFI_MM_SX_DISPATCH_PROTOCOL	MmSxDispatch.h	/^struct _EFI_MM_SX_DISPATCH_PROTOCOL {$/;"	s
_EFI_MM_USB_DISPATCH_PROTOCOL	MmUsbDispatch.h	/^struct _EFI_MM_USB_DISPATCH_PROTOCOL {$/;"	s
_EFI_MP_SERVICES_PROTOCOL	MpService.h	/^struct _EFI_MP_SERVICES_PROTOCOL {$/;"	s
_EFI_MTFTP4_PROTOCOL	Mtftp4.h	/^struct _EFI_MTFTP4_PROTOCOL {$/;"	s
_EFI_MTFTP4_TOKEN	Mtftp4.h	/^struct _EFI_MTFTP4_TOKEN {$/;"	s
_EFI_MTFTP6_PROTOCOL	Mtftp6.h	/^struct _EFI_MTFTP6_PROTOCOL {$/;"	s
_EFI_MTFTP6_TOKEN	Mtftp6.h	/^struct _EFI_MTFTP6_TOKEN {$/;"	s
_EFI_NETWORK_INTERFACE_IDENTIFIER_PROTOCOL	NetworkInterfaceIdentifier.h	/^struct _EFI_NETWORK_INTERFACE_IDENTIFIER_PROTOCOL {$/;"	s
_EFI_NVDIMM_LABEL_PROTOCOL	NvdimmLabel.h	/^struct _EFI_NVDIMM_LABEL_PROTOCOL {$/;"	s
_EFI_NVM_EXPRESS_PASS_THRU_PROTOCOL	NvmExpressPassthru.h	/^struct _EFI_NVM_EXPRESS_PASS_THRU_PROTOCOL {$/;"	s
_EFI_PCD_PROTOCOL	PiPcd.h	/^typedef struct _EFI_PCD_PROTOCOL {$/;"	s
_EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL	PciHostBridgeResourceAllocation.h	/^struct _EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL {$/;"	s
_EFI_PCI_HOTPLUG_REQUEST_PROTOCOL	PciHotPlugRequest.h	/^struct _EFI_PCI_HOTPLUG_REQUEST_PROTOCOL {$/;"	s
_EFI_PCI_HOT_PLUG_INIT_H_	PciHotPlugInit.h	53;"	d
_EFI_PCI_HOT_PLUG_INIT_PROTOCOL	PciHotPlugInit.h	/^struct _EFI_PCI_HOT_PLUG_INIT_PROTOCOL {$/;"	s
_EFI_PCI_IO_PROTOCOL	PciIo.h	/^struct _EFI_PCI_IO_PROTOCOL {$/;"	s
_EFI_PCI_PLATFORM_PROTOCOL	PciPlatform.h	/^struct _EFI_PCI_PLATFORM_PROTOCOL {$/;"	s
_EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL	PciRootBridgeIo.h	/^struct _EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL {$/;"	s
_EFI_PKCS7_VERIFY_PROTOCOL	Pkcs7Verify.h	/^struct _EFI_PKCS7_VERIFY_PROTOCOL {$/;"	s
_EFI_PLATFORM_DRIVER_OVERRIDE_PROTOCOL	PlatformDriverOverride.h	/^struct _EFI_PLATFORM_DRIVER_OVERRIDE_PROTOCOL {$/;"	s
_EFI_PLATFORM_TO_DRIVER_CONFIGURATION_PROTOCOL	PlatformToDriverConfiguration.h	/^struct _EFI_PLATFORM_TO_DRIVER_CONFIGURATION_PROTOCOL {$/;"	s
_EFI_PXE_BASE_CODE_CALLBACK_PROTOCOL	PxeBaseCodeCallBack.h	/^struct _EFI_PXE_BASE_CODE_CALLBACK_PROTOCOL {$/;"	s
_EFI_PXE_BASE_CODE_PROTOCOL	PxeBaseCode.h	/^struct _EFI_PXE_BASE_CODE_PROTOCOL {$/;"	s
_EFI_RAM_DISK_PROTOCOL	RamDisk.h	/^struct _EFI_RAM_DISK_PROTOCOL {$/;"	s
_EFI_REGULAR_EXPRESSION_PROTOCOL	RegularExpressionProtocol.h	/^struct _EFI_REGULAR_EXPRESSION_PROTOCOL {$/;"	s
_EFI_RESET_NOTIFICATION_PROTOCOL	ResetNotification.h	/^typedef struct _EFI_RESET_NOTIFICATION_PROTOCOL {$/;"	s
_EFI_REST_EX_PROTOCOL	RestEx.h	/^struct _EFI_REST_EX_PROTOCOL {$/;"	s
_EFI_REST_JSON_RESOURCE_TYPE_IDENTIFIER	RestJsonStructure.h	/^typedef struct _EFI_REST_JSON_RESOURCE_TYPE_IDENTIFIER {$/;"	s
_EFI_REST_JSON_RESOURCE_TYPE_NAMESPACE	RestJsonStructure.h	/^typedef struct _EFI_REST_JSON_RESOURCE_TYPE_NAMESPACE {$/;"	s
_EFI_REST_JSON_STRUCTURE_HEADER	RestJsonStructure.h	/^typedef struct _EFI_REST_JSON_STRUCTURE_HEADER {$/;"	s
_EFI_REST_JSON_STRUCTURE_PROTOCOL	RestJsonStructure.h	/^struct _EFI_REST_JSON_STRUCTURE_PROTOCOL {$/;"	s
_EFI_REST_JSON_STRUCTURE_SUPPORTED	RestJsonStructure.h	/^typedef struct _EFI_REST_JSON_STRUCTURE_SUPPORTED {$/;"	s
_EFI_REST_PROTOCOL	Rest.h	/^struct _EFI_REST_PROTOCOL {$/;"	s
_EFI_RNG_PROTOCOL	Rng.h	/^struct _EFI_RNG_PROTOCOL {$/;"	s
_EFI_RUNTIME_ARCH_PROTOCOL	Runtime.h	/^struct _EFI_RUNTIME_ARCH_PROTOCOL {$/;"	s
_EFI_RUNTIME_EVENT_ENTRY	Runtime.h	/^struct _EFI_RUNTIME_EVENT_ENTRY {$/;"	s
_EFI_RUNTIME_IMAGE_ENTRY	Runtime.h	/^struct _EFI_RUNTIME_IMAGE_ENTRY {$/;"	s
_EFI_S3_SAVE_STATE_PROTOCOL	S3SaveState.h	/^struct _EFI_S3_SAVE_STATE_PROTOCOL {$/;"	s
_EFI_SCSI_IO_PROTOCOL	ScsiIo.h	/^struct _EFI_SCSI_IO_PROTOCOL {$/;"	s
_EFI_SCSI_PASS_THRU_PROTOCOL	ScsiPassThru.h	/^struct _EFI_SCSI_PASS_THRU_PROTOCOL {$/;"	s
_EFI_SD_MMC_COMMAND_BLOCK	SdMmcPassThru.h	/^typedef struct _EFI_SD_MMC_COMMAND_BLOCK {$/;"	s
_EFI_SD_MMC_PASS_THRU_COMMAND_PACKET	SdMmcPassThru.h	/^typedef struct _EFI_SD_MMC_PASS_THRU_COMMAND_PACKET {$/;"	s
_EFI_SD_MMC_PASS_THRU_PROTOCOL	SdMmcPassThru.h	/^struct _EFI_SD_MMC_PASS_THRU_PROTOCOL {$/;"	s
_EFI_SD_MMC_STATUS_BLOCK	SdMmcPassThru.h	/^typedef struct _EFI_SD_MMC_STATUS_BLOCK {$/;"	s
_EFI_SECURITY2_ARCH_PROTOCOL	Security2.h	/^struct _EFI_SECURITY2_ARCH_PROTOCOL {$/;"	s
_EFI_SECURITY_ARCH_PROTOCOL	Security.h	/^struct _EFI_SECURITY_ARCH_PROTOCOL {$/;"	s
_EFI_SERIAL_IO_PROTOCOL	SerialIo.h	/^struct _EFI_SERIAL_IO_PROTOCOL {$/;"	s
_EFI_SERVICE_BINDING_PROTOCOL	ServiceBinding.h	/^struct _EFI_SERVICE_BINDING_PROTOCOL {$/;"	s
_EFI_SHELL_DYNAMIC_COMMAND_PROTOCOL	ShellDynamicCommand.h	/^struct _EFI_SHELL_DYNAMIC_COMMAND_PROTOCOL {$/;"	s
_EFI_SHELL_PARAMETERS_PROTOCOL	ShellParameters.h	/^typedef struct _EFI_SHELL_PARAMETERS_PROTOCOL {$/;"	s
_EFI_SHELL_PROTOCOL	Shell.h	/^typedef struct _EFI_SHELL_PROTOCOL {$/;"	s
_EFI_SIMPLE_FILE_SYSTEM_PROTOCOL	SimpleFileSystem.h	/^struct _EFI_SIMPLE_FILE_SYSTEM_PROTOCOL {$/;"	s
_EFI_SIMPLE_NETWORK_PROTOCOL	SimpleNetwork.h	/^struct _EFI_SIMPLE_NETWORK_PROTOCOL {$/;"	s
_EFI_SIMPLE_POINTER_PROTOCOL	SimplePointer.h	/^struct _EFI_SIMPLE_POINTER_PROTOCOL {$/;"	s
_EFI_SIMPLE_TEXT_INPUT_EX_PROTOCOL	SimpleTextInEx.h	/^struct _EFI_SIMPLE_TEXT_INPUT_EX_PROTOCOL{$/;"	s
_EFI_SIMPLE_TEXT_INPUT_PROTOCOL	SimpleTextIn.h	/^struct _EFI_SIMPLE_TEXT_INPUT_PROTOCOL {$/;"	s
_EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL	SimpleTextOut.h	/^struct _EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL {$/;"	s
_EFI_SIO_CONTROL_PROTOCOL	SuperIoControl.h	/^struct _EFI_SIO_CONTROL_PROTOCOL {$/;"	s
_EFI_SIO_PROTOCOL	SuperIo.h	/^struct _EFI_SIO_PROTOCOL {$/;"	s
_EFI_SMART_CARD_EDGE_PROTOCOL	SmartCardEdge.h	/^struct _EFI_SMART_CARD_EDGE_PROTOCOL {$/;"	s
_EFI_SMART_CARD_READER_PROTOCOL	SmartCardReader.h	/^struct _EFI_SMART_CARD_READER_PROTOCOL {$/;"	s
_EFI_SMBIOS_PROTOCOL	Smbios.h	/^struct _EFI_SMBIOS_PROTOCOL {$/;"	s
_EFI_SMBUS_HC_PROTOCOL	SmbusHc.h	/^struct _EFI_SMBUS_HC_PROTOCOL {$/;"	s
_EFI_SMM_BASE2_PROTOCOL	SmmBase2.h	/^struct _EFI_SMM_BASE2_PROTOCOL {$/;"	s
_EFI_SMM_CONFIGURATION_PROTOCOL	SmmConfiguration.h	/^struct _EFI_SMM_CONFIGURATION_PROTOCOL {$/;"	s
_EFI_SMM_PERIODIC_TIMER_DISPATCH2_PROTOCOL	SmmPeriodicTimerDispatch2.h	/^struct _EFI_SMM_PERIODIC_TIMER_DISPATCH2_PROTOCOL {$/;"	s
_EFI_SMM_RESERVED_SMRAM_REGION	SmmConfiguration.h	/^typedef struct _EFI_SMM_RESERVED_SMRAM_REGION {$/;"	s
_EFI_SMM_SW_DISPATCH2_PROTOCOL	SmmSwDispatch2.h	/^struct _EFI_SMM_SW_DISPATCH2_PROTOCOL {$/;"	s
_EFI_SPI_BUS	SpiConfiguration.h	/^typedef struct _EFI_SPI_BUS {$/;"	s
_EFI_SPI_BUS_TRANSACTION	SpiIo.h	/^typedef struct _EFI_SPI_BUS_TRANSACTION {$/;"	s
_EFI_SPI_CONFIGURATION_PROTOCOL	SpiConfiguration.h	/^typedef struct _EFI_SPI_CONFIGURATION_PROTOCOL {$/;"	s
_EFI_SPI_HC_PROTOCOL	SpiHc.h	/^struct _EFI_SPI_HC_PROTOCOL {$/;"	s
_EFI_SPI_IO_PROTOCOL	SpiIo.h	/^struct _EFI_SPI_IO_PROTOCOL {$/;"	s
_EFI_SPI_NOR_FLASH_PROTOCOL	SpiNorFlash.h	/^struct _EFI_SPI_NOR_FLASH_PROTOCOL {$/;"	s
_EFI_SPI_PART	SpiConfiguration.h	/^typedef struct _EFI_SPI_PART {$/;"	s
_EFI_SPI_PERIPHERAL	SpiConfiguration.h	/^struct _EFI_SPI_PERIPHERAL {$/;"	s
_EFI_STATUS_CODE_PROTOCOL	StatusCode.h	/^typedef struct _EFI_STATUS_CODE_PROTOCOL {$/;"	s
_EFI_STORAGE_SECURITY_COMMAND_PROTOCOL	StorageSecurityCommand.h	/^struct _EFI_STORAGE_SECURITY_COMMAND_PROTOCOL {$/;"	s
_EFI_SUPPLICANT_PROTOCOL	Supplicant.h	/^struct _EFI_SUPPLICANT_PROTOCOL {$/;"	s
_EFI_TAPE_HEADER	TapeIo.h	/^typedef struct _EFI_TAPE_HEADER {$/;"	s
_EFI_TAPE_IO_PROTOCOL	TapeIo.h	/^struct _EFI_TAPE_IO_PROTOCOL {$/;"	s
_EFI_TCG_PROTOCOL	TcgService.h	/^struct _EFI_TCG_PROTOCOL {$/;"	s
_EFI_TCP4_PROTOCOL	Tcp4.h	/^struct _EFI_TCP4_PROTOCOL {$/;"	s
_EFI_TCP6_PROTOCOL	Tcp6.h	/^struct _EFI_TCP6_PROTOCOL {$/;"	s
_EFI_TIMER_ARCH_PROTOCOL	Timer.h	/^struct _EFI_TIMER_ARCH_PROTOCOL {$/;"	s
_EFI_TIMESTAMP_PROTOCOL	Timestamp.h	/^struct _EFI_TIMESTAMP_PROTOCOL {$/;"	s
_EFI_TLS_CONFIGURATION_PROTOCOL	TlsConfig.h	/^struct _EFI_TLS_CONFIGURATION_PROTOCOL {$/;"	s
_EFI_TLS_PROTOCOL	Tls.h	/^struct _EFI_TLS_PROTOCOL {$/;"	s
_EFI_TREE_PROTOCOL	TrEEProtocol.h	/^struct _EFI_TREE_PROTOCOL {$/;"	s
_EFI_UDP4_PROTOCOL	Udp4.h	/^struct _EFI_UDP4_PROTOCOL {$/;"	s
_EFI_UDP6_PROTOCOL	Udp6.h	/^struct _EFI_UDP6_PROTOCOL {$/;"	s
_EFI_UFS_DEVICE_CONFIG_PROTOCOL	UfsDeviceConfig.h	/^struct _EFI_UFS_DEVICE_CONFIG_PROTOCOL {$/;"	s
_EFI_UGA_DRAW_PROTOCOL	UgaDraw.h	/^struct _EFI_UGA_DRAW_PROTOCOL {$/;"	s
_EFI_UGA_IO_PROTOCOL	UgaIo.h	/^struct _EFI_UGA_IO_PROTOCOL {$/;"	s
_EFI_UNICODE_COLLATION_PROTOCOL	UnicodeCollation.h	/^struct _EFI_UNICODE_COLLATION_PROTOCOL {$/;"	s
_EFI_USB2_HC_PROTOCOL	Usb2HostController.h	/^struct _EFI_USB2_HC_PROTOCOL {$/;"	s
_EFI_USBFN_DEVICE_INFO_ID	UsbFunctionIo.h	/^typedef enum _EFI_USBFN_DEVICE_INFO_ID {$/;"	g
_EFI_USBFN_ENDPOINT_DIRECTION	UsbFunctionIo.h	/^typedef enum _EFI_USBFN_ENDPOINT_DIRECTION {$/;"	g
_EFI_USBFN_IO_PROTOCOL	UsbFunctionIo.h	/^struct _EFI_USBFN_IO_PROTOCOL {$/;"	s
_EFI_USBFN_MESSAGE	UsbFunctionIo.h	/^typedef enum _EFI_USBFN_MESSAGE {$/;"	g
_EFI_USBFN_MESSAGE_PAYLOAD	UsbFunctionIo.h	/^typedef union _EFI_USBFN_MESSAGE_PAYLOAD {$/;"	u
_EFI_USBFN_POLICY_TYPE	UsbFunctionIo.h	/^typedef enum _EFI_USBFN_POLICY_TYPE {$/;"	g
_EFI_USBFN_PORT_TYPE	UsbFunctionIo.h	/^typedef enum _EFI_USBFN_PORT_TYPE {$/;"	g
_EFI_USBFN_TRANSFER_RESULT	UsbFunctionIo.h	/^typedef struct _EFI_USBFN_TRANSFER_RESULT {$/;"	s
_EFI_USBFN_TRANSFER_STATUS	UsbFunctionIo.h	/^typedef enum _EFI_USBFN_TRANSFER_STATUS {$/;"	g
_EFI_USB_BUS_SPEED	UsbFunctionIo.h	/^typedef enum _EFI_USB_BUS_SPEED {$/;"	g
_EFI_USB_ENDPOINT_TYPE	UsbFunctionIo.h	/^typedef enum _EFI_USB_ENDPOINT_TYPE {$/;"	g
_EFI_USB_HC_PROTOCOL	UsbHostController.h	/^struct _EFI_USB_HC_PROTOCOL {$/;"	s
_EFI_USB_IO_PROTOCOL	UsbIo.h	/^struct _EFI_USB_IO_PROTOCOL {$/;"	s
_EFI_USER_CREDENTIAL2_PROTOCOL	UserCredential2.h	/^struct _EFI_USER_CREDENTIAL2_PROTOCOL {$/;"	s
_EFI_USER_CREDENTIAL_PROTOCOL	UserCredential.h	/^struct _EFI_USER_CREDENTIAL_PROTOCOL {$/;"	s
_EFI_USER_MANAGER_PROTOCOL	UserManager.h	/^struct _EFI_USER_MANAGER_PROTOCOL {$/;"	s
_EFI_VLAN_CONFIG_PROTOCOL	VlanConfig.h	/^struct _EFI_VLAN_CONFIG_PROTOCOL {$/;"	s
_EFI_WATCHDOG_TIMER_ARCH_PROTOCOL	WatchdogTimer.h	/^struct _EFI_WATCHDOG_TIMER_ARCH_PROTOCOL {$/;"	s
_EFI_WIRELESS_MAC_CONNECTION_II_PROTOCOL	WiFi2.h	/^struct _EFI_WIRELESS_MAC_CONNECTION_II_PROTOCOL {$/;"	s
_EFI_WIRELESS_MAC_CONNECTION_PROTOCOL	WiFi.h	/^struct _EFI_WIRELESS_MAC_CONNECTION_PROTOCOL {$/;"	s
_GET_PCD_INFO_PROTOCOL	PcdInfo.h	/^struct _GET_PCD_INFO_PROTOCOL {$/;"	s
_INCOMPATIBLE_PCI_DEVICE_SUPPORT_H_	IncompatiblePciDeviceSupport.h	71;"	d
_MM_ACCESS_H_	MmAccess.h	20;"	d
_MM_BASE_H_	MmBase.h	13;"	d
_MM_COMMUNICATION2_H_	MmCommunication2.h	14;"	d
_MM_COMMUNICATION_H_	MmCommunication.h	13;"	d
_MM_CONFIGURATION_H_	MmConfiguration.h	15;"	d
_MM_CONTROL_H_	MmControl.h	20;"	d
_MM_CPU_H_	MmCpu.h	15;"	d
_MM_CPU_IO_H_	MmCpuIo.h	12;"	d
_MM_END_OF_DXE_H_	MmEndOfDxe.h	15;"	d
_MM_GPI_DISPATCH_H_	MmGpiDispatch.h	21;"	d
_MM_IO_TRAP_DISPATCH_H_	MmIoTrapDispatch.h	16;"	d
_MM_MP_H_	MmMp.h	17;"	d
_MM_PCI_ROOT_BRIDGE_IO_H_	MmPciRootBridgeIo.h	12;"	d
_MM_PERIODIC_TIMER_DISPATCH_H_	MmPeriodicTimerDispatch.h	16;"	d
_MM_POWER_BUTTON_DISPATCH_H_	MmPowerButtonDispatch.h	16;"	d
_MM_READY_TO_LOCK_H_	MmReadyToLock.h	17;"	d
_MM_STANDBY_BUTTON_DISPATCH_H_	MmStandbyButtonDispatch.h	16;"	d
_MM_STATUS_CODE_H__	MmStatusCode.h	12;"	d
_MM_SW_DISPATCH_H_	MmSwDispatch.h	13;"	d
_MM_SX_DISPATCH_H_	MmSxDispatch.h	13;"	d
_MM_USB_DISPATCH_H_	MmUsbDispatch.h	16;"	d
_MP_SERVICE_PROTOCOL_H_	MpService.h	40;"	d
_PCI_ENUMERATION_COMPLETE_H_	PciEnumerationComplete.h	15;"	d
_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_H_	PciHostBridgeResourceAllocation.h	16;"	d
_PCI_OVERRIDE_H_	PciOverride.h	17;"	d
_PCI_PLATFORM_H_	PciPlatform.h	17;"	d
_PXE_BASE_CODE_CALLBACK_H_	PxeBaseCodeCallBack.h	14;"	d
_SECURITY_POLICY_H_	SecurityPolicy.h	10;"	d
_SMM_ACCESS2_H_	SmmAccess2.h	20;"	d
_SMM_BASE2_H_	SmmBase2.h	13;"	d
_SMM_COMMUNICATION_H_	SmmCommunication.h	13;"	d
_SMM_CONFIGURATION_H_	SmmConfiguration.h	15;"	d
_SMM_CONTROL2_H_	SmmControl2.h	20;"	d
_SMM_CPU_H_	SmmCpu.h	15;"	d
_SMM_CPU_IO2_H_	SmmCpuIo2.h	12;"	d
_SMM_END_OF_DXE_H_	SmmEndOfDxe.h	18;"	d
_SMM_GPI_DISPATCH2_H_	SmmGpiDispatch2.h	21;"	d
_SMM_IO_TRAP_DISPATCH2_H_	SmmIoTrapDispatch2.h	16;"	d
_SMM_PCI_ROOT_BRIDGE_IO_H_	SmmPciRootBridgeIo.h	12;"	d
_SMM_PERIODIC_TIMER_DISPATCH2_H_	SmmPeriodicTimerDispatch2.h	16;"	d
_SMM_POWER_BUTTON_DISPATCH2_H_	SmmPowerButtonDispatch2.h	16;"	d
_SMM_READY_TO_LOCK_H_	SmmReadyToLock.h	20;"	d
_SMM_STANDBY_BUTTON_DISPATCH2_H_	SmmStandbyButtonDispatch2.h	16;"	d
_SMM_STATUS_CODE_H__	SmmStatusCode.h	12;"	d
_SMM_SW_DISPATCH2_H_	SmmSwDispatch2.h	13;"	d
_SMM_SX_DISPATCH2_H_	SmmSxDispatch2.h	13;"	d
_SMM_USB_DISPATCH2_H_	SmmUsbDispatch2.h	16;"	d
_TCG_EFI_BOOT_SERVICE_CAPABILITY	TcgService.h	/^typedef struct _TCG_EFI_BOOT_SERVICE_CAPABILITY {$/;"	s
_TCG_SERVICE_PROTOCOL_H_	TcgService.h	11;"	d
_TREE_BOOT_SERVICE_CAPABILITY	TrEEProtocol.h	/^typedef struct _TREE_BOOT_SERVICE_CAPABILITY {$/;"	s
_TREE_VERSION	TrEEProtocol.h	/^typedef struct _TREE_VERSION {$/;"	s
_UEFI_NVM_EXPRESS_PASS_THRU_H_	NvmExpressPassthru.h	15;"	d
_UGA_DEVICE	UgaIo.h	/^typedef struct _UGA_DEVICE {$/;"	s
_USB2_HOSTCONTROLLER_H_	Usb2HostController.h	13;"	d
_USB_HOSTCONTROLLER_H_	UsbHostController.h	14;"	d
__ABSOLUTE_POINTER_H__	AbsolutePointer.h	14;"	d
__ACPI_SYSTEM_DESCRIPTION_TABLE_H___	AcpiSystemDescriptionTable.h	13;"	d
__ACPI_TABLE_H___	AcpiTable.h	14;"	d
__ARCH_PROTOCOL_BDS_H__	Bds.h	12;"	d
__ARCH_PROTOCOL_CAPSULE_ARCH_H__	Capsule.h	19;"	d
__ARCH_PROTOCOL_CPU_H__	Cpu.h	12;"	d
__ARCH_PROTOCOL_METRONOME_H__	Metronome.h	12;"	d
__ARCH_PROTOCOL_MONTONIC_COUNTER_H__	MonotonicCounter.h	12;"	d
__ARCH_PROTOCOL_REAL_TIME_CLOCK_H__	RealTimeClock.h	20;"	d
__ARCH_PROTOCOL_RESET_H__	Reset.h	15;"	d
__ARCH_PROTOCOL_RUNTIME_H__	Runtime.h	19;"	d
__ARCH_PROTOCOL_SECURITY2_H__	Security2.h	26;"	d
__ARCH_PROTOCOL_SECURITY_H__	Security.h	23;"	d
__ARCH_PROTOCOL_TIMER_H__	Timer.h	12;"	d
__ARCH_PROTOCOL_VARIABLE_ARCH_H__	Variable.h	29;"	d
__ARCH_PROTOCOL_VARIABLE_WRITE_ARCH_H__	VariableWrite.h	29;"	d
__ARCH_PROTOCOL_WATCHDOG_TIMER_H__	WatchdogTimer.h	11;"	d
__ATA_PASS_THROUGH_H__	AtaPassThru.h	15;"	d
__AUTHENTICATION_INFO_H__	AuthenticationInfo.h	12;"	d
__BIS_H__	Bis.h	14;"	d
__BLOCK_IO2_H__	BlockIo2.h	14;"	d
__BLOCK_IO_CRYPTO_H__	BlockIoCrypto.h	14;"	d
__BLOCK_IO_H__	BlockIo.h	13;"	d
__BOOT_MANAGER_POLICY_H__	BootManagerPolicy.h	12;"	d
__CPU_IO2_H__	CpuIo2.h	25;"	d
__DEBUG_PORT_H__	DebugPort.h	13;"	d
__DEBUG_SUPPORT_H__	DebugSupport.h	17;"	d
__DECOMPRESS_H__	Decompress.h	10;"	d
__DEFERRED_IMAGE_LOAD_H__	DeferredImageLoad.h	15;"	d
__DEVICE_IO_H__	DeviceIo.h	13;"	d
__DEVICE_PATH_FROM_TEXT_PROTOCOL_H__	DevicePathFromText.h	11;"	d
__DEVICE_PATH_TO_TEXT_PROTOCOL_H__	DevicePathToText.h	11;"	d
__DEVICE_PATH_UTILITIES_PROTOCOL_H__	DevicePathUtilities.h	11;"	d
__DISK_INFO_H__	DiskInfo.h	15;"	d
__DISK_IO2_H__	DiskIo2.h	13;"	d
__DISK_IO_H__	DiskIo.h	14;"	d
__DRIVER_SUPPORTED_EFI_VERSION_H__	DriverSupportedEfiVersion.h	13;"	d
__EDID_ACTIVE_H__	EdidActive.h	12;"	d
__EDID_DISCOVERED_H__	EdidDiscovered.h	13;"	d
__EDID_OVERRIDE_H__	EdidOverride.h	13;"	d
__EFI_ADAPTER_INFORMATION_PROTOCOL_H__	AdapterInformation.h	15;"	d
__EFI_ARP_PROTOCOL_H__	Arp.h	19;"	d
__EFI_BLUETOOTH_ATTRIBUTE_H__	BluetoothAttribute.h	15;"	d
__EFI_BLUETOOTH_CONFIG_PROTOCOL_H__	BluetoothConfig.h	14;"	d
__EFI_BLUETOOTH_HC_PROTOCOL_H__	BluetoothHc.h	14;"	d
__EFI_BLUETOOTH_IO_PROTOCOL_H__	BluetoothIo.h	16;"	d
__EFI_BLUETOOTH_LE_CONFIG_H__	BluetoothLeConfig.h	14;"	d
__EFI_COMPONENT_NAME2_H__	ComponentName2.h	12;"	d
__EFI_COMPONENT_NAME_H__	ComponentName.h	12;"	d
__EFI_CONFIG_KEYWORD_HANDLER_H__	HiiConfigKeyword.h	16;"	d
__EFI_DEVICE_PATH_PROTOCOL_H__	DevicePath.h	14;"	d
__EFI_DHCP4_PROTOCOL_H__	Dhcp4.h	16;"	d
__EFI_DHCP6_PROTOCOL_H__	Dhcp6.h	14;"	d
__EFI_DNS4_PROTOCOL_H__	Dns4.h	16;"	d
__EFI_DNS6_PROTOCOL_H__	Dns6.h	16;"	d
__EFI_DRIVER_BINDING_H__	DriverBinding.h	13;"	d
__EFI_DRIVER_CONFIGURATION2_H__	DriverConfiguration2.h	10;"	d
__EFI_DRIVER_CONFIGURATION_H__	DriverConfiguration.h	10;"	d
__EFI_DRIVER_DIAGNOSTICS2_H__	DriverDiagnostics2.h	10;"	d
__EFI_DRIVER_DIAGNOSTICS_H__	DriverDiagnostics.h	10;"	d
__EFI_DRIVER_FAMILY_OVERRIDE_H__	DriverFamilyOverride.h	10;"	d
__EFI_DRIVER_HEALTH_H__	DriverHealth.h	33;"	d
__EFI_EAP_CONFIGURATION_PROTOCOL_H__	EapConfiguration.h	13;"	d
__EFI_EAP_MANAGEMENT2_PROTOCOL_H__	EapManagement2.h	13;"	d
__EFI_EAP_MANAGEMENT_PROTOCOL_H__	EapManagement.h	18;"	d
__EFI_EAP_PROTOCOL_H__	Eap.h	17;"	d
__EFI_EBC_PROTOCOL_H__	Ebc.h	10;"	d
__EFI_ERASE_BLOCK_PROTOCOL_H__	EraseBlock.h	13;"	d
__EFI_FIRMWARE_MANAGEMENT_PROTOCOL_H__	FirmwareManagement.h	21;"	d
__EFI_FORM_BROWSER2_H__	FormBrowser2.h	13;"	d
__EFI_FTP4_PROTOCOL_H__	Ftp4.h	19;"	d
__EFI_HASH2_PROTOCOL_H__	Hash2.h	16;"	d
__EFI_HASH_PROTOCOL_H__	Hash.h	14;"	d
__EFI_HII_CONFIG_ACCESS_H__	HiiConfigAccess.h	18;"	d
__EFI_HII_IMAGE_EX_H__	HiiImageEx.h	14;"	d
__EFI_HTTP_BOOT_CALLBACK_H__	HttpBootCallback.h	13;"	d
__EFI_HTTP_PROTOCOL_H__	Http.h	17;"	d
__EFI_HTTP_UTILITIES_PROTOCOL_H__	HttpUtilities.h	14;"	d
__EFI_IP4CONFIG2_PROTOCOL_H__	Ip4Config2.h	13;"	d
__EFI_IP4CONFIG_PROTOCOL_H__	Ip4Config.h	13;"	d
__EFI_IP4_PROTOCOL_H__	Ip4.h	22;"	d
__EFI_IP6CONFIG_PROTOCOL_H__	Ip6Config.h	10;"	d
__EFI_IP6_PROTOCOL_H__	Ip6.h	22;"	d
__EFI_IPSEC_PROTOCOL_H__	IpSec.h	22;"	d
__EFI_IPSE_CCONFIG_PROTOCOL_H__	IpSecConfig.h	15;"	d
__EFI_LOAD_FILE2_PROTOCOL_H__	LoadFile2.h	16;"	d
__EFI_LOAD_FILE_PROTOCOL_H__	LoadFile.h	16;"	d
__EFI_MANAGED_NETWORK_PROTOCOL_H__	ManagedNetwork.h	14;"	d
__EFI_MTFTP4_PROTOCOL_H__	Mtftp4.h	13;"	d
__EFI_MTFTP6_PROTOCOL_H__	Mtftp6.h	17;"	d
__EFI_NETWORK_INTERFACE_IDENTIFER_H__	NetworkInterfaceIdentifier.h	13;"	d
__EFI_NVDIMM_LABEL_PROTOCOL_H__	NvdimmLabel.h	17;"	d
__EFI_PKCS7_VERIFY_PROTOCOL_H__	Pkcs7Verify.h	15;"	d
__EFI_PLATFORM_DRIVER_OVERRIDE_PROTOCOL_H__	PlatformDriverOverride.h	10;"	d
__EFI_RESET_NOTIFICATION_H__	ResetNotification.h	14;"	d
__EFI_REST_PROTOCOL_H__	Rest.h	13;"	d
__EFI_RNG_PROTOCOL_H__	Rng.h	12;"	d
__EFI_SCSI_IO_PROTOCOL_H__	ScsiIo.h	13;"	d
__EFI_SERVICE_BINDING_H__	ServiceBinding.h	14;"	d
__EFI_SHELL_DYNAMIC_COMMAND_PROTOCOL_H__	ShellDynamicCommand.h	11;"	d
__EFI_SHELL_PARAMETERS_PROTOCOL_H__	ShellParameters.h	10;"	d
__EFI_SHELL_PROTOCOL_H__	Shell.h	11;"	d
__EFI_SUPER_IO_CONTROL_PROTOCOL_H__	SuperIoControl.h	15;"	d
__EFI_SUPER_IO_PROTOCOL_H__	SuperIo.h	14;"	d
__EFI_SUPPLICANT_PROTOCOL_H__	Supplicant.h	13;"	d
__EFI_TAPE_IO_PROTOCOL_H__	TapeIo.h	11;"	d
__EFI_TCP4_PROTOCOL_H__	Tcp4.h	16;"	d
__EFI_TCP6_PROTOCOL_H__	Tcp6.h	16;"	d
__EFI_TIME_STAMP_PROTOCOL_H__	Timestamp.h	14;"	d
__EFI_TLS_CONFIGURATION_PROTOCOL_H__	TlsConfig.h	13;"	d
__EFI_TLS_PROTOCOL_H__	Tls.h	18;"	d
__EFI_UDP4_PROTOCOL_H__	Udp4.h	16;"	d
__EFI_UDP6_PROTOCOL_H__	Udp6.h	15;"	d
__EFI_VLANCONFIG_PROTOCOL_H__	VlanConfig.h	13;"	d
__EFI_WIFI2_PROTOCOL_H__	WiFi2.h	13;"	d
__EFI_WIFI_PROTOCOL_H__	WiFi.h	15;"	d
__EXT_SCSI_PASS_THROUGH_PROTOCOL_H__	ScsiPassThruExt.h	12;"	d
__FIRMWARE_VOLUME2_H__	FirmwareVolume2.h	17;"	d
__FIRMWARE_VOLUME_BLOCK_H__	FirmwareVolumeBlock.h	13;"	d
__GRAPHICS_OUTPUT_H__	GraphicsOutput.h	12;"	d
__GUID_SECTION_EXTRACTION_PROTOCOL_H__	GuidedSectionExtraction.h	16;"	d
__HII_CONFIG_ROUTING_H__	HiiConfigRouting.h	18;"	d
__HII_DATABASE_H__	HiiDatabase.h	14;"	d
__HII_FONT_H__	HiiFont.h	13;"	d
__HII_IMAGE_DECODER_H__	HiiImageDecoder.h	14;"	d
__HII_IMAGE_H__	HiiImage.h	13;"	d
__HII_PACKAGE_LIST_H__	HiiPackageList.h	14;"	d
__HII_POPUP_H__	HiiPopup.h	14;"	d
__HII_STRING_H__	HiiString.h	13;"	d
__I2C_BUS_CONFIGURATION_MANAGEMENT_H__	I2cBusConfigurationManagement.h	18;"	d
__I2C_ENUMERATE_H__	I2cEnumerate.h	15;"	d
__I2C_HOST_H__	I2cHost.h	16;"	d
__I2C_IO_H__	I2cIo.h	16;"	d
__I2C_MASTER_H__	I2cMaster.h	16;"	d
__ISA_HC_PROTOCOL_H__	IsaHc.h	17;"	d
__ISCSI_INITIATOR_NAME_H__	IScsiInitiatorName.h	11;"	d
__KMS_H__	Kms.h	17;"	d
__LEGACY_REGION2_H__	LegacyRegion2.h	15;"	d
__LEGACY_SPI_CONTROLLER_PROTOCOL_H__	LegacySpiController.h	13;"	d
__LEGACY_SPI_FLASH_PROTOCOL_H__	LegacySpiFlash.h	13;"	d
__LEGACY_SPI_SMM_CONTROLLER_PROTOCOL_H__	LegacySpiSmmController.h	13;"	d
__LEGACY_SPI_SMM_FLASH_PROTOCOL_H__	LegacySpiSmmFlash.h	13;"	d
__LOADED_IMAGE_PROTOCOL_H__	LoadedImage.h	13;"	d
__MM_REPORT_STATUS_CODE_HANDLER_PROTOCOL_H__	MmReportStatusCodeHandler.h	13;"	d
__PARTITION_INFO_PROTOCOL_H__	PartitionInfo.h	13;"	d
__PCD_H__	Pcd.h	18;"	d
__PCD_INFO_H__	PcdInfo.h	20;"	d
__PCI_HOTPLUG_REQUEST_H_	PciHotPlugRequest.h	41;"	d
__PCI_IO_H__	PciIo.h	11;"	d
__PCI_ROOT_BRIDGE_IO_H__	PciRootBridgeIo.h	14;"	d
__PI_PCD_H__	PiPcd.h	23;"	d
__PI_PCD_INFO_H__	PiPcdInfo.h	14;"	d
__PLATFORM_TO_DRIVER_CONFIGUARTION_H__	PlatformToDriverConfiguration.h	14;"	d
__PXE_BASE_CODE_PROTOCOL_H__	PxeBaseCode.h	15;"	d
__RAM_DISK_PROTOCOL_H__	RamDisk.h	13;"	d
__REGULAR_EXPRESSION_PROTOCOL_H__	RegularExpressionProtocol.h	14;"	d
__REPORT_STATUS_CODE_HANDLER_PROTOCOL_H__	ReportStatusCodeHandler.h	14;"	d
__S3_SAVE_STATE_H__	S3SaveState.h	18;"	d
__S3_SMM_SAVE_STATE_H__	S3SmmSaveState.h	27;"	d
__SCSI_PASS_THROUGH_H__	ScsiPassThru.h	17;"	d
__SD_MMC_PASS_THRU_H__	SdMmcPassThru.h	11;"	d
__SERIAL_IO_PROTOCOL_H__	SerialIo.h	13;"	d
__SIMPLE_FILE_SYSTEM_H__	SimpleFileSystem.h	16;"	d
__SIMPLE_NETWORK_H__	SimpleNetwork.h	21;"	d
__SIMPLE_POINTER_H__	SimplePointer.h	12;"	d
__SIMPLE_TEXT_IN_EX_H__	SimpleTextInEx.h	14;"	d
__SIMPLE_TEXT_IN_PROTOCOL_H__	SimpleTextIn.h	13;"	d
__SIMPLE_TEXT_OUT_H__	SimpleTextOut.h	15;"	d
__SMART_CARD_EDGE_H__	SmartCardEdge.h	18;"	d
__SMART_CARD_READER_H__	SmartCardReader.h	13;"	d
__SMBIOS_PROTOCOL_H__	Smbios.h	22;"	d
__SMBUS_HC_H__	SmbusHc.h	14;"	d
__SMM_REPORT_STATUS_CODE_HANDLER_PROTOCOL_H__	SmmReportStatusCodeHandler.h	13;"	d
__SPI_CONFIGURATION_PROTOCOL_H__	SpiConfiguration.h	13;"	d
__SPI_HC_PROTOCOL_H__	SpiHc.h	13;"	d
__SPI_IO_PROTOCOL_H__	SpiIo.h	13;"	d
__SPI_NOR_FLASH_PROTOCOL_H__	SpiNorFlash.h	13;"	d
__SPI_SMM_CONFIGURATION_PROTOCOL_H__	SpiSmmConfiguration.h	13;"	d
__SPI_SMM_HC_H__	SpiSmmHc.h	13;"	d
__SPI_SMM_NOR_FLASH_PROTOCOL_H__	SpiSmmNorFlash.h	13;"	d
__STATUS_CODE_RUNTIME_PROTOCOL_H__	StatusCode.h	10;"	d
__STORAGE_SECURITY_COMMAND_H__	StorageSecurityCommand.h	14;"	d
__TCG2_PROTOCOL_H__	Tcg2Protocol.h	11;"	d
__TREE_H__	TrEEProtocol.h	10;"	d
__UFS_DEVICE_CONFIG_PROTOCOL_H__	UfsDeviceConfig.h	13;"	d
__UGA_DRAW_H__	UgaDraw.h	12;"	d
__UGA_IO_H__	UgaIo.h	12;"	d
__UNICODE_COLLATION_H__	UnicodeCollation.h	12;"	d
__USB_FUNCTION_IO_H__	UsbFunctionIo.h	23;"	d
__USB_IO_H__	UsbIo.h	14;"	d
__USER_CREDENTIAL2_H__	UserCredential2.h	12;"	d
__USER_CREDENTIAL_H__	UserCredential.h	13;"	d
__USER_MANAGER_H__	UserManager.h	12;"	d
deviceData	UgaIo.h	/^  UGA_DEVICE_DATA     deviceData;$/;"	m	struct:_UGA_DEVICE
deviceId	UgaIo.h	/^  UGA_DEVICE_ID   deviceId;$/;"	m	struct:__anon533
deviceType	UgaIo.h	/^  UGA_DEVICE_TYPE deviceType;$/;"	m	struct:__anon533
iScsiIpv4Boot	AdapterInformation.h	/^  BOOLEAN                       iScsiIpv4Boot;$/;"	m	struct:__anon421
iScsiIpv4BootCapablity	AdapterInformation.h	/^  BOOLEAN                       iScsiIpv4BootCapablity;$/;"	m	struct:__anon421
iScsiIpv6Boot	AdapterInformation.h	/^  BOOLEAN                       iScsiIpv6Boot;$/;"	m	struct:__anon421
iScsiIpv6BootCapablity	AdapterInformation.h	/^  BOOLEAN                       iScsiIpv6BootCapablity;$/;"	m	struct:__anon421
iScsiMpioCapability	AdapterInformation.h	/^  BOOLEAN                       iScsiMpioCapability;$/;"	m	struct:__anon421
ioRequestCode	UgaIo.h	/^  IN UGA_IO_REQUEST_CODE  ioRequestCode;$/;"	m	struct:__anon535
nextlink	NetworkInterfaceIdentifier.h	/^  UNDI_CONFIG_TABLE  *nextlink;             \/\/\/< A pointer to the next UNDI$/;"	m	struct:undiconfig_table
pParentDevice	UgaIo.h	/^  struct _UGA_DEVICE  *pParentDevice;$/;"	m	struct:_UGA_DEVICE	typeref:struct:_UGA_DEVICE::_UGA_DEVICE
pad	TapeIo.h	/^  CHAR8      pad[468];         \/\/ pad to 1024$/;"	m	struct:_EFI_TAPE_HEADER
pvBusIoServices	UgaIo.h	/^  VOID                *pvBusIoServices;$/;"	m	struct:_UGA_DEVICE
pvDeviceContext	UgaIo.h	/^  VOID                *pvDeviceContext;$/;"	m	struct:_UGA_DEVICE
pvInBuffer	UgaIo.h	/^  IN VOID                 *pvInBuffer;$/;"	m	struct:__anon535
pvOutBuffer	UgaIo.h	/^  OUT VOID                *pvOutBuffer;$/;"	m	struct:__anon535
pvRunTimeContext	UgaIo.h	/^  VOID                *pvRunTimeContext;$/;"	m	struct:_UGA_DEVICE
pvSharedContext	UgaIo.h	/^  VOID                *pvSharedContext;$/;"	m	struct:_UGA_DEVICE
pvStdIoServices	UgaIo.h	/^  VOID                *pvStdIoServices;$/;"	m	struct:_UGA_DEVICE
reserved	NetworkInterfaceIdentifier.h	/^  UINT32             reserved;$/;"	m	struct:undiconfig_table
reserved	PxeBaseCode.h	/^    UINT32  reserved;$/;"	m	union:__anon102::__anon103
reserved	PxeBaseCode.h	/^  UINT16          reserved;$/;"	m	struct:__anon106
tdEFI_TCG2_BOOT_SERVICE_CAPABILITY	Tcg2Protocol.h	/^typedef struct tdEFI_TCG2_BOOT_SERVICE_CAPABILITY {$/;"	s
tdEFI_TCG2_EVENT	Tcg2Protocol.h	/^typedef struct tdEFI_TCG2_EVENT {$/;"	s
tdEFI_TCG2_FINAL_EVENTS_TABLE	Tcg2Protocol.h	/^typedef struct tdEFI_TCG2_FINAL_EVENTS_TABLE {$/;"	s
tdEFI_TCG2_PROTOCOL	Tcg2Protocol.h	/^struct tdEFI_TCG2_PROTOCOL {$/;"	s
tdEFI_TCG2_VERSION	Tcg2Protocol.h	/^typedef struct tdEFI_TCG2_VERSION {$/;"	s
u	PxeBaseCode.h	/^  } u;$/;"	m	struct:__anon102	typeref:union:__anon102::__anon103
ubs	UsbFunctionIo.h	/^  EFI_USB_BUS_SPEED            ubs;$/;"	m	union:_EFI_USBFN_MESSAGE_PAYLOAD
udr	UsbFunctionIo.h	/^  EFI_USB_DEVICE_REQUEST       udr;$/;"	m	union:_EFI_USBFN_MESSAGE_PAYLOAD
ui32DeviceContextSize	UgaIo.h	/^  UINT32          ui32DeviceContextSize;$/;"	m	struct:__anon533
ui32SharedContextSize	UgaIo.h	/^  UINT32          ui32SharedContextSize;$/;"	m	struct:__anon533
ui64BytesReturned	UgaIo.h	/^  OUT UINT64              ui64BytesReturned;$/;"	m	struct:__anon535
ui64InBufferSize	UgaIo.h	/^  IN UINT64               ui64InBufferSize;$/;"	m	struct:__anon535
ui64OutBufferSize	UgaIo.h	/^  IN UINT64               ui64OutBufferSize;$/;"	m	struct:__anon535
undiconfig_table	NetworkInterfaceIdentifier.h	/^struct undiconfig_table {$/;"	s
utr	UsbFunctionIo.h	/^  EFI_USBFN_TRANSFER_RESULT    utr;$/;"	m	union:_EFI_USBFN_MESSAGE_PAYLOAD
