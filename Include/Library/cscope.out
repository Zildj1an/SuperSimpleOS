cscope 15 $HOME/VT/SPRING_2021/6504/Assignment1/Include/Library               0000228269
	@BaseLib.h

14 #i‚de‡
__BASE_LIB__


15 
	#__BASE_LIB__


	)

20 #i‡ 
deföed
 (
MDE_CPU_IA32
)

25 
UINT32
 
	mEbx
;

26 
UINT32
 
	mEsi
;

27 
UINT32
 
	mEdi
;

28 
UINT32
 
	mEbp
;

29 
UINT32
 
	mE•
;

30 
UINT32
 
	mEù
;

31 
UINT32
 
	mS•
;

32 } 
	tBASE_LIBRARY_JUMP_BUFFER
;

34 
	#BASE_LIBRARY_JUMP_BUFFER_ALIGNMENT
 4

	)

38 #i‡
deföed
 (
MDE_CPU_X64
)

43 
UINT64
 
	mRbx
;

44 
UINT64
 
	mR•
;

45 
UINT64
 
	mRbp
;

46 
UINT64
 
	mRdi
;

47 
UINT64
 
	mRsi
;

48 
UINT64
 
	mR12
;

49 
UINT64
 
	mR13
;

50 
UINT64
 
	mR14
;

51 
UINT64
 
	mR15
;

52 
UINT64
 
	mRù
;

53 
UINT64
 
	mMxC§
;

54 
UINT8
 
	mXmmBuf„r
[160];

55 
UINT64
 
	mS•
;

56 } 
	tBASE_LIBRARY_JUMP_BUFFER
;

58 
	#BASE_LIBRARY_JUMP_BUFFER_ALIGNMENT
 8

	)

62 #i‡
deföed
 (
MDE_CPU_EBC
)

67 
UINT64
 
	mR0
;

68 
UINT64
 
	mR1
;

69 
UINT64
 
	mR2
;

70 
UINT64
 
	mR3
;

71 
UINT64
 
	mIP
;

72 } 
	tBASE_LIBRARY_JUMP_BUFFER
;

74 
	#BASE_LIBRARY_JUMP_BUFFER_ALIGNMENT
 8

	)

78 #i‡
deföed
 (
MDE_CPU_ARM
)

81 
UINT32
 
	mR3
;

82 
UINT32
 
	mR4
;

83 
UINT32
 
	mR5
;

84 
UINT32
 
	mR6
;

85 
UINT32
 
	mR7
;

86 
UINT32
 
	mR8
;

87 
UINT32
 
	mR9
;

88 
UINT32
 
	mR10
;

89 
UINT32
 
	mR11
;

90 
UINT32
 
	mR12
;

91 
UINT32
 
	mR14
;

92 } 
	tBASE_LIBRARY_JUMP_BUFFER
;

94 
	#BASE_LIBRARY_JUMP_BUFFER_ALIGNMENT
 4

	)

98 #i‡
deföed
 (
MDE_CPU_AARCH64
)

101 
UINT64
 
	mX19
;

102 
UINT64
 
	mX20
;

103 
UINT64
 
	mX21
;

104 
UINT64
 
	mX22
;

105 
UINT64
 
	mX23
;

106 
UINT64
 
	mX24
;

107 
UINT64
 
	mX25
;

108 
UINT64
 
	mX26
;

109 
UINT64
 
	mX27
;

110 
UINT64
 
	mX28
;

111 
UINT64
 
	mFP
;

112 
UINT64
 
	mLR
;

113 
UINT64
 
	mIP0
;

116 
UINT64
 
	mD8
;

117 
UINT64
 
	mD9
;

118 
UINT64
 
	mD10
;

119 
UINT64
 
	mD11
;

120 
UINT64
 
	mD12
;

121 
UINT64
 
	mD13
;

122 
UINT64
 
	mD14
;

123 
UINT64
 
	mD15
;

124 } 
	tBASE_LIBRARY_JUMP_BUFFER
;

126 
	#BASE_LIBRARY_JUMP_BUFFER_ALIGNMENT
 8

	)

130 #i‡
deföed
 (
MDE_CPU_RISCV64
)

135 
UINT64
 
	mRA
;

136 
UINT64
 
	mS0
;

137 
UINT64
 
	mS1
;

138 
UINT64
 
	mS2
;

139 
UINT64
 
	mS3
;

140 
UINT64
 
	mS4
;

141 
UINT64
 
	mS5
;

142 
UINT64
 
	mS6
;

143 
UINT64
 
	mS7
;

144 
UINT64
 
	mS8
;

145 
UINT64
 
	mS9
;

146 
UINT64
 
	mS10
;

147 
UINT64
 
	mS11
;

148 
UINT64
 
	mSP
;

149 } 
	tBASE_LIBRARY_JUMP_BUFFER
;

151 
	#BASE_LIBRARY_JUMP_BUFFER_ALIGNMENT
 8

	)

176 
UINTN


177 
EFIAPI


178 
SånLíS
 (

179 
IN
 
CONST
 
CHAR16
 *
Såög
,

180 
IN
 
UINTN
 
MaxSize


204 
UINTN


205 
EFIAPI


206 
SånSizeS
 (

207 
IN
 
CONST
 
CHAR16
 *
Såög
,

208 
IN
 
UINTN
 
MaxSize


237 
RETURN_STATUS


238 
EFIAPI


239 
SåCpyS
 (

240 
OUT
 
CHAR16
 *
De°ö©i⁄
,

241 
IN
 
UINTN
 
De°Max
,

242 
IN
 
CONST
 
CHAR16
 *
Sour˚


274 
RETURN_STATUS


275 
EFIAPI


276 
SånCpyS
 (

277 
OUT
 
CHAR16
 *
De°ö©i⁄
,

278 
IN
 
UINTN
 
De°Max
,

279 
IN
 
CONST
 
CHAR16
 *
Sour˚
,

280 
IN
 
UINTN
 
Lígth


312 
RETURN_STATUS


313 
EFIAPI


314 
SåC©S
 (

315 
IN
 
OUT
 
CHAR16
 *
De°ö©i⁄
,

316 
IN
 
UINTN
 
De°Max
,

317 
IN
 
CONST
 
CHAR16
 *
Sour˚


352 
RETURN_STATUS


353 
EFIAPI


354 
SånC©S
 (

355 
IN
 
OUT
 
CHAR16
 *
De°ö©i⁄
,

356 
IN
 
UINTN
 
De°Max
,

357 
IN
 
CONST
 
CHAR16
 *
Sour˚
,

358 
IN
 
UINTN
 
Lígth


404 
RETURN_STATUS


405 
EFIAPI


406 
SåDecimÆToUöäS
 (

407 
IN
 
CONST
 
CHAR16
 *
Såög
,

408 
OUT
 
CHAR16
 **
EndPoöãr
, 
OPTIONAL


409 
OUT
 
UINTN
 *
D©a


455 
RETURN_STATUS


456 
EFIAPI


457 
SåDecimÆToUöt64S
 (

458 
IN
 
CONST
 
CHAR16
 *
Såög
,

459 
OUT
 
CHAR16
 **
EndPoöãr
, 
OPTIONAL


460 
OUT
 
UINT64
 *
D©a


511 
RETURN_STATUS


512 
EFIAPI


513 
SåHexToUöäS
 (

514 
IN
 
CONST
 
CHAR16
 *
Såög
,

515 
OUT
 
CHAR16
 **
EndPoöãr
, 
OPTIONAL


516 
OUT
 
UINTN
 *
D©a


567 
RETURN_STATUS


568 
EFIAPI


569 
SåHexToUöt64S
 (

570 
IN
 
CONST
 
CHAR16
 *
Såög
,

571 
OUT
 
CHAR16
 **
EndPoöãr
, 
OPTIONAL


572 
OUT
 
UINT64
 *
D©a


589 
UINTN


590 
EFIAPI


591 
AsciiSånLíS
 (

592 
IN
 
CONST
 
CHAR8
 *
Såög
,

593 
IN
 
UINTN
 
MaxSize


615 
UINTN


616 
EFIAPI


617 
AsciiSånSizeS
 (

618 
IN
 
CONST
 
CHAR8
 *
Såög
,

619 
IN
 
UINTN
 
MaxSize


645 
RETURN_STATUS


646 
EFIAPI


647 
AsciiSåCpyS
 (

648 
OUT
 
CHAR8
 *
De°ö©i⁄
,

649 
IN
 
UINTN
 
De°Max
,

650 
IN
 
CONST
 
CHAR8
 *
Sour˚


679 
RETURN_STATUS


680 
EFIAPI


681 
AsciiSånCpyS
 (

682 
OUT
 
CHAR8
 *
De°ö©i⁄
,

683 
IN
 
UINTN
 
De°Max
,

684 
IN
 
CONST
 
CHAR8
 *
Sour˚
,

685 
IN
 
UINTN
 
Lígth


714 
RETURN_STATUS


715 
EFIAPI


716 
AsciiSåC©S
 (

717 
IN
 
OUT
 
CHAR8
 *
De°ö©i⁄
,

718 
IN
 
UINTN
 
De°Max
,

719 
IN
 
CONST
 
CHAR8
 *
Sour˚


751 
RETURN_STATUS


752 
EFIAPI


753 
AsciiSånC©S
 (

754 
IN
 
OUT
 
CHAR8
 *
De°ö©i⁄
,

755 
IN
 
UINTN
 
De°Max
,

756 
IN
 
CONST
 
CHAR8
 *
Sour˚
,

757 
IN
 
UINTN
 
Lígth


801 
RETURN_STATUS


802 
EFIAPI


803 
AsciiSåDecimÆToUöäS
 (

804 
IN
 
CONST
 
CHAR8
 *
Såög
,

805 
OUT
 
CHAR8
 **
EndPoöãr
, 
OPTIONAL


806 
OUT
 
UINTN
 *
D©a


850 
RETURN_STATUS


851 
EFIAPI


852 
AsciiSåDecimÆToUöt64S
 (

853 
IN
 
CONST
 
CHAR8
 *
Såög
,

854 
OUT
 
CHAR8
 **
EndPoöãr
, 
OPTIONAL


855 
OUT
 
UINT64
 *
D©a


903 
RETURN_STATUS


904 
EFIAPI


905 
AsciiSåHexToUöäS
 (

906 
IN
 
CONST
 
CHAR8
 *
Såög
,

907 
OUT
 
CHAR8
 **
EndPoöãr
, 
OPTIONAL


908 
OUT
 
UINTN
 *
D©a


956 
RETURN_STATUS


957 
EFIAPI


958 
AsciiSåHexToUöt64S
 (

959 
IN
 
CONST
 
CHAR8
 *
Såög
,

960 
OUT
 
CHAR8
 **
EndPoöãr
, 
OPTIONAL


961 
OUT
 
UINT64
 *
D©a


982 
UINTN


983 
EFIAPI


984 
SåLí
 (

985 
IN
 
CONST
 
CHAR16
 *
Såög


1007 
UINTN


1008 
EFIAPI


1009 
SåSize
 (

1010 
IN
 
CONST
 
CHAR16
 *
Såög


1042 
INTN


1043 
EFIAPI


1044 
SåCmp
 (

1045 
IN
 
CONST
 
CHAR16
 *
Fú°Såög
,

1046 
IN
 
CONST
 
CHAR16
 *
Sec⁄dSåög


1082 
INTN


1083 
EFIAPI


1084 
SånCmp
 (

1085 
IN
 
CONST
 
CHAR16
 *
Fú°Såög
,

1086 
IN
 
CONST
 
CHAR16
 *
Sec⁄dSåög
,

1087 
IN
 
UINTN
 
Lígth


1116 
CHAR16
 *

1117 
EFIAPI


1118 
SåSå
 (

1119 
IN
 
CONST
 
CHAR16
 *
Såög
,

1120 
IN
 
CONST
 
CHAR16
 *
SórchSåög


1157 
UINTN


1158 
EFIAPI


1159 
SåDecimÆToUöä
 (

1160 
IN
 
CONST
 
CHAR16
 *
Såög


1197 
UINT64


1198 
EFIAPI


1199 
SåDecimÆToUöt64
 (

1200 
IN
 
CONST
 
CHAR16
 *
Såög


1239 
UINTN


1240 
EFIAPI


1241 
SåHexToUöä
 (

1242 
IN
 
CONST
 
CHAR16
 *
Såög


1281 
UINT64


1282 
EFIAPI


1283 
SåHexToUöt64
 (

1284 
IN
 
CONST
 
CHAR16
 *
Såög


1337 
RETURN_STATUS


1338 
EFIAPI


1339 
SåToIpv6Addªss
 (

1340 
IN
 
CONST
 
CHAR16
 *
Såög
,

1341 
OUT
 
CHAR16
 **
EndPoöãr
, 
OPTIONAL


1342 
OUT
 
IPv6_ADDRESS
 *
Addªss
,

1343 
OUT
 
UINT8
 *
PªfixLígth
 
OPTIONAL


1387 
RETURN_STATUS


1388 
EFIAPI


1389 
SåToIpv4Addªss
 (

1390 
IN
 
CONST
 
CHAR16
 *
Såög
,

1391 
OUT
 
CHAR16
 **
EndPoöãr
, 
OPTIONAL


1392 
OUT
 
IPv4_ADDRESS
 *
Addªss
,

1393 
OUT
 
UINT8
 *
PªfixLígth
 
OPTIONAL


1396 
	#GUID_STRING_LENGTH
 36

	)

1440 
RETURN_STATUS


1441 
EFIAPI


1442 
SåToGuid
 (

1443 
IN
 
CONST
 
CHAR16
 *
Såög
,

1444 
OUT
 
GUID
 *
Guid


1480 
RETURN_STATUS


1481 
EFIAPI


1482 
SåHexToByãs
 (

1483 
IN
 
CONST
 
CHAR16
 *
Såög
,

1484 
IN
 
UINTN
 
Lígth
,

1485 
OUT
 
UINT8
 *
Buf„r
,

1486 
IN
 
UINTN
 
MaxBuf„rSize


1530 
RETURN_STATUS


1531 
EFIAPI


1532 
UnicodeSåToAsciiSåS
 (

1533 
IN
 
CONST
 
CHAR16
 *
Sour˚
,

1534 
OUT
 
CHAR8
 *
De°ö©i⁄
,

1535 
IN
 
UINTN
 
De°Max


1581 
RETURN_STATUS


1582 
EFIAPI


1583 
UnicodeSånToAsciiSåS
 (

1584 
IN
 
CONST
 
CHAR16
 *
Sour˚
,

1585 
IN
 
UINTN
 
Lígth
,

1586 
OUT
 
CHAR8
 *
De°ö©i⁄
,

1587 
IN
 
UINTN
 
De°Max
,

1588 
OUT
 
UINTN
 *
De°ö©i⁄Lígth


1609 
UINTN


1610 
EFIAPI


1611 
AsciiSåLí
 (

1612 
IN
 
CONST
 
CHAR8
 *
Såög


1633 
UINTN


1634 
EFIAPI


1635 
AsciiSåSize
 (

1636 
IN
 
CONST
 
CHAR8
 *
Såög


1666 
INTN


1667 
EFIAPI


1668 
AsciiSåCmp
 (

1669 
IN
 
CONST
 
CHAR8
 *
Fú°Såög
,

1670 
IN
 
CONST
 
CHAR8
 *
Sec⁄dSåög


1703 
INTN


1704 
EFIAPI


1705 
AsciiSåiCmp
 (

1706 
IN
 
CONST
 
CHAR8
 *
Fú°Såög
,

1707 
IN
 
CONST
 
CHAR8
 *
Sec⁄dSåög


1741 
INTN


1742 
EFIAPI


1743 
AsciiSånCmp
 (

1744 
IN
 
CONST
 
CHAR8
 *
Fú°Såög
,

1745 
IN
 
CONST
 
CHAR8
 *
Sec⁄dSåög
,

1746 
IN
 
UINTN
 
Lígth


1774 
CHAR8
 *

1775 
EFIAPI


1776 
AsciiSåSå
 (

1777 
IN
 
CONST
 
CHAR8
 *
Såög
,

1778 
IN
 
CONST
 
CHAR8
 *
SórchSåög


1812 
UINTN


1813 
EFIAPI


1814 
AsciiSåDecimÆToUöä
 (

1815 
IN
 
CONST
 
CHAR8
 *
Såög


1849 
UINT64


1850 
EFIAPI


1851 
AsciiSåDecimÆToUöt64
 (

1852 
IN
 
CONST
 
CHAR8
 *
Såög


1890 
UINTN


1891 
EFIAPI


1892 
AsciiSåHexToUöä
 (

1893 
IN
 
CONST
 
CHAR8
 *
Såög


1931 
UINT64


1932 
EFIAPI


1933 
AsciiSåHexToUöt64
 (

1934 
IN
 
CONST
 
CHAR8
 *
Såög


1985 
RETURN_STATUS


1986 
EFIAPI


1987 
AsciiSåToIpv6Addªss
 (

1988 
IN
 
CONST
 
CHAR8
 *
Såög
,

1989 
OUT
 
CHAR8
 **
EndPoöãr
, 
OPTIONAL


1990 
OUT
 
IPv6_ADDRESS
 *
Addªss
,

1991 
OUT
 
UINT8
 *
PªfixLígth
 
OPTIONAL


2033 
RETURN_STATUS


2034 
EFIAPI


2035 
AsciiSåToIpv4Addªss
 (

2036 
IN
 
CONST
 
CHAR8
 *
Såög
,

2037 
OUT
 
CHAR8
 **
EndPoöãr
, 
OPTIONAL


2038 
OUT
 
IPv4_ADDRESS
 *
Addªss
,

2039 
OUT
 
UINT8
 *
PªfixLígth
 
OPTIONAL


2082 
RETURN_STATUS


2083 
EFIAPI


2084 
AsciiSåToGuid
 (

2085 
IN
 
CONST
 
CHAR8
 *
Såög
,

2086 
OUT
 
GUID
 *
Guid


2120 
RETURN_STATUS


2121 
EFIAPI


2122 
AsciiSåHexToByãs
 (

2123 
IN
 
CONST
 
CHAR8
 *
Såög
,

2124 
IN
 
UINTN
 
Lígth
,

2125 
OUT
 
UINT8
 *
Buf„r
,

2126 
IN
 
UINTN
 
MaxBuf„rSize


2166 
RETURN_STATUS


2167 
EFIAPI


2168 
AsciiSåToUnicodeSåS
 (

2169 
IN
 
CONST
 
CHAR8
 *
Sour˚
,

2170 
OUT
 
CHAR16
 *
De°ö©i⁄
,

2171 
IN
 
UINTN
 
De°Max


2216 
RETURN_STATUS


2217 
EFIAPI


2218 
AsciiSånToUnicodeSåS
 (

2219 
IN
 
CONST
 
CHAR8
 *
Sour˚
,

2220 
IN
 
UINTN
 
Lígth
,

2221 
OUT
 
CHAR16
 *
De°ö©i⁄
,

2222 
IN
 
UINTN
 
De°Max
,

2223 
OUT
 
UINTN
 *
De°ö©i⁄Lígth


2241 
CHAR16


2242 
EFIAPI


2243 
Ch¨ToUµî
 (

2244 
IN
 
CHAR16
 
Ch¨


2260 
CHAR8


2261 
EFIAPI


2262 
AsciiCh¨ToUµî
 (

2263 
IN
 
CHAR8
 
Chr


2285 
RETURN_STATUS


2286 
EFIAPI


2287 
Ba£64Encode
 (

2288 
IN
 
CONST
 
UINT8
 *
Sour˚
,

2289 
IN
 
UINTN
 
Sour˚Lígth
,

2290 
OUT
 
CHAR8
 *
De°ö©i⁄
 
OPTIONAL
,

2291 
IN
 
OUT
 
UINTN
 *
De°ö©i⁄Size


2376 
RETURN_STATUS


2377 
EFIAPI


2378 
Ba£64Decode
 (

2379 
IN
 
CONST
 
CHAR8
 *
Sour˚
 
OPTIONAL
,

2380 
IN
 
UINTN
 
Sour˚Size
,

2381 
OUT
 
UINT8
 *
De°ö©i⁄
 
OPTIONAL
,

2382 
IN
 
OUT
 
UINTN
 *
De°ö©i⁄Size


2398 
UINT8


2399 
EFIAPI


2400 
DecimÆToBcd8
 (

2401 
IN
 
UINT8
 
VÆue


2419 
UINT8


2420 
EFIAPI


2421 
BcdToDecimÆ8
 (

2422 
IN
 
UINT8
 
VÆue


2437 
BOOLEAN


2438 
EFIAPI


2439 
P©hRemoveLa°Iãm
(

2440 
IN
 
OUT
 
CHAR16
 *
P©h


2456 
CHAR16
*

2457 
EFIAPI


2458 
P©hCÀ™UpDúe˘‹õs
(

2459 
IN
 
CHAR16
 *
P©h


2480 
	#INITIALIZE_LIST_HEAD_VARIABLE
(
Li°Hód
Ë{&(Li°Hód), &(Li°Hód)}

	)

2489 
	#BASE_LIST_FOR_EACH
(
E¡ry
, 
Li°Hód
Ë\

	)

2490 
	gE¡ry
 = (
Li°Hód
)->
F‹w¨dLök
; E¡ry !(Li°Hód); E¡ry = 
E¡ry
->ForwardLink)

2505 
	#BASE_LIST_FOR_EACH_SAFE
(
E¡ry
, 
NextE¡ry
, 
Li°Hód
Ë\

	)

2506 
	gE¡ry
 = (
Li°Hód
)->
F‹w¨dLök
, 
	gNextE¡ry
 = 
E¡ry
->ForwardLink;\

2507 
	gE¡ry
 !(
Li°Hód
); E¡ry = 
NextE¡ry
, 
	gNextE¡ry
 = 
E¡ry
->
F‹w¨dLök
)

2528 
BOOLEAN


2529 
EFIAPI


2530 
IsNodeInLi°
 (

2531 
IN
 
CONST
 
LIST_ENTRY
 *
Fú°E¡ry
,

2532 
IN
 
CONST
 
LIST_ENTRY
 *
Sec⁄dE¡ry


2552 
LIST_ENTRY
 *

2553 
EFIAPI


2554 
InôülizeLi°Hód
 (

2555 
IN
 
OUT
 
LIST_ENTRY
 *
Li°Hód


2581 
LIST_ENTRY
 *

2582 
EFIAPI


2583 
In£πHódLi°
 (

2584 
IN
 
OUT
 
LIST_ENTRY
 *
Li°Hód
,

2585 
IN
 
OUT
 
LIST_ENTRY
 *
E¡ry


2611 
LIST_ENTRY
 *

2612 
EFIAPI


2613 
In£πTaûLi°
 (

2614 
IN
 
OUT
 
LIST_ENTRY
 *
Li°Hód
,

2615 
IN
 
OUT
 
LIST_ENTRY
 *
E¡ry


2639 
LIST_ENTRY
 *

2640 
EFIAPI


2641 
GëFú°Node
 (

2642 
IN
 
CONST
 
LIST_ENTRY
 *
Li°


2667 
LIST_ENTRY
 *

2668 
EFIAPI


2669 
GëNextNode
 (

2670 
IN
 
CONST
 
LIST_ENTRY
 *
Li°
,

2671 
IN
 
CONST
 
LIST_ENTRY
 *
Node


2696 
LIST_ENTRY
 *

2697 
EFIAPI


2698 
GëPªviousNode
 (

2699 
IN
 
CONST
 
LIST_ENTRY
 *
Li°
,

2700 
IN
 
CONST
 
LIST_ENTRY
 *
Node


2723 
BOOLEAN


2724 
EFIAPI


2725 
IsLi°Em±y
 (

2726 
IN
 
CONST
 
LIST_ENTRY
 *
Li°Hód


2756 
BOOLEAN


2757 
EFIAPI


2758 
IsNuŒ
 (

2759 
IN
 
CONST
 
LIST_ENTRY
 *
Li°
,

2760 
IN
 
CONST
 
LIST_ENTRY
 *
Node


2787 
BOOLEAN


2788 
EFIAPI


2789 
IsNodeAtEnd
 (

2790 
IN
 
CONST
 
LIST_ENTRY
 *
Li°
,

2791 
IN
 
CONST
 
LIST_ENTRY
 *
Node


2821 
LIST_ENTRY
 *

2822 
EFIAPI


2823 
Sw≠Li°E¡rõs
 (

2824 
IN
 
OUT
 
LIST_ENTRY
 *
Fú°E¡ry
,

2825 
IN
 
OUT
 
LIST_ENTRY
 *
Sec⁄dE¡ry


2850 
LIST_ENTRY
 *

2851 
EFIAPI


2852 
RemoveE¡ryLi°
 (

2853 
IN
 
CONST
 
LIST_ENTRY
 *
E¡ry


2875 
UINT64


2876 
EFIAPI


2877 
LShi·U64
 (

2878 
IN
 
UINT64
 
O≥ønd
,

2879 
IN
 
UINTN
 
Cou¡


2898 
UINT64


2899 
EFIAPI


2900 
RShi·U64
 (

2901 
IN
 
UINT64
 
O≥ønd
,

2902 
IN
 
UINTN
 
Cou¡


2921 
UINT64


2922 
EFIAPI


2923 
ARShi·U64
 (

2924 
IN
 
UINT64
 
O≥ønd
,

2925 
IN
 
UINTN
 
Cou¡


2945 
UINT32


2946 
EFIAPI


2947 
LRŸU32
 (

2948 
IN
 
UINT32
 
O≥ønd
,

2949 
IN
 
UINTN
 
Cou¡


2969 
UINT32


2970 
EFIAPI


2971 
RRŸU32
 (

2972 
IN
 
UINT32
 
O≥ønd
,

2973 
IN
 
UINTN
 
Cou¡


2993 
UINT64


2994 
EFIAPI


2995 
LRŸU64
 (

2996 
IN
 
UINT64
 
O≥ønd
,

2997 
IN
 
UINTN
 
Cou¡


3017 
UINT64


3018 
EFIAPI


3019 
RRŸU64
 (

3020 
IN
 
UINT64
 
O≥ønd
,

3021 
IN
 
UINTN
 
Cou¡


3038 
INTN


3039 
EFIAPI


3040 
LowBôSë32
 (

3041 
IN
 
UINT32
 
O≥ønd


3059 
INTN


3060 
EFIAPI


3061 
LowBôSë64
 (

3062 
IN
 
UINT64
 
O≥ønd


3080 
INTN


3081 
EFIAPI


3082 
HighBôSë32
 (

3083 
IN
 
UINT32
 
O≥ønd


3101 
INTN


3102 
EFIAPI


3103 
HighBôSë64
 (

3104 
IN
 
UINT64
 
O≥ønd


3121 
UINT32


3122 
EFIAPI


3123 
GëPowîOfTwo32
 (

3124 
IN
 
UINT32
 
O≥ønd


3141 
UINT64


3142 
EFIAPI


3143 
GëPowîOfTwo64
 (

3144 
IN
 
UINT64
 
O≥ønd


3160 
UINT16


3161 
EFIAPI


3162 
Sw≠Byãs16
 (

3163 
IN
 
UINT16
 
VÆue


3179 
UINT32


3180 
EFIAPI


3181 
Sw≠Byãs32
 (

3182 
IN
 
UINT32
 
VÆue


3198 
UINT64


3199 
EFIAPI


3200 
Sw≠Byãs64
 (

3201 
IN
 
UINT64
 
VÆue


3219 
UINT64


3220 
EFIAPI


3221 
Mu…U64x32
 (

3222 
IN
 
UINT64
 
Mu…ùliˇnd
,

3223 
IN
 
UINT32
 
Mu…ùlõr


3241 
UINT64


3242 
EFIAPI


3243 
Mu…U64x64
 (

3244 
IN
 
UINT64
 
Mu…ùliˇnd
,

3245 
IN
 
UINT64
 
Mu…ùlõr


3263 
INT64


3264 
EFIAPI


3265 
Mu…S64x64
 (

3266 
IN
 
INT64
 
Mu…ùliˇnd
,

3267 
IN
 
INT64
 
Mu…ùlõr


3287 
UINT64


3288 
EFIAPI


3289 
DivU64x32
 (

3290 
IN
 
UINT64
 
Dividíd
,

3291 
IN
 
UINT32
 
Divis‹


3311 
UINT32


3312 
EFIAPI


3313 
ModU64x32
 (

3314 
IN
 
UINT64
 
Dividíd
,

3315 
IN
 
UINT32
 
Divis‹


3338 
UINT64


3339 
EFIAPI


3340 
DivU64x32Remaödî
 (

3341 
IN
 
UINT64
 
Dividíd
,

3342 
IN
 
UINT32
 
Divis‹
,

3343 
OUT
 
UINT32
 *
Remaödî
 
OPTIONAL


3366 
UINT64


3367 
EFIAPI


3368 
DivU64x64Remaödî
 (

3369 
IN
 
UINT64
 
Dividíd
,

3370 
IN
 
UINT64
 
Divis‹
,

3371 
OUT
 
UINT64
 *
Remaödî
 
OPTIONAL


3398 
INT64


3399 
EFIAPI


3400 
DivS64x64Remaödî
 (

3401 
IN
 
INT64
 
Dividíd
,

3402 
IN
 
INT64
 
Divis‹
,

3403 
OUT
 
INT64
 *
Remaödî
 
OPTIONAL


3420 
UINT16


3421 
EFIAPI


3422 
RódU«lig√d16
 (

3423 
IN
 
CONST
 
UINT16
 *
Buf„r


3442 
UINT16


3443 
EFIAPI


3444 
WrôeU«lig√d16
 (

3445 
OUT
 
UINT16
 *
Buf„r
,

3446 
IN
 
UINT16
 
VÆue


3463 
UINT32


3464 
EFIAPI


3465 
RódU«lig√d24
 (

3466 
IN
 
CONST
 
UINT32
 *
Buf„r


3485 
UINT32


3486 
EFIAPI


3487 
WrôeU«lig√d24
 (

3488 
OUT
 
UINT32
 *
Buf„r
,

3489 
IN
 
UINT32
 
VÆue


3506 
UINT32


3507 
EFIAPI


3508 
RódU«lig√d32
 (

3509 
IN
 
CONST
 
UINT32
 *
Buf„r


3528 
UINT32


3529 
EFIAPI


3530 
WrôeU«lig√d32
 (

3531 
OUT
 
UINT32
 *
Buf„r
,

3532 
IN
 
UINT32
 
VÆue


3549 
UINT64


3550 
EFIAPI


3551 
RódU«lig√d64
 (

3552 
IN
 
CONST
 
UINT64
 *
Buf„r


3571 
UINT64


3572 
EFIAPI


3573 
WrôeU«lig√d64
 (

3574 
OUT
 
UINT64
 *
Buf„r
,

3575 
IN
 
UINT64
 
VÆue


3602 
UINT8


3603 
EFIAPI


3604 
BôFõldRód8
 (

3605 
IN
 
UINT8
 
O≥ønd
,

3606 
IN
 
UINTN
 
SèπBô
,

3607 
IN
 
UINTN
 
EndBô


3634 
UINT8


3635 
EFIAPI


3636 
BôFõldWrôe8
 (

3637 
IN
 
UINT8
 
O≥ønd
,

3638 
IN
 
UINTN
 
SèπBô
,

3639 
IN
 
UINTN
 
EndBô
,

3640 
IN
 
UINT8
 
VÆue


3668 
UINT8


3669 
EFIAPI


3670 
BôFõldOr8
 (

3671 
IN
 
UINT8
 
O≥ønd
,

3672 
IN
 
UINTN
 
SèπBô
,

3673 
IN
 
UINTN
 
EndBô
,

3674 
IN
 
UINT8
 
OrD©a


3702 
UINT8


3703 
EFIAPI


3704 
BôFõldAnd8
 (

3705 
IN
 
UINT8
 
O≥ønd
,

3706 
IN
 
UINTN
 
SèπBô
,

3707 
IN
 
UINTN
 
EndBô
,

3708 
IN
 
UINT8
 
AndD©a


3739 
UINT8


3740 
EFIAPI


3741 
BôFõldAndThíOr8
 (

3742 
IN
 
UINT8
 
O≥ønd
,

3743 
IN
 
UINTN
 
SèπBô
,

3744 
IN
 
UINTN
 
EndBô
,

3745 
IN
 
UINT8
 
AndD©a
,

3746 
IN
 
UINT8
 
OrD©a


3769 
UINT16


3770 
EFIAPI


3771 
BôFõldRód16
 (

3772 
IN
 
UINT16
 
O≥ønd
,

3773 
IN
 
UINTN
 
SèπBô
,

3774 
IN
 
UINTN
 
EndBô


3801 
UINT16


3802 
EFIAPI


3803 
BôFõldWrôe16
 (

3804 
IN
 
UINT16
 
O≥ønd
,

3805 
IN
 
UINTN
 
SèπBô
,

3806 
IN
 
UINTN
 
EndBô
,

3807 
IN
 
UINT16
 
VÆue


3835 
UINT16


3836 
EFIAPI


3837 
BôFõldOr16
 (

3838 
IN
 
UINT16
 
O≥ønd
,

3839 
IN
 
UINTN
 
SèπBô
,

3840 
IN
 
UINTN
 
EndBô
,

3841 
IN
 
UINT16
 
OrD©a


3869 
UINT16


3870 
EFIAPI


3871 
BôFõldAnd16
 (

3872 
IN
 
UINT16
 
O≥ønd
,

3873 
IN
 
UINTN
 
SèπBô
,

3874 
IN
 
UINTN
 
EndBô
,

3875 
IN
 
UINT16
 
AndD©a


3906 
UINT16


3907 
EFIAPI


3908 
BôFõldAndThíOr16
 (

3909 
IN
 
UINT16
 
O≥ønd
,

3910 
IN
 
UINTN
 
SèπBô
,

3911 
IN
 
UINTN
 
EndBô
,

3912 
IN
 
UINT16
 
AndD©a
,

3913 
IN
 
UINT16
 
OrD©a


3936 
UINT32


3937 
EFIAPI


3938 
BôFõldRód32
 (

3939 
IN
 
UINT32
 
O≥ønd
,

3940 
IN
 
UINTN
 
SèπBô
,

3941 
IN
 
UINTN
 
EndBô


3968 
UINT32


3969 
EFIAPI


3970 
BôFõldWrôe32
 (

3971 
IN
 
UINT32
 
O≥ønd
,

3972 
IN
 
UINTN
 
SèπBô
,

3973 
IN
 
UINTN
 
EndBô
,

3974 
IN
 
UINT32
 
VÆue


4002 
UINT32


4003 
EFIAPI


4004 
BôFõldOr32
 (

4005 
IN
 
UINT32
 
O≥ønd
,

4006 
IN
 
UINTN
 
SèπBô
,

4007 
IN
 
UINTN
 
EndBô
,

4008 
IN
 
UINT32
 
OrD©a


4036 
UINT32


4037 
EFIAPI


4038 
BôFõldAnd32
 (

4039 
IN
 
UINT32
 
O≥ønd
,

4040 
IN
 
UINTN
 
SèπBô
,

4041 
IN
 
UINTN
 
EndBô
,

4042 
IN
 
UINT32
 
AndD©a


4073 
UINT32


4074 
EFIAPI


4075 
BôFõldAndThíOr32
 (

4076 
IN
 
UINT32
 
O≥ønd
,

4077 
IN
 
UINTN
 
SèπBô
,

4078 
IN
 
UINTN
 
EndBô
,

4079 
IN
 
UINT32
 
AndD©a
,

4080 
IN
 
UINT32
 
OrD©a


4103 
UINT64


4104 
EFIAPI


4105 
BôFõldRód64
 (

4106 
IN
 
UINT64
 
O≥ønd
,

4107 
IN
 
UINTN
 
SèπBô
,

4108 
IN
 
UINTN
 
EndBô


4135 
UINT64


4136 
EFIAPI


4137 
BôFõldWrôe64
 (

4138 
IN
 
UINT64
 
O≥ønd
,

4139 
IN
 
UINTN
 
SèπBô
,

4140 
IN
 
UINTN
 
EndBô
,

4141 
IN
 
UINT64
 
VÆue


4169 
UINT64


4170 
EFIAPI


4171 
BôFõldOr64
 (

4172 
IN
 
UINT64
 
O≥ønd
,

4173 
IN
 
UINTN
 
SèπBô
,

4174 
IN
 
UINTN
 
EndBô
,

4175 
IN
 
UINT64
 
OrD©a


4203 
UINT64


4204 
EFIAPI


4205 
BôFõldAnd64
 (

4206 
IN
 
UINT64
 
O≥ønd
,

4207 
IN
 
UINTN
 
SèπBô
,

4208 
IN
 
UINTN
 
EndBô
,

4209 
IN
 
UINT64
 
AndD©a


4240 
UINT64


4241 
EFIAPI


4242 
BôFõldAndThíOr64
 (

4243 
IN
 
UINT64
 
O≥ønd
,

4244 
IN
 
UINTN
 
SèπBô
,

4245 
IN
 
UINTN
 
EndBô
,

4246 
IN
 
UINT64
 
AndD©a
,

4247 
IN
 
UINT64
 
OrD©a


4270 
UINT8


4271 
EFIAPI


4272 
BôFõldCou¡O√s32
 (

4273 
IN
 
UINT32
 
O≥ønd
,

4274 
IN
 
UINTN
 
SèπBô
,

4275 
IN
 
UINTN
 
EndBô


4298 
UINT8


4299 
EFIAPI


4300 
BôFõldCou¡O√s64
 (

4301 
IN
 
UINT64
 
O≥ønd
,

4302 
IN
 
UINTN
 
SèπBô
,

4303 
IN
 
UINTN
 
EndBô


4328 
UINT8


4329 
EFIAPI


4330 
CÆcuœãSum8
 (

4331 
IN
 
CONST
 
UINT8
 *
Buf„r
,

4332 
IN
 
UINTN
 
Lígth


4354 
UINT8


4355 
EFIAPI


4356 
CÆcuœãCheckSum8
 (

4357 
IN
 
CONST
 
UINT8
 *
Buf„r
,

4358 
IN
 
UINTN
 
Lígth


4381 
UINT16


4382 
EFIAPI


4383 
CÆcuœãSum16
 (

4384 
IN
 
CONST
 
UINT16
 *
Buf„r
,

4385 
IN
 
UINTN
 
Lígth


4409 
UINT16


4410 
EFIAPI


4411 
CÆcuœãCheckSum16
 (

4412 
IN
 
CONST
 
UINT16
 *
Buf„r
,

4413 
IN
 
UINTN
 
Lígth


4436 
UINT32


4437 
EFIAPI


4438 
CÆcuœãSum32
 (

4439 
IN
 
CONST
 
UINT32
 *
Buf„r
,

4440 
IN
 
UINTN
 
Lígth


4464 
UINT32


4465 
EFIAPI


4466 
CÆcuœãCheckSum32
 (

4467 
IN
 
CONST
 
UINT32
 *
Buf„r
,

4468 
IN
 
UINTN
 
Lígth


4491 
UINT64


4492 
EFIAPI


4493 
CÆcuœãSum64
 (

4494 
IN
 
CONST
 
UINT64
 *
Buf„r
,

4495 
IN
 
UINTN
 
Lígth


4519 
UINT64


4520 
EFIAPI


4521 
CÆcuœãCheckSum64
 (

4522 
IN
 
CONST
 
UINT64
 *
Buf„r
,

4523 
IN
 
UINTN
 
Lígth


4539 
UINT32


4540 
EFIAPI


4541 
CÆcuœãCrc32
(

4542 
IN
 
VOID
 *
Buf„r
,

4543 
IN
 
UINTN
 
Lígth


4558 
	gVOID


4559 (
	tEFIAPI
 *
	tSWITCH_STACK_ENTRY_POINT
)(

4560 
	tIN
 
	tVOID
 *
	tC⁄ãxt1
, 
	tOPTIONAL


4561 
	tIN
 
	tVOID
 *
	tC⁄ãxt2
 
	tOPTIONAL


4572 
VOID


4573 
EFIAPI


4574 
Mem‹yFí˚
 (

4575 
VOID


4600 
RETURNS_TWICE


4601 
UINTN


4602 
EFIAPI


4603 
SëJump
 (

4604 
OUT
 
BASE_LIBRARY_JUMP_BUFFER
 *
JumpBuf„r


4624 
VOID


4625 
EFIAPI


4626 
L⁄gJump
 (

4627 
IN
 
BASE_LIBRARY_JUMP_BUFFER
 *
JumpBuf„r
,

4628 
IN
 
UINTN
 
VÆue


4636 
VOID


4637 
EFIAPI


4638 
E«bÀI¡îru±s
 (

4639 
VOID


4647 
VOID


4648 
EFIAPI


4649 
DißbÀI¡îru±s
 (

4650 
VOID


4662 
BOOLEAN


4663 
EFIAPI


4664 
SaveAndDißbÀI¡îru±s
 (

4665 
VOID


4674 
VOID


4675 
EFIAPI


4676 
E«bÀDißbÀI¡îru±s
 (

4677 
VOID


4691 
BOOLEAN


4692 
EFIAPI


4693 
GëI¡îru±Sèã
 (

4694 
VOID


4712 
BOOLEAN


4713 
EFIAPI


4714 
SëI¡îru±Sèã
 (

4715 
IN
 
BOOLEAN
 
I¡îru±Sèã


4726 
VOID


4727 
EFIAPI


4728 
CpuPau£
 (

4729 
VOID


4762 
VOID


4763 
EFIAPI


4764 
SwôchSèck
 (

4765 
IN
 
SWITCH_STACK_ENTRY_POINT
 
E¡ryPoöt
,

4766 
IN
 
VOID
 *
C⁄ãxt1
, 
OPTIONAL


4767 
IN
 
VOID
 *
C⁄ãxt2
, 
OPTIONAL


4768 
IN
 
VOID
 *
NewSèck
,

4780 
VOID


4781 
EFIAPI


4782 
CpuBªakpoöt
 (

4783 
VOID


4796 
VOID


4797 
EFIAPI


4798 
CpuDódLo›
 (

4799 
VOID


4810 
VOID


4811 
EFIAPI


4812 
S≥cuœti⁄B¨rõr
 (

4813 
VOID


4817 #i‡
deföed
 (
MDE_CPU_IA32
Ë|| deföed (
MDE_CPU_X64
)

4824 
UINT32
 
	mCF
:1;

4825 
UINT32
 
	mRe£rved_0
:1;

4826 
UINT32
 
	mPF
:1;

4827 
UINT32
 
	mRe£rved_1
:1;

4828 
UINT32
 
	mAF
:1;

4829 
UINT32
 
	mRe£rved_2
:1;

4830 
UINT32
 
	mZF
:1;

4831 
UINT32
 
	mSF
:1;

4832 
UINT32
 
	mTF
:1;

4833 
UINT32
 
	mIF
:1;

4834 
UINT32
 
	mDF
:1;

4835 
UINT32
 
	mOF
:1;

4836 
UINT32
 
	mIOPL
:2;

4837 
UINT32
 
	mNT
:1;

4838 
UINT32
 
	mRe£rved_3
:1;

4839 } 
	mBôs
;

4840 
UINT16
 
	mUöt16
;

4841 } 
	tIA32_FLAGS16
;

4850 
UINT32
 
	mCF
:1;

4851 
UINT32
 
	mRe£rved_0
:1;

4852 
UINT32
 
	mPF
:1;

4853 
UINT32
 
	mRe£rved_1
:1;

4854 
UINT32
 
	mAF
:1;

4855 
UINT32
 
	mRe£rved_2
:1;

4856 
UINT32
 
	mZF
:1;

4857 
UINT32
 
	mSF
:1;

4858 
UINT32
 
	mTF
:1;

4859 
UINT32
 
	mIF
:1;

4860 
UINT32
 
	mDF
:1;

4861 
UINT32
 
	mOF
:1;

4862 
UINT32
 
	mIOPL
:2;

4863 
UINT32
 
	mNT
:1;

4864 
UINT32
 
	mRe£rved_3
:1;

4865 
UINT32
 
	mRF
:1;

4866 
UINT32
 
	mVM
:1;

4867 
UINT32
 
	mAC
:1;

4868 
UINT32
 
	mVIF
:1;

4869 
UINT32
 
	mVIP
:1;

4870 
UINT32
 
	mID
:1;

4871 
UINT32
 
	mRe£rved_4
:10;

4872 } 
	mBôs
;

4873 
UINTN
 
	mUötN
;

4874 } 
	tIA32_EFLAGS32
;

4883 
UINT32
 
	mPE
:1;

4884 
UINT32
 
	mMP
:1;

4885 
UINT32
 
	mEM
:1;

4886 
UINT32
 
	mTS
:1;

4887 
UINT32
 
	mET
:1;

4888 
UINT32
 
	mNE
:1;

4889 
UINT32
 
	mRe£rved_0
:10;

4890 
UINT32
 
	mWP
:1;

4891 
UINT32
 
	mRe£rved_1
:1;

4892 
UINT32
 
	mAM
:1;

4893 
UINT32
 
	mRe£rved_2
:10;

4894 
UINT32
 
	mNW
:1;

4895 
UINT32
 
	mCD
:1;

4896 
UINT32
 
	mPG
:1;

4897 } 
	mBôs
;

4898 
UINTN
 
	mUötN
;

4899 } 
	tIA32_CR0
;

4908 
UINT32
 
	mVME
:1;

4909 
UINT32
 
	mPVI
:1;

4910 
UINT32
 
	mTSD
:1;

4911 
UINT32
 
	mDE
:1;

4912 
UINT32
 
	mPSE
:1;

4913 
UINT32
 
	mPAE
:1;

4914 
UINT32
 
	mMCE
:1;

4915 
UINT32
 
	mPGE
:1;

4916 
UINT32
 
	mPCE
:1;

4918 
UINT32
 
	mOSFXSR
:1;

4920 
UINT32
 
	mOSXMMEXCPT
:1;

4923 
UINT32
 
	mUMIP
:1;

4924 
UINT32
 
	mLA57
:1;

4925 
UINT32
 
	mVMXE
:1;

4926 
UINT32
 
	mSMXE
:1;

4927 
UINT32
 
	mRe£rved_3
:1;

4928 
UINT32
 
	mFSGSBASE
:1;

4929 
UINT32
 
	mPCIDE
:1;

4930 
UINT32
 
	mOSXSAVE
:1;

4931 
UINT32
 
	mRe£rved_4
:1;

4932 
UINT32
 
	mSMEP
:1;

4933 
UINT32
 
	mSMAP
:1;

4934 
UINT32
 
	mPKE
:1;

4935 
UINT32
 
	mRe£rved_5
:9;

4936 } 
	mBôs
;

4937 
UINTN
 
	mUötN
;

4938 } 
	tIA32_CR4
;

4945 
UINT32
 
	mLimôLow
:16;

4946 
UINT32
 
	mBa£Low
:16;

4947 
UINT32
 
	mBa£Mid
:8;

4948 
UINT32
 
	mTy≥
:4;

4949 
UINT32
 
	mS
:1;

4950 
UINT32
 
	mDPL
:2;

4951 
UINT32
 
	mP
:1;

4952 
UINT32
 
	mLimôHigh
:4;

4953 
UINT32
 
	mAVL
:1;

4954 
UINT32
 
	mL
:1;

4955 
UINT32
 
	mDB
:1;

4956 
UINT32
 
	mG
:1;

4957 
UINT32
 
	mBa£High
:8;

4958 } 
	mBôs
;

4959 
UINT64
 
	mUöt64
;

4960 } 
	tIA32_SEGMENT_DESCRIPTOR
;

4965 #¥agm®
∑ck
 (1)

4967 
UINT16
 
	mLimô
;

4968 
UINTN
 
	mBa£
;

4969 } 
	tIA32_DESCRIPTOR
;

4970 #¥agm®
∑ck
 ()

4972 
	#IA32_IDT_GATE_TYPE_TASK
 0x85

	)

4973 
	#IA32_IDT_GATE_TYPE_INTERRUPT_16
 0x86

	)

4974 
	#IA32_IDT_GATE_TYPE_TRAP_16
 0x87

	)

4975 
	#IA32_IDT_GATE_TYPE_INTERRUPT_32
 0x8E

	)

4976 
	#IA32_IDT_GATE_TYPE_TRAP_32
 0x8F

	)

4978 
	#IA32_GDT_TYPE_TSS
 0x9

	)

4979 
	#IA32_GDT_ALIGNMENT
 8

	)

4981 #i‡
deföed
 (
MDE_CPU_IA32
)

4987 
UINT32
 
	mOff£tLow
:16;

4988 
UINT32
 
	mSñe˘‹
:16;

4989 
UINT32
 
	mRe£rved_0
:8;

4990 
UINT32
 
	mG©eTy≥
:8;

4991 
UINT32
 
	mOff£tHigh
:16;

4992 } 
	mBôs
;

4993 
UINT64
 
	mUöt64
;

4994 } 
	tIA32_IDT_GATE_DESCRIPTOR
;

4996 #¥agm®
∑ck
 (1)

5001 
UINT16
 
	mPªviousTaskLök
;

5002 
UINT16
 
	mRe£rved_2
;

5003 
UINT32
 
	mESP0
;

5004 
UINT16
 
	mSS0
;

5005 
UINT16
 
	mRe£rved_10
;

5006 
UINT32
 
	mESP1
;

5007 
UINT16
 
	mSS1
;

5008 
UINT16
 
	mRe£rved_18
;

5009 
UINT32
 
	mESP2
;

5010 
UINT16
 
	mSS2
;

5011 
UINT16
 
	mRe£rved_26
;

5012 
UINT32
 
	mCR3
;

5013 
UINT32
 
	mEIP
;

5014 
UINT32
 
	mEFLAGS
;

5015 
UINT32
 
	mEAX
;

5016 
UINT32
 
	mECX
;

5017 
UINT32
 
	mEDX
;

5018 
UINT32
 
	mEBX
;

5019 
UINT32
 
	mESP
;

5020 
UINT32
 
	mEBP
;

5021 
UINT32
 
	mESI
;

5022 
UINT32
 
	mEDI
;

5023 
UINT16
 
	mES
;

5024 
UINT16
 
	mRe£rved_74
;

5025 
UINT16
 
	mCS
;

5026 
UINT16
 
	mRe£rved_78
;

5027 
UINT16
 
	mSS
;

5028 
UINT16
 
	mRe£rved_82
;

5029 
UINT16
 
	mDS
;

5030 
UINT16
 
	mRe£rved_86
;

5031 
UINT16
 
	mFS
;

5032 
UINT16
 
	mRe£rved_90
;

5033 
UINT16
 
	mGS
;

5034 
UINT16
 
	mRe£rved_94
;

5035 
UINT16
 
	mLDTSegmítSñe˘‹
;

5036 
UINT16
 
	mRe£rved_98
;

5037 
UINT16
 
	mT
;

5038 
UINT16
 
	mIOM≠Ba£Addªss
;

5039 } 
	tIA32_TASK_STATE_SEGMENT
;

5043 
UINT32
 
	mLimôLow
:16;

5044 
UINT32
 
	mBa£Low
:16;

5045 
UINT32
 
	mBa£Mid
:8;

5046 
UINT32
 
	mTy≥
:4;

5047 
UINT32
 
	mRe£rved_43
:1;

5048 
UINT32
 
	mDPL
:2;

5049 
UINT32
 
	mP
:1;

5050 
UINT32
 
	mLimôHigh
:4;

5051 
UINT32
 
	mAVL
:1;

5052 
UINT32
 
	mRe£rved_52
:2;

5053 
UINT32
 
	mG
:1;

5054 
UINT32
 
	mBa£High
:8;

5055 } 
	mBôs
;

5056 
UINT64
 
	mUöt64
;

5057 } 
	tIA32_TSS_DESCRIPTOR
;

5058 #¥agm®
∑ck
 ()

5062 #i‡
deföed
 (
MDE_CPU_X64
)

5068 
UINT32
 
	mOff£tLow
:16;

5069 
UINT32
 
	mSñe˘‹
:16;

5070 
UINT32
 
	mRe£rved_0
:8;

5071 
UINT32
 
	mG©eTy≥
:8;

5072 
UINT32
 
	mOff£tHigh
:16;

5073 
UINT32
 
	mOff£tUµî
:32;

5074 
UINT32
 
	mRe£rved_1
:32;

5075 } 
	mBôs
;

5077 
UINT64
 
	mUöt64
;

5078 
UINT64
 
	mUöt64_1
;

5079 } 
	mUöt128
;

5080 } 
	tIA32_IDT_GATE_DESCRIPTOR
;

5082 #¥agm®
∑ck
 (1)

5087 
UINT32
 
	mRe£rved_0
;

5088 
UINT64
 
	mRSP0
;

5089 
UINT64
 
	mRSP1
;

5090 
UINT64
 
	mRSP2
;

5091 
UINT64
 
	mRe£rved_28
;

5092 
UINT64
 
	mIST
[7];

5093 
UINT64
 
	mRe£rved_92
;

5094 
UINT16
 
	mRe£rved_100
;

5095 
UINT16
 
	mIOM≠Ba£Addªss
;

5096 } 
	tIA32_TASK_STATE_SEGMENT
;

5100 
UINT32
 
	mLimôLow
:16;

5101 
UINT32
 
	mBa£Low
:16;

5102 
UINT32
 
	mBa£Midl
:8;

5103 
UINT32
 
	mTy≥
:4;

5104 
UINT32
 
	mRe£rved_43
:1;

5105 
UINT32
 
	mDPL
:2;

5106 
UINT32
 
	mP
:1;

5107 
UINT32
 
	mLimôHigh
:4;

5108 
UINT32
 
	mAVL
:1;

5109 
UINT32
 
	mRe£rved_52
:2;

5110 
UINT32
 
	mG
:1;

5111 
UINT32
 
	mBa£Midh
:8;

5112 
UINT32
 
	mBa£High
:32;

5113 
UINT32
 
	mRe£rved_96
:32;

5114 } 
	mBôs
;

5116 
UINT64
 
	mUöt64
;

5117 
UINT64
 
	mUöt64_1
;

5118 } 
	mUöt128
;

5119 } 
	tIA32_TSS_DESCRIPTOR
;

5120 #¥agm®
∑ck
 ()

5128 
UINT8
 
	mBuf„r
[512];

5129 } 
	tIA32_FX_BUFFER
;

5135 
UINT32
 
	mRe£rved1
;

5136 
UINT32
 
	mRe£rved2
;

5137 
UINT32
 
	mRe£rved3
;

5138 
UINT32
 
	mRe£rved4
;

5139 
UINT8
 
	mBL
;

5140 
UINT8
 
	mBH
;

5141 
UINT16
 
	mRe£rved5
;

5142 
UINT8
 
	mDL
;

5143 
UINT8
 
	mDH
;

5144 
UINT16
 
	mRe£rved6
;

5145 
UINT8
 
	mCL
;

5146 
UINT8
 
	mCH
;

5147 
UINT16
 
	mRe£rved7
;

5148 
UINT8
 
	mAL
;

5149 
UINT8
 
	mAH
;

5150 
UINT16
 
	mRe£rved8
;

5151 } 
	tIA32_BYTE_REGS
;

5154 
UINT16
 
	mDI
;

5155 
UINT16
 
	mRe£rved1
;

5156 
UINT16
 
	mSI
;

5157 
UINT16
 
	mRe£rved2
;

5158 
UINT16
 
	mBP
;

5159 
UINT16
 
	mRe£rved3
;

5160 
UINT16
 
	mSP
;

5161 
UINT16
 
	mRe£rved4
;

5162 
UINT16
 
	mBX
;

5163 
UINT16
 
	mRe£rved5
;

5164 
UINT16
 
	mDX
;

5165 
UINT16
 
	mRe£rved6
;

5166 
UINT16
 
	mCX
;

5167 
UINT16
 
	mRe£rved7
;

5168 
UINT16
 
	mAX
;

5169 
UINT16
 
	mRe£rved8
;

5170 } 
	tIA32_WORD_REGS
;

5173 
UINT32
 
	mEDI
;

5174 
UINT32
 
	mESI
;

5175 
UINT32
 
	mEBP
;

5176 
UINT32
 
	mESP
;

5177 
UINT32
 
	mEBX
;

5178 
UINT32
 
	mEDX
;

5179 
UINT32
 
	mECX
;

5180 
UINT32
 
	mEAX
;

5181 
UINT16
 
	mDS
;

5182 
UINT16
 
	mES
;

5183 
UINT16
 
	mFS
;

5184 
UINT16
 
	mGS
;

5185 
IA32_EFLAGS32
 
	mEFLAGS
;

5186 
UINT32
 
	mEù
;

5187 
UINT16
 
	mCS
;

5188 
UINT16
 
	mSS
;

5189 } 
	tIA32_DWORD_REGS
;

5192 
IA32_DWORD_REGS
 
	mE
;

5193 
IA32_WORD_REGS
 
	mX
;

5194 
IA32_BYTE_REGS
 
	mH
;

5195 } 
	tIA32_REGISTER_SET
;

5201 
IA32_REGISTER_SET
 *
	mRólModeSèã
;

5202 
VOID
 *
	mRólModeBuf„r
;

5203 
UINT32
 
	mRólModeBuf„rSize
;

5204 
UINT32
 
	mThunkAâribuãs
;

5205 } 
	tTHUNK_CONTEXT
;

5207 
	#THUNK_ATTRIBUTE_BIG_REAL_MODE
 0x00000001

	)

5208 
	#THUNK_ATTRIBUTE_DISABLE_A20_MASK_INT_15
 0x00000002

	)

5209 
	#THUNK_ATTRIBUTE_DISABLE_A20_MASK_KBD_CTRL
 0x00000004

	)

5223 
	$VOID
 (
	tX86_ASSEMBLY_PATCH_LABEL
Ë(
	tVOID
);

5250 
UINT32


5251 
EFIAPI


5252 
	`AsmCpuid
 (

5253 
IN
 
UINT32
 
Index
,

5254 
OUT
 
UINT32
 *
Eax
, 
OPTIONAL


5255 
OUT
 
UINT32
 *
Ebx
, 
OPTIONAL


5256 
OUT
 
UINT32
 *
Ecx
, 
OPTIONAL


5257 
OUT
 
UINT32
 *
Edx
 
OPTIONAL


5293 
UINT32


5294 
EFIAPI


5295 
	`AsmCpuidEx
 (

5296 
IN
 
UINT32
 
Index
,

5297 
IN
 
UINT32
 
SubIndex
,

5298 
OUT
 
UINT32
 *
Eax
, 
OPTIONAL


5299 
OUT
 
UINT32
 *
Ebx
, 
OPTIONAL


5300 
OUT
 
UINT32
 *
Ecx
, 
OPTIONAL


5301 
OUT
 
UINT32
 *
Edx
 
OPTIONAL


5312 
VOID


5313 
EFIAPI


5314 
	`AsmDißbÀCache
 (

5315 
VOID


5326 
VOID


5327 
EFIAPI


5328 
	`AsmE«bÀCache
 (

5329 
VOID


5347 
UINT32


5348 
EFIAPI


5349 
	`AsmRódM§32
 (

5350 
IN
 
UINT32
 
Index


5371 
UINT32


5372 
EFIAPI


5373 
	`AsmWrôeM§32
 (

5374 
IN
 
UINT32
 
Index
,

5375 
IN
 
UINT32
 
VÆue


5398 
UINT32


5399 
EFIAPI


5400 
	`AsmM§Or32
 (

5401 
IN
 
UINT32
 
Index
,

5402 
IN
 
UINT32
 
OrD©a


5425 
UINT32


5426 
EFIAPI


5427 
	`AsmM§And32
 (

5428 
IN
 
UINT32
 
Index
,

5429 
IN
 
UINT32
 
AndD©a


5455 
UINT32


5456 
EFIAPI


5457 
	`AsmM§AndThíOr32
 (

5458 
IN
 
UINT32
 
Index
,

5459 
IN
 
UINT32
 
AndD©a
,

5460 
IN
 
UINT32
 
OrD©a


5486 
UINT32


5487 
EFIAPI


5488 
	`AsmM§BôFõldRód32
 (

5489 
IN
 
UINT32
 
Index
,

5490 
IN
 
UINTN
 
SèπBô
,

5491 
IN
 
UINTN
 
EndBô


5520 
UINT32


5521 
EFIAPI


5522 
	`AsmM§BôFõldWrôe32
 (

5523 
IN
 
UINT32
 
Index
,

5524 
IN
 
UINTN
 
SèπBô
,

5525 
IN
 
UINTN
 
EndBô
,

5526 
IN
 
UINT32
 
VÆue


5557 
UINT32


5558 
EFIAPI


5559 
	`AsmM§BôFõldOr32
 (

5560 
IN
 
UINT32
 
Index
,

5561 
IN
 
UINTN
 
SèπBô
,

5562 
IN
 
UINTN
 
EndBô
,

5563 
IN
 
UINT32
 
OrD©a


5594 
UINT32


5595 
EFIAPI


5596 
	`AsmM§BôFõldAnd32
 (

5597 
IN
 
UINT32
 
Index
,

5598 
IN
 
UINTN
 
SèπBô
,

5599 
IN
 
UINTN
 
EndBô
,

5600 
IN
 
UINT32
 
AndD©a


5635 
UINT32


5636 
EFIAPI


5637 
	`AsmM§BôFõldAndThíOr32
 (

5638 
IN
 
UINT32
 
Index
,

5639 
IN
 
UINTN
 
SèπBô
,

5640 
IN
 
UINTN
 
EndBô
,

5641 
IN
 
UINT32
 
AndD©a
,

5642 
IN
 
UINT32
 
OrD©a


5660 
UINT64


5661 
EFIAPI


5662 
	`AsmRódM§64
 (

5663 
IN
 
UINT32
 
Index


5684 
UINT64


5685 
EFIAPI


5686 
	`AsmWrôeM§64
 (

5687 
IN
 
UINT32
 
Index
,

5688 
IN
 
UINT64
 
VÆue


5710 
UINT64


5711 
EFIAPI


5712 
	`AsmM§Or64
 (

5713 
IN
 
UINT32
 
Index
,

5714 
IN
 
UINT64
 
OrD©a


5736 
UINT64


5737 
EFIAPI


5738 
	`AsmM§And64
 (

5739 
IN
 
UINT32
 
Index
,

5740 
IN
 
UINT64
 
AndD©a


5765 
UINT64


5766 
EFIAPI


5767 
	`AsmM§AndThíOr64
 (

5768 
IN
 
UINT32
 
Index
,

5769 
IN
 
UINT64
 
AndD©a
,

5770 
IN
 
UINT64
 
OrD©a


5796 
UINT64


5797 
EFIAPI


5798 
	`AsmM§BôFõldRód64
 (

5799 
IN
 
UINT32
 
Index
,

5800 
IN
 
UINTN
 
SèπBô
,

5801 
IN
 
UINTN
 
EndBô


5829 
UINT64


5830 
EFIAPI


5831 
	`AsmM§BôFõldWrôe64
 (

5832 
IN
 
UINT32
 
Index
,

5833 
IN
 
UINTN
 
SèπBô
,

5834 
IN
 
UINTN
 
EndBô
,

5835 
IN
 
UINT64
 
VÆue


5866 
UINT64


5867 
EFIAPI


5868 
	`AsmM§BôFõldOr64
 (

5869 
IN
 
UINT32
 
Index
,

5870 
IN
 
UINTN
 
SèπBô
,

5871 
IN
 
UINTN
 
EndBô
,

5872 
IN
 
UINT64
 
OrD©a


5903 
UINT64


5904 
EFIAPI


5905 
	`AsmM§BôFõldAnd64
 (

5906 
IN
 
UINT32
 
Index
,

5907 
IN
 
UINTN
 
SèπBô
,

5908 
IN
 
UINTN
 
EndBô
,

5909 
IN
 
UINT64
 
AndD©a


5943 
UINT64


5944 
EFIAPI


5945 
	`AsmM§BôFõldAndThíOr64
 (

5946 
IN
 
UINT32
 
Index
,

5947 
IN
 
UINTN
 
SèπBô
,

5948 
IN
 
UINTN
 
EndBô
,

5949 
IN
 
UINT64
 
AndD©a
,

5950 
IN
 
UINT64
 
OrD©a


5964 
UINTN


5965 
EFIAPI


5966 
	`AsmRódEÊags
 (

5967 
VOID


5981 
UINTN


5982 
EFIAPI


5983 
	`AsmRódCr0
 (

5984 
VOID


5998 
UINTN


5999 
EFIAPI


6000 
	`AsmRódCr2
 (

6001 
VOID


6015 
UINTN


6016 
EFIAPI


6017 
	`AsmRódCr3
 (

6018 
VOID


6032 
UINTN


6033 
EFIAPI


6034 
	`AsmRódCr4
 (

6035 
VOID


6050 
UINTN


6051 
EFIAPI


6052 
	`AsmWrôeCr0
 (

6053 
UINTN
 
Cr0


6068 
UINTN


6069 
EFIAPI


6070 
	`AsmWrôeCr2
 (

6071 
UINTN
 
Cr2


6086 
UINTN


6087 
EFIAPI


6088 
	`AsmWrôeCr3
 (

6089 
UINTN
 
Cr3


6104 
UINTN


6105 
EFIAPI


6106 
	`AsmWrôeCr4
 (

6107 
UINTN
 
Cr4


6121 
UINTN


6122 
EFIAPI


6123 
	`AsmRódDr0
 (

6124 
VOID


6138 
UINTN


6139 
EFIAPI


6140 
	`AsmRódDr1
 (

6141 
VOID


6155 
UINTN


6156 
EFIAPI


6157 
	`AsmRódDr2
 (

6158 
VOID


6172 
UINTN


6173 
EFIAPI


6174 
	`AsmRódDr3
 (

6175 
VOID


6189 
UINTN


6190 
EFIAPI


6191 
	`AsmRódDr4
 (

6192 
VOID


6206 
UINTN


6207 
EFIAPI


6208 
	`AsmRódDr5
 (

6209 
VOID


6223 
UINTN


6224 
EFIAPI


6225 
	`AsmRódDr6
 (

6226 
VOID


6240 
UINTN


6241 
EFIAPI


6242 
	`AsmRódDr7
 (

6243 
VOID


6258 
UINTN


6259 
EFIAPI


6260 
	`AsmWrôeDr0
 (

6261 
UINTN
 
Dr0


6276 
UINTN


6277 
EFIAPI


6278 
	`AsmWrôeDr1
 (

6279 
UINTN
 
Dr1


6294 
UINTN


6295 
EFIAPI


6296 
	`AsmWrôeDr2
 (

6297 
UINTN
 
Dr2


6312 
UINTN


6313 
EFIAPI


6314 
	`AsmWrôeDr3
 (

6315 
UINTN
 
Dr3


6330 
UINTN


6331 
EFIAPI


6332 
	`AsmWrôeDr4
 (

6333 
UINTN
 
Dr4


6348 
UINTN


6349 
EFIAPI


6350 
	`AsmWrôeDr5
 (

6351 
UINTN
 
Dr5


6366 
UINTN


6367 
EFIAPI


6368 
	`AsmWrôeDr6
 (

6369 
UINTN
 
Dr6


6384 
UINTN


6385 
EFIAPI


6386 
	`AsmWrôeDr7
 (

6387 
UINTN
 
Dr7


6400 
UINT16


6401 
EFIAPI


6402 
	`AsmRódCs
 (

6403 
VOID


6416 
UINT16


6417 
EFIAPI


6418 
	`AsmRódDs
 (

6419 
VOID


6432 
UINT16


6433 
EFIAPI


6434 
	`AsmRódEs
 (

6435 
VOID


6448 
UINT16


6449 
EFIAPI


6450 
	`AsmRódFs
 (

6451 
VOID


6464 
UINT16


6465 
EFIAPI


6466 
	`AsmRódGs
 (

6467 
VOID


6480 
UINT16


6481 
EFIAPI


6482 
	`AsmRódSs
 (

6483 
VOID


6496 
UINT16


6497 
EFIAPI


6498 
	`AsmRódTr
 (

6499 
VOID


6514 
VOID


6515 
EFIAPI


6516 
	`AsmRódGdå
 (

6517 
OUT
 
IA32_DESCRIPTOR
 *
Gdå


6532 
VOID


6533 
EFIAPI


6534 
	`AsmWrôeGdå
 (

6535 
IN
 
CONST
 
IA32_DESCRIPTOR
 *
Gdå


6550 
VOID


6551 
EFIAPI


6552 
	`AsmRódIdå
 (

6553 
OUT
 
IA32_DESCRIPTOR
 *
Idå


6568 
VOID


6569 
EFIAPI


6570 
	`AsmWrôeIdå
 (

6571 
IN
 
CONST
 
IA32_DESCRIPTOR
 *
Idå


6584 
UINT16


6585 
EFIAPI


6586 
	`AsmRódLdå
 (

6587 
VOID


6600 
VOID


6601 
EFIAPI


6602 
	`AsmWrôeLdå
 (

6603 
IN
 
UINT16
 
Ldå


6620 
VOID


6621 
EFIAPI


6622 
	`AsmFxSave
 (

6623 
OUT
 
IA32_FX_BUFFER
 *
Buf„r


6641 
VOID


6642 
EFIAPI


6643 
	`AsmFxRe°‹e
 (

6644 
IN
 
CONST
 
IA32_FX_BUFFER
 *
Buf„r


6657 
UINT64


6658 
EFIAPI


6659 
	`AsmRódMm0
 (

6660 
VOID


6673 
UINT64


6674 
EFIAPI


6675 
	`AsmRódMm1
 (

6676 
VOID


6689 
UINT64


6690 
EFIAPI


6691 
	`AsmRódMm2
 (

6692 
VOID


6705 
UINT64


6706 
EFIAPI


6707 
	`AsmRódMm3
 (

6708 
VOID


6721 
UINT64


6722 
EFIAPI


6723 
	`AsmRódMm4
 (

6724 
VOID


6737 
UINT64


6738 
EFIAPI


6739 
	`AsmRódMm5
 (

6740 
VOID


6753 
UINT64


6754 
EFIAPI


6755 
	`AsmRódMm6
 (

6756 
VOID


6769 
UINT64


6770 
EFIAPI


6771 
	`AsmRódMm7
 (

6772 
VOID


6785 
VOID


6786 
EFIAPI


6787 
	`AsmWrôeMm0
 (

6788 
IN
 
UINT64
 
VÆue


6801 
VOID


6802 
EFIAPI


6803 
	`AsmWrôeMm1
 (

6804 
IN
 
UINT64
 
VÆue


6817 
VOID


6818 
EFIAPI


6819 
	`AsmWrôeMm2
 (

6820 
IN
 
UINT64
 
VÆue


6833 
VOID


6834 
EFIAPI


6835 
	`AsmWrôeMm3
 (

6836 
IN
 
UINT64
 
VÆue


6849 
VOID


6850 
EFIAPI


6851 
	`AsmWrôeMm4
 (

6852 
IN
 
UINT64
 
VÆue


6865 
VOID


6866 
EFIAPI


6867 
	`AsmWrôeMm5
 (

6868 
IN
 
UINT64
 
VÆue


6881 
VOID


6882 
EFIAPI


6883 
	`AsmWrôeMm6
 (

6884 
IN
 
UINT64
 
VÆue


6897 
VOID


6898 
EFIAPI


6899 
	`AsmWrôeMm7
 (

6900 
IN
 
UINT64
 
VÆue


6913 
UINT64


6914 
EFIAPI


6915 
	`AsmRódTsc
 (

6916 
VOID


6931 
UINT64


6932 
EFIAPI


6933 
	`AsmRódPmc
 (

6934 
IN
 
UINT32
 
Index


6954 
UINTN


6955 
EFIAPI


6956 
	`AsmM⁄ô‹
 (

6957 
IN
 
UINTN
 
Eax
,

6958 
IN
 
UINTN
 
Ecx
,

6959 
IN
 
UINTN
 
Edx


6977 
UINTN


6978 
EFIAPI


6979 
	`AsmMwaô
 (

6980 
IN
 
UINTN
 
Eax
,

6981 
IN
 
UINTN
 
Ecx


6992 
VOID


6993 
EFIAPI


6994 
	`AsmWbövd
 (

6995 
VOID


7006 
VOID


7007 
EFIAPI


7008 
	`AsmInvd
 (

7009 
VOID


7028 
VOID
 *

7029 
EFIAPI


7030 
	`AsmFlushCacheLöe
 (

7031 
IN
 
VOID
 *
LöórAddªss


7072 
VOID


7073 
EFIAPI


7074 
	`AsmE«bÀPagög32
 (

7075 
IN
 
SWITCH_STACK_ENTRY_POINT
 
E¡ryPoöt
,

7076 
IN
 
VOID
 *
C⁄ãxt1
, 
OPTIONAL


7077 
IN
 
VOID
 *
C⁄ãxt2
, 
OPTIONAL


7078 
IN
 
VOID
 *
NewSèck


7116 
VOID


7117 
EFIAPI


7118 
	`AsmDißbÀPagög32
 (

7119 
IN
 
SWITCH_STACK_ENTRY_POINT
 
E¡ryPoöt
,

7120 
IN
 
VOID
 *
C⁄ãxt1
, 
OPTIONAL


7121 
IN
 
VOID
 *
C⁄ãxt2
, 
OPTIONAL


7122 
IN
 
VOID
 *
NewSèck


7158 
VOID


7159 
EFIAPI


7160 
	`AsmE«bÀPagög64
 (

7161 
IN
 
UINT16
 
Cs
,

7162 
IN
 
UINT64
 
E¡ryPoöt
,

7163 
IN
 
UINT64
 
C⁄ãxt1
, 
OPTIONAL


7164 
IN
 
UINT64
 
C⁄ãxt2
, 
OPTIONAL


7165 
IN
 
UINT64
 
NewSèck


7199 
VOID


7200 
EFIAPI


7201 
	`AsmDißbÀPagög64
 (

7202 
IN
 
UINT16
 
Cs
,

7203 
IN
 
UINT32
 
E¡ryPoöt
,

7204 
IN
 
UINT32
 
C⁄ãxt1
, 
OPTIONAL


7205 
IN
 
UINT32
 
C⁄ãxt2
, 
OPTIONAL


7206 
IN
 
UINT32
 
NewSèck


7235 
VOID


7236 
EFIAPI


7237 
	`AsmGëThunk16Pr›îtõs
 (

7238 
OUT
 
UINT32
 *
RólModeBuf„rSize
,

7239 
OUT
 
UINT32
 *
ExåaSèckSize


7257 
VOID


7258 
EFIAPI


7259 
	`AsmPª∑ªThunk16
 (

7260 
IN
 
OUT
 
THUNK_CONTEXT
 *
ThunkC⁄ãxt


7317 
VOID


7318 
EFIAPI


7319 
	`AsmThunk16
 (

7320 
IN
 
OUT
 
THUNK_CONTEXT
 *
ThunkC⁄ãxt


7344 
VOID


7345 
EFIAPI


7346 
	`AsmPª∑ªAndThunk16
 (

7347 
IN
 
OUT
 
THUNK_CONTEXT
 *
ThunkC⁄ãxt


7361 
BOOLEAN


7362 
EFIAPI


7363 
	`AsmRdR™d16
 (

7364 
OUT
 
UINT16
 *
R™d


7378 
BOOLEAN


7379 
EFIAPI


7380 
	`AsmRdR™d32
 (

7381 
OUT
 
UINT32
 *
R™d


7395 
BOOLEAN


7396 
EFIAPI


7397 
	`AsmRdR™d64
 (

7398 
OUT
 
UINT64
 *
R™d


7406 
VOID


7407 
EFIAPI


7408 
	`AsmWrôeTr
 (

7409 
IN
 
UINT16
 
Sñe˘‹


7419 
VOID


7420 
EFIAPI


7421 
	`AsmL„n˚
 (

7422 
VOID


7435 
UINT64


7436 
EFIAPI


7437 
	`AsmXGëBv
 (

7438 
IN
 
UINT32
 
Index


7449 
VOID


7450 
EFIAPI


7451 
	`AsmVmgExô
 (

7452 
VOID


7490 
VOID


7491 
EFIAPI


7492 
	`P©chIn°ru˘i⁄X86
 (

7493 
OUT
 
X86_ASSEMBLY_PATCH_LABEL
 *
In°ru˘i⁄End
,

7494 
IN
 
UINT64
 
P©chVÆue
,

7495 
IN
 
UINTN
 
VÆueSize


	@BaseMemoryLib.h

13 #i‚de‡
__BASE_MEMORY_LIB__


14 
	#__BASE_MEMORY_LIB__


	)

33 
VOID
 *

34 
EFIAPI


35 
C›yMem
 (

36 
OUT
 
VOID
 *
De°ö©i⁄Buf„r
,

37 
IN
 
CONST
 
VOID
 *
Sour˚Buf„r
,

38 
IN
 
UINTN
 
Lígth


55 
VOID
 *

56 
EFIAPI


57 
SëMem
 (

58 
OUT
 
VOID
 *
Buf„r
,

59 
IN
 
UINTN
 
Lígth
,

60 
IN
 
UINT8
 
VÆue


82 
VOID
 *

83 
EFIAPI


84 
SëMem16
 (

85 
OUT
 
VOID
 *
Buf„r
,

86 
IN
 
UINTN
 
Lígth
,

87 
IN
 
UINT16
 
VÆue


109 
VOID
 *

110 
EFIAPI


111 
SëMem32
 (

112 
OUT
 
VOID
 *
Buf„r
,

113 
IN
 
UINTN
 
Lígth
,

114 
IN
 
UINT32
 
VÆue


136 
VOID
 *

137 
EFIAPI


138 
SëMem64
 (

139 
OUT
 
VOID
 *
Buf„r
,

140 
IN
 
UINTN
 
Lígth
,

141 
IN
 
UINT64
 
VÆue


163 
VOID
 *

164 
EFIAPI


165 
SëMemN
 (

166 
OUT
 
VOID
 *
Buf„r
,

167 
IN
 
UINTN
 
Lígth
,

168 
IN
 
UINTN
 
VÆue


185 
VOID
 *

186 
EFIAPI


187 
ZîoMem
 (

188 
OUT
 
VOID
 *
Buf„r
,

189 
IN
 
UINTN
 
Lígth


214 
INTN


215 
EFIAPI


216 
Com∑ªMem
 (

217 
IN
 
CONST
 
VOID
 *
De°ö©i⁄Buf„r
,

218 
IN
 
CONST
 
VOID
 *
Sour˚Buf„r
,

219 
IN
 
UINTN
 
Lígth


241 
VOID
 *

242 
EFIAPI


243 
SˇnMem8
 (

244 
IN
 
CONST
 
VOID
 *
Buf„r
,

245 
IN
 
UINTN
 
Lígth
,

246 
IN
 
UINT8
 
VÆue


270 
VOID
 *

271 
EFIAPI


272 
SˇnMem16
 (

273 
IN
 
CONST
 
VOID
 *
Buf„r
,

274 
IN
 
UINTN
 
Lígth
,

275 
IN
 
UINT16
 
VÆue


299 
VOID
 *

300 
EFIAPI


301 
SˇnMem32
 (

302 
IN
 
CONST
 
VOID
 *
Buf„r
,

303 
IN
 
UINTN
 
Lígth
,

304 
IN
 
UINT32
 
VÆue


328 
VOID
 *

329 
EFIAPI


330 
SˇnMem64
 (

331 
IN
 
CONST
 
VOID
 *
Buf„r
,

332 
IN
 
UINTN
 
Lígth
,

333 
IN
 
UINT64
 
VÆue


357 
VOID
 *

358 
EFIAPI


359 
SˇnMemN
 (

360 
IN
 
CONST
 
VOID
 *
Buf„r
,

361 
IN
 
UINTN
 
Lígth
,

362 
IN
 
UINTN
 
VÆue


380 
GUID
 *

381 
EFIAPI


382 
C›yGuid
 (

383 
OUT
 
GUID
 *
De°ö©i⁄Guid
,

384 
IN
 
CONST
 
GUID
 *
Sour˚Guid


403 
BOOLEAN


404 
EFIAPI


405 
Com∑ªGuid
 (

406 
IN
 
CONST
 
GUID
 *
Guid1
,

407 
IN
 
CONST
 
GUID
 *
Guid2


432 
VOID
 *

433 
EFIAPI


434 
SˇnGuid
 (

435 
IN
 
CONST
 
VOID
 *
Buf„r
,

436 
IN
 
UINTN
 
Lígth
,

437 
IN
 
CONST
 
GUID
 *
Guid


454 
BOOLEAN


455 
EFIAPI


456 
IsZîoGuid
 (

457 
IN
 
CONST
 
GUID
 *
Guid


476 
BOOLEAN


477 
EFIAPI


478 
IsZîoBuf„r
 (

479 
IN
 
CONST
 
VOID
 *
Buf„r
,

480 
IN
 
UINTN
 
Lígth


	@CacheMaintenanceLib.h

12 #i‚de‡
__CACHE_MAINTENANCE_LIB__


13 
	#__CACHE_MAINTENANCE_LIB__


	)

20 
VOID


21 
EFIAPI


22 
InvÆid©eIn°ru˘i⁄Cache
 (

23 
VOID


51 
VOID
 *

52 
EFIAPI


53 
InvÆid©eIn°ru˘i⁄CacheR™ge
 (

54 
IN
 
VOID
 *
Addªss
,

55 
IN
 
UINTN
 
Lígth


68 
VOID


69 
EFIAPI


70 
WrôeBackInvÆid©eD©aCache
 (

71 
VOID


100 
VOID
 *

101 
EFIAPI


102 
WrôeBackInvÆid©eD©aCacheR™ge
 (

103 
IN
 
VOID
 *
Addªss
,

104 
IN
 
UINTN
 
Lígth


117 
VOID


118 
EFIAPI


119 
WrôeBackD©aCache
 (

120 
VOID


148 
VOID
 *

149 
EFIAPI


150 
WrôeBackD©aCacheR™ge
 (

151 
IN
 
VOID
 *
Addªss
,

152 
IN
 
UINTN
 
Lígth


166 
VOID


167 
EFIAPI


168 
InvÆid©eD©aCache
 (

169 
VOID


199 
VOID
 *

200 
EFIAPI


201 
InvÆid©eD©aCacheR™ge
 (

202 
IN
 
VOID
 *
Addªss
,

203 
IN
 
UINTN
 
Lígth


	@CpuLib.h

15 #i‚de‡
__CPU_LIB_H__


16 
	#__CPU_LIB_H__


	)

26 
VOID


27 
EFIAPI


28 
CpuSÀï
 (

29 
VOID


38 
VOID


39 
EFIAPI


40 
CpuFlushTlb
 (

41 
VOID


	@DebugLib.h

16 #i‚de‡
__DEBUG_LIB_H__


17 
	#__DEBUG_LIB_H__


	)

22 
	#DEBUG_PROPERTY_DEBUG_ASSERT_ENABLED
 0x01

	)

23 
	#DEBUG_PROPERTY_DEBUG_PRINT_ENABLED
 0x02

	)

24 
	#DEBUG_PROPERTY_DEBUG_CODE_ENABLED
 0x04

	)

25 
	#DEBUG_PROPERTY_CLEAR_MEMORY_ENABLED
 0x08

	)

26 
	#DEBUG_PROPERTY_ASSERT_BREAKPOINT_ENABLED
 0x10

	)

27 
	#DEBUG_PROPERTY_ASSERT_DEADLOOP_ENABLED
 0x20

	)

32 
	#DEBUG_INIT
 0x00000001

33 
	#DEBUG_WARN
 0x00000002

34 
	#DEBUG_LOAD
 0x00000004

35 
	#DEBUG_FS
 0x00000008

36 
	#DEBUG_POOL
 0x00000010

37 
	#DEBUG_PAGE
 0x00000020

38 
	#DEBUG_INFO
 0x00000040

39 
	#DEBUG_DISPATCH
 0x00000080

40 
	#DEBUG_VARIABLE
 0x00000100

41 
	#DEBUG_BM
 0x00000400

42 
	#DEBUG_BLKIO
 0x00001000

43 
	#DEBUG_NET
 0x00004000

44 
	#DEBUG_UNDI
 0x00010000

45 
	#DEBUG_LOADFILE
 0x00020000

46 
	#DEBUG_EVENT
 0x00080000

47 
	#DEBUG_GCD
 0x00100000

48 
	#DEBUG_CACHE
 0x00200000

49 
	#DEBUG_VERBOSE
 0x00400000

51 
	#DEBUG_ERROR
 0x80000000

52 

	)

56 
	#EFI_D_INIT
 
DEBUG_INIT


	)

57 
	#EFI_D_WARN
 
DEBUG_WARN


	)

58 
	#EFI_D_LOAD
 
DEBUG_LOAD


	)

59 
	#EFI_D_FS
 
DEBUG_FS


	)

60 
	#EFI_D_POOL
 
DEBUG_POOL


	)

61 
	#EFI_D_PAGE
 
DEBUG_PAGE


	)

62 
	#EFI_D_INFO
 
DEBUG_INFO


	)

63 
	#EFI_D_DISPATCH
 
DEBUG_DISPATCH


	)

64 
	#EFI_D_VARIABLE
 
DEBUG_VARIABLE


	)

65 
	#EFI_D_BM
 
DEBUG_BM


	)

66 
	#EFI_D_BLKIO
 
DEBUG_BLKIO


	)

67 
	#EFI_D_NET
 
DEBUG_NET


	)

68 
	#EFI_D_UNDI
 
DEBUG_UNDI


	)

69 
	#EFI_D_LOADFILE
 
DEBUG_LOADFILE


	)

70 
	#EFI_D_EVENT
 
DEBUG_EVENT


	)

71 
	#EFI_D_VERBOSE
 
DEBUG_VERBOSE


	)

72 
	#EFI_D_ERROR
 
DEBUG_ERROR


	)

89 
VOID


90 
EFIAPI


91 
DebugPröt
 (

92 
IN
 
UINTN
 
Eº‹Levñ
,

93 
IN
 
CONST
 
CHAR8
 *
F‹m©
,

113 
VOID


114 
EFIAPI


115 
DebugVPröt
 (

116 
IN
 
UINTN
 
Eº‹Levñ
,

117 
IN
 
CONST
 
CHAR8
 *
F‹m©
,

118 
IN
 
VA_LIST
 
VaLi°M¨kî


139 
VOID


140 
EFIAPI


141 
DebugBPröt
 (

142 
IN
 
UINTN
 
Eº‹Levñ
,

143 
IN
 
CONST
 
CHAR8
 *
F‹m©
,

144 
IN
 
BASE_LIST
 
Ba£Li°M¨kî


169 
VOID


170 
EFIAPI


171 
DebugAs£π
 (

172 
IN
 
CONST
 
CHAR8
 *
FûeName
,

173 
IN
 
UINTN
 
LöeNumbî
,

174 
IN
 
CONST
 
CHAR8
 *
Des¸ùti⁄


193 
VOID
 *

194 
EFIAPI


195 
DebugCÀ¨Mem‹y
 (

196 
OUT
 
VOID
 *
Buf„r
,

197 
IN
 
UINTN
 
Lígth


211 
BOOLEAN


212 
EFIAPI


213 
DebugAs£πE«bÀd
 (

214 
VOID


228 
BOOLEAN


229 
EFIAPI


230 
DebugPrötE«bÀd
 (

231 
VOID


245 
BOOLEAN


246 
EFIAPI


247 
DebugCodeE«bÀd
 (

248 
VOID


262 
BOOLEAN


263 
EFIAPI


264 
DebugCÀ¨Mem‹yE«bÀd
 (

265 
VOID


277 
BOOLEAN


278 
EFIAPI


279 
DebugPrötLevñE«bÀd
 (

280 
IN
 
CONST
 
UINTN
 
Eº‹Levñ


292 #i‡
deföed
 (
EDKII_UNIT_TEST_FRAMEWORK_ENABLED
)

304 
VOID


305 
EFIAPI


306 
UnôTe°DebugAs£π
 (

307 
IN
 
CONST
 
CHAR8
 *
FûeName
,

308 
IN
 
UINTN
 
LöeNumbî
,

309 
IN
 
CONST
 
CHAR8
 *
Des¸ùti⁄


312 #i‡
deföed
(
__˛™g__
Ë&& deföed(
__FILE_NAME__
)

313 
	#_ASSERT
(
Ex¥essi⁄
Ë
	`UnôTe°DebugAs£π
 (
__FILE_NAME__
, 
__LINE__
, #Ex¥essi⁄)

	)

315 
	#_ASSERT
(
Ex¥essi⁄
Ë
	`UnôTe°DebugAs£π
 (
__FILE__
, 
__LINE__
, #Ex¥essi⁄)

	)

318 #i‡
deföed
(
__˛™g__
Ë&& deföed(
__FILE_NAME__
)

319 
	#_ASSERT
(
Ex¥essi⁄
Ë
	`DebugAs£π
 (
__FILE_NAME__
, 
__LINE__
, #Ex¥essi⁄)

	)

321 
	#_ASSERT
(
Ex¥essi⁄
Ë
	`DebugAs£π
 (
__FILE__
, 
__LINE__
, #Ex¥essi⁄)

	)

338 #i‡!
deföed
(
MDE_CPU_EBC
Ë&& (!deföed (
_MSC_VER
) || _MSC_VER > 1400)

339 
	#_DEBUG_PRINT
(
PrötLevñ
, ...Ë\

	)

341 i‡(
DebugPrötLevñE«bÀd
 (
PrötLevñ
)) { \

342 
DebugPröt
 (
PrötLevñ
, ##
__VA_ARGS__
); \

344 } 
FALSE
)

345 
	#_DEBUG
(
Ex¥essi⁄
Ë
_DEBUG_PRINT
 
	)
Expression

347 
	#_DEBUG
(
Ex¥essi⁄
Ë
DebugPröt
 
	)
Expression

362 #i‡!
	`deföed
(
MDEPKG_NDEBUG
)

363 
	#ASSERT
(
Ex¥essi⁄
Ë\

	)

365 i‡(
	`DebugAs£πE«bÀd
 ()) { \

366 i‡(!(
Ex¥essi⁄
)) { \

367 
	`_ASSERT
 (
Ex¥essi⁄
); \

368 
	`ANALYZER_UNREACHABLE
 (); \

371 
	}
} 
FALSE
)

373 
	#ASSERT
(
Ex¥essi⁄
)

	)

388 #i‡!
	`deföed
(
MDEPKG_NDEBUG
)

389 
	#DEBUG
(
Ex¥essi⁄
Ë\

	)

391 i‡(
	`DebugPrötE«bÀd
 ()) { \

392 
	`_DEBUG
 (
Ex¥essi⁄
); \

394 
	}
} 
FALSE
)

396 
	#DEBUG
(
Ex¥essi⁄
)

	)

411 #i‡!
	`deföed
(
MDEPKG_NDEBUG
)

412 
	#ASSERT_EFI_ERROR
(
SètusP¨amëî
Ë\

	)

414 i‡(
	`DebugAs£πE«bÀd
 ()) { \

415 i‡(
	`EFI_ERROR
 (
SètusP¨amëî
)) { \

416 
	`DEBUG
 ((
EFI_D_ERROR
, "\nASSERT_EFI_ERROR (Sètu†%r)\n", 
SètusP¨amëî
)); \

417 
	`_ASSERT
 (!
	`EFI_ERROR
 (
SètusP¨amëî
)); \

420 
	}
} 
FALSE
)

422 
	#ASSERT_EFI_ERROR
(
SètusP¨amëî
)

	)

437 #i‡!
	`deföed
(
MDEPKG_NDEBUG
)

438 
	#ASSERT_RETURN_ERROR
(
SètusP¨amëî
Ë\

	)

440 i‡(
	`DebugAs£πE«bÀd
 ()) { \

441 i‡(
	`RETURN_ERROR
 (
SètusP¨amëî
)) { \

442 
	`DEBUG
 ((
DEBUG_ERROR
, "\nASSERT_RETURN_ERROR (Status = %r)\n", \

443 
SètusP¨amëî
)); \

444 
	`_ASSERT
 (!
	`RETURN_ERROR
 (
SètusP¨amëî
)); \

447 
	}
} 
FALSE
)

449 
	#ASSERT_RETURN_ERROR
(
SètusP¨amëî
)

	)

474 #i‡!
	`deföed
(
MDEPKG_NDEBUG
)

475 
	#ASSERT_PROTOCOL_ALREADY_INSTALLED
(
H™dÀ
, 
Guid
Ë\

	)

477 i‡(
	`DebugAs£πE«bÀd
 ()) { \

478 
VOID
 *
In°™˚
; \

479 
	`ASSERT
 (
Guid
 !
NULL
); \

480 i‡(
H™dÀ
 =
NULL
) { \

481 i‡(!
	`EFI_ERROR
 (
gBS
->
	`LoˇãPrŸocﬁ
 ((
EFI_GUID
 *)
Guid
, 
NULL
, &
In°™˚
))) { \

482 
	`_ASSERT
 (
Guid
 
Æªady
 
ö°ÆÀd
 
ö
 
d©aba£
); \

485 i‡(!
	`EFI_ERROR
 (
gBS
->
	`H™dÀPrŸocﬁ
 (
H™dÀ
, (
EFI_GUID
 *)
Guid
, &
In°™˚
))) { \

486 
	`_ASSERT
 (
Guid
 
Æªady
 
ö°ÆÀd
 
⁄
 
H™dÀ
); \

490 
	}
} 
FALSE
)

492 
	#ASSERT_PROTOCOL_ALREADY_INSTALLED
(
H™dÀ
, 
Guid
)

	)

504 
	#DEBUG_CODE_BEGIN
(Ëdÿ{ i‡(
	`DebugCodeE«bÀd
 ()Ë{ 
UINT8
 
__DebugCodeLoˇl


	)

516 
	#DEBUG_CODE_END
(Ë
__DebugCodeLoˇl
 = 0; __DebugCodeLoˇl++; } 
	}
} 
FALSE
)

	)

527 
	#DEBUG_CODE
(
Ex¥essi⁄
Ë\

	)

528 
DEBUG_CODE_BEGIN
 (); \

529 
	gEx¥essi⁄
 \

530 
DEBUG_CODE_END
 ()

543 
	#DEBUG_CLEAR_MEMORY
(
Addªss
, 
Lígth
Ë\

	)

545 i‡(
DebugCÀ¨Mem‹yE«bÀd
 ()) { \

546 
DebugCÀ¨Mem‹y
 (
Addªss
, 
Lígth
); \

548 } 
	gFALSE
)

593 #i‡!
deföed
(
MDEPKG_NDEBUG
)

594 
	#CR
(
Rec‹d
, 
TYPE
, 
Fõld
, 
Te°Sig«tuª
Ë\

	)

595 (
DebugAs£πE«bÀd
 (Ë&& (
BASE_CR
 (
Rec‹d
, 
TYPE
, 
Fõld
)->
	gSig«tuª
 !
Te°Sig«tuª
)) ? \

596 (
TYPE
 *Ë(
_ASSERT
 (
CR
 
has
 
Bad
 
Sig«tuª
), 
	gRec‹d
) : \

597 
	$BASE_CR
 (
Rec‹d
, 
TYPE
, 
Fõld
)

599 
	#CR
(
Rec‹d
, 
TYPE
, 
Fõld
, 
Te°Sig«tuª
Ë\

	)

600 
	$BASE_CR
 (
Rec‹d
, 
TYPE
, 
Fõld
)

	@DebugPrintErrorLevelLib.h

8 #i‚de‡
_DEBUG_PRINT_ERROR_LEVEL_LIB_H_


9 
	#_DEBUG_PRINT_ERROR_LEVEL_LIB_H_


	)

17 
UINT32


18 
EFIAPI


19 
GëDebugPrötEº‹Levñ
 (

20 
VOID


32 
BOOLEAN


33 
EFIAPI


34 
SëDebugPrötEº‹Levñ
 (

35 
UINT32
 
Eº‹Levñ


	@DevicePathLib.h

12 #i‚de‡
__DEVICE_PATH_LIB_H__


13 
	#__DEVICE_PATH_LIB_H__


	)

15 
	#END_DEVICE_PATH_LENGTH
 ( (
EFI_DEVICE_PATH_PROTOCOL
))

	)

33 
BOOLEAN


34 
EFIAPI


35 
IsDevi˚P©hVÆid
 (

36 
IN
 
CONST
 
EFI_DEVICE_PATH_PROTOCOL
 *
Devi˚P©h
,

37 
IN
 
UINTN
 
MaxSize


52 
UINT8


53 
EFIAPI


54 
Devi˚P©hTy≥
 (

55 
IN
 
CONST
 
VOID
 *
Node


70 
UINT8


71 
EFIAPI


72 
Devi˚P©hSubTy≥
 (

73 
IN
 
CONST
 
VOID
 *
Node


91 
UINTN


92 
EFIAPI


93 
Devi˚P©hNodeLígth
 (

94 
IN
 
CONST
 
VOID
 *
Node


109 
EFI_DEVICE_PATH_PROTOCOL
 *

110 
EFIAPI


111 
NextDevi˚P©hNode
 (

112 
IN
 
CONST
 
VOID
 *
Node


133 
BOOLEAN


134 
EFIAPI


135 
IsDevi˚P©hEndTy≥
 (

136 
IN
 
CONST
 
VOID
 *
Node


154 
BOOLEAN


155 
EFIAPI


156 
IsDevi˚P©hEnd
 (

157 
IN
 
CONST
 
VOID
 *
Node


175 
BOOLEAN


176 
EFIAPI


177 
IsDevi˚P©hEndIn°™˚
 (

178 
IN
 
CONST
 
VOID
 *
Node


199 
UINT16


200 
EFIAPI


201 
SëDevi˚P©hNodeLígth
 (

202 
IN
 
OUT
 
VOID
 *
Node
,

203 
IN
 
UINTN
 
Lígth


222 
VOID


223 
EFIAPI


224 
SëDevi˚P©hEndNode
 (

225 
OUT
 
VOID
 *
Node


241 
UINTN


242 
EFIAPI


243 
GëDevi˚P©hSize
 (

244 
IN
 
CONST
 
EFI_DEVICE_PATH_PROTOCOL
 *
Devi˚P©h


263 
EFI_DEVICE_PATH_PROTOCOL
 *

264 
EFIAPI


265 
Du∂iˇãDevi˚P©h
 (

266 
IN
 
CONST
 
EFI_DEVICE_PATH_PROTOCOL
 *
Devi˚P©h


292 
EFI_DEVICE_PATH_PROTOCOL
 *

293 
EFIAPI


294 
AµídDevi˚P©h
 (

295 
IN
 
CONST
 
EFI_DEVICE_PATH_PROTOCOL
 *
Fú°Devi˚P©h
, 
OPTIONAL


296 
IN
 
CONST
 
EFI_DEVICE_PATH_PROTOCOL
 *
Sec⁄dDevi˚P©h
 
OPTIONAL


324 
EFI_DEVICE_PATH_PROTOCOL
 *

325 
EFIAPI


326 
AµídDevi˚P©hNode
 (

327 
IN
 
CONST
 
EFI_DEVICE_PATH_PROTOCOL
 *
Devi˚P©h
, 
OPTIONAL


328 
IN
 
CONST
 
EFI_DEVICE_PATH_PROTOCOL
 *
Devi˚P©hNode
 
OPTIONAL


352 
EFI_DEVICE_PATH_PROTOCOL
 *

353 
EFIAPI


354 
AµídDevi˚P©hIn°™˚
 (

355 
IN
 
CONST
 
EFI_DEVICE_PATH_PROTOCOL
 *
Devi˚P©h
, 
OPTIONAL


356 
IN
 
CONST
 
EFI_DEVICE_PATH_PROTOCOL
 *
Devi˚P©hIn°™˚
 
OPTIONAL


384 
EFI_DEVICE_PATH_PROTOCOL
 *

385 
EFIAPI


386 
GëNextDevi˚P©hIn°™˚
 (

387 
IN
 
OUT
 
EFI_DEVICE_PATH_PROTOCOL
 **
Devi˚P©h
,

388 
OUT
 
UINTN
 *
Size


409 
EFI_DEVICE_PATH_PROTOCOL
 *

410 
EFIAPI


411 
Cª©eDevi˚Node
 (

412 
IN
 
UINT8
 
NodeTy≥
,

413 
IN
 
UINT8
 
NodeSubTy≥
,

414 
IN
 
UINT16
 
NodeLígth


430 
BOOLEAN


431 
EFIAPI


432 
IsDevi˚P©hMu…iIn°™˚
 (

433 
IN
 
CONST
 
EFI_DEVICE_PATH_PROTOCOL
 *
Devi˚P©h


447 
EFI_DEVICE_PATH_PROTOCOL
 *

448 
EFIAPI


449 
Devi˚P©hFromH™dÀ
 (

450 
IN
 
EFI_HANDLE
 
H™dÀ


474 
EFI_DEVICE_PATH_PROTOCOL
 *

475 
EFIAPI


476 
FûeDevi˚P©h
 (

477 
IN
 
EFI_HANDLE
 
Devi˚
, 
OPTIONAL


478 
IN
 
CONST
 
CHAR16
 *
FûeName


496 
CHAR16
 *

497 
EFIAPI


498 
C⁄vîtDevi˚P©hToText
 (

499 
IN
 
CONST
 
EFI_DEVICE_PATH_PROTOCOL
 *
Devi˚P©h
,

500 
IN
 
BOOLEAN
 
Di•œyO∆y
,

501 
IN
 
BOOLEAN
 
AŒowSh‹tcuts


519 
CHAR16
 *

520 
EFIAPI


521 
C⁄vîtDevi˚NodeToText
 (

522 
IN
 
CONST
 
EFI_DEVICE_PATH_PROTOCOL
 *
Devi˚Node
,

523 
IN
 
BOOLEAN
 
Di•œyO∆y
,

524 
IN
 
BOOLEAN
 
AŒowSh‹tcuts


538 
EFI_DEVICE_PATH_PROTOCOL
 *

539 
EFIAPI


540 
C⁄vîtTextToDevi˚Node
 (

541 
IN
 
CONST
 
CHAR16
 *
TextDevi˚Node


555 
EFI_DEVICE_PATH_PROTOCOL
 *

556 
EFIAPI


557 
C⁄vîtTextToDevi˚P©h
 (

558 
IN
 
CONST
 
CHAR16
 *
TextDevi˚P©h


	@DxeCoreEntryPoint.h

9 #i‚de‡
__MODULE_ENTRY_POINT_H__


10 
	#__MODULE_ENTRY_POINT_H__


	)

15 
VOID
 *
gHobLi°
;

30 
VOID


31 
EFIAPI


32 
_ModuÀE¡ryPoöt
 (

33 
IN
 
VOID
 *
HobSèπ


45 
VOID


46 
EFIAPI


47 
EfiMaö
 (

48 
IN
 
VOID
 *
HobSèπ


68 
VOID


69 
EFIAPI


70 
Pro˚ssLibøryC⁄°ru˘‹Li°
 (

71 
IN
 
EFI_HANDLE
 
ImageH™dÀ
,

72 
IN
 
EFI_SYSTEM_TABLE
 *
Sy°emTabÀ


87 
VOID


88 
EFIAPI


89 
Pro˚ssModuÀE¡ryPoötLi°
 (

90 
IN
 
VOID
 *
HobSèπ


	@DxeServicesLib.h

11 #i‚de‡
__DXE_SERVICES_LIB_H__


12 
	#__DXE_SERVICES_LIB_H__


	)

53 
EFI_STATUS


54 
EFIAPI


55 
GëSe˘i⁄FromAnyFvByFûeTy≥
 (

56 
IN
 
EFI_FV_FILETYPE
 
FûeTy≥
,

57 
IN
 
UINTN
 
FûeIn°™˚
,

58 
IN
 
EFI_SECTION_TYPE
 
Se˘i⁄Ty≥
,

59 
IN
 
UINTN
 
Se˘i⁄In°™˚
,

60 
OUT
 
VOID
 **
Buf„r
,

61 
OUT
 
UINTN
 *
Size


107 
EFI_STATUS


108 
EFIAPI


109 
GëSe˘i⁄FromAnyFv
 (

110 
IN
 
CONST
 
EFI_GUID
 *
NameGuid
,

111 
IN
 
EFI_SECTION_TYPE
 
Se˘i⁄Ty≥
,

112 
IN
 
UINTN
 
Se˘i⁄In°™˚
,

113 
OUT
 
VOID
 **
Buf„r
,

114 
OUT
 
UINTN
 *
Size


162 
EFI_STATUS


163 
EFIAPI


164 
GëSe˘i⁄FromFv
 (

165 
IN
 
CONST
 
EFI_GUID
 *
NameGuid
,

166 
IN
 
EFI_SECTION_TYPE
 
Se˘i⁄Ty≥
,

167 
IN
 
UINTN
 
Se˘i⁄In°™˚
,

168 
OUT
 
VOID
 **
Buf„r
,

169 
OUT
 
UINTN
 *
Size


215 
EFI_STATUS


216 
EFIAPI


217 
GëSe˘i⁄FromFfs
 (

218 
IN
 
EFI_SECTION_TYPE
 
Se˘i⁄Ty≥
,

219 
IN
 
UINTN
 
Se˘i⁄In°™˚
,

220 
OUT
 
VOID
 **
Buf„r
,

221 
OUT
 
UINTN
 *
Size


251 
VOID
 *

252 
EFIAPI


253 
GëFûeBuf„rByFûeP©h
 (

254 
IN
 
BOOLEAN
 
BoŸPﬁicy
,

255 
IN
 
CONST
 
EFI_DEVICE_PATH_PROTOCOL
 *
FûeP©h
,

256 
OUT
 
UINTN
 *
FûeSize
,

257 
OUT
 
UINT32
 *
Authítiˇti⁄Sètus


293 
EFI_STATUS


294 
EFIAPI


295 
GëFûeDevi˚P©hFromAnyFv
 (

296 
IN
 
CONST
 
EFI_GUID
 *
NameGuid
,

297 
IN
 
EFI_SECTION_TYPE
 
Se˘i⁄Ty≥
,

298 
IN
 
UINTN
 
Se˘i⁄In°™˚
,

299 
OUT
 
EFI_DEVICE_PATH_PROTOCOL
 **
FvFûeDevi˚P©h


317 
VOID
 *

318 
EFIAPI


319 
AŒoˇãPeiAc˚ssibÀPages
 (

320 
IN
 
EFI_MEMORY_TYPE
 
Mem‹yTy≥
,

321 
IN
 
UINTN
 
Pages


	@DxeServicesTableLib.h

19 #i‚de‡
__DXE_SERVICES_TABLE_LIB_H__


20 
	#__DXE_SERVICES_TABLE_LIB_H__


	)

25 
EFI_DXE_SERVICES
 *
gDS
;

	@ExtractGuidedSectionLib.h

17 #i‚de‡
__EXTRACT_GUIDED_SECTION_H__


18 
	#__EXTRACT_GUIDED_SECTION_H__


	)

54 
	gRETURN_STATUS


55 (
	tEFIAPI
 *
	tEXTRACT_GUIDED_SECTION_GET_INFO_HANDLER
)(

56 
	tIN
 
	tCONST
 
	tVOID
 *
	tI≈utSe˘i⁄
,

57 
	tOUT
 
	tUINT32
 *
	tOuçutBuf„rSize
,

58 
	tOUT
 
	tUINT32
 *
	tS¸©chBuf„rSize
,

59 
	tOUT
 
	tUINT16
 *
	tSe˘i⁄Aâribuã


96 
	gRETURN_STATUS


97 (
	tEFIAPI
 *
	tEXTRACT_GUIDED_SECTION_DECODE_HANDLER
)(

98 
	tIN
 
	tCONST
 
	tVOID
 *
	tI≈utSe˘i⁄
,

99 
	tOUT
 
	tVOID
 **
	tOuçutBuf„r
,

100 
	tIN
 
	tVOID
 *
	tS¸©chBuf„r
, 
	tOPTIONAL


101 
	tOUT
 
	tUINT32
 *
	tAuthítiˇti⁄Sètus


128 
RETURN_STATUS


129 
EFIAPI


130 
Exåa˘GuidedSe˘i⁄Regi°îH™dÀrs
 (

131 
IN
 
CONST
 
GUID
 *
Se˘i⁄Guid
,

132 
IN
 
EXTRACT_GUIDED_SECTION_GET_INFO_HANDLER
 
GëInfoH™dÀr
,

133 
IN
 
EXTRACT_GUIDED_SECTION_DECODE_HANDLER
 
DecodeH™dÀr


150 
UINTN


151 
EFIAPI


152 
Exåa˘GuidedSe˘i⁄GëGuidLi°
 (

153 
OUT
 
GUID
 **
Exåa˘H™dÀrGuidTabÀ


190 
RETURN_STATUS


191 
EFIAPI


192 
Exåa˘GuidedSe˘i⁄GëInfo
 (

193 
IN
 
CONST
 
VOID
 *
I≈utSe˘i⁄
,

194 
OUT
 
UINT32
 *
OuçutBuf„rSize
,

195 
OUT
 
UINT32
 *
S¸©chBuf„rSize
,

196 
OUT
 
UINT16
 *
Se˘i⁄Aâribuã


234 
RETURN_STATUS


235 
EFIAPI


236 
Exåa˘GuidedSe˘i⁄Decode
 (

237 
IN
 
CONST
 
VOID
 *
I≈utSe˘i⁄
,

238 
OUT
 
VOID
 **
OuçutBuf„r
,

239 
IN
 
VOID
 *
S¸©chBuf„r
, 
OPTIONAL


240 
OUT
 
UINT32
 *
Authítiˇti⁄Sètus


270 
RETURN_STATUS


271 
EFIAPI


272 
Exåa˘GuidedSe˘i⁄GëH™dÀrs
 (

273 
IN
 
CONST
 
GUID
 *
Se˘i⁄Guid
,

274 
OUT
 
EXTRACT_GUIDED_SECTION_GET_INFO_HANDLER
 *
GëInfoH™dÀr
, 
OPTIONAL


275 
OUT
 
EXTRACT_GUIDED_SECTION_DECODE_HANDLER
 *
DecodeH™dÀr
 
OPTIONAL


	@FileHandleLib.h

9 #i‚de‡
_FILE_HANDLE_LIBRARY_HEADER_


10 
	#_FILE_HANDLE_LIBRARY_HEADER_


	)

12 
	~<PrŸocﬁ/Sim∂eFûeSy°em.h
>

13 
	~<Guid/FûeInfo.h
>

17 
CONST
 
UINT16
 
gUnicodeFûeTag
;

32 
EFI_FILE_INFO
*

33 
EFIAPI


34 
FûeH™dÀGëInfo
 (

35 
IN
 
EFI_FILE_HANDLE
 
FûeH™dÀ


57 
EFI_STATUS


58 
EFIAPI


59 
FûeH™dÀSëInfo
 (

60 
IN
 
EFI_FILE_HANDLE
 
FûeH™dÀ
,

61 
IN
 
CONST
 
EFI_FILE_INFO
 *
FûeInfo


93 
EFI_STATUS


94 
EFIAPI


95 
FûeH™dÀRód
(

96 
IN
 
EFI_FILE_HANDLE
 
FûeH™dÀ
,

97 
IN
 
OUT
 
UINTN
 *
Buf„rSize
,

98 
OUT
 
VOID
 *
Buf„r


125 
EFI_STATUS


126 
EFIAPI


127 
FûeH™dÀWrôe
(

128 
IN
 
EFI_FILE_HANDLE
 
FûeH™dÀ
,

129 
IN
 
OUT
 
UINTN
 *
Buf„rSize
,

130 
IN
 
VOID
 *
Buf„r


144 
EFI_STATUS


145 
EFIAPI


146 
FûeH™dÀClo£
 (

147 
IN
 
EFI_FILE_HANDLE
 
FûeH™dÀ


164 
EFI_STATUS


165 
EFIAPI


166 
FûeH™dÀDñëe
 (

167 
IN
 
EFI_FILE_HANDLE
 
FûeH™dÀ


189 
EFI_STATUS


190 
EFIAPI


191 
FûeH™dÀSëPosôi⁄
 (

192 
IN
 
EFI_FILE_HANDLE
 
FûeH™dÀ
,

193 
IN
 
UINT64
 
Posôi⁄


211 
EFI_STATUS


212 
EFIAPI


213 
FûeH™dÀGëPosôi⁄
 (

214 
IN
 
EFI_FILE_HANDLE
 
FûeH™dÀ
,

215 
OUT
 
UINT64
 *
Posôi⁄


231 
EFI_STATUS


232 
EFIAPI


233 
FûeH™dÀFlush
 (

234 
IN
 
EFI_FILE_HANDLE
 
FûeH™dÀ


250 
EFI_STATUS


251 
EFIAPI


252 
FûeH™dÀIsDúe˘‹y
 (

253 
IN
 
EFI_FILE_HANDLE
 
DúH™dÀ


278 
EFI_STATUS


279 
EFIAPI


280 
FûeH™dÀFödFú°Fûe
 (

281 
IN
 
EFI_FILE_HANDLE
 
DúH™dÀ
,

282 
OUT
 
EFI_FILE_INFO
 **
Buf„r


303 
EFI_STATUS


304 
EFIAPI


305 
FûeH™dÀFödNextFûe
(

306 
IN
 
EFI_FILE_HANDLE
 
DúH™dÀ
,

307 
OUT
 
EFI_FILE_INFO
 *
Buf„r
,

308 
OUT
 
BOOLEAN
 *
NoFûe


325 
EFI_STATUS


326 
EFIAPI


327 
FûeH™dÀGëSize
 (

328 
IN
 
EFI_FILE_HANDLE
 
FûeH™dÀ
,

329 
OUT
 
UINT64
 *
Size


345 
EFI_STATUS


346 
EFIAPI


347 
FûeH™dÀSëSize
 (

348 
IN
 
EFI_FILE_HANDLE
 
FûeH™dÀ
,

349 
IN
 
UINT64
 
Size


367 
EFI_STATUS


368 
EFIAPI


369 
FûeH™dÀGëFûeName
 (

370 
IN
 
CONST
 
EFI_FILE_HANDLE
 
H™dÀ
,

371 
OUT
 
CHAR16
 **
FuŒFûeName


402 
EFI_STATUS


403 
EFIAPI


404 
FûeH™dÀRódLöe
(

405 
IN
 
EFI_FILE_HANDLE
 
H™dÀ
,

406 
IN
 
OUT
 
CHAR16
 *
Buf„r
,

407 
IN
 
OUT
 
UINTN
 *
Size
,

408 
IN
 
BOOLEAN
 
Trunˇã
,

409 
IN
 
OUT
 
BOOLEAN
 *
Ascii


427 
CHAR16
*

428 
EFIAPI


429 
FûeH™dÀRëu∫Löe
(

430 
IN
 
EFI_FILE_HANDLE
 
H™dÀ
,

431 
IN
 
OUT
 
BOOLEAN
 *
Ascii


455 
EFI_STATUS


456 
EFIAPI


457 
FûeH™dÀWrôeLöe
(

458 
IN
 
EFI_FILE_HANDLE
 
H™dÀ
,

459 
IN
 
CHAR16
 *
Buf„r


474 
EFI_STATUS


475 
EFIAPI


476 
FûeH™dÀPrötLöe
(

477 
IN
 
EFI_FILE_HANDLE
 
H™dÀ
,

478 
IN
 
CONST
 
CHAR16
 *
F‹m©
,

494 
BOOLEAN


495 
EFIAPI


496 
FûeH™dÀEof
(

497 
IN
 
EFI_FILE_HANDLE
 
H™dÀ


	@HobLib.h

16 #i‚de‡
__HOB_LIB_H__


17 
	#__HOB_LIB_H__


	)

35 
VOID
 *

36 
EFIAPI


37 
GëHobLi°
 (

38 
VOID


58 
VOID
 *

59 
EFIAPI


60 
GëNextHob
 (

61 
IN
 
UINT16
 
Ty≥
,

62 
IN
 
CONST
 
VOID
 *
HobSèπ


78 
VOID
 *

79 
EFIAPI


80 
GëFú°Hob
 (

81 
IN
 
UINT16
 
Ty≥


106 
VOID
 *

107 
EFIAPI


108 
GëNextGuidHob
 (

109 
IN
 
CONST
 
EFI_GUID
 *
Guid
,

110 
IN
 
CONST
 
VOID
 *
HobSèπ


131 
VOID
 *

132 
EFIAPI


133 
GëFú°GuidHob
 (

134 
IN
 
CONST
 
EFI_GUID
 *
Guid


150 
EFI_BOOT_MODE


151 
EFIAPI


152 
GëBoŸModeHob
 (

153 
VOID


172 
VOID


173 
EFIAPI


174 
BuûdModuÀHob
 (

175 
IN
 
CONST
 
EFI_GUID
 *
ModuÀName
,

176 
IN
 
EFI_PHYSICAL_ADDRESS
 
Mem‹yAŒoˇti⁄ModuÀ
,

177 
IN
 
UINT64
 
ModuÀLígth
,

178 
IN
 
EFI_PHYSICAL_ADDRESS
 
E¡ryPoöt


197 
VOID


198 
EFIAPI


199 
BuûdResour˚Des¸ùt‹WôhOw√rHob
 (

200 
IN
 
EFI_RESOURCE_TYPE
 
Resour˚Ty≥
,

201 
IN
 
EFI_RESOURCE_ATTRIBUTE_TYPE
 
Resour˚Aâribuã
,

202 
IN
 
EFI_PHYSICAL_ADDRESS
 
PhysiˇlSèπ
,

203 
IN
 
UINT64
 
NumbîOfByãs
,

204 
IN
 
EFI_GUID
 *
Ow√rGUID


222 
VOID


223 
EFIAPI


224 
BuûdResour˚Des¸ùt‹Hob
 (

225 
IN
 
EFI_RESOURCE_TYPE
 
Resour˚Ty≥
,

226 
IN
 
EFI_RESOURCE_ATTRIBUTE_TYPE
 
Resour˚Aâribuã
,

227 
IN
 
EFI_PHYSICAL_ADDRESS
 
PhysiˇlSèπ
,

228 
IN
 
UINT64
 
NumbîOfByãs


253 
VOID
 *

254 
EFIAPI


255 
BuûdGuidHob
 (

256 
IN
 
CONST
 
EFI_GUID
 *
Guid
,

257 
IN
 
UINTN
 
D©aLígth


285 
VOID
 *

286 
EFIAPI


287 
BuûdGuidD©aHob
 (

288 
IN
 
CONST
 
EFI_GUID
 *
Guid
,

289 
IN
 
VOID
 *
D©a
,

290 
IN
 
UINTN
 
D©aLígth


307 
VOID


308 
EFIAPI


309 
BuûdFvHob
 (

310 
IN
 
EFI_PHYSICAL_ADDRESS
 
Ba£Addªss
,

311 
IN
 
UINT64
 
Lígth


330 
VOID


331 
EFIAPI


332 
BuûdFv2Hob
 (

333 
IN
 
EFI_PHYSICAL_ADDRESS
 
Ba£Addªss
,

334 
IN
 
UINT64
 
Lígth
,

335 
IN
 
CONST
 
EFI_GUID
 *
FvName
,

336 
IN
 
CONST
 
EFI_GUID
 *
FûeName


360 
VOID


361 
EFIAPI


362 
BuûdFv3Hob
 (

363 
IN
 
EFI_PHYSICAL_ADDRESS
 
Ba£Addªss
,

364 
IN
 
UINT64
 
Lígth
,

365 
IN
 
UINT32
 
Authítiˇti⁄Sètus
,

366 
IN
 
BOOLEAN
 
Exåa˘edFv
,

367 
IN
 
CONST
 
EFI_GUID
 *
FvName
, 
OPTIONAL


368 
IN
 
CONST
 
EFI_GUID
 *
FûeName
 
OPTIONAL


385 
VOID


386 
EFIAPI


387 
BuûdCvHob
 (

388 
IN
 
EFI_PHYSICAL_ADDRESS
 
Ba£Addªss
,

389 
IN
 
UINT64
 
Lígth


405 
VOID


406 
EFIAPI


407 
BuûdCpuHob
 (

408 
IN
 
UINT8
 
SizeOfMem‹yS∑˚
,

409 
IN
 
UINT8
 
SizeOfIoS∑˚


425 
VOID


426 
EFIAPI


427 
BuûdSèckHob
 (

428 
IN
 
EFI_PHYSICAL_ADDRESS
 
Ba£Addªss
,

429 
IN
 
UINT64
 
Lígth


446 
VOID


447 
EFIAPI


448 
BuûdB•St‹eHob
 (

449 
IN
 
EFI_PHYSICAL_ADDRESS
 
Ba£Addªss
,

450 
IN
 
UINT64
 
Lígth
,

451 
IN
 
EFI_MEMORY_TYPE
 
Mem‹yTy≥


468 
VOID


469 
EFIAPI


470 
BuûdMem‹yAŒoˇti⁄Hob
 (

471 
IN
 
EFI_PHYSICAL_ADDRESS
 
Ba£Addªss
,

472 
IN
 
UINT64
 
Lígth
,

473 
IN
 
EFI_MEMORY_TYPE
 
Mem‹yTy≥


487 
	#GET_HOB_TYPE
(
HobSèπ
Ë\

	)

488 ((*(
	gEFI_HOB_GENERIC_HEADER
 **)&(
	gHobSèπ
))->
	gHobTy≥
)

501 
	#GET_HOB_LENGTH
(
HobSèπ
Ë\

	)

502 ((*(
	gEFI_HOB_GENERIC_HEADER
 **)&(
	gHobSèπ
))->
	gHobLígth
)

515 
	#GET_NEXT_HOB
(
HobSèπ
Ë\

	)

516 (
	gVOID
 *)(*(
	gUINT8
 **)&(
	gHobSèπ
Ë+ 
GET_HOB_LENGTH
 (
HobSèπ
))

531 
	#END_OF_HOB_LIST
(
HobSèπ
Ë(
	`GET_HOB_TYPE
 (HobSèπË=(
UINT16
)
EFI_HOB_TYPE_END_OF_HOB_LIST
)

	)

544 
	#GET_GUID_HOB_DATA
(
HobSèπ
Ë\

	)

545 (
	gVOID
 *)(*(
	gUINT8
 **)&(
	gHobSèπ
Ë+  (
	gEFI_HOB_GUID_TYPE
))

557 
	#GET_GUID_HOB_DATA_SIZE
(
HobSèπ
Ë\

	)

558 (
	gUINT16
)(
GET_HOB_LENGTH
 (
HobSèπ
Ë-  (
EFI_HOB_GUID_TYPE
))

	@HstiLib.h

9 #i‚de‡
__HSTI_LIB_H__


10 
	#__HSTI_LIB_H__


	)

28 
EFI_STATUS


29 
EFIAPI


30 
H°iLibSëTabÀ
 (

31 
IN
 
VOID
 *
H°i
,

32 
IN
 
UINTN
 
H°iSize


51 
EFI_STATUS


52 
EFIAPI


53 
H°iLibGëTabÀ
 (

54 
IN
 
UINT32
 
Rﬁe
,

55 
IN
 
CHAR16
 *
Im∂emíèti⁄ID
 
OPTIONAL
,

56 
OUT
 
VOID
 **
H°i
,

57 
OUT
 
UINTN
 *
H°iSize


75 
EFI_STATUS


76 
EFIAPI


77 
H°iLibSëFótuªsVîifõd
 (

78 
IN
 
UINT32
 
Rﬁe
,

79 
IN
 
CHAR16
 *
Im∂emíèti⁄ID
, 
OPTIONAL


80 
IN
 
UINT32
 
ByãIndex
,

81 
IN
 
UINT8
 
BôMask


99 
EFI_STATUS


100 
EFIAPI


101 
H°iLibCÀ¨FótuªsVîifõd
 (

102 
IN
 
UINT32
 
Rﬁe
,

103 
IN
 
CHAR16
 *
Im∂emíèti⁄ID
, 
OPTIONAL


104 
IN
 
UINT32
 
ByãIndex
,

105 
IN
 
UINT8
 
BôMask


122 
EFI_STATUS


123 
EFIAPI


124 
H°iLibAµídEº‹Såög
 (

125 
IN
 
UINT32
 
Rﬁe
,

126 
IN
 
CHAR16
 *
Im∂emíèti⁄ID
, 
OPTIONAL


127 
IN
 
CHAR16
 *
Eº‹Såög


144 
EFI_STATUS


145 
EFIAPI


146 
H°iLibSëEº‹Såög
 (

147 
IN
 
UINT32
 
Rﬁe
,

148 
IN
 
CHAR16
 *
Im∂emíèti⁄ID
, 
OPTIONAL


149 
IN
 
CHAR16
 *
Eº‹Såög


	@IoLib.h

11 #i‚de‡
__IO_LIB_H__


12 
	#__IO_LIB_H__


	)

29 
	#IO_LIB_ADDRESS
(
Segmít
,
P‹t
Ë\

	)

30 –((
	gP‹t
Ë& 0xffffË| (((
	gSegmít
) & 0xffff) << 16) )

46 
UINT8


47 
EFIAPI


48 
IoRód8
 (

49 
IN
 
UINTN
 
P‹t


67 
UINT8


68 
EFIAPI


69 
IoWrôe8
 (

70 
IN
 
UINTN
 
P‹t
,

71 
IN
 
UINT8
 
VÆue


91 
VOID


92 
EFIAPI


93 
IoRódFifo8
 (

94 
IN
 
UINTN
 
P‹t
,

95 
IN
 
UINTN
 
Cou¡
,

96 
OUT
 
VOID
 *
Buf„r


116 
VOID


117 
EFIAPI


118 
IoWrôeFifo8
 (

119 
IN
 
UINTN
 
P‹t
,

120 
IN
 
UINTN
 
Cou¡
,

121 
IN
 
VOID
 *
Buf„r


142 
UINT8


143 
EFIAPI


144 
IoOr8
 (

145 
IN
 
UINTN
 
P‹t
,

146 
IN
 
UINT8
 
OrD©a


167 
UINT8


168 
EFIAPI


169 
IoAnd8
 (

170 
IN
 
UINTN
 
P‹t
,

171 
IN
 
UINT8
 
AndD©a


194 
UINT8


195 
EFIAPI


196 
IoAndThíOr8
 (

197 
IN
 
UINTN
 
P‹t
,

198 
IN
 
UINT8
 
AndD©a
,

199 
IN
 
UINT8
 
OrD©a


222 
UINT8


223 
EFIAPI


224 
IoBôFõldRód8
 (

225 
IN
 
UINTN
 
P‹t
,

226 
IN
 
UINTN
 
SèπBô
,

227 
IN
 
UINTN
 
EndBô


253 
UINT8


254 
EFIAPI


255 
IoBôFõldWrôe8
 (

256 
IN
 
UINTN
 
P‹t
,

257 
IN
 
UINTN
 
SèπBô
,

258 
IN
 
UINTN
 
EndBô
,

259 
IN
 
UINT8
 
VÆue


288 
UINT8


289 
EFIAPI


290 
IoBôFõldOr8
 (

291 
IN
 
UINTN
 
P‹t
,

292 
IN
 
UINTN
 
SèπBô
,

293 
IN
 
UINTN
 
EndBô
,

294 
IN
 
UINT8
 
OrD©a


323 
UINT8


324 
EFIAPI


325 
IoBôFõldAnd8
 (

326 
IN
 
UINTN
 
P‹t
,

327 
IN
 
UINTN
 
SèπBô
,

328 
IN
 
UINTN
 
EndBô
,

329 
IN
 
UINT8
 
AndD©a


362 
UINT8


363 
EFIAPI


364 
IoBôFõldAndThíOr8
 (

365 
IN
 
UINTN
 
P‹t
,

366 
IN
 
UINTN
 
SèπBô
,

367 
IN
 
UINTN
 
EndBô
,

368 
IN
 
UINT8
 
AndD©a
,

369 
IN
 
UINT8
 
OrD©a


387 
UINT16


388 
EFIAPI


389 
IoRód16
 (

390 
IN
 
UINTN
 
P‹t


409 
UINT16


410 
EFIAPI


411 
IoWrôe16
 (

412 
IN
 
UINTN
 
P‹t
,

413 
IN
 
UINT16
 
VÆue


433 
VOID


434 
EFIAPI


435 
IoRódFifo16
 (

436 
IN
 
UINTN
 
P‹t
,

437 
IN
 
UINTN
 
Cou¡
,

438 
OUT
 
VOID
 *
Buf„r


458 
VOID


459 
EFIAPI


460 
IoWrôeFifo16
 (

461 
IN
 
UINTN
 
P‹t
,

462 
IN
 
UINTN
 
Cou¡
,

463 
IN
 
VOID
 *
Buf„r


485 
UINT16


486 
EFIAPI


487 
IoOr16
 (

488 
IN
 
UINTN
 
P‹t
,

489 
IN
 
UINT16
 
OrD©a


511 
UINT16


512 
EFIAPI


513 
IoAnd16
 (

514 
IN
 
UINTN
 
P‹t
,

515 
IN
 
UINT16
 
AndD©a


539 
UINT16


540 
EFIAPI


541 
IoAndThíOr16
 (

542 
IN
 
UINTN
 
P‹t
,

543 
IN
 
UINT16
 
AndD©a
,

544 
IN
 
UINT16
 
OrD©a


568 
UINT16


569 
EFIAPI


570 
IoBôFõldRód16
 (

571 
IN
 
UINTN
 
P‹t
,

572 
IN
 
UINTN
 
SèπBô
,

573 
IN
 
UINTN
 
EndBô


601 
UINT16


602 
EFIAPI


603 
IoBôFõldWrôe16
 (

604 
IN
 
UINTN
 
P‹t
,

605 
IN
 
UINTN
 
SèπBô
,

606 
IN
 
UINTN
 
EndBô
,

607 
IN
 
UINT16
 
VÆue


637 
UINT16


638 
EFIAPI


639 
IoBôFõldOr16
 (

640 
IN
 
UINTN
 
P‹t
,

641 
IN
 
UINTN
 
SèπBô
,

642 
IN
 
UINTN
 
EndBô
,

643 
IN
 
UINT16
 
OrD©a


673 
UINT16


674 
EFIAPI


675 
IoBôFõldAnd16
 (

676 
IN
 
UINTN
 
P‹t
,

677 
IN
 
UINTN
 
SèπBô
,

678 
IN
 
UINTN
 
EndBô
,

679 
IN
 
UINT16
 
AndD©a


713 
UINT16


714 
EFIAPI


715 
IoBôFõldAndThíOr16
 (

716 
IN
 
UINTN
 
P‹t
,

717 
IN
 
UINTN
 
SèπBô
,

718 
IN
 
UINTN
 
EndBô
,

719 
IN
 
UINT16
 
AndD©a
,

720 
IN
 
UINT16
 
OrD©a


738 
UINT32


739 
EFIAPI


740 
IoRód32
 (

741 
IN
 
UINTN
 
P‹t


760 
UINT32


761 
EFIAPI


762 
IoWrôe32
 (

763 
IN
 
UINTN
 
P‹t
,

764 
IN
 
UINT32
 
VÆue


784 
VOID


785 
EFIAPI


786 
IoRódFifo32
 (

787 
IN
 
UINTN
 
P‹t
,

788 
IN
 
UINTN
 
Cou¡
,

789 
OUT
 
VOID
 *
Buf„r


809 
VOID


810 
EFIAPI


811 
IoWrôeFifo32
 (

812 
IN
 
UINTN
 
P‹t
,

813 
IN
 
UINTN
 
Cou¡
,

814 
IN
 
VOID
 *
Buf„r


836 
UINT32


837 
EFIAPI


838 
IoOr32
 (

839 
IN
 
UINTN
 
P‹t
,

840 
IN
 
UINT32
 
OrD©a


862 
UINT32


863 
EFIAPI


864 
IoAnd32
 (

865 
IN
 
UINTN
 
P‹t
,

866 
IN
 
UINT32
 
AndD©a


890 
UINT32


891 
EFIAPI


892 
IoAndThíOr32
 (

893 
IN
 
UINTN
 
P‹t
,

894 
IN
 
UINT32
 
AndD©a
,

895 
IN
 
UINT32
 
OrD©a


919 
UINT32


920 
EFIAPI


921 
IoBôFõldRód32
 (

922 
IN
 
UINTN
 
P‹t
,

923 
IN
 
UINTN
 
SèπBô
,

924 
IN
 
UINTN
 
EndBô


952 
UINT32


953 
EFIAPI


954 
IoBôFõldWrôe32
 (

955 
IN
 
UINTN
 
P‹t
,

956 
IN
 
UINTN
 
SèπBô
,

957 
IN
 
UINTN
 
EndBô
,

958 
IN
 
UINT32
 
VÆue


988 
UINT32


989 
EFIAPI


990 
IoBôFõldOr32
 (

991 
IN
 
UINTN
 
P‹t
,

992 
IN
 
UINTN
 
SèπBô
,

993 
IN
 
UINTN
 
EndBô
,

994 
IN
 
UINT32
 
OrD©a


1024 
UINT32


1025 
EFIAPI


1026 
IoBôFõldAnd32
 (

1027 
IN
 
UINTN
 
P‹t
,

1028 
IN
 
UINTN
 
SèπBô
,

1029 
IN
 
UINTN
 
EndBô
,

1030 
IN
 
UINT32
 
AndD©a


1064 
UINT32


1065 
EFIAPI


1066 
IoBôFõldAndThíOr32
 (

1067 
IN
 
UINTN
 
P‹t
,

1068 
IN
 
UINTN
 
SèπBô
,

1069 
IN
 
UINTN
 
EndBô
,

1070 
IN
 
UINT32
 
AndD©a
,

1071 
IN
 
UINT32
 
OrD©a


1089 
UINT64


1090 
EFIAPI


1091 
IoRód64
 (

1092 
IN
 
UINTN
 
P‹t


1111 
UINT64


1112 
EFIAPI


1113 
IoWrôe64
 (

1114 
IN
 
UINTN
 
P‹t
,

1115 
IN
 
UINT64
 
VÆue


1137 
UINT64


1138 
EFIAPI


1139 
IoOr64
 (

1140 
IN
 
UINTN
 
P‹t
,

1141 
IN
 
UINT64
 
OrD©a


1163 
UINT64


1164 
EFIAPI


1165 
IoAnd64
 (

1166 
IN
 
UINTN
 
P‹t
,

1167 
IN
 
UINT64
 
AndD©a


1191 
UINT64


1192 
EFIAPI


1193 
IoAndThíOr64
 (

1194 
IN
 
UINTN
 
P‹t
,

1195 
IN
 
UINT64
 
AndD©a
,

1196 
IN
 
UINT64
 
OrD©a


1220 
UINT64


1221 
EFIAPI


1222 
IoBôFõldRód64
 (

1223 
IN
 
UINTN
 
P‹t
,

1224 
IN
 
UINTN
 
SèπBô
,

1225 
IN
 
UINTN
 
EndBô


1253 
UINT64


1254 
EFIAPI


1255 
IoBôFõldWrôe64
 (

1256 
IN
 
UINTN
 
P‹t
,

1257 
IN
 
UINTN
 
SèπBô
,

1258 
IN
 
UINTN
 
EndBô
,

1259 
IN
 
UINT64
 
VÆue


1289 
UINT64


1290 
EFIAPI


1291 
IoBôFõldOr64
 (

1292 
IN
 
UINTN
 
P‹t
,

1293 
IN
 
UINTN
 
SèπBô
,

1294 
IN
 
UINTN
 
EndBô
,

1295 
IN
 
UINT64
 
OrD©a


1325 
UINT64


1326 
EFIAPI


1327 
IoBôFõldAnd64
 (

1328 
IN
 
UINTN
 
P‹t
,

1329 
IN
 
UINTN
 
SèπBô
,

1330 
IN
 
UINTN
 
EndBô
,

1331 
IN
 
UINT64
 
AndD©a


1365 
UINT64


1366 
EFIAPI


1367 
IoBôFõldAndThíOr64
 (

1368 
IN
 
UINTN
 
P‹t
,

1369 
IN
 
UINTN
 
SèπBô
,

1370 
IN
 
UINTN
 
EndBô
,

1371 
IN
 
UINT64
 
AndD©a
,

1372 
IN
 
UINT64
 
OrD©a


1389 
UINT8


1390 
EFIAPI


1391 
MmioRód8
 (

1392 
IN
 
UINTN
 
Addªss


1410 
UINT8


1411 
EFIAPI


1412 
MmioWrôe8
 (

1413 
IN
 
UINTN
 
Addªss
,

1414 
IN
 
UINT8
 
VÆue


1435 
UINT8


1436 
EFIAPI


1437 
MmioOr8
 (

1438 
IN
 
UINTN
 
Addªss
,

1439 
IN
 
UINT8
 
OrD©a


1460 
UINT8


1461 
EFIAPI


1462 
MmioAnd8
 (

1463 
IN
 
UINTN
 
Addªss
,

1464 
IN
 
UINT8
 
AndD©a


1488 
UINT8


1489 
EFIAPI


1490 
MmioAndThíOr8
 (

1491 
IN
 
UINTN
 
Addªss
,

1492 
IN
 
UINT8
 
AndD©a
,

1493 
IN
 
UINT8
 
OrD©a


1516 
UINT8


1517 
EFIAPI


1518 
MmioBôFõldRód8
 (

1519 
IN
 
UINTN
 
Addªss
,

1520 
IN
 
UINTN
 
SèπBô
,

1521 
IN
 
UINTN
 
EndBô


1547 
UINT8


1548 
EFIAPI


1549 
MmioBôFõldWrôe8
 (

1550 
IN
 
UINTN
 
Addªss
,

1551 
IN
 
UINTN
 
SèπBô
,

1552 
IN
 
UINTN
 
EndBô
,

1553 
IN
 
UINT8
 
VÆue


1583 
UINT8


1584 
EFIAPI


1585 
MmioBôFõldOr8
 (

1586 
IN
 
UINTN
 
Addªss
,

1587 
IN
 
UINTN
 
SèπBô
,

1588 
IN
 
UINTN
 
EndBô
,

1589 
IN
 
UINT8
 
OrD©a


1619 
UINT8


1620 
EFIAPI


1621 
MmioBôFõldAnd8
 (

1622 
IN
 
UINTN
 
Addªss
,

1623 
IN
 
UINTN
 
SèπBô
,

1624 
IN
 
UINTN
 
EndBô
,

1625 
IN
 
UINT8
 
AndD©a


1658 
UINT8


1659 
EFIAPI


1660 
MmioBôFõldAndThíOr8
 (

1661 
IN
 
UINTN
 
Addªss
,

1662 
IN
 
UINTN
 
SèπBô
,

1663 
IN
 
UINTN
 
EndBô
,

1664 
IN
 
UINT8
 
AndD©a
,

1665 
IN
 
UINT8
 
OrD©a


1683 
UINT16


1684 
EFIAPI


1685 
MmioRód16
 (

1686 
IN
 
UINTN
 
Addªss


1705 
UINT16


1706 
EFIAPI


1707 
MmioWrôe16
 (

1708 
IN
 
UINTN
 
Addªss
,

1709 
IN
 
UINT16
 
VÆue


1731 
UINT16


1732 
EFIAPI


1733 
MmioOr16
 (

1734 
IN
 
UINTN
 
Addªss
,

1735 
IN
 
UINT16
 
OrD©a


1757 
UINT16


1758 
EFIAPI


1759 
MmioAnd16
 (

1760 
IN
 
UINTN
 
Addªss
,

1761 
IN
 
UINT16
 
AndD©a


1785 
UINT16


1786 
EFIAPI


1787 
MmioAndThíOr16
 (

1788 
IN
 
UINTN
 
Addªss
,

1789 
IN
 
UINT16
 
AndD©a
,

1790 
IN
 
UINT16
 
OrD©a


1814 
UINT16


1815 
EFIAPI


1816 
MmioBôFõldRód16
 (

1817 
IN
 
UINTN
 
Addªss
,

1818 
IN
 
UINTN
 
SèπBô
,

1819 
IN
 
UINTN
 
EndBô


1846 
UINT16


1847 
EFIAPI


1848 
MmioBôFõldWrôe16
 (

1849 
IN
 
UINTN
 
Addªss
,

1850 
IN
 
UINTN
 
SèπBô
,

1851 
IN
 
UINTN
 
EndBô
,

1852 
IN
 
UINT16
 
VÆue


1883 
UINT16


1884 
EFIAPI


1885 
MmioBôFõldOr16
 (

1886 
IN
 
UINTN
 
Addªss
,

1887 
IN
 
UINTN
 
SèπBô
,

1888 
IN
 
UINTN
 
EndBô
,

1889 
IN
 
UINT16
 
OrD©a


1920 
UINT16


1921 
EFIAPI


1922 
MmioBôFõldAnd16
 (

1923 
IN
 
UINTN
 
Addªss
,

1924 
IN
 
UINTN
 
SèπBô
,

1925 
IN
 
UINTN
 
EndBô
,

1926 
IN
 
UINT16
 
AndD©a


1960 
UINT16


1961 
EFIAPI


1962 
MmioBôFõldAndThíOr16
 (

1963 
IN
 
UINTN
 
Addªss
,

1964 
IN
 
UINTN
 
SèπBô
,

1965 
IN
 
UINTN
 
EndBô
,

1966 
IN
 
UINT16
 
AndD©a
,

1967 
IN
 
UINT16
 
OrD©a


1985 
UINT32


1986 
EFIAPI


1987 
MmioRód32
 (

1988 
IN
 
UINTN
 
Addªss


2007 
UINT32


2008 
EFIAPI


2009 
MmioWrôe32
 (

2010 
IN
 
UINTN
 
Addªss
,

2011 
IN
 
UINT32
 
VÆue


2033 
UINT32


2034 
EFIAPI


2035 
MmioOr32
 (

2036 
IN
 
UINTN
 
Addªss
,

2037 
IN
 
UINT32
 
OrD©a


2059 
UINT32


2060 
EFIAPI


2061 
MmioAnd32
 (

2062 
IN
 
UINTN
 
Addªss
,

2063 
IN
 
UINT32
 
AndD©a


2087 
UINT32


2088 
EFIAPI


2089 
MmioAndThíOr32
 (

2090 
IN
 
UINTN
 
Addªss
,

2091 
IN
 
UINT32
 
AndD©a
,

2092 
IN
 
UINT32
 
OrD©a


2116 
UINT32


2117 
EFIAPI


2118 
MmioBôFõldRód32
 (

2119 
IN
 
UINTN
 
Addªss
,

2120 
IN
 
UINTN
 
SèπBô
,

2121 
IN
 
UINTN
 
EndBô


2148 
UINT32


2149 
EFIAPI


2150 
MmioBôFõldWrôe32
 (

2151 
IN
 
UINTN
 
Addªss
,

2152 
IN
 
UINTN
 
SèπBô
,

2153 
IN
 
UINTN
 
EndBô
,

2154 
IN
 
UINT32
 
VÆue


2185 
UINT32


2186 
EFIAPI


2187 
MmioBôFõldOr32
 (

2188 
IN
 
UINTN
 
Addªss
,

2189 
IN
 
UINTN
 
SèπBô
,

2190 
IN
 
UINTN
 
EndBô
,

2191 
IN
 
UINT32
 
OrD©a


2222 
UINT32


2223 
EFIAPI


2224 
MmioBôFõldAnd32
 (

2225 
IN
 
UINTN
 
Addªss
,

2226 
IN
 
UINTN
 
SèπBô
,

2227 
IN
 
UINTN
 
EndBô
,

2228 
IN
 
UINT32
 
AndD©a


2262 
UINT32


2263 
EFIAPI


2264 
MmioBôFõldAndThíOr32
 (

2265 
IN
 
UINTN
 
Addªss
,

2266 
IN
 
UINTN
 
SèπBô
,

2267 
IN
 
UINTN
 
EndBô
,

2268 
IN
 
UINT32
 
AndD©a
,

2269 
IN
 
UINT32
 
OrD©a


2287 
UINT64


2288 
EFIAPI


2289 
MmioRód64
 (

2290 
IN
 
UINTN
 
Addªss


2307 
UINT64


2308 
EFIAPI


2309 
MmioWrôe64
 (

2310 
IN
 
UINTN
 
Addªss
,

2311 
IN
 
UINT64
 
VÆue


2333 
UINT64


2334 
EFIAPI


2335 
MmioOr64
 (

2336 
IN
 
UINTN
 
Addªss
,

2337 
IN
 
UINT64
 
OrD©a


2359 
UINT64


2360 
EFIAPI


2361 
MmioAnd64
 (

2362 
IN
 
UINTN
 
Addªss
,

2363 
IN
 
UINT64
 
AndD©a


2387 
UINT64


2388 
EFIAPI


2389 
MmioAndThíOr64
 (

2390 
IN
 
UINTN
 
Addªss
,

2391 
IN
 
UINT64
 
AndD©a
,

2392 
IN
 
UINT64
 
OrD©a


2416 
UINT64


2417 
EFIAPI


2418 
MmioBôFõldRód64
 (

2419 
IN
 
UINTN
 
Addªss
,

2420 
IN
 
UINTN
 
SèπBô
,

2421 
IN
 
UINTN
 
EndBô


2448 
UINT64


2449 
EFIAPI


2450 
MmioBôFõldWrôe64
 (

2451 
IN
 
UINTN
 
Addªss
,

2452 
IN
 
UINTN
 
SèπBô
,

2453 
IN
 
UINTN
 
EndBô
,

2454 
IN
 
UINT64
 
VÆue


2485 
UINT64


2486 
EFIAPI


2487 
MmioBôFõldOr64
 (

2488 
IN
 
UINTN
 
Addªss
,

2489 
IN
 
UINTN
 
SèπBô
,

2490 
IN
 
UINTN
 
EndBô
,

2491 
IN
 
UINT64
 
OrD©a


2522 
UINT64


2523 
EFIAPI


2524 
MmioBôFõldAnd64
 (

2525 
IN
 
UINTN
 
Addªss
,

2526 
IN
 
UINTN
 
SèπBô
,

2527 
IN
 
UINTN
 
EndBô
,

2528 
IN
 
UINT64
 
AndD©a


2562 
UINT64


2563 
EFIAPI


2564 
MmioBôFõldAndThíOr64
 (

2565 
IN
 
UINTN
 
Addªss
,

2566 
IN
 
UINTN
 
SèπBô
,

2567 
IN
 
UINTN
 
EndBô
,

2568 
IN
 
UINT64
 
AndD©a
,

2569 
IN
 
UINT64
 
OrD©a


2590 
UINT8
 *

2591 
EFIAPI


2592 
MmioRódBuf„r8
 (

2593 
IN
 
UINTN
 
SèπAddªss
,

2594 
IN
 
UINTN
 
Lígth
,

2595 
OUT
 
UINT8
 *
Buf„r


2620 
UINT16
 *

2621 
EFIAPI


2622 
MmioRódBuf„r16
 (

2623 
IN
 
UINTN
 
SèπAddªss
,

2624 
IN
 
UINTN
 
Lígth
,

2625 
OUT
 
UINT16
 *
Buf„r


2650 
UINT32
 *

2651 
EFIAPI


2652 
MmioRódBuf„r32
 (

2653 
IN
 
UINTN
 
SèπAddªss
,

2654 
IN
 
UINTN
 
Lígth
,

2655 
OUT
 
UINT32
 *
Buf„r


2680 
UINT64
 *

2681 
EFIAPI


2682 
MmioRódBuf„r64
 (

2683 
IN
 
UINTN
 
SèπAddªss
,

2684 
IN
 
UINTN
 
Lígth
,

2685 
OUT
 
UINT64
 *
Buf„r


2706 
UINT8
 *

2707 
EFIAPI


2708 
MmioWrôeBuf„r8
 (

2709 
IN
 
UINTN
 
SèπAddªss
,

2710 
IN
 
UINTN
 
Lígth
,

2711 
IN
 
CONST
 
UINT8
 *
Buf„r


2737 
UINT16
 *

2738 
EFIAPI


2739 
MmioWrôeBuf„r16
 (

2740 
IN
 
UINTN
 
SèπAddªss
,

2741 
IN
 
UINTN
 
Lígth
,

2742 
IN
 
CONST
 
UINT16
 *
Buf„r


2768 
UINT32
 *

2769 
EFIAPI


2770 
MmioWrôeBuf„r32
 (

2771 
IN
 
UINTN
 
SèπAddªss
,

2772 
IN
 
UINTN
 
Lígth
,

2773 
IN
 
CONST
 
UINT32
 *
Buf„r


2799 
UINT64
 *

2800 
EFIAPI


2801 
MmioWrôeBuf„r64
 (

2802 
IN
 
UINTN
 
SèπAddªss
,

2803 
IN
 
UINTN
 
Lígth
,

2804 
IN
 
CONST
 
UINT64
 *
Buf„r


	@MemoryAllocationLib.h

14 #i‚de‡
__MEMORY_ALLOCATION_LIB_H__


15 
	#__MEMORY_ALLOCATION_LIB_H__


	)

30 
VOID
 *

31 
EFIAPI


32 
AŒoˇãPages
 (

33 
IN
 
UINTN
 
Pages


49 
VOID
 *

50 
EFIAPI


51 
AŒoˇãRu¡imePages
 (

52 
IN
 
UINTN
 
Pages


68 
VOID
 *

69 
EFIAPI


70 
AŒoˇãRe£rvedPages
 (

71 
IN
 
UINTN
 
Pages


91 
VOID


92 
EFIAPI


93 
FªePages
 (

94 
IN
 
VOID
 *
Buf„r
,

95 
IN
 
UINTN
 
Pages


116 
VOID
 *

117 
EFIAPI


118 
AŒoˇãAlig√dPages
 (

119 
IN
 
UINTN
 
Pages
,

120 
IN
 
UINTN
 
Alignmít


141 
VOID
 *

142 
EFIAPI


143 
AŒoˇãAlig√dRu¡imePages
 (

144 
IN
 
UINTN
 
Pages
,

145 
IN
 
UINTN
 
Alignmít


166 
VOID
 *

167 
EFIAPI


168 
AŒoˇãAlig√dRe£rvedPages
 (

169 
IN
 
UINTN
 
Pages
,

170 
IN
 
UINTN
 
Alignmít


190 
VOID


191 
EFIAPI


192 
FªeAlig√dPages
 (

193 
IN
 
VOID
 *
Buf„r
,

194 
IN
 
UINTN
 
Pages


209 
VOID
 *

210 
EFIAPI


211 
AŒoˇãPoﬁ
 (

212 
IN
 
UINTN
 
AŒoˇti⁄Size


227 
VOID
 *

228 
EFIAPI


229 
AŒoˇãRu¡imePoﬁ
 (

230 
IN
 
UINTN
 
AŒoˇti⁄Size


245 
VOID
 *

246 
EFIAPI


247 
AŒoˇãRe£rvedPoﬁ
 (

248 
IN
 
UINTN
 
AŒoˇti⁄Size


264 
VOID
 *

265 
EFIAPI


266 
AŒoˇãZîoPoﬁ
 (

267 
IN
 
UINTN
 
AŒoˇti⁄Size


283 
VOID
 *

284 
EFIAPI


285 
AŒoˇãRu¡imeZîoPoﬁ
 (

286 
IN
 
UINTN
 
AŒoˇti⁄Size


302 
VOID
 *

303 
EFIAPI


304 
AŒoˇãRe£rvedZîoPoﬁ
 (

305 
IN
 
UINTN
 
AŒoˇti⁄Size


325 
VOID
 *

326 
EFIAPI


327 
AŒoˇãC›yPoﬁ
 (

328 
IN
 
UINTN
 
AŒoˇti⁄Size
,

329 
IN
 
CONST
 
VOID
 *
Buf„r


349 
VOID
 *

350 
EFIAPI


351 
AŒoˇãRu¡imeC›yPoﬁ
 (

352 
IN
 
UINTN
 
AŒoˇti⁄Size
,

353 
IN
 
CONST
 
VOID
 *
Buf„r


373 
VOID
 *

374 
EFIAPI


375 
AŒoˇãRe£rvedC›yPoﬁ
 (

376 
IN
 
UINTN
 
AŒoˇti⁄Size
,

377 
IN
 
CONST
 
VOID
 *
Buf„r


401 
VOID
 *

402 
EFIAPI


403 
RóŒoˇãPoﬁ
 (

404 
IN
 
UINTN
 
OldSize
,

405 
IN
 
UINTN
 
NewSize
,

406 
IN
 
VOID
 *
OldBuf„r
 
OPTIONAL


430 
VOID
 *

431 
EFIAPI


432 
RóŒoˇãRu¡imePoﬁ
 (

433 
IN
 
UINTN
 
OldSize
,

434 
IN
 
UINTN
 
NewSize
,

435 
IN
 
VOID
 *
OldBuf„r
 
OPTIONAL


459 
VOID
 *

460 
EFIAPI


461 
RóŒoˇãRe£rvedPoﬁ
 (

462 
IN
 
UINTN
 
OldSize
,

463 
IN
 
UINTN
 
NewSize
,

464 
IN
 
VOID
 *
OldBuf„r
 
OPTIONAL


481 
VOID


482 
EFIAPI


483 
FªePoﬁ
 (

484 
IN
 
VOID
 *
Buf„r


	@MmServicesTableLib.h

12 #i‚de‡
__MM_SERVICES_TABLE_LIB_H__


13 
	#__MM_SERVICES_TABLE_LIB_H__


	)

15 
	~<PiMm.h
>

17 
EFI_MM_SYSTEM_TABLE
 *
gMm°
;

	@OrderedCollectionLib.h

12 #i‚de‡
__ORDERED_COLLECTION_LIB__


13 
	#__ORDERED_COLLECTION_LIB__


	)

15 
	~<Ba£.h
>

20 
ORDERED_COLLECTION
 
	tORDERED_COLLECTION
;

33 
ORDERED_COLLECTION_ENTRY
 
	tORDERED_COLLECTION_ENTRY
;

58 
	gINTN


59 (
	tEFIAPI
 *
	tORDERED_COLLECTION_USER_COMPARE
)(

60 
	tIN
 
	tCONST
 
	tVOID
 *
	tU£rSåu˘1
,

61 
	tIN
 
	tCONST
 
	tVOID
 *
	tU£rSåu˘2


79 
	gINTN


80 (
	tEFIAPI
 *
	tORDERED_COLLECTION_KEY_COMPARE
)(

81 
	tIN
 
	tCONST
 
	tVOID
 *
	tSèndÆ⁄eKey
,

82 
	tIN
 
	tCONST
 
	tVOID
 *
	tU£rSåu˘


104 
VOID
 *

105 
EFIAPI


106 
OrdîedCﬁÀ˘i⁄U£rSåu˘
 (

107 
IN
 
CONST
 
ORDERED_COLLECTION_ENTRY
 *
E¡ry


128 
ORDERED_COLLECTION
 *

129 
EFIAPI


130 
OrdîedCﬁÀ˘i⁄Inô
 (

131 
IN
 
ORDERED_COLLECTION_USER_COMPARE
 
U£rSåu˘Com∑ª
,

132 
IN
 
ORDERED_COLLECTION_KEY_COMPARE
 
KeyCom∑ª


147 
BOOLEAN


148 
EFIAPI


149 
OrdîedCﬁÀ˘i⁄IsEm±y
 (

150 
IN
 
CONST
 
ORDERED_COLLECTION
 *
CﬁÀ˘i⁄


164 
VOID


165 
EFIAPI


166 
OrdîedCﬁÀ˘i⁄Unöô
 (

167 
IN
 
ORDERED_COLLECTION
 *
CﬁÀ˘i⁄


188 
ORDERED_COLLECTION_ENTRY
 *

189 
EFIAPI


190 
OrdîedCﬁÀ˘i⁄Föd
 (

191 
IN
 
CONST
 
ORDERED_COLLECTION
 *
CﬁÀ˘i⁄
,

192 
IN
 
CONST
 
VOID
 *
SèndÆ⁄eKey


211 
ORDERED_COLLECTION_ENTRY
 *

212 
EFIAPI


213 
OrdîedCﬁÀ˘i⁄Mö
 (

214 
IN
 
CONST
 
ORDERED_COLLECTION
 *
CﬁÀ˘i⁄


234 
ORDERED_COLLECTION_ENTRY
 *

235 
EFIAPI


236 
OrdîedCﬁÀ˘i⁄Max
 (

237 
IN
 
CONST
 
ORDERED_COLLECTION
 *
CﬁÀ˘i⁄


255 
ORDERED_COLLECTION_ENTRY
 *

256 
EFIAPI


257 
OrdîedCﬁÀ˘i⁄Next
 (

258 
IN
 
CONST
 
ORDERED_COLLECTION_ENTRY
 *
E¡ry


276 
ORDERED_COLLECTION_ENTRY
 *

277 
EFIAPI


278 
OrdîedCﬁÀ˘i⁄Pªv
 (

279 
IN
 
CONST
 
ORDERED_COLLECTION_ENTRY
 *
E¡ry


344 
RETURN_STATUS


345 
EFIAPI


346 
OrdîedCﬁÀ˘i⁄In£π
 (

347 
IN
 
OUT
 
ORDERED_COLLECTION
 *
CﬁÀ˘i⁄
,

348 
OUT
 
ORDERED_COLLECTION_ENTRY
 **
E¡ry
 
OPTIONAL
,

349 
IN
 
VOID
 *
U£rSåu˘


411 
VOID


412 
EFIAPI


413 
OrdîedCﬁÀ˘i⁄Dñëe
 (

414 
IN
 
OUT
 
ORDERED_COLLECTION
 *
CﬁÀ˘i⁄
,

415 
IN
 
ORDERED_COLLECTION_ENTRY
 *
E¡ry
,

416 
OUT
 
VOID
 **
U£rSåu˘
 
OPTIONAL


	@PcdLib.h

22 #i‚de‡
__PCD_LIB_H__


23 
	#__PCD_LIB_H__


	)

37 
	#PcdTokí
(
TokíName
Ë
_PCD_TOKEN_
##
	)
TokenName

52 
	#FótuªPcdGë
(
TokíName
Ë
_PCD_GET_MODE_BOOL_
##
	)
TokenName

67 
	#FixedPcdGë8
(
TokíName
Ë
_PCD_VALUE_
##
	)
TokenName

82 
	#FixedPcdGë16
(
TokíName
Ë
_PCD_VALUE_
##
	)
TokenName

97 
	#FixedPcdGë32
(
TokíName
Ë
_PCD_VALUE_
##
	)
TokenName

112 
	#FixedPcdGë64
(
TokíName
Ë
_PCD_VALUE_
##
	)
TokenName

127 
	#FixedPcdGëBoﬁ
(
TokíName
Ë
_PCD_VALUE_
##
	)
TokenName

142 
	#FixedPcdGëPå
(
TokíName
Ë((
VOID
 *)
_PCD_VALUE_
##TokíName)

	)

157 
	#P©chPcdGë8
(
TokíName
Ë
_gPcd_Bö¨yP©ch_
##
	)
TokenName

171 
	#P©chPcdGë16
(
TokíName
Ë
_gPcd_Bö¨yP©ch_
##
	)
TokenName

186 
	#P©chPcdGë32
(
TokíName
Ë
_gPcd_Bö¨yP©ch_
##
	)
TokenName

201 
	#P©chPcdGë64
(
TokíName
Ë
_gPcd_Bö¨yP©ch_
##
	)
TokenName

216 
	#P©chPcdGëBoﬁ
(
TokíName
Ë
_gPcd_Bö¨yP©ch_
##
	)
TokenName

231 
	#P©chPcdGëPå
(
TokíName
Ë((
VOID
 *)
_gPcd_Bö¨yP©ch_
##TokíName)

	)

247 
	#P©chPcdSë8
(
TokíName
, 
VÆue
Ë(
_gPcd_Bö¨yP©ch_
##TokíNamê(VÆue))

	)

263 
	#P©chPcdSë16
(
TokíName
, 
VÆue
Ë(
_gPcd_Bö¨yP©ch_
##TokíNamê(VÆue))

	)

279 
	#P©chPcdSë32
(
TokíName
, 
VÆue
Ë(
_gPcd_Bö¨yP©ch_
##TokíNamê(VÆue))

	)

295 
	#P©chPcdSë64
(
TokíName
, 
VÆue
Ë(
_gPcd_Bö¨yP©ch_
##TokíNamê(VÆue))

	)

311 
	#P©chPcdSëBoﬁ
(
TokíName
, 
VÆue
Ë(
_gPcd_Bö¨yP©ch_
##TokíNamê(VÆue))

	)

335 
	#P©chPcdSëPå
(
TokíName
, 
Size
, 
Buf„r
Ë\

	)

336 
LibP©chPcdSëPåAndSize
 ( \

337 (
VOID
 *)
_gPcd_Bö¨yP©ch_
##
TokíName
, \

338 &
_gPcd_Bö¨yP©ch_Size_
##
TokíName
, \

339 (
UINTN
)
_PCD_PATCHABLE_
##
TokíName
##
_SIZE
, \

340 (
Size
), \

341 (
Buf„r
) \

354 
	#PcdGë8
(
TokíName
Ë
_PCD_GET_MODE_8_
##
	)
TokenName

368 
	#PcdGë16
(
TokíName
Ë
_PCD_GET_MODE_16_
##
	)
TokenName

382 
	#PcdGë32
(
TokíName
Ë
_PCD_GET_MODE_32_
##
	)
TokenName

396 
	#PcdGë64
(
TokíName
Ë
_PCD_GET_MODE_64_
##
	)
TokenName

410 
	#PcdGëPå
(
TokíName
Ë
_PCD_GET_MODE_PTR_
##
	)
TokenName

424 
	#PcdGëBoﬁ
(
TokíName
Ë
_PCD_GET_MODE_BOOL_
##
	)
TokenName

438 
	#FixedPcdGëSize
(
TokíName
Ë
_PCD_SIZE_
##
	)
TokenName

452 
	#P©chPcdGëSize
(
TokíName
Ë
_gPcd_Bö¨yP©ch_Size_
##
	)
TokenName

466 
	#PcdGëSize
(
TokíName
Ë
_PCD_GET_MODE_SIZE_
##
	)
TokenName

482 
	#PcdGëExSize
(
Guid
, 
TokíName
Ë
	`LibPcdGëExSize
 ((Guid), 
	`PcdTokíEx
(Guid,TokíName))

	)

496 
	#PcdSë8S
(
TokíName
, 
VÆue
Ë
_PCD_SET_MODE_8_S_
##
	`TokíName
 ((VÆue))

	)

510 
	#PcdSë16S
(
TokíName
, 
VÆue
Ë
_PCD_SET_MODE_16_S_
##
	`TokíName
 ((VÆue))

	)

524 
	#PcdSë32S
(
TokíName
, 
VÆue
Ë
_PCD_SET_MODE_32_S_
##
	`TokíName
 ((VÆue))

	)

538 
	#PcdSë64S
(
TokíName
, 
VÆue
Ë
_PCD_SET_MODE_64_S_
##
	`TokíName
 ((VÆue))

	)

561 
	#PcdSëPåS
(
TokíName
, 
SizeOfBuf„r
, 
Buf„r
Ë\

	)

562 
	g_PCD_SET_MODE_PTR_S_
##
TokíName
 ((
SizeOfBuf„r
), (
Buf„r
))

578 
	#PcdSëBoﬁS
(
TokíName
, 
VÆue
Ë
_PCD_SET_MODE_BOOL_S_
##
	`TokíName
 ((VÆue))

	)

593 
	#PcdTokíEx
(
Guid
,
TokíName
Ë
_PCD_TOKEN_EX_
##
	`TokíName
(Guid)

	)

611 
	#PcdGëEx8
(
Guid
, 
TokíName
Ë
	`LibPcdGëEx8
 ((Guid), 
	`PcdTokíEx
(Guid,TokíName))

	)

629 
	#PcdGëEx16
(
Guid
, 
TokíName
Ë
	`LibPcdGëEx16
 ((Guid), 
	`PcdTokíEx
(Guid,TokíName))

	)

648 
	#PcdGëEx32
(
Guid
, 
TokíName
Ë
	`LibPcdGëEx32
 ((Guid), 
	`PcdTokíEx
(Guid,TokíName))

	)

667 
	#PcdGëEx64
(
Guid
, 
TokíName
Ë
	`LibPcdGëEx64
 ((Guid), 
	`PcdTokíEx
(Guid,TokíName))

	)

686 
	#PcdGëExPå
(
Guid
, 
TokíName
Ë
	`LibPcdGëExPå
 ((Guid), 
	`PcdTokíEx
(Guid,TokíName))

	)

705 
	#PcdGëExBoﬁ
(
Guid
, 
TokíName
Ë
	`LibPcdGëExBoﬁ
 ((Guid), 
	`PcdTokíEx
(Guid,TokíName))

	)

726 
	#PcdSëEx8S
(
Guid
, 
TokíName
, 
VÆue
Ë
	`LibPcdSëEx8S
 ((Guid), 
	`PcdTokíEx
(Guid,TokíName), (VÆue))

	)

745 
	#PcdSëEx16S
(
Guid
, 
TokíName
, 
VÆue
Ë
	`LibPcdSëEx16S
 ((Guid), 
	`PcdTokíEx
(Guid,TokíName), (VÆue))

	)

764 
	#PcdSëEx32S
(
Guid
, 
TokíName
, 
VÆue
Ë
	`LibPcdSëEx32S
 ((Guid), 
	`PcdTokíEx
(Guid,TokíName), (VÆue))

	)

783 
	#PcdSëEx64S
(
Guid
, 
TokíName
, 
VÆue
Ë
	`LibPcdSëEx64S
 ((Guid), 
	`PcdTokíEx
(Guid,TokíName), (VÆue))

	)

810 
	#PcdSëExPåS
(
Guid
, 
TokíName
, 
SizeOfBuf„r
, 
Buf„r
Ë\

	)

811 
LibPcdSëExPåS
 ((
Guid
), 
PcdTokíEx
(Guid,
TokíName
), (
SizeOfBuf„r
), (
Buf„r
))

831 
	#PcdSëExBoﬁS
(
Guid
, 
TokíName
, 
VÆue
Ë\

	)

832 
LibPcdSëExBoﬁS
 ((
Guid
), 
PcdTokíEx
(Guid,
TokíName
), (
VÆue
))

845 
UINTN


846 
EFIAPI


847 
LibPcdSëSku
 (

848 
IN
 
UINTN
 
SkuId


862 
UINT8


863 
EFIAPI


864 
LibPcdGë8
 (

865 
IN
 
UINTN
 
TokíNumbî


879 
UINT16


880 
EFIAPI


881 
LibPcdGë16
 (

882 
IN
 
UINTN
 
TokíNumbî


896 
UINT32


897 
EFIAPI


898 
LibPcdGë32
 (

899 
IN
 
UINTN
 
TokíNumbî


913 
UINT64


914 
EFIAPI


915 
LibPcdGë64
 (

916 
IN
 
UINTN
 
TokíNumbî


930 
VOID
 *

931 
EFIAPI


932 
LibPcdGëPå
 (

933 
IN
 
UINTN
 
TokíNumbî


947 
BOOLEAN


948 
EFIAPI


949 
LibPcdGëBoﬁ
 (

950 
IN
 
UINTN
 
TokíNumbî


962 
UINTN


963 
EFIAPI


964 
LibPcdGëSize
 (

965 
IN
 
UINTN
 
TokíNumbî


983 
UINT8


984 
EFIAPI


985 
LibPcdGëEx8
 (

986 
IN
 
CONST
 
GUID
 *
Guid
,

987 
IN
 
UINTN
 
TokíNumbî


1005 
UINT16


1006 
EFIAPI


1007 
LibPcdGëEx16
 (

1008 
IN
 
CONST
 
GUID
 *
Guid
,

1009 
IN
 
UINTN
 
TokíNumbî


1024 
UINT32


1025 
EFIAPI


1026 
LibPcdGëEx32
 (

1027 
IN
 
CONST
 
GUID
 *
Guid
,

1028 
IN
 
UINTN
 
TokíNumbî


1046 
UINT64


1047 
EFIAPI


1048 
LibPcdGëEx64
 (

1049 
IN
 
CONST
 
GUID
 *
Guid
,

1050 
IN
 
UINTN
 
TokíNumbî


1068 
VOID
 *

1069 
EFIAPI


1070 
LibPcdGëExPå
 (

1071 
IN
 
CONST
 
GUID
 *
Guid
,

1072 
IN
 
UINTN
 
TokíNumbî


1090 
BOOLEAN


1091 
EFIAPI


1092 
LibPcdGëExBoﬁ
 (

1093 
IN
 
CONST
 
GUID
 *
Guid
,

1094 
IN
 
UINTN
 
TokíNumbî


1112 
UINTN


1113 
EFIAPI


1114 
LibPcdGëExSize
 (

1115 
IN
 
CONST
 
GUID
 *
Guid
,

1116 
IN
 
UINTN
 
TokíNumbî


1132 
RETURN_STATUS


1133 
EFIAPI


1134 
LibPcdSë8S
 (

1135 
IN
 
UINTN
 
TokíNumbî
,

1136 
IN
 
UINT8
 
VÆue


1151 
RETURN_STATUS


1152 
EFIAPI


1153 
LibPcdSë16S
 (

1154 
IN
 
UINTN
 
TokíNumbî
,

1155 
IN
 
UINT16
 
VÆue


1170 
RETURN_STATUS


1171 
EFIAPI


1172 
LibPcdSë32S
 (

1173 
IN
 
UINTN
 
TokíNumbî
,

1174 
IN
 
UINT32
 
VÆue


1189 
RETURN_STATUS


1190 
EFIAPI


1191 
LibPcdSë64S
 (

1192 
IN
 
UINTN
 
TokíNumbî
,

1193 
IN
 
UINT64
 
VÆue


1218 
RETURN_STATUS


1219 
EFIAPI


1220 
LibPcdSëPåS
 (

1221 
IN
 
UINTN
 
TokíNumbî
,

1222 
IN
 
OUT
 
UINTN
 *
SizeOfBuf„r
,

1223 
IN
 
CONST
 
VOID
 *
Buf„r


1238 
RETURN_STATUS


1239 
EFIAPI


1240 
LibPcdSëBoﬁS
 (

1241 
IN
 
UINTN
 
TokíNumbî
,

1242 
IN
 
BOOLEAN
 
VÆue


1261 
RETURN_STATUS


1262 
EFIAPI


1263 
LibPcdSëEx8S
 (

1264 
IN
 
CONST
 
GUID
 *
Guid
,

1265 
IN
 
UINTN
 
TokíNumbî
,

1266 
IN
 
UINT8
 
VÆue


1285 
RETURN_STATUS


1286 
EFIAPI


1287 
LibPcdSëEx16S
 (

1288 
IN
 
CONST
 
GUID
 *
Guid
,

1289 
IN
 
UINTN
 
TokíNumbî
,

1290 
IN
 
UINT16
 
VÆue


1309 
RETURN_STATUS


1310 
EFIAPI


1311 
LibPcdSëEx32S
 (

1312 
IN
 
CONST
 
GUID
 *
Guid
,

1313 
IN
 
UINTN
 
TokíNumbî
,

1314 
IN
 
UINT32
 
VÆue


1333 
RETURN_STATUS


1334 
EFIAPI


1335 
LibPcdSëEx64S
 (

1336 
IN
 
CONST
 
GUID
 *
Guid
,

1337 
IN
 
UINTN
 
TokíNumbî
,

1338 
IN
 
UINT64
 
VÆue


1363 
RETURN_STATUS


1364 
EFIAPI


1365 
LibPcdSëExPåS
 (

1366 
IN
 
CONST
 
GUID
 *
Guid
,

1367 
IN
 
UINTN
 
TokíNumbî
,

1368 
IN
 
OUT
 
UINTN
 *
SizeOfBuf„r
,

1369 
IN
 
VOID
 *
Buf„r


1388 
RETURN_STATUS


1389 
EFIAPI


1390 
LibPcdSëExBoﬁS
 (

1391 
IN
 
CONST
 
GUID
 *
Guid
,

1392 
IN
 
UINTN
 
TokíNumbî
,

1393 
IN
 
BOOLEAN
 
VÆue


1413 
	gVOID


1414 (
	tEFIAPI
 *
	tPCD_CALLBACK
)(

1415 
	tIN
 
	tCONST
 
	tGUID
 *
	tCÆlBackGuid
, 
	tOPTIONAL


1416 
	tIN
 
	tUINTN
 
	tCÆlBackTokí
,

1417 
	tIN
 
	tOUT
 
	tVOID
 *
	tTokíD©a
,

1418 
	tIN
 
	tUINTN
 
	tTokíD©aSize


1438 
VOID


1439 
EFIAPI


1440 
LibPcdCÆlbackOnSë
 (

1441 
IN
 
CONST
 
GUID
 *
Guid
, 
OPTIONAL


1442 
IN
 
UINTN
 
TokíNumbî
,

1443 
IN
 
PCD_CALLBACK
 
NŸifiˇti⁄Fun˘i⁄


1460 
VOID


1461 
EFIAPI


1462 
LibPcdC™˚lCÆlback
 (

1463 
IN
 
CONST
 
GUID
 *
Guid
, 
OPTIONAL


1464 
IN
 
UINTN
 
TokíNumbî
,

1465 
IN
 
PCD_CALLBACK
 
NŸifiˇti⁄Fun˘i⁄


1488 
UINTN


1489 
EFIAPI


1490 
LibPcdGëNextTokí
 (

1491 
IN
 
CONST
 
GUID
 *
Guid
, 
OPTIONAL


1492 
IN
 
UINTN
 
TokíNumbî


1510 
GUID
 *

1511 
EFIAPI


1512 
LibPcdGëNextTokíS∑˚
 (

1513 
IN
 
CONST
 
GUID
 *
TokíS∑˚Guid


1540 
VOID
 *

1541 
EFIAPI


1542 
LibP©chPcdSëPå
 (

1543 
OUT
 
VOID
 *
P©chV¨übÀ
,

1544 
IN
 
UINTN
 
MaximumD©umSize
,

1545 
IN
 
OUT
 
UINTN
 *
SizeOfBuf„r
,

1546 
IN
 
CONST
 
VOID
 *
Buf„r


1572 
RETURN_STATUS


1573 
EFIAPI


1574 
LibP©chPcdSëPåS
 (

1575 
OUT
 
VOID
 *
P©chV¨übÀ
,

1576 
IN
 
UINTN
 
MaximumD©umSize
,

1577 
IN
 
OUT
 
UINTN
 *
SizeOfBuf„r
,

1578 
IN
 
CONST
 
VOID
 *
Buf„r


1606 
VOID
 *

1607 
EFIAPI


1608 
LibP©chPcdSëPåAndSize
 (

1609 
OUT
 
VOID
 *
P©chV¨übÀ
,

1610 
OUT
 
UINTN
 *
SizeOfP©chV¨übÀ
,

1611 
IN
 
UINTN
 
MaximumD©umSize
,

1612 
IN
 
OUT
 
UINTN
 *
SizeOfBuf„r
,

1613 
IN
 
CONST
 
VOID
 *
Buf„r


1641 
RETURN_STATUS


1642 
EFIAPI


1643 
LibP©chPcdSëPåAndSizeS
 (

1644 
OUT
 
VOID
 *
P©chV¨übÀ
,

1645 
OUT
 
UINTN
 *
SizeOfP©chV¨übÀ
,

1646 
IN
 
UINTN
 
MaximumD©umSize
,

1647 
IN
 
OUT
 
UINTN
 *
SizeOfBuf„r
,

1648 
IN
 
CONST
 
VOID
 *
Buf„r


1652 
	mPCD_TYPE_8
,

1653 
	mPCD_TYPE_16
,

1654 
	mPCD_TYPE_32
,

1655 
	mPCD_TYPE_64
,

1656 
	mPCD_TYPE_BOOL
,

1657 
	mPCD_TYPE_PTR


1658 } 
	tPCD_TYPE
;

1665 
PCD_TYPE
 
	mPcdTy≥
;

1670 
UINTN
 
	mPcdSize
;

1677 
CHAR8
 *
	mPcdName
;

1678 } 
	tPCD_INFO
;

1693 
VOID


1694 
EFIAPI


1695 
LibPcdGëInfo
 (

1696 
IN
 
UINTN
 
TokíNumbî
,

1697 
OUT
 
PCD_INFO
 *
PcdInfo


1713 
VOID


1714 
EFIAPI


1715 
LibPcdGëInfoEx
 (

1716 
IN
 
CONST
 
GUID
 *
Guid
,

1717 
IN
 
UINTN
 
TokíNumbî
,

1718 
OUT
 
PCD_INFO
 *
PcdInfo


1728 
UINTN


1729 
EFIAPI


1730 
LibPcdGëSku
 (

1731 
VOID


	@PciCf8Lib.h

13 #i‚de‡
__PCI_CF8_LIB_H__


14 
	#__PCI_CF8_LIB_H__


	)

33 
	#PCI_CF8_LIB_ADDRESS
(
Bus
,
Devi˚
,
Fun˘i⁄
,
Off£t
Ë\

	)

34 (((
	gOff£t
Ë& 0xfffË| (((
	gFun˘i⁄
Ë& 0x07Ë<< 12Ë| (((
	gDevi˚
Ë& 0x1fË<< 15Ë| (((
	gBus
) & 0xff) << 20))

58 
RETURN_STATUS


59 
EFIAPI


60 
PciCf8Regi°îF‹Ru¡imeAc˚ss
 (

61 
IN
 
UINTN
 
Addªss


80 
UINT8


81 
EFIAPI


82 
PciCf8Ród8
 (

83 
IN
 
UINTN
 
Addªss


103 
UINT8


104 
EFIAPI


105 
PciCf8Wrôe8
 (

106 
IN
 
UINTN
 
Addªss
,

107 
IN
 
UINT8
 
VÆue


131 
UINT8


132 
EFIAPI


133 
PciCf8Or8
 (

134 
IN
 
UINTN
 
Addªss
,

135 
IN
 
UINT8
 
OrD©a


159 
UINT8


160 
EFIAPI


161 
PciCf8And8
 (

162 
IN
 
UINTN
 
Addªss
,

163 
IN
 
UINT8
 
AndD©a


189 
UINT8


190 
EFIAPI


191 
PciCf8AndThíOr8
 (

192 
IN
 
UINTN
 
Addªss
,

193 
IN
 
UINT8
 
AndD©a
,

194 
IN
 
UINT8
 
OrD©a


219 
UINT8


220 
EFIAPI


221 
PciCf8BôFõldRód8
 (

222 
IN
 
UINTN
 
Addªss
,

223 
IN
 
UINTN
 
SèπBô
,

224 
IN
 
UINTN
 
EndBô


252 
UINT8


253 
EFIAPI


254 
PciCf8BôFõldWrôe8
 (

255 
IN
 
UINTN
 
Addªss
,

256 
IN
 
UINTN
 
SèπBô
,

257 
IN
 
UINTN
 
EndBô
,

258 
IN
 
UINT8
 
VÆue


289 
UINT8


290 
EFIAPI


291 
PciCf8BôFõldOr8
 (

292 
IN
 
UINTN
 
Addªss
,

293 
IN
 
UINTN
 
SèπBô
,

294 
IN
 
UINTN
 
EndBô
,

295 
IN
 
UINT8
 
OrD©a


326 
UINT8


327 
EFIAPI


328 
PciCf8BôFõldAnd8
 (

329 
IN
 
UINTN
 
Addªss
,

330 
IN
 
UINTN
 
SèπBô
,

331 
IN
 
UINTN
 
EndBô
,

332 
IN
 
UINT8
 
AndD©a


367 
UINT8


368 
EFIAPI


369 
PciCf8BôFõldAndThíOr8
 (

370 
IN
 
UINTN
 
Addªss
,

371 
IN
 
UINTN
 
SèπBô
,

372 
IN
 
UINTN
 
EndBô
,

373 
IN
 
UINT8
 
AndD©a
,

374 
IN
 
UINT8
 
OrD©a


394 
UINT16


395 
EFIAPI


396 
PciCf8Ród16
 (

397 
IN
 
UINTN
 
Addªss


418 
UINT16


419 
EFIAPI


420 
PciCf8Wrôe16
 (

421 
IN
 
UINTN
 
Addªss
,

422 
IN
 
UINT16
 
VÆue


447 
UINT16


448 
EFIAPI


449 
PciCf8Or16
 (

450 
IN
 
UINTN
 
Addªss
,

451 
IN
 
UINT16
 
OrD©a


476 
UINT16


477 
EFIAPI


478 
PciCf8And16
 (

479 
IN
 
UINTN
 
Addªss
,

480 
IN
 
UINT16
 
AndD©a


507 
UINT16


508 
EFIAPI


509 
PciCf8AndThíOr16
 (

510 
IN
 
UINTN
 
Addªss
,

511 
IN
 
UINT16
 
AndD©a
,

512 
IN
 
UINT16
 
OrD©a


538 
UINT16


539 
EFIAPI


540 
PciCf8BôFõldRód16
 (

541 
IN
 
UINTN
 
Addªss
,

542 
IN
 
UINTN
 
SèπBô
,

543 
IN
 
UINTN
 
EndBô


572 
UINT16


573 
EFIAPI


574 
PciCf8BôFõldWrôe16
 (

575 
IN
 
UINTN
 
Addªss
,

576 
IN
 
UINTN
 
SèπBô
,

577 
IN
 
UINTN
 
EndBô
,

578 
IN
 
UINT16
 
VÆue


610 
UINT16


611 
EFIAPI


612 
PciCf8BôFõldOr16
 (

613 
IN
 
UINTN
 
Addªss
,

614 
IN
 
UINTN
 
SèπBô
,

615 
IN
 
UINTN
 
EndBô
,

616 
IN
 
UINT16
 
OrD©a


648 
UINT16


649 
EFIAPI


650 
PciCf8BôFõldAnd16
 (

651 
IN
 
UINTN
 
Addªss
,

652 
IN
 
UINTN
 
SèπBô
,

653 
IN
 
UINTN
 
EndBô
,

654 
IN
 
UINT16
 
AndD©a


690 
UINT16


691 
EFIAPI


692 
PciCf8BôFõldAndThíOr16
 (

693 
IN
 
UINTN
 
Addªss
,

694 
IN
 
UINTN
 
SèπBô
,

695 
IN
 
UINTN
 
EndBô
,

696 
IN
 
UINT16
 
AndD©a
,

697 
IN
 
UINT16
 
OrD©a


717 
UINT32


718 
EFIAPI


719 
PciCf8Ród32
 (

720 
IN
 
UINTN
 
Addªss


741 
UINT32


742 
EFIAPI


743 
PciCf8Wrôe32
 (

744 
IN
 
UINTN
 
Addªss
,

745 
IN
 
UINT32
 
VÆue


770 
UINT32


771 
EFIAPI


772 
PciCf8Or32
 (

773 
IN
 
UINTN
 
Addªss
,

774 
IN
 
UINT32
 
OrD©a


799 
UINT32


800 
EFIAPI


801 
PciCf8And32
 (

802 
IN
 
UINTN
 
Addªss
,

803 
IN
 
UINT32
 
AndD©a


830 
UINT32


831 
EFIAPI


832 
PciCf8AndThíOr32
 (

833 
IN
 
UINTN
 
Addªss
,

834 
IN
 
UINT32
 
AndD©a
,

835 
IN
 
UINT32
 
OrD©a


861 
UINT32


862 
EFIAPI


863 
PciCf8BôFõldRód32
 (

864 
IN
 
UINTN
 
Addªss
,

865 
IN
 
UINTN
 
SèπBô
,

866 
IN
 
UINTN
 
EndBô


895 
UINT32


896 
EFIAPI


897 
PciCf8BôFõldWrôe32
 (

898 
IN
 
UINTN
 
Addªss
,

899 
IN
 
UINTN
 
SèπBô
,

900 
IN
 
UINTN
 
EndBô
,

901 
IN
 
UINT32
 
VÆue


933 
UINT32


934 
EFIAPI


935 
PciCf8BôFõldOr32
 (

936 
IN
 
UINTN
 
Addªss
,

937 
IN
 
UINTN
 
SèπBô
,

938 
IN
 
UINTN
 
EndBô
,

939 
IN
 
UINT32
 
OrD©a


971 
UINT32


972 
EFIAPI


973 
PciCf8BôFõldAnd32
 (

974 
IN
 
UINTN
 
Addªss
,

975 
IN
 
UINTN
 
SèπBô
,

976 
IN
 
UINTN
 
EndBô
,

977 
IN
 
UINT32
 
AndD©a


1013 
UINT32


1014 
EFIAPI


1015 
PciCf8BôFõldAndThíOr32
 (

1016 
IN
 
UINTN
 
Addªss
,

1017 
IN
 
UINTN
 
SèπBô
,

1018 
IN
 
UINTN
 
EndBô
,

1019 
IN
 
UINT32
 
AndD©a
,

1020 
IN
 
UINT32
 
OrD©a


1047 
UINTN


1048 
EFIAPI


1049 
PciCf8RódBuf„r
 (

1050 
IN
 
UINTN
 
SèπAddªss
,

1051 
IN
 
UINTN
 
Size
,

1052 
OUT
 
VOID
 *
Buf„r


1080 
UINTN


1081 
EFIAPI


1082 
PciCf8WrôeBuf„r
 (

1083 
IN
 
UINTN
 
SèπAddªss
,

1084 
IN
 
UINTN
 
Size
,

1085 
IN
 
VOID
 *
Buf„r


	@PciExpressLib.h

14 #i‚de‡
__PCI_EXPRESS_LIB_H__


15 
	#__PCI_EXPRESS_LIB_H__


	)

17 
	~<Indu°rySènd¨d/PciEx¥ess21.h
>

35 
	#PCI_EXPRESS_LIB_ADDRESS
(
Bus
,
Devi˚
,
Fun˘i⁄
,
Off£t
Ë
	`PCI_ECAM_ADDRESS
 ((Bus), (Devi˚), (Fun˘i⁄), (Off£t))

	)

59 
RETURN_STATUS


60 
EFIAPI


61 
PciEx¥essRegi°îF‹Ru¡imeAc˚ss
 (

62 
IN
 
UINTN
 
Addªss


80 
UINT8


81 
EFIAPI


82 
PciEx¥essRód8
 (

83 
IN
 
UINTN
 
Addªss


102 
UINT8


103 
EFIAPI


104 
PciEx¥essWrôe8
 (

105 
IN
 
UINTN
 
Addªss
,

106 
IN
 
UINT8
 
VÆue


129 
UINT8


130 
EFIAPI


131 
PciEx¥essOr8
 (

132 
IN
 
UINTN
 
Addªss
,

133 
IN
 
UINT8
 
OrD©a


156 
UINT8


157 
EFIAPI


158 
PciEx¥essAnd8
 (

159 
IN
 
UINTN
 
Addªss
,

160 
IN
 
UINT8
 
AndD©a


185 
UINT8


186 
EFIAPI


187 
PciEx¥essAndThíOr8
 (

188 
IN
 
UINTN
 
Addªss
,

189 
IN
 
UINT8
 
AndD©a
,

190 
IN
 
UINT8
 
OrD©a


214 
UINT8


215 
EFIAPI


216 
PciEx¥essBôFõldRód8
 (

217 
IN
 
UINTN
 
Addªss
,

218 
IN
 
UINTN
 
SèπBô
,

219 
IN
 
UINTN
 
EndBô


246 
UINT8


247 
EFIAPI


248 
PciEx¥essBôFõldWrôe8
 (

249 
IN
 
UINTN
 
Addªss
,

250 
IN
 
UINTN
 
SèπBô
,

251 
IN
 
UINTN
 
EndBô
,

252 
IN
 
UINT8
 
VÆue


282 
UINT8


283 
EFIAPI


284 
PciEx¥essBôFõldOr8
 (

285 
IN
 
UINTN
 
Addªss
,

286 
IN
 
UINTN
 
SèπBô
,

287 
IN
 
UINTN
 
EndBô
,

288 
IN
 
UINT8
 
OrD©a


318 
UINT8


319 
EFIAPI


320 
PciEx¥essBôFõldAnd8
 (

321 
IN
 
UINTN
 
Addªss
,

322 
IN
 
UINTN
 
SèπBô
,

323 
IN
 
UINTN
 
EndBô
,

324 
IN
 
UINT8
 
AndD©a


358 
UINT8


359 
EFIAPI


360 
PciEx¥essBôFõldAndThíOr8
 (

361 
IN
 
UINTN
 
Addªss
,

362 
IN
 
UINTN
 
SèπBô
,

363 
IN
 
UINTN
 
EndBô
,

364 
IN
 
UINT8
 
AndD©a
,

365 
IN
 
UINT8
 
OrD©a


384 
UINT16


385 
EFIAPI


386 
PciEx¥essRód16
 (

387 
IN
 
UINTN
 
Addªss


407 
UINT16


408 
EFIAPI


409 
PciEx¥essWrôe16
 (

410 
IN
 
UINTN
 
Addªss
,

411 
IN
 
UINT16
 
VÆue


435 
UINT16


436 
EFIAPI


437 
PciEx¥essOr16
 (

438 
IN
 
UINTN
 
Addªss
,

439 
IN
 
UINT16
 
OrD©a


463 
UINT16


464 
EFIAPI


465 
PciEx¥essAnd16
 (

466 
IN
 
UINTN
 
Addªss
,

467 
IN
 
UINT16
 
AndD©a


493 
UINT16


494 
EFIAPI


495 
PciEx¥essAndThíOr16
 (

496 
IN
 
UINTN
 
Addªss
,

497 
IN
 
UINT16
 
AndD©a
,

498 
IN
 
UINT16
 
OrD©a


523 
UINT16


524 
EFIAPI


525 
PciEx¥essBôFõldRód16
 (

526 
IN
 
UINTN
 
Addªss
,

527 
IN
 
UINTN
 
SèπBô
,

528 
IN
 
UINTN
 
EndBô


556 
UINT16


557 
EFIAPI


558 
PciEx¥essBôFõldWrôe16
 (

559 
IN
 
UINTN
 
Addªss
,

560 
IN
 
UINTN
 
SèπBô
,

561 
IN
 
UINTN
 
EndBô
,

562 
IN
 
UINT16
 
VÆue


593 
UINT16


594 
EFIAPI


595 
PciEx¥essBôFõldOr16
 (

596 
IN
 
UINTN
 
Addªss
,

597 
IN
 
UINTN
 
SèπBô
,

598 
IN
 
UINTN
 
EndBô
,

599 
IN
 
UINT16
 
OrD©a


630 
UINT16


631 
EFIAPI


632 
PciEx¥essBôFõldAnd16
 (

633 
IN
 
UINTN
 
Addªss
,

634 
IN
 
UINTN
 
SèπBô
,

635 
IN
 
UINTN
 
EndBô
,

636 
IN
 
UINT16
 
AndD©a


671 
UINT16


672 
EFIAPI


673 
PciEx¥essBôFõldAndThíOr16
 (

674 
IN
 
UINTN
 
Addªss
,

675 
IN
 
UINTN
 
SèπBô
,

676 
IN
 
UINTN
 
EndBô
,

677 
IN
 
UINT16
 
AndD©a
,

678 
IN
 
UINT16
 
OrD©a


697 
UINT32


698 
EFIAPI


699 
PciEx¥essRód32
 (

700 
IN
 
UINTN
 
Addªss


720 
UINT32


721 
EFIAPI


722 
PciEx¥essWrôe32
 (

723 
IN
 
UINTN
 
Addªss
,

724 
IN
 
UINT32
 
VÆue


748 
UINT32


749 
EFIAPI


750 
PciEx¥essOr32
 (

751 
IN
 
UINTN
 
Addªss
,

752 
IN
 
UINT32
 
OrD©a


776 
UINT32


777 
EFIAPI


778 
PciEx¥essAnd32
 (

779 
IN
 
UINTN
 
Addªss
,

780 
IN
 
UINT32
 
AndD©a


806 
UINT32


807 
EFIAPI


808 
PciEx¥essAndThíOr32
 (

809 
IN
 
UINTN
 
Addªss
,

810 
IN
 
UINT32
 
AndD©a
,

811 
IN
 
UINT32
 
OrD©a


836 
UINT32


837 
EFIAPI


838 
PciEx¥essBôFõldRód32
 (

839 
IN
 
UINTN
 
Addªss
,

840 
IN
 
UINTN
 
SèπBô
,

841 
IN
 
UINTN
 
EndBô


869 
UINT32


870 
EFIAPI


871 
PciEx¥essBôFõldWrôe32
 (

872 
IN
 
UINTN
 
Addªss
,

873 
IN
 
UINTN
 
SèπBô
,

874 
IN
 
UINTN
 
EndBô
,

875 
IN
 
UINT32
 
VÆue


906 
UINT32


907 
EFIAPI


908 
PciEx¥essBôFõldOr32
 (

909 
IN
 
UINTN
 
Addªss
,

910 
IN
 
UINTN
 
SèπBô
,

911 
IN
 
UINTN
 
EndBô
,

912 
IN
 
UINT32
 
OrD©a


943 
UINT32


944 
EFIAPI


945 
PciEx¥essBôFõldAnd32
 (

946 
IN
 
UINTN
 
Addªss
,

947 
IN
 
UINTN
 
SèπBô
,

948 
IN
 
UINTN
 
EndBô
,

949 
IN
 
UINT32
 
AndD©a


984 
UINT32


985 
EFIAPI


986 
PciEx¥essBôFõldAndThíOr32
 (

987 
IN
 
UINTN
 
Addªss
,

988 
IN
 
UINTN
 
SèπBô
,

989 
IN
 
UINTN
 
EndBô
,

990 
IN
 
UINT32
 
AndD©a
,

991 
IN
 
UINT32
 
OrD©a


1017 
UINTN


1018 
EFIAPI


1019 
PciEx¥essRódBuf„r
 (

1020 
IN
 
UINTN
 
SèπAddªss
,

1021 
IN
 
UINTN
 
Size
,

1022 
OUT
 
VOID
 *
Buf„r


1049 
UINTN


1050 
EFIAPI


1051 
PciEx¥essWrôeBuf„r
 (

1052 
IN
 
UINTN
 
SèπAddªss
,

1053 
IN
 
UINTN
 
Size
,

1054 
IN
 
VOID
 *
Buf„r


	@PciLib.h

18 #i‚de‡
__PCI_LIB_H__


19 
	#__PCI_LIB_H__


	)

34 
	#PCI_LIB_ADDRESS
(
Bus
,
Devi˚
,
Fun˘i⁄
,
Regi°î
Ë\

	)

35 (((
	gRegi°î
Ë& 0xfffË| (((
	gFun˘i⁄
Ë& 0x07Ë<< 12Ë| (((
	gDevi˚
Ë& 0x1fË<< 15Ë| (((
	gBus
) & 0xff) << 20))

58 
RETURN_STATUS


59 
EFIAPI


60 
PciRegi°îF‹Ru¡imeAc˚ss
 (

61 
IN
 
UINTN
 
Addªss


79 
UINT8


80 
EFIAPI


81 
PciRód8
 (

82 
IN
 
UINTN
 
Addªss


101 
UINT8


102 
EFIAPI


103 
PciWrôe8
 (

104 
IN
 
UINTN
 
Addªss
,

105 
IN
 
UINT8
 
VÆue


128 
UINT8


129 
EFIAPI


130 
PciOr8
 (

131 
IN
 
UINTN
 
Addªss
,

132 
IN
 
UINT8
 
OrD©a


155 
UINT8


156 
EFIAPI


157 
PciAnd8
 (

158 
IN
 
UINTN
 
Addªss
,

159 
IN
 
UINT8
 
AndD©a


184 
UINT8


185 
EFIAPI


186 
PciAndThíOr8
 (

187 
IN
 
UINTN
 
Addªss
,

188 
IN
 
UINT8
 
AndD©a
,

189 
IN
 
UINT8
 
OrD©a


213 
UINT8


214 
EFIAPI


215 
PciBôFõldRód8
 (

216 
IN
 
UINTN
 
Addªss
,

217 
IN
 
UINTN
 
SèπBô
,

218 
IN
 
UINTN
 
EndBô


245 
UINT8


246 
EFIAPI


247 
PciBôFõldWrôe8
 (

248 
IN
 
UINTN
 
Addªss
,

249 
IN
 
UINTN
 
SèπBô
,

250 
IN
 
UINTN
 
EndBô
,

251 
IN
 
UINT8
 
VÆue


281 
UINT8


282 
EFIAPI


283 
PciBôFõldOr8
 (

284 
IN
 
UINTN
 
Addªss
,

285 
IN
 
UINTN
 
SèπBô
,

286 
IN
 
UINTN
 
EndBô
,

287 
IN
 
UINT8
 
OrD©a


317 
UINT8


318 
EFIAPI


319 
PciBôFõldAnd8
 (

320 
IN
 
UINTN
 
Addªss
,

321 
IN
 
UINTN
 
SèπBô
,

322 
IN
 
UINTN
 
EndBô
,

323 
IN
 
UINT8
 
AndD©a


357 
UINT8


358 
EFIAPI


359 
PciBôFõldAndThíOr8
 (

360 
IN
 
UINTN
 
Addªss
,

361 
IN
 
UINTN
 
SèπBô
,

362 
IN
 
UINTN
 
EndBô
,

363 
IN
 
UINT8
 
AndD©a
,

364 
IN
 
UINT8
 
OrD©a


383 
UINT16


384 
EFIAPI


385 
PciRód16
 (

386 
IN
 
UINTN
 
Addªss


406 
UINT16


407 
EFIAPI


408 
PciWrôe16
 (

409 
IN
 
UINTN
 
Addªss
,

410 
IN
 
UINT16
 
VÆue


434 
UINT16


435 
EFIAPI


436 
PciOr16
 (

437 
IN
 
UINTN
 
Addªss
,

438 
IN
 
UINT16
 
OrD©a


462 
UINT16


463 
EFIAPI


464 
PciAnd16
 (

465 
IN
 
UINTN
 
Addªss
,

466 
IN
 
UINT16
 
AndD©a


492 
UINT16


493 
EFIAPI


494 
PciAndThíOr16
 (

495 
IN
 
UINTN
 
Addªss
,

496 
IN
 
UINT16
 
AndD©a
,

497 
IN
 
UINT16
 
OrD©a


522 
UINT16


523 
EFIAPI


524 
PciBôFõldRód16
 (

525 
IN
 
UINTN
 
Addªss
,

526 
IN
 
UINTN
 
SèπBô
,

527 
IN
 
UINTN
 
EndBô


555 
UINT16


556 
EFIAPI


557 
PciBôFõldWrôe16
 (

558 
IN
 
UINTN
 
Addªss
,

559 
IN
 
UINTN
 
SèπBô
,

560 
IN
 
UINTN
 
EndBô
,

561 
IN
 
UINT16
 
VÆue


592 
UINT16


593 
EFIAPI


594 
PciBôFõldOr16
 (

595 
IN
 
UINTN
 
Addªss
,

596 
IN
 
UINTN
 
SèπBô
,

597 
IN
 
UINTN
 
EndBô
,

598 
IN
 
UINT16
 
OrD©a


629 
UINT16


630 
EFIAPI


631 
PciBôFõldAnd16
 (

632 
IN
 
UINTN
 
Addªss
,

633 
IN
 
UINTN
 
SèπBô
,

634 
IN
 
UINTN
 
EndBô
,

635 
IN
 
UINT16
 
AndD©a


670 
UINT16


671 
EFIAPI


672 
PciBôFõldAndThíOr16
 (

673 
IN
 
UINTN
 
Addªss
,

674 
IN
 
UINTN
 
SèπBô
,

675 
IN
 
UINTN
 
EndBô
,

676 
IN
 
UINT16
 
AndD©a
,

677 
IN
 
UINT16
 
OrD©a


696 
UINT32


697 
EFIAPI


698 
PciRód32
 (

699 
IN
 
UINTN
 
Addªss


719 
UINT32


720 
EFIAPI


721 
PciWrôe32
 (

722 
IN
 
UINTN
 
Addªss
,

723 
IN
 
UINT32
 
VÆue


747 
UINT32


748 
EFIAPI


749 
PciOr32
 (

750 
IN
 
UINTN
 
Addªss
,

751 
IN
 
UINT32
 
OrD©a


775 
UINT32


776 
EFIAPI


777 
PciAnd32
 (

778 
IN
 
UINTN
 
Addªss
,

779 
IN
 
UINT32
 
AndD©a


805 
UINT32


806 
EFIAPI


807 
PciAndThíOr32
 (

808 
IN
 
UINTN
 
Addªss
,

809 
IN
 
UINT32
 
AndD©a
,

810 
IN
 
UINT32
 
OrD©a


835 
UINT32


836 
EFIAPI


837 
PciBôFõldRód32
 (

838 
IN
 
UINTN
 
Addªss
,

839 
IN
 
UINTN
 
SèπBô
,

840 
IN
 
UINTN
 
EndBô


868 
UINT32


869 
EFIAPI


870 
PciBôFõldWrôe32
 (

871 
IN
 
UINTN
 
Addªss
,

872 
IN
 
UINTN
 
SèπBô
,

873 
IN
 
UINTN
 
EndBô
,

874 
IN
 
UINT32
 
VÆue


905 
UINT32


906 
EFIAPI


907 
PciBôFõldOr32
 (

908 
IN
 
UINTN
 
Addªss
,

909 
IN
 
UINTN
 
SèπBô
,

910 
IN
 
UINTN
 
EndBô
,

911 
IN
 
UINT32
 
OrD©a


942 
UINT32


943 
EFIAPI


944 
PciBôFõldAnd32
 (

945 
IN
 
UINTN
 
Addªss
,

946 
IN
 
UINTN
 
SèπBô
,

947 
IN
 
UINTN
 
EndBô
,

948 
IN
 
UINT32
 
AndD©a


983 
UINT32


984 
EFIAPI


985 
PciBôFõldAndThíOr32
 (

986 
IN
 
UINTN
 
Addªss
,

987 
IN
 
UINTN
 
SèπBô
,

988 
IN
 
UINTN
 
EndBô
,

989 
IN
 
UINT32
 
AndD©a
,

990 
IN
 
UINT32
 
OrD©a


1016 
UINTN


1017 
EFIAPI


1018 
PciRódBuf„r
 (

1019 
IN
 
UINTN
 
SèπAddªss
,

1020 
IN
 
UINTN
 
Size
,

1021 
OUT
 
VOID
 *
Buf„r


1048 
UINTN


1049 
EFIAPI


1050 
PciWrôeBuf„r
 (

1051 
IN
 
UINTN
 
SèπAddªss
,

1052 
IN
 
UINTN
 
Size
,

1053 
IN
 
VOID
 *
Buf„r


	@PciSegmentInfoLib.h

11 #i‚de‡
__PCI_SEGMENT_INFO_LIB__


12 
	#__PCI_SEGMENT_INFO_LIB__


	)

15 
UINT16
 
	mSegmítNumbî
;

16 
UINT64
 
	mBa£Addªss
;

17 
UINT8
 
	mSèπBusNumbî
;

18 
UINT8
 
	mEndBusNumbî
;

19 } 
	tPCI_SEGMENT_INFO
;

30 
PCI_SEGMENT_INFO
 *

31 
EFIAPI


32 
GëPciSegmítInfo
 (

33 
UINTN
 *
Cou¡


	@PciSegmentLib.h

31 #i‚de‡
__PCI_SEGMENT_LIB__


32 
	#__PCI_SEGMENT_LIB__


	)

52 
	#PCI_SEGMENT_LIB_ADDRESS
(
Segmít
,
Bus
,
Devi˚
,
Fun˘i⁄
,
Regi°î
Ë\

	)

53 ((
	gSegmít
 != 0) ? \

54 –((
Regi°î
) & 0xfff) | \

55 (((
Fun˘i⁄
) & 0x07) << 12) | \

56 (((
Devi˚
) & 0x1f) << 15) | \

57 (((
Bus
) & 0xff) << 20) | \

58 (
LShi·U64
 ((
Segmít
) & 0xffff, 32)) \

60 –((
Regi°î
) & 0xfff) | \

61 (((
Fun˘i⁄
) & 0x07) << 12) | \

62 (((
Devi˚
) & 0x1f) << 15) | \

63 (((
Bus
) & 0xff) << 20) \

85 
RETURN_STATUS


86 
EFIAPI


87 
PciSegmítRegi°îF‹Ru¡imeAc˚ss
 (

88 
IN
 
UINTN
 
Addªss


104 
UINT8


105 
EFIAPI


106 
PciSegmítRód8
 (

107 
IN
 
UINT64
 
Addªss


124 
UINT8


125 
EFIAPI


126 
PciSegmítWrôe8
 (

127 
IN
 
UINT64
 
Addªss
,

128 
IN
 
UINT8
 
VÆue


148 
UINT8


149 
EFIAPI


150 
PciSegmítOr8
 (

151 
IN
 
UINT64
 
Addªss
,

152 
IN
 
UINT8
 
OrD©a


171 
UINT8


172 
EFIAPI


173 
PciSegmítAnd8
 (

174 
IN
 
UINT64
 
Addªss
,

175 
IN
 
UINT8
 
AndD©a


198 
UINT8


199 
EFIAPI


200 
PciSegmítAndThíOr8
 (

201 
IN
 
UINT64
 
Addªss
,

202 
IN
 
UINT8
 
AndD©a
,

203 
IN
 
UINT8
 
OrD©a


227 
UINT8


228 
EFIAPI


229 
PciSegmítBôFõldRód8
 (

230 
IN
 
UINT64
 
Addªss
,

231 
IN
 
UINTN
 
SèπBô
,

232 
IN
 
UINTN
 
EndBô


259 
UINT8


260 
EFIAPI


261 
PciSegmítBôFõldWrôe8
 (

262 
IN
 
UINT64
 
Addªss
,

263 
IN
 
UINTN
 
SèπBô
,

264 
IN
 
UINTN
 
EndBô
,

265 
IN
 
UINT8
 
VÆue


295 
UINT8


296 
EFIAPI


297 
PciSegmítBôFõldOr8
 (

298 
IN
 
UINT64
 
Addªss
,

299 
IN
 
UINTN
 
SèπBô
,

300 
IN
 
UINTN
 
EndBô
,

301 
IN
 
UINT8
 
OrD©a


331 
UINT8


332 
EFIAPI


333 
PciSegmítBôFõldAnd8
 (

334 
IN
 
UINT64
 
Addªss
,

335 
IN
 
UINTN
 
SèπBô
,

336 
IN
 
UINTN
 
EndBô
,

337 
IN
 
UINT8
 
AndD©a


370 
UINT8


371 
EFIAPI


372 
PciSegmítBôFõldAndThíOr8
 (

373 
IN
 
UINT64
 
Addªss
,

374 
IN
 
UINTN
 
SèπBô
,

375 
IN
 
UINTN
 
EndBô
,

376 
IN
 
UINT8
 
AndD©a
,

377 
IN
 
UINT8
 
OrD©a


394 
UINT16


395 
EFIAPI


396 
PciSegmítRód16
 (

397 
IN
 
UINT64
 
Addªss


415 
UINT16


416 
EFIAPI


417 
PciSegmítWrôe16
 (

418 
IN
 
UINT64
 
Addªss
,

419 
IN
 
UINT16
 
VÆue


442 
UINT16


443 
EFIAPI


444 
PciSegmítOr16
 (

445 
IN
 
UINT64
 
Addªss
,

446 
IN
 
UINT16
 
OrD©a


467 
UINT16


468 
EFIAPI


469 
PciSegmítAnd16
 (

470 
IN
 
UINT64
 
Addªss
,

471 
IN
 
UINT16
 
AndD©a


495 
UINT16


496 
EFIAPI


497 
PciSegmítAndThíOr16
 (

498 
IN
 
UINT64
 
Addªss
,

499 
IN
 
UINT16
 
AndD©a
,

500 
IN
 
UINT16
 
OrD©a


525 
UINT16


526 
EFIAPI


527 
PciSegmítBôFõldRód16
 (

528 
IN
 
UINT64
 
Addªss
,

529 
IN
 
UINTN
 
SèπBô
,

530 
IN
 
UINTN
 
EndBô


558 
UINT16


559 
EFIAPI


560 
PciSegmítBôFõldWrôe16
 (

561 
IN
 
UINT64
 
Addªss
,

562 
IN
 
UINTN
 
SèπBô
,

563 
IN
 
UINTN
 
EndBô
,

564 
IN
 
UINT16
 
VÆue


595 
UINT16


596 
EFIAPI


597 
PciSegmítBôFõldOr16
 (

598 
IN
 
UINT64
 
Addªss
,

599 
IN
 
UINTN
 
SèπBô
,

600 
IN
 
UINTN
 
EndBô
,

601 
IN
 
UINT16
 
OrD©a


632 
UINT16


633 
EFIAPI


634 
PciSegmítBôFõldAnd16
 (

635 
IN
 
UINT64
 
Addªss
,

636 
IN
 
UINTN
 
SèπBô
,

637 
IN
 
UINTN
 
EndBô
,

638 
IN
 
UINT16
 
AndD©a


672 
UINT16


673 
EFIAPI


674 
PciSegmítBôFõldAndThíOr16
 (

675 
IN
 
UINT64
 
Addªss
,

676 
IN
 
UINTN
 
SèπBô
,

677 
IN
 
UINTN
 
EndBô
,

678 
IN
 
UINT16
 
AndD©a
,

679 
IN
 
UINT16
 
OrD©a


696 
UINT32


697 
EFIAPI


698 
PciSegmítRód32
 (

699 
IN
 
UINT64
 
Addªss


717 
UINT32


718 
EFIAPI


719 
PciSegmítWrôe32
 (

720 
IN
 
UINT64
 
Addªss
,

721 
IN
 
UINT32
 
VÆue


742 
UINT32


743 
EFIAPI


744 
PciSegmítOr32
 (

745 
IN
 
UINT64
 
Addªss
,

746 
IN
 
UINT32
 
OrD©a


767 
UINT32


768 
EFIAPI


769 
PciSegmítAnd32
 (

770 
IN
 
UINT64
 
Addªss
,

771 
IN
 
UINT32
 
AndD©a


795 
UINT32


796 
EFIAPI


797 
PciSegmítAndThíOr32
 (

798 
IN
 
UINT64
 
Addªss
,

799 
IN
 
UINT32
 
AndD©a
,

800 
IN
 
UINT32
 
OrD©a


825 
UINT32


826 
EFIAPI


827 
PciSegmítBôFõldRód32
 (

828 
IN
 
UINT64
 
Addªss
,

829 
IN
 
UINTN
 
SèπBô
,

830 
IN
 
UINTN
 
EndBô


858 
UINT32


859 
EFIAPI


860 
PciSegmítBôFõldWrôe32
 (

861 
IN
 
UINT64
 
Addªss
,

862 
IN
 
UINTN
 
SèπBô
,

863 
IN
 
UINTN
 
EndBô
,

864 
IN
 
UINT32
 
VÆue


894 
UINT32


895 
EFIAPI


896 
PciSegmítBôFõldOr32
 (

897 
IN
 
UINT64
 
Addªss
,

898 
IN
 
UINTN
 
SèπBô
,

899 
IN
 
UINTN
 
EndBô
,

900 
IN
 
UINT32
 
OrD©a


930 
UINT32


931 
EFIAPI


932 
PciSegmítBôFõldAnd32
 (

933 
IN
 
UINT64
 
Addªss
,

934 
IN
 
UINTN
 
SèπBô
,

935 
IN
 
UINTN
 
EndBô
,

936 
IN
 
UINT32
 
AndD©a


970 
UINT32


971 
EFIAPI


972 
PciSegmítBôFõldAndThíOr32
 (

973 
IN
 
UINT64
 
Addªss
,

974 
IN
 
UINTN
 
SèπBô
,

975 
IN
 
UINTN
 
EndBô
,

976 
IN
 
UINT32
 
AndD©a
,

977 
IN
 
UINT32
 
OrD©a


1003 
UINTN


1004 
EFIAPI


1005 
PciSegmítRódBuf„r
 (

1006 
IN
 
UINT64
 
SèπAddªss
,

1007 
IN
 
UINTN
 
Size
,

1008 
OUT
 
VOID
 *
Buf„r


1035 
UINTN


1036 
EFIAPI


1037 
PciSegmítWrôeBuf„r
 (

1038 
IN
 
UINT64
 
SèπAddªss
,

1039 
IN
 
UINTN
 
Size
,

1040 
IN
 
VOID
 *
Buf„r


	@PeCoffExtraActionLib.h

11 #i‚de‡
__PE_COFF_EXTRA_ACTION_LIB_H__


12 
	#__PE_COFF_EXTRA_ACTION_LIB_H__


	)

14 
	~<Libøry/PeCoffLib.h
>

25 
VOID


26 
EFIAPI


27 
PeCoffLﬂdîRñoˇãImageExåaA˘i⁄
 (

28 
IN
 
OUT
 
PE_COFF_LOADER_IMAGE_CONTEXT
 *
ImageC⁄ãxt


41 
VOID


42 
EFIAPI


43 
PeCoffLﬂdîU∆ﬂdImageExåaA˘i⁄
 (

44 
IN
 
OUT
 
PE_COFF_LOADER_IMAGE_CONTEXT
 *
ImageC⁄ãxt


	@PeCoffGetEntryPointLib.h

9 #i‚de‡
__PE_COFF_GET_ENTRY_POINT_LIB_H__


10 
	#__PE_COFF_GET_ENTRY_POINT_LIB_H__


	)

29 
RETURN_STATUS


30 
EFIAPI


31 
PeCoffLﬂdîGëE¡ryPoöt
 (

32 
IN
 
VOID
 *
Pe32D©a
,

33 
OUT
 
VOID
 **
E¡ryPoöt


48 
UINT16


49 
EFIAPI


50 
PeCoffLﬂdîGëMachöeTy≥
 (

51 
IN
 
VOID
 *
Pe32D©a


73 
VOID
 *

74 
EFIAPI


75 
PeCoffLﬂdîGëPdbPoöãr
 (

76 
IN
 
VOID
 *
Pe32D©a


92 
UINT32


93 
EFIAPI


94 
PeCoffGëSizeOfHódîs
 (

95 
IN
 
VOID
 *
Pe32D©a


110 
UINTN


111 
EFIAPI


112 
PeCoffSórchImageBa£
 (

113 
IN
 
UINTN
 
Addªss


	@PeCoffLib.h

13 #i‚de‡
__BASE_PE_COFF_LIB_H__


14 
	#__BASE_PE_COFF_LIB_H__


	)

16 
	~<Indu°rySènd¨d/PeImage.h
>

20 
	#IMAGE_ERROR_SUCCESS
 0

	)

21 
	#IMAGE_ERROR_IMAGE_READ
 1

	)

22 
	#IMAGE_ERROR_INVALID_PE_HEADER_SIGNATURE
 2

	)

23 
	#IMAGE_ERROR_INVALID_MACHINE_TYPE
 3

	)

24 
	#IMAGE_ERROR_INVALID_SUBSYSTEM
 4

	)

25 
	#IMAGE_ERROR_INVALID_IMAGE_ADDRESS
 5

	)

26 
	#IMAGE_ERROR_INVALID_IMAGE_SIZE
 6

	)

27 
	#IMAGE_ERROR_INVALID_SECTION_ALIGNMENT
 7

	)

28 
	#IMAGE_ERROR_SECTION_NOT_LOADED
 8

	)

29 
	#IMAGE_ERROR_FAILED_RELOCATION
 9

	)

30 
	#IMAGE_ERROR_FAILED_ICACHE_FLUSH
 10

	)

31 
	#IMAGE_ERROR_UNSUPPORTED
 11

	)

64 
	gRETURN_STATUS


65 (
	tEFIAPI
 *
	tPE_COFF_LOADER_READ_FILE
)(

66 
	tIN
 
	tVOID
 *
	tFûeH™dÀ
,

67 
	tIN
 
	tUINTN
 
	tFûeOff£t
,

68 
	tIN
 
	tOUT
 
	tUINTN
 *
	tRódSize
,

69 
	tOUT
 
	tVOID
 *
	tBuf„r


79 
PHYSICAL_ADDRESS
 
	mImageAddªss
;

84 
UINT64
 
	mImageSize
;

91 
PHYSICAL_ADDRESS
 
	mDe°ö©i⁄Addªss
;

95 
PHYSICAL_ADDRESS
 
	mE¡ryPoöt
;

100 
PE_COFF_LOADER_READ_FILE
 
	mImageRód
;

104 
VOID
 *
	mH™dÀ
;

111 
VOID
 *
	mFixupD©a
;

116 
UINT32
 
	mSe˘i⁄Alignmít
;

122 
UINT32
 
	mPeCoffHódîOff£t
;

127 
UINT32
 
	mDebugDúe˘‹yE¡ryRva
;

131 
VOID
 *
	mCodeVõw
;

137 
CHAR8
 *
	mPdbPoöãr
;

141 
UINTN
 
	mSizeOfHódîs
;

148 
UINT32
 
	mImageCodeMem‹yTy≥
;

155 
UINT32
 
	mImageD©aMem‹yTy≥
;

159 
UINT32
 
	mImageEº‹
;

164 
UINTN
 
	mFixupD©aSize
;

168 
UINT16
 
	mMachöe
;

172 
UINT16
 
	mImageTy≥
;

177 
BOOLEAN
 
	mRñoˇti⁄sSåù≥d
;

183 
BOOLEAN
 
	mIsTeImage
;

189 
PHYSICAL_ADDRESS
 
	mHiiResour˚D©a
;

193 
UINT64
 
	mC⁄ãxt
;

194 } 
	tPE_COFF_LOADER_IMAGE_CONTEXT
;

220 
RETURN_STATUS


221 
EFIAPI


222 
PeCoffLﬂdîGëImageInfo
 (

223 
IN
 
OUT
 
PE_COFF_LOADER_IMAGE_CONTEXT
 *
ImageC⁄ãxt


256 
RETURN_STATUS


257 
EFIAPI


258 
PeCoffLﬂdîRñoˇãImage
 (

259 
IN
 
OUT
 
PE_COFF_LOADER_IMAGE_CONTEXT
 *
ImageC⁄ãxt


293 
RETURN_STATUS


294 
EFIAPI


295 
PeCoffLﬂdîLﬂdImage
 (

296 
IN
 
OUT
 
PE_COFF_LOADER_IMAGE_CONTEXT
 *
ImageC⁄ãxt


323 
RETURN_STATUS


324 
EFIAPI


325 
PeCoffLﬂdîImageRódFromMem‹y
 (

326 
IN
 
VOID
 *
FûeH™dÀ
,

327 
IN
 
UINTN
 
FûeOff£t
,

328 
IN
 
OUT
 
UINTN
 *
RódSize
,

329 
OUT
 
VOID
 *
Buf„r


356 
VOID


357 
EFIAPI


358 
PeCoffLﬂdîRñoˇãImageF‹Ru¡ime
 (

359 
IN
 
PHYSICAL_ADDRESS
 
ImageBa£
,

360 
IN
 
PHYSICAL_ADDRESS
 
VútImageBa£
,

361 
IN
 
UINTN
 
ImageSize
,

362 
IN
 
VOID
 *
Rñoˇti⁄D©a


381 
RETURN_STATUS


382 
EFIAPI


383 
PeCoffLﬂdîU∆ﬂdImage
 (

384 
IN
 
OUT
 
PE_COFF_LOADER_IMAGE_CONTEXT
 *
ImageC⁄ãxt


	@PeiCoreEntryPoint.h

9 #i‚de‡
__MODULE_ENTRY_POINT_H__


10 
	#__MODULE_ENTRY_POINT_H__


	)

42 
VOID


43 
EFIAPI


44 
_ModuÀE¡ryPoöt
(

45 
IN
 
CONST
 
EFI_SEC_PEI_HAND_OFF
 *
SecC‹eD©a
,

46 
IN
 
CONST
 
EFI_PEI_PPI_DESCRIPTOR
 *
PpiLi°


67 
VOID


68 
EFIAPI


69 
EfiMaö
 (

70 
IN
 
CONST
 
EFI_SEC_PEI_HAND_OFF
 *
SecC‹eD©a
,

71 
IN
 
CONST
 
EFI_PEI_PPI_DESCRIPTOR
 *
PpiLi°


92 
VOID


93 
EFIAPI


94 
Pro˚ssLibøryC⁄°ru˘‹Li°
 (

95 
IN
 
EFI_PEI_FILE_HANDLE
 
FûeH™dÀ
,

96 
IN
 
CONST
 
EFI_PEI_SERVICES
 **
PeiSîvi˚s


124 
VOID


125 
EFIAPI


126 
Pro˚ssModuÀE¡ryPoötLi°
 (

127 
IN
 
CONST
 
EFI_SEC_PEI_HAND_OFF
 *
SecC‹eD©a
,

128 
IN
 
CONST
 
EFI_PEI_PPI_DESCRIPTOR
 *
PpiLi°
,

129 
IN
 
VOID
 *
C⁄ãxt


	@PeiServicesLib.h

9 #i‚de‡
__PEI_SERVICES_LIB_H__


10 
	#__PEI_SERVICES_LIB_H__


	)

24 
EFI_STATUS


25 
EFIAPI


26 
PeiSîvi˚sIn°ÆlPpi
 (

27 
IN
 
CONST
 
EFI_PEI_PPI_DESCRIPTOR
 *
PpiLi°


45 
EFI_STATUS


46 
EFIAPI


47 
PeiSîvi˚sReIn°ÆlPpi
 (

48 
IN
 
CONST
 
EFI_PEI_PPI_DESCRIPTOR
 *
OldPpi
,

49 
IN
 
CONST
 
EFI_PEI_PPI_DESCRIPTOR
 *
NewPpi


65 
EFI_STATUS


66 
EFIAPI


67 
PeiSîvi˚sLoˇãPpi
 (

68 
IN
 
CONST
 
EFI_GUID
 *
Guid
,

69 
IN
 
UINTN
 
In°™˚
,

70 
IN
 
OUT
 
EFI_PEI_PPI_DESCRIPTOR
 **
PpiDes¸ùt‹
, 
OPTIONAL


71 
IN
 
OUT
 
VOID
 **
Ppi


88 
EFI_STATUS


89 
EFIAPI


90 
PeiSîvi˚sNŸifyPpi
 (

91 
IN
 
CONST
 
EFI_PEI_NOTIFY_DESCRIPTOR
 *
NŸifyLi°


103 
EFI_STATUS


104 
EFIAPI


105 
PeiSîvi˚sGëBoŸMode
 (

106 
OUT
 
EFI_BOOT_MODE
 *
BoŸMode


117 
EFI_STATUS


118 
EFIAPI


119 
PeiSîvi˚sSëBoŸMode
 (

120 
IN
 
EFI_BOOT_MODE
 
BoŸMode


132 
EFI_STATUS


133 
EFIAPI


134 
PeiSîvi˚sGëHobLi°
 (

135 
OUT
 
VOID
 **
HobLi°


149 
EFI_STATUS


150 
EFIAPI


151 
PeiSîvi˚sCª©eHob
 (

152 
IN
 
UINT16
 
Ty≥
,

153 
IN
 
UINT16
 
Lígth
,

154 
OUT
 
VOID
 **
Hob


169 
EFI_STATUS


170 
EFIAPI


171 
PeiSîvi˚sFfsFödNextVﬁume
 (

172 
IN
 
UINTN
 
In°™˚
,

173 
IN
 
OUT
 
EFI_PEI_FV_HANDLE
 *
VﬁumeH™dÀ


189 
EFI_STATUS


190 
EFIAPI


191 
PeiSîvi˚sFfsFödNextFûe
 (

192 
IN
 
EFI_FV_FILETYPE
 
SórchTy≥
,

193 
IN
 
EFI_PEI_FV_HANDLE
 
VﬁumeH™dÀ
,

194 
IN
 
OUT
 
EFI_PEI_FILE_HANDLE
 *
FûeH™dÀ


209 
EFI_STATUS


210 
EFIAPI


211 
PeiSîvi˚sFfsFödSe˘i⁄D©a
 (

212 
IN
 
EFI_SECTION_TYPE
 
Se˘i⁄Ty≥
,

213 
IN
 
EFI_PEI_FILE_HANDLE
 
FûeH™dÀ
,

214 
OUT
 
VOID
 **
Se˘i⁄D©a


231 
EFI_STATUS


232 
EFIAPI


233 
PeiSîvi˚sFfsFödSe˘i⁄D©a3
 (

234 
IN
 
EFI_SECTION_TYPE
 
Se˘i⁄Ty≥
,

235 
IN
 
UINTN
 
Se˘i⁄In°™˚
,

236 
IN
 
EFI_PEI_FILE_HANDLE
 
FûeH™dÀ
,

237 
OUT
 
VOID
 **
Se˘i⁄D©a
,

238 
OUT
 
UINT32
 *
Authítiˇti⁄Sètus


253 
EFI_STATUS


254 
EFIAPI


255 
PeiSîvi˚sIn°ÆlPeiMem‹y
 (

256 
IN
 
EFI_PHYSICAL_ADDRESS
 
Mem‹yBegö
,

257 
IN
 
UINT64
 
Mem‹yLígth


274 
EFI_STATUS


275 
EFIAPI


276 
PeiSîvi˚sAŒoˇãPages
 (

277 
IN
 
EFI_MEMORY_TYPE
 
Mem‹yTy≥
,

278 
IN
 
UINTN
 
Pages
,

279 
OUT
 
EFI_PHYSICAL_ADDRESS
 *
Mem‹y


294 
EFI_STATUS


295 
EFIAPI


296 
PeiSîvi˚sFªePages
 (

297 
IN
 
EFI_PHYSICAL_ADDRESS
 
Mem‹y
,

298 
IN
 
UINTN
 
Pages


312 
EFI_STATUS


313 
EFIAPI


314 
PeiSîvi˚sAŒoˇãPoﬁ
 (

315 
IN
 
UINTN
 
Size
,

316 
OUT
 
VOID
 **
Buf„r


326 
EFI_STATUS


327 
EFIAPI


328 
PeiSîvi˚sRe£tSy°em
 (

329 
VOID


354 
EFI_STATUS


355 
EFIAPI


356 
PeiSîvi˚sFfsFödFûeByName
 (

357 
IN
 
CONST
 
EFI_GUID
 *
FûeName
,

358 
IN
 
CONST
 
EFI_PEI_FV_HANDLE
 
VﬁumeH™dÀ
,

359 
OUT
 
EFI_PEI_FILE_HANDLE
 *
FûeH™dÀ


381 
EFI_STATUS


382 
EFIAPI


383 
PeiSîvi˚sFfsGëFûeInfo
 (

384 
IN
 
CONST
 
EFI_PEI_FILE_HANDLE
 
FûeH™dÀ
,

385 
OUT
 
EFI_FV_FILE_INFO
 *
FûeInfo


406 
EFI_STATUS


407 
EFIAPI


408 
PeiSîvi˚sFfsGëFûeInfo2
 (

409 
IN
 
CONST
 
EFI_PEI_FILE_HANDLE
 
FûeH™dÀ
,

410 
OUT
 
EFI_FV_FILE_INFO2
 *
FûeInfo


431 
EFI_STATUS


432 
EFIAPI


433 
PeiSîvi˚sFfsGëVﬁumeInfo
 (

434 
IN
 
EFI_PEI_FV_HANDLE
 
VﬁumeH™dÀ
,

435 
OUT
 
EFI_FV_INFO
 *
VﬁumeInfo


456 
EFI_STATUS


457 
EFIAPI


458 
PeiSîvi˚sRegi°îF‹Shadow
 (

459 
IN
 
EFI_PEI_FILE_HANDLE
 
FûeH™dÀ


486 
VOID


487 
EFIAPI


488 
PeiSîvi˚sIn°ÆlFvInfoPpi
 (

489 
IN
 
CONST
 
EFI_GUID
 *
FvF‹m©
, 
OPTIONAL


490 
IN
 
CONST
 
VOID
 *
FvInfo
,

491 
IN
 
UINT32
 
FvInfoSize
,

492 
IN
 
CONST
 
EFI_GUID
 *
P¨ítFvName
, 
OPTIONAL


493 
IN
 
CONST
 
EFI_GUID
 *
P¨ítFûeName
 
OPTIONAL


526 
VOID


527 
EFIAPI


528 
PeiSîvi˚sIn°ÆlFvInfo2Ppi
 (

529 
IN
 
CONST
 
EFI_GUID
 *
FvF‹m©
, 
OPTIONAL


530 
IN
 
CONST
 
VOID
 *
FvInfo
,

531 
IN
 
UINT32
 
FvInfoSize
,

532 
IN
 
CONST
 
EFI_GUID
 *
P¨ítFvName
, 
OPTIONAL


533 
IN
 
CONST
 
EFI_GUID
 *
P¨ítFûeName
, 
OPTIONAL


534 
IN
 
UINT32
 
Authítiˇti⁄Sètus


550 
VOID


551 
EFIAPI


552 
PeiSîvi˚sRe£tSy°em2
 (

553 
IN
 
EFI_RESET_TYPE
 
Re£tTy≥
,

554 
IN
 
EFI_STATUS
 
Re£tSètus
,

555 
IN
 
UINTN
 
D©aSize
,

556 
IN
 
VOID
 *
Re£tD©a
 
OPTIONAL


	@PeiServicesTablePointerLib.h

9 #i‚de‡
__PEI_SERVICES_TABLE_POINTER_LIB_H__


10 
	#__PEI_SERVICES_TABLE_POINTER_LIB_H__


	)

24 
CONST
 
EFI_PEI_SERVICES
 **

25 
EFIAPI


26 
GëPeiSîvi˚sTabÀPoöãr
 (

27 
VOID


41 
VOID


42 
EFIAPI


43 
SëPeiSîvi˚sTabÀPoöãr
 (

44 
IN
 
CONST
 
EFI_PEI_SERVICES
 ** 
PeiSîvi˚sTabÀPoöãr


61 
VOID


62 
EFIAPI


63 
MigøãPeiSîvi˚sTabÀPoöãr
 (

64 
VOID


	@PeimEntryPoint.h

9 #i‚de‡
__MODULE_ENTRY_POINT_H__


10 
	#__MODULE_ENTRY_POINT_H__


	)

15 
CONST
 
UINT32
 
_gPeimRevisi⁄
;

31 
EFI_STATUS


32 
EFIAPI


33 
_ModuÀE¡ryPoöt
 (

34 
IN
 
EFI_PEI_FILE_HANDLE
 
FûeH™dÀ
,

35 
IN
 
CONST
 
EFI_PEI_SERVICES
 **
PeiSîvi˚s


51 
EFI_STATUS


52 
EFIAPI


53 
EfiMaö
 (

54 
IN
 
EFI_PEI_FILE_HANDLE
 
FûeH™dÀ
,

55 
IN
 
CONST
 
EFI_PEI_SERVICES
 **
PeiSîvi˚s


74 
VOID


75 
EFIAPI


76 
Pro˚ssLibøryC⁄°ru˘‹Li°
 (

77 
IN
 
EFI_PEI_FILE_HANDLE
 
FûeH™dÀ
,

78 
IN
 
CONST
 
EFI_PEI_SERVICES
 **
PeiSîvi˚s


96 
EFI_STATUS


97 
EFIAPI


98 
Pro˚ssModuÀE¡ryPoötLi°
 (

99 
IN
 
EFI_PEI_FILE_HANDLE
 
FûeH™dÀ
,

100 
IN
 
CONST
 
EFI_PEI_SERVICES
 **
PeiSîvi˚s


	@PerformanceLib.h

9 #i‚de‡
__PERFORMANCE_LIB_H__


10 
	#__PERFORMANCE_LIB_H__


	)

15 
	#PERFORMANCE_LIBRARY_PROPERTY_MEASUREMENT_ENABLED
 0x00000001

	)

20 
	#PERF_EVENT_ID
 0x00

	)

22 
	#MODULE_START_ID
 0x01

	)

23 
	#MODULE_END_ID
 0x02

	)

24 
	#MODULE_LOADIMAGE_START_ID
 0x03

	)

25 
	#MODULE_LOADIMAGE_END_ID
 0x04

	)

26 
	#MODULE_DB_START_ID
 0x05

	)

27 
	#MODULE_DB_END_ID
 0x06

	)

28 
	#MODULE_DB_SUPPORT_START_ID
 0x07

	)

29 
	#MODULE_DB_SUPPORT_END_ID
 0x08

	)

30 
	#MODULE_DB_STOP_START_ID
 0x09

	)

31 
	#MODULE_DB_STOP_END_ID
 0x0A

	)

33 
	#PERF_EVENTSIGNAL_START_ID
 0x10

	)

34 
	#PERF_EVENTSIGNAL_END_ID
 0x11

	)

35 
	#PERF_CALLBACK_START_ID
 0x20

	)

36 
	#PERF_CALLBACK_END_ID
 0x21

	)

37 
	#PERF_FUNCTION_START_ID
 0x30

	)

38 
	#PERF_FUNCTION_END_ID
 0x31

	)

39 
	#PERF_INMODULE_START_ID
 0x40

	)

40 
	#PERF_INMODULE_END_ID
 0x41

	)

41 
	#PERF_CROSSMODULE_START_ID
 0x50

	)

42 
	#PERF_CROSSMODULE_END_ID
 0x51

	)

48 
	#PERF_CORE_START_IMAGE
 0x0002

	)

49 
	#PERF_CORE_LOAD_IMAGE
 0x0004

	)

50 
	#PERF_CORE_DB_SUPPORT
 0x0008

	)

51 
	#PERF_CORE_DB_START
 0x0010

	)

52 
	#PERF_CORE_DB_STOP
 0x0020

	)

54 
	#PERF_GENERAL_TYPE
 0x0040

	)

77 
RETURN_STATUS


78 
EFIAPI


79 
SèπPîf‹m™˚Mósuªmít
 (

80 
IN
 
CONST
 
VOID
 *
H™dÀ
, 
OPTIONAL


81 
IN
 
CONST
 
CHAR8
 *
Tokí
, 
OPTIONAL


82 
IN
 
CONST
 
CHAR8
 *
ModuÀ
, 
OPTIONAL


83 
IN
 
UINT64
 
TimeSèmp


109 
RETURN_STATUS


110 
EFIAPI


111 
EndPîf‹m™˚Mósuªmít
 (

112 
IN
 
CONST
 
VOID
 *
H™dÀ
, 
OPTIONAL


113 
IN
 
CONST
 
CHAR8
 *
Tokí
, 
OPTIONAL


114 
IN
 
CONST
 
CHAR8
 *
ModuÀ
, 
OPTIONAL


115 
IN
 
UINT64
 
TimeSèmp


157 
UINTN


158 
EFIAPI


159 
GëPîf‹m™˚Mósuªmít
 (

160 
IN
 
UINTN
 
LogE¡ryKey
,

161 
OUT
 
CONST
 
VOID
 **
H™dÀ
,

162 
OUT
 
CONST
 
CHAR8
 **
Tokí
,

163 
OUT
 
CONST
 
CHAR8
 **
ModuÀ
,

164 
OUT
 
UINT64
 *
SèπTimeSèmp
,

165 
OUT
 
UINT64
 *
EndTimeSèmp


191 
RETURN_STATUS


192 
EFIAPI


193 
SèπPîf‹m™˚MósuªmítEx
 (

194 
IN
 
CONST
 
VOID
 *
H™dÀ
, 
OPTIONAL


195 
IN
 
CONST
 
CHAR8
 *
Tokí
, 
OPTIONAL


196 
IN
 
CONST
 
CHAR8
 *
ModuÀ
, 
OPTIONAL


197 
IN
 
UINT64
 
TimeSèmp
,

198 
IN
 
UINT32
 
Idítifõr


226 
RETURN_STATUS


227 
EFIAPI


228 
EndPîf‹m™˚MósuªmítEx
 (

229 
IN
 
CONST
 
VOID
 *
H™dÀ
, 
OPTIONAL


230 
IN
 
CONST
 
CHAR8
 *
Tokí
, 
OPTIONAL


231 
IN
 
CONST
 
CHAR8
 *
ModuÀ
, 
OPTIONAL


232 
IN
 
UINT64
 
TimeSèmp
,

233 
IN
 
UINT32
 
Idítifõr


277 
UINTN


278 
EFIAPI


279 
GëPîf‹m™˚MósuªmítEx
 (

280 
IN
 
UINTN
 
LogE¡ryKey
,

281 
OUT
 
CONST
 
VOID
 **
H™dÀ
,

282 
OUT
 
CONST
 
CHAR8
 **
Tokí
,

283 
OUT
 
CONST
 
CHAR8
 **
ModuÀ
,

284 
OUT
 
UINT64
 *
SèπTimeSèmp
,

285 
OUT
 
UINT64
 *
EndTimeSèmp
,

286 
OUT
 
UINT32
 *
Idítifõr


301 
BOOLEAN


302 
EFIAPI


303 
Pîf‹m™˚MósuªmítE«bÀd
 (

304 
VOID


320 
BOOLEAN


321 
EFIAPI


322 
LogPîf‹m™˚MósuªmítE«bÀd
 (

323 
IN
 
CONST
 
UINTN
 
Ty≥


342 
RETURN_STATUS


343 
EFIAPI


344 
LogPîf‹m™˚Mósuªmít
 (

345 
IN
 
CONST
 
VOID
 *
CÆÀrIdítifõr
, 
OPTIONAL


346 
IN
 
CONST
 
VOID
 *
Guid
, 
OPTIONAL


347 
IN
 
CONST
 
CHAR8
 *
Såög
, 
OPTIONAL


348 
IN
 
UINT64
 
Addªss
, 
OPTIONAL


349 
IN
 
UINT32
 
Idítifõr


360 
	#PERF_START_IMAGE_BEGIN
(
ModuÀH™dÀ
Ë\

	)

362 i‡(
LogPîf‹m™˚MósuªmítE«bÀd
 (
PERF_CORE_START_IMAGE
)) { \

363 
LogPîf‹m™˚Mósuªmít
 (
ModuÀH™dÀ
, 
NULL
, NULL, 0, 
MODULE_START_ID
); \

365 } 
	gFALSE
)

375 
	#PERF_START_IMAGE_END
(
ModuÀH™dÀ
Ë\

	)

377 i‡(
LogPîf‹m™˚MósuªmítE«bÀd
 (
PERF_CORE_START_IMAGE
)) { \

378 
LogPîf‹m™˚Mósuªmít
 (
ModuÀH™dÀ
, 
NULL
, NULL, 0, 
MODULE_END_ID
); \

380 } 
	gFALSE
)

390 
	#PERF_LOAD_IMAGE_BEGIN
(
ModuÀH™dÀ
Ë\

	)

392 i‡(
LogPîf‹m™˚MósuªmítE«bÀd
 (
PERF_CORE_LOAD_IMAGE
)) { \

393 
LogPîf‹m™˚Mósuªmít
 (
ModuÀH™dÀ
, 
NULL
, NULL, 0, 
MODULE_LOADIMAGE_START_ID
); \

395 } 
	gFALSE
)

405 
	#PERF_LOAD_IMAGE_END
(
ModuÀH™dÀ
Ë\

	)

407 i‡(
LogPîf‹m™˚MósuªmítE«bÀd
 (
PERF_CORE_LOAD_IMAGE
)) { \

408 
LogPîf‹m™˚Mósuªmít
 (
ModuÀH™dÀ
, 
NULL
, NULL, 0, 
MODULE_LOADIMAGE_END_ID
); \

410 } 
	gFALSE
)

420 
	#PERF_DRIVER_BINDING_SUPPORT_BEGIN
(
ModuÀH™dÀ
, 
C⁄åﬁÀrH™dÀ
Ë\

	)

422 i‡(
LogPîf‹m™˚MósuªmítE«bÀd
 (
PERF_CORE_DB_SUPPORT
)) { \

423 
LogPîf‹m™˚Mósuªmít
 (
ModuÀH™dÀ
, 
NULL
, NULL, (
UINT64
)(
UINTN
)
C⁄åﬁÀrH™dÀ
, 
MODULE_DB_SUPPORT_START_ID
); \

425 } 
	gFALSE
)

435 
	#PERF_DRIVER_BINDING_SUPPORT_END
(
ModuÀH™dÀ
, 
C⁄åﬁÀrH™dÀ
Ë\

	)

437 i‡(
LogPîf‹m™˚MósuªmítE«bÀd
 (
PERF_CORE_DB_SUPPORT
)) { \

438 
LogPîf‹m™˚Mósuªmít
 (
ModuÀH™dÀ
, 
NULL
, NULL, (
UINT64
)(
UINTN
)
C⁄åﬁÀrH™dÀ
, 
MODULE_DB_SUPPORT_END_ID
); \

440 } 
	gFALSE
)

450 
	#PERF_DRIVER_BINDING_START_BEGIN
(
ModuÀH™dÀ
, 
C⁄åﬁÀrH™dÀ
Ë\

	)

452 i‡(
LogPîf‹m™˚MósuªmítE«bÀd
 (
PERF_CORE_DB_START
)) { \

453 
LogPîf‹m™˚Mósuªmít
 (
ModuÀH™dÀ
, 
NULL
, NULL, (
UINT64
)(
UINTN
)
C⁄åﬁÀrH™dÀ
, 
MODULE_DB_START_ID
); \

455 } 
	gFALSE
)

465 
	#PERF_DRIVER_BINDING_START_END
(
ModuÀH™dÀ
, 
C⁄åﬁÀrH™dÀ
Ë\

	)

467 i‡(
LogPîf‹m™˚MósuªmítE«bÀd
 (
PERF_CORE_DB_START
)) { \

468 
LogPîf‹m™˚Mósuªmít
 (
ModuÀH™dÀ
, 
NULL
, NULL, (
UINT64
)(
UINTN
)
C⁄åﬁÀrH™dÀ
, 
MODULE_DB_END_ID
); \

470 } 
	gFALSE
)

480 
	#PERF_DRIVER_BINDING_STOP_BEGIN
(
ModuÀH™dÀ
, 
C⁄åﬁÀrH™dÀ
Ë\

	)

482 i‡(
LogPîf‹m™˚MósuªmítE«bÀd
 (
PERF_CORE_DB_STOP
)) { \

483 
LogPîf‹m™˚Mósuªmít
 (
ModuÀH™dÀ
, 
NULL
, NULL, (
UINT64
)(
UINTN
)
C⁄åﬁÀrH™dÀ
, 
MODULE_DB_STOP_START_ID
); \

485 } 
	gFALSE
)

495 
	#PERF_DRIVER_BINDING_STOP_END
(
ModuÀH™dÀ
, 
C⁄åﬁÀrH™dÀ
Ë\

	)

497 i‡(
LogPîf‹m™˚MósuªmítE«bÀd
 (
PERF_CORE_DB_STOP
)) { \

498 
LogPîf‹m™˚Mósuªmít
 (
ModuÀH™dÀ
, 
NULL
, NULL, (
UINT64
)(
UINTN
)
C⁄åﬁÀrH™dÀ
, 
MODULE_DB_STOP_END_ID
); \

500 } 
	gFALSE
)

511 
	#PERF_EVENT
(
EvítSåög
Ë\

	)

513 i‡(
LogPîf‹m™˚MósuªmítE«bÀd
 (
PERF_GENERAL_TYPE
)) { \

514 
LogPîf‹m™˚Mósuªmít
 (&
gEfiCÆÀrIdGuid
, 
NULL
, 
EvítSåög
 , 0, 
PERF_EVENT_ID
); \

516 } 
	gFALSE
)

527 
	#PERF_EVENT_SIGNAL_BEGIN
(
EvítGuid
Ë\

	)

529 i‡(
LogPîf‹m™˚MósuªmítE«bÀd
 (
PERF_GENERAL_TYPE
)) { \

530 
LogPîf‹m™˚Mósuªmít
 (&
gEfiCÆÀrIdGuid
, 
EvítGuid
, 
__FUNCTION__
 , 0, 
PERF_EVENTSIGNAL_START_ID
); \

532 } 
	gFALSE
)

543 
	#PERF_EVENT_SIGNAL_END
(
EvítGuid
Ë\

	)

545 i‡(
LogPîf‹m™˚MósuªmítE«bÀd
 (
PERF_GENERAL_TYPE
)) { \

546 
LogPîf‹m™˚Mósuªmít
 (&
gEfiCÆÀrIdGuid
, 
EvítGuid
, 
__FUNCTION__
 , 0, 
PERF_EVENTSIGNAL_END_ID
); \

548 } 
	gFALSE
)

559 
	#PERF_CALLBACK_BEGIN
(
TriggîGuid
Ë\

	)

561 i‡(
LogPîf‹m™˚MósuªmítE«bÀd
 (
PERF_GENERAL_TYPE
)) { \

562 
LogPîf‹m™˚Mósuªmít
 (&
gEfiCÆÀrIdGuid
, 
TriggîGuid
, 
__FUNCTION__
 , 0, 
PERF_CALLBACK_START_ID
); \

564 } 
	gFALSE
)

575 
	#PERF_CALLBACK_END
(
TriggîGuid
Ë\

	)

577 i‡(
LogPîf‹m™˚MósuªmítE«bÀd
 (
PERF_GENERAL_TYPE
)) { \

578 
LogPîf‹m™˚Mósuªmít
 (&
gEfiCÆÀrIdGuid
, 
TriggîGuid
, 
__FUNCTION__
 , 0, 
PERF_CALLBACK_END_ID
); \

580 } 
	gFALSE
)

590 
	#PERF_FUNCTION_BEGIN
(Ë\

	)

592 i‡(
LogPîf‹m™˚MósuªmítE«bÀd
 (
PERF_GENERAL_TYPE
)) { \

593 
LogPîf‹m™˚Mósuªmít
 (&
gEfiCÆÀrIdGuid
, 
NULL
, 
__FUNCTION__
 , 0, 
PERF_FUNCTION_START_ID
); \

595 } 
	gFALSE
)

605 
	#PERF_FUNCTION_END
(Ë\

	)

607 i‡(
LogPîf‹m™˚MósuªmítE«bÀd
 (
PERF_GENERAL_TYPE
)) { \

608 
LogPîf‹m™˚Mósuªmít
 (&
gEfiCÆÀrIdGuid
, 
NULL
, 
__FUNCTION__
 , 0, 
PERF_FUNCTION_END_ID
); \

610 } 
	gFALSE
)

620 
	#PERF_INMODULE_BEGIN
(
MósuªmítSåög
Ë\

	)

622 i‡(
LogPîf‹m™˚MósuªmítE«bÀd
 (
PERF_GENERAL_TYPE
)) { \

623 
LogPîf‹m™˚Mósuªmít
 (&
gEfiCÆÀrIdGuid
, 
NULL
, 
MósuªmítSåög
, 0, 
PERF_INMODULE_START_ID
); \

625 } 
	gFALSE
)

635 
	#PERF_INMODULE_END
(
MósuªmítSåög
Ë\

	)

637 i‡(
LogPîf‹m™˚MósuªmítE«bÀd
 (
PERF_GENERAL_TYPE
)) { \

638 
LogPîf‹m™˚Mósuªmít
 (&
gEfiCÆÀrIdGuid
, 
NULL
, 
MósuªmítSåög
, 0, 
PERF_INMODULE_END_ID
); \

640 } 
	gFALSE
)

651 
	#PERF_CROSSMODULE_BEGIN
(
MósuªmítSåög
Ë\

	)

653 i‡(
LogPîf‹m™˚MósuªmítE«bÀd
 (
PERF_GENERAL_TYPE
)) { \

654 
LogPîf‹m™˚Mósuªmít
 (&
gEfiCÆÀrIdGuid
, 
NULL
, 
MósuªmítSåög
, 0, 
PERF_CROSSMODULE_START_ID
); \

656 } 
	gFALSE
)

667 
	#PERF_CROSSMODULE_END
(
MósuªmítSåög
Ë\

	)

669 i‡(
LogPîf‹m™˚MósuªmítE«bÀd
 (
PERF_GENERAL_TYPE
)) { \

670 
LogPîf‹m™˚Mósuªmít
 (&
gEfiCÆÀrIdGuid
, 
NULL
, 
MósuªmítSåög
, 0, 
PERF_CROSSMODULE_END_ID
); \

672 } 
	gFALSE
)

681 
	#PERF_END
(
H™dÀ
, 
Tokí
, 
ModuÀ
, 
TimeSèmp
Ë\

	)

683 i‡(
Pîf‹m™˚MósuªmítE«bÀd
 ()) { \

684 
EndPîf‹m™˚Mósuªmít
 (
H™dÀ
, 
Tokí
, 
ModuÀ
, 
TimeSèmp
); \

686 } 
	gFALSE
)

695 
	#PERF_START
(
H™dÀ
, 
Tokí
, 
ModuÀ
, 
TimeSèmp
Ë\

	)

697 i‡(
Pîf‹m™˚MósuªmítE«bÀd
 ()) { \

698 
SèπPîf‹m™˚Mósuªmít
 (
H™dÀ
, 
Tokí
, 
ModuÀ
, 
TimeSèmp
); \

700 } 
	gFALSE
)

709 
	#PERF_END_EX
(
H™dÀ
, 
Tokí
, 
ModuÀ
, 
TimeSèmp
, 
Idítifõr
Ë\

	)

711 i‡(
Pîf‹m™˚MósuªmítE«bÀd
 ()) { \

712 
EndPîf‹m™˚MósuªmítEx
 (
H™dÀ
, 
Tokí
, 
ModuÀ
, 
TimeSèmp
, 
Idítifõr
); \

714 } 
	gFALSE
)

723 
	#PERF_START_EX
(
H™dÀ
, 
Tokí
, 
ModuÀ
, 
TimeSèmp
, 
Idítifõr
Ë\

	)

725 i‡(
Pîf‹m™˚MósuªmítE«bÀd
 ()) { \

726 
SèπPîf‹m™˚MósuªmítEx
 (
H™dÀ
, 
Tokí
, 
ModuÀ
, 
TimeSèmp
, 
Idítifõr
); \

728 } 
	gFALSE
)

738 
	#PERF_CODE_BEGIN
(Ëdÿ{ i‡(
	`Pîf‹m™˚MósuªmítE«bÀd
 ()Ë{ 
UINT8
 
__Pîf‹m™˚CodeLoˇl


	)

748 
	#PERF_CODE_END
(Ë
__Pîf‹m™˚CodeLoˇl
 = 0; __Pîf‹m™˚CodeLoˇl++; } } 
FALSE
)

	)

760 
	#PERF_CODE
(
Ex¥essi⁄
Ë\

	)

761 
PERF_CODE_BEGIN
 (); \

762 
	gEx¥essi⁄
 \

763 
	$PERF_CODE_END
 ()

	@PostCodeLib.h

9 #i‚de‡
__POST_CODE_LIB_H__


10 
	#__POST_CODE_LIB_H__


	)

12 
	#POST_CODE_PROPERTY_POST_CODE_ENABLED
 0x00000008

	)

13 
	#POST_CODE_PROPERTY_POST_CODE_DESCRIPTION_ENABLED
 0x00000010

	)

33 
UINT32


34 
EFIAPI


35 
Po°Code
 (

36 
IN
 
UINT32
 
VÆue


64 
UINT32


65 
EFIAPI


66 
Po°CodeWôhDes¸ùti⁄
 (

67 
IN
 
UINT32
 
VÆue
,

68 
IN
 
CONST
 
CHAR8
 *
Des¸ùti⁄
 
OPTIONAL


84 
BOOLEAN


85 
EFIAPI


86 
Po°CodeE«bÀd
 (

87 
VOID


103 
BOOLEAN


104 
EFIAPI


105 
Po°CodeDes¸ùti⁄E«bÀd
 (

106 
VOID


121 
	#POST_CODE
(
VÆue
Ë
	`Po°CodeE«bÀd
(Ë? 
	`Po°Code
(VÆueË: 
	)
Value

137 
	#POST_CODE_WITH_DESCRIPTION
(
VÆue
,
Des¸ùti⁄
Ë\

	)

138 
Po°CodeE«bÀd
() ? \

139 (
Po°CodeDes¸ùti⁄E«bÀd
() ? \

140 
	$Po°CodeWôhDes¸ùti⁄
(
VÆue
,
Des¸ùti⁄
) : \

141 
	$Po°Code
(
VÆue
)) : \

142 
VÆue


	@PrintLib.h

172 #i‚de‡
__PRINT_LIB_H__


173 
	#__PRINT_LIB_H__


	)

189 
	#MAXIMUM_VALUE_CHARACTERS
 38

	)

195 
	#LEFT_JUSTIFY
 0x01

	)

196 
	#COMMA_TYPE
 0x08

	)

197 
	#PREFIX_ZERO
 0x20

	)

198 
	#RADIX_HEX
 0x80

	)

240 
UINTN


241 
EFIAPI


242 
UnicodeVSPröt
 (

243 
OUT
 
CHAR16
 *
SèπOfBuf„r
,

244 
IN
 
UINTN
 
Buf„rSize
,

245 
IN
 
CONST
 
CHAR16
 *
F‹m©Såög
,

246 
IN
 
VA_LIST
 
M¨kî


287 
UINTN


288 
EFIAPI


289 
UnicodeBSPröt
 (

290 
OUT
 
CHAR16
 *
SèπOfBuf„r
,

291 
IN
 
UINTN
 
Buf„rSize
,

292 
IN
 
CONST
 
CHAR16
 *
F‹m©Såög
,

293 
IN
 
BASE_LIST
 
M¨kî


336 
UINTN


337 
EFIAPI


338 
UnicodeSPröt
 (

339 
OUT
 
CHAR16
 *
SèπOfBuf„r
,

340 
IN
 
UINTN
 
Buf„rSize
,

341 
IN
 
CONST
 
CHAR16
 *
F‹m©Såög
,

384 
UINTN


385 
EFIAPI


386 
UnicodeVSPrötAsciiF‹m©
 (

387 
OUT
 
CHAR16
 *
SèπOfBuf„r
,

388 
IN
 
UINTN
 
Buf„rSize
,

389 
IN
 
CONST
 
CHAR8
 *
F‹m©Såög
,

390 
IN
 
VA_LIST
 
M¨kî


430 
UINTN


431 
EFIAPI


432 
UnicodeBSPrötAsciiF‹m©
 (

433 
OUT
 
CHAR16
 *
SèπOfBuf„r
,

434 
IN
 
UINTN
 
Buf„rSize
,

435 
IN
 
CONST
 
CHAR8
 *
F‹m©Såög
,

436 
IN
 
BASE_LIST
 
M¨kî


479 
UINTN


480 
EFIAPI


481 
UnicodeSPrötAsciiF‹m©
 (

482 
OUT
 
CHAR16
 *
SèπOfBuf„r
,

483 
IN
 
UINTN
 
Buf„rSize
,

484 
IN
 
CONST
 
CHAR8
 *
F‹m©Såög
,

539 
RETURN_STATUS


540 
EFIAPI


541 
UnicodeVÆueToSåögS
 (

542 
IN
 
OUT
 
CHAR16
 *
Buf„r
,

543 
IN
 
UINTN
 
Buf„rSize
,

544 
IN
 
UINTN
 
Fœgs
,

545 
IN
 
INT64
 
VÆue
,

546 
IN
 
UINTN
 
Width


586 
UINTN


587 
EFIAPI


588 
AsciiVSPröt
 (

589 
OUT
 
CHAR8
 *
SèπOfBuf„r
,

590 
IN
 
UINTN
 
Buf„rSize
,

591 
IN
 
CONST
 
CHAR8
 *
F‹m©Såög
,

592 
IN
 
VA_LIST
 
M¨kî


630 
UINTN


631 
EFIAPI


632 
AsciiBSPröt
 (

633 
OUT
 
CHAR8
 *
SèπOfBuf„r
,

634 
IN
 
UINTN
 
Buf„rSize
,

635 
IN
 
CONST
 
CHAR8
 *
F‹m©Såög
,

636 
IN
 
BASE_LIST
 
M¨kî


677 
UINTN


678 
EFIAPI


679 
AsciiSPröt
 (

680 
OUT
 
CHAR8
 *
SèπOfBuf„r
,

681 
IN
 
UINTN
 
Buf„rSize
,

682 
IN
 
CONST
 
CHAR8
 *
F‹m©Såög
,

725 
UINTN


726 
EFIAPI


727 
AsciiVSPrötUnicodeF‹m©
 (

728 
OUT
 
CHAR8
 *
SèπOfBuf„r
,

729 
IN
 
UINTN
 
Buf„rSize
,

730 
IN
 
CONST
 
CHAR16
 *
F‹m©Såög
,

731 
IN
 
VA_LIST
 
M¨kî


771 
UINTN


772 
EFIAPI


773 
AsciiBSPrötUnicodeF‹m©
 (

774 
OUT
 
CHAR8
 *
SèπOfBuf„r
,

775 
IN
 
UINTN
 
Buf„rSize
,

776 
IN
 
CONST
 
CHAR16
 *
F‹m©Såög
,

777 
IN
 
BASE_LIST
 
M¨kî


820 
UINTN


821 
EFIAPI


822 
AsciiSPrötUnicodeF‹m©
 (

823 
OUT
 
CHAR8
 *
SèπOfBuf„r
,

824 
IN
 
UINTN
 
Buf„rSize
,

825 
IN
 
CONST
 
CHAR16
 *
F‹m©Såög
,

879 
RETURN_STATUS


880 
EFIAPI


881 
AsciiVÆueToSåögS
 (

882 
IN
 
OUT
 
CHAR8
 *
Buf„r
,

883 
IN
 
UINTN
 
Buf„rSize
,

884 
IN
 
UINTN
 
Fœgs
,

885 
IN
 
INT64
 
VÆue
,

886 
IN
 
UINTN
 
Width


906 
UINTN


907 
EFIAPI


908 
SPrötLígth
 (

909 
IN
 
CONST
 
CHAR16
 *
F‹m©Såög
,

910 
IN
 
VA_LIST
 
M¨kî


928 
UINTN


929 
EFIAPI


930 
SPrötLígthAsciiF‹m©
 (

931 
IN
 
CONST
 
CHAR8
 *
F‹m©Såög
,

932 
IN
 
VA_LIST
 
M¨kî


	@ReportStatusCodeLib.h

9 #i‚de‡
__REPORT_STATUS_CODE_LIB_H__


10 
	#__REPORT_STATUS_CODE_LIB_H__


	)

12 
	~<Uefi/UefiBa£Ty≥.h
>

13 
	~<Pi/PiSètusCode.h
>

14 
	~<PrŸocﬁ/Devi˚P©h.h
>

19 
	#REPORT_STATUS_CODE_PROPERTY_PROGRESS_CODE_ENABLED
 0x00000001

	)

20 
	#REPORT_STATUS_CODE_PROPERTY_ERROR_CODE_ENABLED
 0x00000002

	)

21 
	#REPORT_STATUS_CODE_PROPERTY_DEBUG_CODE_ENABLED
 0x00000004

	)

44 
BOOLEAN


45 
EFIAPI


46 
CodeTy≥ToPo°Code
 (

47 
IN
 
EFI_STATUS_CODE_TYPE
 
CodeTy≥
,

48 
IN
 
EFI_STATUS_CODE_VALUE
 
VÆue
,

49 
OUT
 
UINT8
 *
Po°Code


86 
BOOLEAN


87 
EFIAPI


88 
Rï‹tSètusCodeExåa˘As£πInfo
 (

89 
IN
 
EFI_STATUS_CODE_TYPE
 
CodeTy≥
,

90 
IN
 
EFI_STATUS_CODE_VALUE
 
VÆue
,

91 
IN
 
CONST
 
EFI_STATUS_CODE_DATA
 *
D©a
,

92 
OUT
 
CHAR8
 **
Fûíame
,

93 
OUT
 
CHAR8
 **
Des¸ùti⁄
,

94 
OUT
 
UINT32
 *
LöeNumbî


127 
BOOLEAN


128 
EFIAPI


129 
Rï‹tSètusCodeExåa˘DebugInfo
 (

130 
IN
 
CONST
 
EFI_STATUS_CODE_DATA
 *
D©a
,

131 
OUT
 
UINT32
 *
Eº‹Levñ
,

132 
OUT
 
BASE_LIST
 *
M¨kî
,

133 
OUT
 
CHAR8
 **
F‹m©


158 
EFI_STATUS


159 
EFIAPI


160 
Rï‹tSètusCode
 (

161 
IN
 
EFI_STATUS_CODE_TYPE
 
Ty≥
,

162 
IN
 
EFI_STATUS_CODE_VALUE
 
VÆue


195 
EFI_STATUS


196 
EFIAPI


197 
Rï‹tSètusCodeWôhDevi˚P©h
 (

198 
IN
 
EFI_STATUS_CODE_TYPE
 
Ty≥
,

199 
IN
 
EFI_STATUS_CODE_VALUE
 
VÆue
,

200 
IN
 
CONST
 
EFI_DEVICE_PATH_PROTOCOL
 *
Devi˚P©h


239 
EFI_STATUS


240 
EFIAPI


241 
Rï‹tSètusCodeWôhExãndedD©a
 (

242 
IN
 
EFI_STATUS_CODE_TYPE
 
Ty≥
,

243 
IN
 
EFI_STATUS_CODE_VALUE
 
VÆue
,

244 
IN
 
CONST
 
VOID
 *
ExãndedD©a
,

245 
IN
 
UINTN
 
ExãndedD©aSize


291 
EFI_STATUS


292 
EFIAPI


293 
Rï‹tSètusCodeEx
 (

294 
IN
 
EFI_STATUS_CODE_TYPE
 
Ty≥
,

295 
IN
 
EFI_STATUS_CODE_VALUE
 
VÆue
,

296 
IN
 
UINT32
 
In°™˚
,

297 
IN
 
CONST
 
EFI_GUID
 *
CÆÀrId
 
OPTIONAL
,

298 
IN
 
CONST
 
EFI_GUID
 *
ExãndedD©aGuid
 
OPTIONAL
,

299 
IN
 
CONST
 
VOID
 *
ExãndedD©a
 
OPTIONAL
,

300 
IN
 
UINTN
 
ExãndedD©aSize


316 
BOOLEAN


317 
EFIAPI


318 
Rï‹tProgªssCodeE«bÀd
 (

319 
VOID


335 
BOOLEAN


336 
EFIAPI


337 
Rï‹tEº‹CodeE«bÀd
 (

338 
VOID


354 
BOOLEAN


355 
EFIAPI


356 
Rï‹tDebugCodeE«bÀd
 (

357 
VOID


376 
	#REPORT_STATUS_CODE
(
Ty≥
,
VÆue
Ë\

	)

377 (
Rï‹tProgªssCodeE«bÀd
(Ë&& ((
	gTy≥
Ë& 
	gEFI_STATUS_CODE_TYPE_MASK
Ë=
EFI_PROGRESS_CODE
) ? \

378 
	$Rï‹tSètusCode
(
Ty≥
,
VÆue
) : \

379 (
	`Rï‹tEº‹CodeE«bÀd
(Ë&& ((
Ty≥
Ë& 
EFI_STATUS_CODE_TYPE_MASK
Ë=
EFI_ERROR_CODE
) ? \

380 
	$Rï‹tSètusCode
(
Ty≥
,
VÆue
) : \

381 (
	`Rï‹tDebugCodeE«bÀd
(Ë&& ((
Ty≥
Ë& 
EFI_STATUS_CODE_TYPE_MASK
Ë=
EFI_DEBUG_CODE
) ? \

382 
	$Rï‹tSètusCode
(
Ty≥
,
VÆue
) : \

383 
EFI_UNSUPPORTED


407 
	#REPORT_STATUS_CODE_WITH_DEVICE_PATH
(
Ty≥
,
VÆue
,
Devi˚P©hP¨amëî
Ë\

	)

408 (
	`Rï‹tProgªssCodeE«bÀd
(Ë&& ((
Ty≥
Ë& 
EFI_STATUS_CODE_TYPE_MASK
Ë=
EFI_PROGRESS_CODE
) ? \

409 
	$Rï‹tSètusCodeWôhDevi˚P©h
(
Ty≥
,
VÆue
,
Devi˚P©hP¨amëî
) : \

410 (
	`Rï‹tEº‹CodeE«bÀd
(Ë&& ((
Ty≥
Ë& 
EFI_STATUS_CODE_TYPE_MASK
Ë=
EFI_ERROR_CODE
) ? \

411 
	$Rï‹tSètusCodeWôhDevi˚P©h
(
Ty≥
,
VÆue
,
Devi˚P©hP¨amëî
) : \

412 (
	`Rï‹tDebugCodeE«bÀd
(Ë&& ((
Ty≥
Ë& 
EFI_STATUS_CODE_TYPE_MASK
Ë=
EFI_DEBUG_CODE
) ? \

413 
	$Rï‹tSètusCodeWôhDevi˚P©h
(
Ty≥
,
VÆue
,
Devi˚P©hP¨amëî
) : \

414 
EFI_UNSUPPORTED


440 
	#REPORT_STATUS_CODE_WITH_EXTENDED_DATA
(
Ty≥
,
VÆue
,
ExãndedD©a
,
ExãndedD©aSize
Ë\

	)

441 (
	`Rï‹tProgªssCodeE«bÀd
(Ë&& ((
Ty≥
Ë& 
EFI_STATUS_CODE_TYPE_MASK
Ë=
EFI_PROGRESS_CODE
) ? \

442 
	$Rï‹tSètusCodeWôhExãndedD©a
(
Ty≥
,
VÆue
,
ExãndedD©a
,
ExãndedD©aSize
) : \

443 (
	`Rï‹tEº‹CodeE«bÀd
(Ë&& ((
Ty≥
Ë& 
EFI_STATUS_CODE_TYPE_MASK
Ë=
EFI_ERROR_CODE
) ? \

444 
	$Rï‹tSètusCodeWôhExãndedD©a
(
Ty≥
,
VÆue
,
ExãndedD©a
,
ExãndedD©aSize
) : \

445 (
	`Rï‹tDebugCodeE«bÀd
(Ë&& ((
Ty≥
Ë& 
EFI_STATUS_CODE_TYPE_MASK
Ë=
EFI_DEBUG_CODE
) ? \

446 
	$Rï‹tSètusCodeWôhExãndedD©a
(
Ty≥
,
VÆue
,
ExãndedD©a
,
ExãndedD©aSize
) : \

447 
EFI_UNSUPPORTED


477 
	#REPORT_STATUS_CODE_EX
(
Ty≥
,
VÆue
,
In°™˚
,
CÆÀrId
,
ExãndedD©aGuid
,
ExãndedD©a
,
ExãndedD©aSize
Ë\

	)

478 (
	`Rï‹tProgªssCodeE«bÀd
(Ë&& ((
Ty≥
Ë& 
EFI_STATUS_CODE_TYPE_MASK
Ë=
EFI_PROGRESS_CODE
) ? \

479 
	$Rï‹tSètusCodeEx
(
Ty≥
,
VÆue
,
In°™˚
,
CÆÀrId
,
ExãndedD©aGuid
,
ExãndedD©a
,
ExãndedD©aSize
) : \

480 (
	`Rï‹tEº‹CodeE«bÀd
(Ë&& ((
Ty≥
Ë& 
EFI_STATUS_CODE_TYPE_MASK
Ë=
EFI_ERROR_CODE
) ? \

481 
	$Rï‹tSètusCodeEx
(
Ty≥
,
VÆue
,
In°™˚
,
CÆÀrId
,
ExãndedD©aGuid
,
ExãndedD©a
,
ExãndedD©aSize
) : \

482 (
	`Rï‹tDebugCodeE«bÀd
(Ë&& ((
Ty≥
Ë& 
EFI_STATUS_CODE_TYPE_MASK
Ë=
EFI_DEBUG_CODE
) ? \

483 
	$Rï‹tSètusCodeEx
(
Ty≥
,
VÆue
,
In°™˚
,
CÆÀrId
,
ExãndedD©aGuid
,
ExãndedD©a
,
ExãndedD©aSize
) : \

484 
EFI_UNSUPPORTED


	@ResourcePublicationLib.h

9 #i‚de‡
__RESOURCE_PUBLICATION_LIB__


10 
	#__RESOURCE_PUBLICATION_LIB__


	)

29 
RETURN_STATUS


30 
EFIAPI


31 
PublishSy°emMem‹y
 (

32 
IN
 
PHYSICAL_ADDRESS
 
Mem‹yBegö
,

33 
IN
 
UINT64
 
Mem‹yLígth


	@RngLib.h

9 #i‚de‡
__RNG_LIB_H__


10 
	#__RNG_LIB_H__


	)

23 
BOOLEAN


24 
EFIAPI


25 
GëR™domNumbî16
 (

26 
OUT
 
UINT16
 *
R™d


40 
BOOLEAN


41 
EFIAPI


42 
GëR™domNumbî32
 (

43 
OUT
 
UINT32
 *
R™d


57 
BOOLEAN


58 
EFIAPI


59 
GëR™domNumbî64
 (

60 
OUT
 
UINT64
 *
R™d


74 
BOOLEAN


75 
EFIAPI


76 
GëR™domNumbî128
 (

77 
OUT
 
UINT64
 *
R™d


	@S3BootScriptLib.h

14 #i‚de‡
_S3_BOOT_SCRIPT_LIB_H_


15 
	#_S3_BOOT_SCRIPT_LIB_H_


	)

17 
	~<Libøry/Ba£Lib.h
>

18 
	~<Indu°rySènd¨d/SmBus.h
>

33 
	#S3_BOOT_SCRIPT_LIB_PCI_ADDRESS
(
Bus
,
Devi˚
,
Fun˘i⁄
,
Regi°î
Ë\

	)

34 (
	gUINT64
) ( \

35 (((
	gUINTN
Ë
	gBus
) << 24) | \

36 (((
	gUINTN
Ë
	gDevi˚
) << 16) | \

37 (((
	gUINTN
Ë
	gFun˘i⁄
) << 8) | \

38 (((
	gUINTN
Ë(
	gRegi°î
)Ë< 256 ? ((UINTNË(Regi°î)Ë: (
UINT64
Ë(
LShi·U64
 ((UINT64Ë(
Regi°î
), 32))))

44 
	mS3BoŸS¸ùtWidthUöt8
,

45 
	mS3BoŸS¸ùtWidthUöt16
,

46 
	mS3BoŸS¸ùtWidthUöt32
,

47 
	mS3BoŸS¸ùtWidthUöt64
,

48 
	mS3BoŸS¸ùtWidthFifoUöt8
,

49 
	mS3BoŸS¸ùtWidthFifoUöt16
,

50 
	mS3BoŸS¸ùtWidthFifoUöt32
,

51 
	mS3BoŸS¸ùtWidthFifoUöt64
,

52 
	mS3BoŸS¸ùtWidthFûlUöt8
,

53 
	mS3BoŸS¸ùtWidthFûlUöt16
,

54 
	mS3BoŸS¸ùtWidthFûlUöt32
,

55 
	mS3BoŸS¸ùtWidthFûlUöt64
,

56 
	mS3BoŸS¸ùtWidthMaximum


57 } 
	tS3_BOOT_SCRIPT_LIB_WIDTH
;

72 
RETURN_STATUS


73 
EFIAPI


74 
S3BoŸS¸ùtSaveIoWrôe
 (

75 
IN
 
S3_BOOT_SCRIPT_LIB_WIDTH
 
Width
,

76 
IN
 
UINT64
 
Addªss
,

77 
IN
 
UINTN
 
Cou¡
,

78 
IN
 
VOID
 *
Buf„r


95 
RETURN_STATUS


96 
EFIAPI


97 
S3BoŸS¸ùtSaveIoRódWrôe
 (

98 
IN
 
S3_BOOT_SCRIPT_LIB_WIDTH
 
Width
,

99 
IN
 
UINT64
 
Addªss
,

100 
IN
 
VOID
 *
D©a
,

101 
IN
 
VOID
 *
D©aMask


116 
RETURN_STATUS


117 
EFIAPI


118 
S3BoŸS¸ùtSaveMemWrôe
 (

119 
IN
 
S3_BOOT_SCRIPT_LIB_WIDTH
 
Width
,

120 
IN
 
UINT64
 
Addªss
,

121 
IN
 
UINTN
 
Cou¡
,

122 
IN
 
VOID
 *
Buf„r


139 
RETURN_STATUS


140 
EFIAPI


141 
S3BoŸS¸ùtSaveMemRódWrôe
 (

142 
IN
 
S3_BOOT_SCRIPT_LIB_WIDTH
 
Width
,

143 
IN
 
UINT64
 
Addªss
,

144 
IN
 
VOID
 *
D©a
,

145 
IN
 
VOID
 *
D©aMask


160 
RETURN_STATUS


161 
EFIAPI


162 
S3BoŸS¸ùtSavePciCfgWrôe
 (

163 
IN
 
S3_BOOT_SCRIPT_LIB_WIDTH
 
Width
,

164 
IN
 
UINT64
 
Addªss
,

165 
IN
 
UINTN
 
Cou¡
,

166 
IN
 
VOID
 *
Buf„r


181 
RETURN_STATUS


182 
EFIAPI


183 
S3BoŸS¸ùtSavePciCfgRódWrôe
 (

184 
IN
 
S3_BOOT_SCRIPT_LIB_WIDTH
 
Width
,

185 
IN
 
UINT64
 
Addªss
,

186 
IN
 
VOID
 *
D©a
,

187 
IN
 
VOID
 *
D©aMask


203 
RETURN_STATUS


204 
EFIAPI


205 
S3BoŸS¸ùtSavePciCfg2Wrôe
 (

206 
IN
 
S3_BOOT_SCRIPT_LIB_WIDTH
 
Width
,

207 
IN
 
UINT16
 
Segmít
,

208 
IN
 
UINT64
 
Addªss
,

209 
IN
 
UINTN
 
Cou¡
,

210 
IN
 
VOID
 *
Buf„r


226 
RETURN_STATUS


227 
EFIAPI


228 
S3BoŸS¸ùtSavePciCfg2RódWrôe
 (

229 
IN
 
S3_BOOT_SCRIPT_LIB_WIDTH
 
Width
,

230 
IN
 
UINT16
 
Segmít
,

231 
IN
 
UINT64
 
Addªss
,

232 
IN
 
VOID
 *
D©a
,

233 
IN
 
VOID
 *
D©aMask


252 
RETURN_STATUS


253 
EFIAPI


254 
S3BoŸS¸ùtSaveSmbusExecuã
 (

255 
IN
 
UINTN
 
SmBusAddªss
,

256 
IN
 
EFI_SMBUS_OPERATION
 
O≥øti⁄
,

257 
IN
 
UINTN
 *
Lígth
,

258 
IN
 
VOID
 *
Buf„r


270 
RETURN_STATUS


271 
EFIAPI


272 
S3BoŸS¸ùtSaveSèŒ
 (

273 
IN
 
UINTN
 
Duøti⁄


287 
RETURN_STATUS


288 
EFIAPI


289 
S3BoŸS¸ùtSaveDi•©ch2
 (

290 
IN
 
VOID
 *
E¡ryPoöt
,

291 
IN
 
VOID
 *
C⁄ãxt


303 
RETURN_STATUS


304 
EFIAPI


305 
S3BoŸS¸ùtSaveDi•©ch
 (

306 
IN
 
VOID
 *
E¡ryPoöt


331 
RETURN_STATUS


332 
EFIAPI


333 
S3BoŸS¸ùtSaveMemPﬁl
 (

334 
IN
 
S3_BOOT_SCRIPT_LIB_WIDTH
 
Width
,

335 
IN
 
UINT64
 
Addªss
,

336 
IN
 
VOID
 *
BôMask
,

337 
IN
 
VOID
 *
BôVÆue
,

338 
IN
 
UINTN
 
Duøti⁄
,

339 
IN
 
UINT64
 
Lo›Times


354 
RETURN_STATUS


355 
EFIAPI


356 
S3BoŸS¸ùtSaveInf‹m©i⁄
 (

357 
IN
 
UINT32
 
Inf‹m©i⁄Lígth
,

358 
IN
 
VOID
 *
Inf‹m©i⁄


379 
RETURN_STATUS


380 
EFIAPI


381 
S3BoŸS¸ùtSaveIoPﬁl
 (

382 
IN
 
S3_BOOT_SCRIPT_LIB_WIDTH
 
Width
,

383 
IN
 
UINT64
 
Addªss
,

384 
IN
 
VOID
 *
D©a
,

385 
IN
 
VOID
 *
D©aMask
,

386 
IN
 
UINT64
 
Dñay


409 
RETURN_STATUS


410 
EFIAPI


411 
S3BoŸS¸ùtSavePciPﬁl
 (

412 
IN
 
S3_BOOT_SCRIPT_LIB_WIDTH
 
Width
,

413 
IN
 
UINT64
 
Addªss
,

414 
IN
 
VOID
 *
D©a
,

415 
IN
 
VOID
 *
D©aMask
,

416 
IN
 
UINT64
 
Dñay


444 
RETURN_STATUS


445 
EFIAPI


446 
S3BoŸS¸ùtSavePci2Pﬁl
 (

447 
IN
 
S3_BOOT_SCRIPT_LIB_WIDTH
 
Width
,

448 
IN
 
UINT16
 
Segmít
,

449 
IN
 
UINT64
 
Addªss
,

450 
IN
 
VOID
 *
D©a
,

451 
IN
 
VOID
 *
D©aMask
,

452 
IN
 
UINT64
 
Dñay


466 
RETURN_STATUS


467 
EFIAPI


468 
S3BoŸS¸ùtSaveInf‹m©i⁄AsciiSåög
 (

469 
IN
 
CONST
 
CHAR8
 *
Såög


496 
UINT8
*

497 
EFIAPI


498 
S3BoŸS¸ùtClo£TabÀ
 (

499 
VOID


509 
RETURN_STATUS


510 
EFIAPI


511 
S3BoŸS¸ùtExecuã
 (

512 
VOID


535 
RETURN_STATUS


536 
EFIAPI


537 
S3BoŸS¸ùtMoveLa°Opcode
 (

538 
IN
 
BOOLEAN
 
Bef‹eOrA·î
,

539 
IN
 
OUT
 
VOID
 **
Posôi⁄
 
OPTIONAL


565 
RETURN_STATUS


566 
EFIAPI


567 
S3BoŸS¸ùtLabñ
 (

568 
IN
 
BOOLEAN
 
Bef‹eOrA·î
,

569 
IN
 
BOOLEAN
 
Cª©eIfNŸFound
,

570 
IN
 
OUT
 
VOID
 **
Posôi⁄
 
OPTIONAL
,

571 
IN
 
CONST
 
CHAR8
 *
Labñ


587 
RETURN_STATUS


588 
EFIAPI


589 
S3BoŸS¸ùtCom∑ª
 (

590 
IN
 
UINT8
 *
Posôi⁄1
,

591 
IN
 
UINT8
 *
Posôi⁄2
,

592 
OUT
 
UINTN
 *
Rñ©ivePosôi⁄


	@S3IoLib.h

12 #i‚de‡
__S3_IO_LIB_H__


13 
	#__S3_IO_LIB_H__


	)

30 
UINT8


31 
EFIAPI


32 
S3IoRód8
 (

33 
IN
 
UINTN
 
P‹t


52 
UINT8


53 
EFIAPI


54 
S3IoWrôe8
 (

55 
IN
 
UINTN
 
P‹t
,

56 
IN
 
UINT8
 
VÆue


78 
UINT8


79 
EFIAPI


80 
S3IoOr8
 (

81 
IN
 
UINTN
 
P‹t
,

82 
IN
 
UINT8
 
OrD©a


104 
UINT8


105 
EFIAPI


106 
S3IoAnd8
 (

107 
IN
 
UINTN
 
P‹t
,

108 
IN
 
UINT8
 
AndD©a


132 
UINT8


133 
EFIAPI


134 
S3IoAndThíOr8
 (

135 
IN
 
UINTN
 
P‹t
,

136 
IN
 
UINT8
 
AndD©a
,

137 
IN
 
UINT8
 
OrD©a


161 
UINT8


162 
EFIAPI


163 
S3IoBôFõldRód8
 (

164 
IN
 
UINTN
 
P‹t
,

165 
IN
 
UINTN
 
SèπBô
,

166 
IN
 
UINTN
 
EndBô


194 
UINT8


195 
EFIAPI


196 
S3IoBôFõldWrôe8
 (

197 
IN
 
UINTN
 
P‹t
,

198 
IN
 
UINTN
 
SèπBô
,

199 
IN
 
UINTN
 
EndBô
,

200 
IN
 
UINT8
 
VÆue


230 
UINT8


231 
EFIAPI


232 
S3IoBôFõldOr8
 (

233 
IN
 
UINTN
 
P‹t
,

234 
IN
 
UINTN
 
SèπBô
,

235 
IN
 
UINTN
 
EndBô
,

236 
IN
 
UINT8
 
OrD©a


266 
UINT8


267 
EFIAPI


268 
S3IoBôFõldAnd8
 (

269 
IN
 
UINTN
 
P‹t
,

270 
IN
 
UINTN
 
SèπBô
,

271 
IN
 
UINTN
 
EndBô
,

272 
IN
 
UINT8
 
AndD©a


305 
UINT8


306 
EFIAPI


307 
S3IoBôFõldAndThíOr8
 (

308 
IN
 
UINTN
 
P‹t
,

309 
IN
 
UINTN
 
SèπBô
,

310 
IN
 
UINTN
 
EndBô
,

311 
IN
 
UINT8
 
AndD©a
,

312 
IN
 
UINT8
 
OrD©a


330 
UINT16


331 
EFIAPI


332 
S3IoRód16
 (

333 
IN
 
UINTN
 
P‹t


352 
UINT16


353 
EFIAPI


354 
S3IoWrôe16
 (

355 
IN
 
UINTN
 
P‹t
,

356 
IN
 
UINT16
 
VÆue


378 
UINT16


379 
EFIAPI


380 
S3IoOr16
 (

381 
IN
 
UINTN
 
P‹t
,

382 
IN
 
UINT16
 
OrD©a


404 
UINT16


405 
EFIAPI


406 
S3IoAnd16
 (

407 
IN
 
UINTN
 
P‹t
,

408 
IN
 
UINT16
 
AndD©a


432 
UINT16


433 
EFIAPI


434 
S3IoAndThíOr16
 (

435 
IN
 
UINTN
 
P‹t
,

436 
IN
 
UINT16
 
AndD©a
,

437 
IN
 
UINT16
 
OrD©a


461 
UINT16


462 
EFIAPI


463 
S3IoBôFõldRód16
 (

464 
IN
 
UINTN
 
P‹t
,

465 
IN
 
UINTN
 
SèπBô
,

466 
IN
 
UINTN
 
EndBô


494 
UINT16


495 
EFIAPI


496 
S3IoBôFõldWrôe16
 (

497 
IN
 
UINTN
 
P‹t
,

498 
IN
 
UINTN
 
SèπBô
,

499 
IN
 
UINTN
 
EndBô
,

500 
IN
 
UINT16
 
VÆue


530 
UINT16


531 
EFIAPI


532 
S3IoBôFõldOr16
 (

533 
IN
 
UINTN
 
P‹t
,

534 
IN
 
UINTN
 
SèπBô
,

535 
IN
 
UINTN
 
EndBô
,

536 
IN
 
UINT16
 
OrD©a


566 
UINT16


567 
EFIAPI


568 
S3IoBôFõldAnd16
 (

569 
IN
 
UINTN
 
P‹t
,

570 
IN
 
UINTN
 
SèπBô
,

571 
IN
 
UINTN
 
EndBô
,

572 
IN
 
UINT16
 
AndD©a


606 
UINT16


607 
EFIAPI


608 
S3IoBôFõldAndThíOr16
 (

609 
IN
 
UINTN
 
P‹t
,

610 
IN
 
UINTN
 
SèπBô
,

611 
IN
 
UINTN
 
EndBô
,

612 
IN
 
UINT16
 
AndD©a
,

613 
IN
 
UINT16
 
OrD©a


631 
UINT32


632 
EFIAPI


633 
S3IoRód32
 (

634 
IN
 
UINTN
 
P‹t


653 
UINT32


654 
EFIAPI


655 
S3IoWrôe32
 (

656 
IN
 
UINTN
 
P‹t
,

657 
IN
 
UINT32
 
VÆue


679 
UINT32


680 
EFIAPI


681 
S3IoOr32
 (

682 
IN
 
UINTN
 
P‹t
,

683 
IN
 
UINT32
 
OrD©a


705 
UINT32


706 
EFIAPI


707 
S3IoAnd32
 (

708 
IN
 
UINTN
 
P‹t
,

709 
IN
 
UINT32
 
AndD©a


733 
UINT32


734 
EFIAPI


735 
S3IoAndThíOr32
 (

736 
IN
 
UINTN
 
P‹t
,

737 
IN
 
UINT32
 
AndD©a
,

738 
IN
 
UINT32
 
OrD©a


762 
UINT32


763 
EFIAPI


764 
S3IoBôFõldRód32
 (

765 
IN
 
UINTN
 
P‹t
,

766 
IN
 
UINTN
 
SèπBô
,

767 
IN
 
UINTN
 
EndBô


795 
UINT32


796 
EFIAPI


797 
S3IoBôFõldWrôe32
 (

798 
IN
 
UINTN
 
P‹t
,

799 
IN
 
UINTN
 
SèπBô
,

800 
IN
 
UINTN
 
EndBô
,

801 
IN
 
UINT32
 
VÆue


831 
UINT32


832 
EFIAPI


833 
S3IoBôFõldOr32
 (

834 
IN
 
UINTN
 
P‹t
,

835 
IN
 
UINTN
 
SèπBô
,

836 
IN
 
UINTN
 
EndBô
,

837 
IN
 
UINT32
 
OrD©a


867 
UINT32


868 
EFIAPI


869 
S3IoBôFõldAnd32
 (

870 
IN
 
UINTN
 
P‹t
,

871 
IN
 
UINTN
 
SèπBô
,

872 
IN
 
UINTN
 
EndBô
,

873 
IN
 
UINT32
 
AndD©a


907 
UINT32


908 
EFIAPI


909 
S3IoBôFõldAndThíOr32
 (

910 
IN
 
UINTN
 
P‹t
,

911 
IN
 
UINTN
 
SèπBô
,

912 
IN
 
UINTN
 
EndBô
,

913 
IN
 
UINT32
 
AndD©a
,

914 
IN
 
UINT32
 
OrD©a


932 
UINT64


933 
EFIAPI


934 
S3IoRód64
 (

935 
IN
 
UINTN
 
P‹t


954 
UINT64


955 
EFIAPI


956 
S3IoWrôe64
 (

957 
IN
 
UINTN
 
P‹t
,

958 
IN
 
UINT64
 
VÆue


980 
UINT64


981 
EFIAPI


982 
S3IoOr64
 (

983 
IN
 
UINTN
 
P‹t
,

984 
IN
 
UINT64
 
OrD©a


1006 
UINT64


1007 
EFIAPI


1008 
S3IoAnd64
 (

1009 
IN
 
UINTN
 
P‹t
,

1010 
IN
 
UINT64
 
AndD©a


1034 
UINT64


1035 
EFIAPI


1036 
S3IoAndThíOr64
 (

1037 
IN
 
UINTN
 
P‹t
,

1038 
IN
 
UINT64
 
AndD©a
,

1039 
IN
 
UINT64
 
OrD©a


1063 
UINT64


1064 
EFIAPI


1065 
S3IoBôFõldRód64
 (

1066 
IN
 
UINTN
 
P‹t
,

1067 
IN
 
UINTN
 
SèπBô
,

1068 
IN
 
UINTN
 
EndBô


1096 
UINT64


1097 
EFIAPI


1098 
S3IoBôFõldWrôe64
 (

1099 
IN
 
UINTN
 
P‹t
,

1100 
IN
 
UINTN
 
SèπBô
,

1101 
IN
 
UINTN
 
EndBô
,

1102 
IN
 
UINT64
 
VÆue


1132 
UINT64


1133 
EFIAPI


1134 
S3IoBôFõldOr64
 (

1135 
IN
 
UINTN
 
P‹t
,

1136 
IN
 
UINTN
 
SèπBô
,

1137 
IN
 
UINTN
 
EndBô
,

1138 
IN
 
UINT64
 
OrD©a


1168 
UINT64


1169 
EFIAPI


1170 
S3IoBôFõldAnd64
 (

1171 
IN
 
UINTN
 
P‹t
,

1172 
IN
 
UINTN
 
SèπBô
,

1173 
IN
 
UINTN
 
EndBô
,

1174 
IN
 
UINT64
 
AndD©a


1208 
UINT64


1209 
EFIAPI


1210 
S3IoBôFõldAndThíOr64
 (

1211 
IN
 
UINTN
 
P‹t
,

1212 
IN
 
UINTN
 
SèπBô
,

1213 
IN
 
UINTN
 
EndBô
,

1214 
IN
 
UINT64
 
AndD©a
,

1215 
IN
 
UINT64
 
OrD©a


1233 
UINT8


1234 
EFIAPI


1235 
S3MmioRód8
 (

1236 
IN
 
UINTN
 
Addªss


1255 
UINT8


1256 
EFIAPI


1257 
S3MmioWrôe8
 (

1258 
IN
 
UINTN
 
Addªss
,

1259 
IN
 
UINT8
 
VÆue


1281 
UINT8


1282 
EFIAPI


1283 
S3MmioOr8
 (

1284 
IN
 
UINTN
 
Addªss
,

1285 
IN
 
UINT8
 
OrD©a


1307 
UINT8


1308 
EFIAPI


1309 
S3MmioAnd8
 (

1310 
IN
 
UINTN
 
Addªss
,

1311 
IN
 
UINT8
 
AndD©a


1335 
UINT8


1336 
EFIAPI


1337 
S3MmioAndThíOr8
 (

1338 
IN
 
UINTN
 
Addªss
,

1339 
IN
 
UINT8
 
AndD©a
,

1340 
IN
 
UINT8
 
OrD©a


1364 
UINT8


1365 
EFIAPI


1366 
S3MmioBôFõldRód8
 (

1367 
IN
 
UINTN
 
Addªss
,

1368 
IN
 
UINTN
 
SèπBô
,

1369 
IN
 
UINTN
 
EndBô


1396 
UINT8


1397 
EFIAPI


1398 
S3MmioBôFõldWrôe8
 (

1399 
IN
 
UINTN
 
Addªss
,

1400 
IN
 
UINTN
 
SèπBô
,

1401 
IN
 
UINTN
 
EndBô
,

1402 
IN
 
UINT8
 
VÆue


1433 
UINT8


1434 
EFIAPI


1435 
S3MmioBôFõldOr8
 (

1436 
IN
 
UINTN
 
Addªss
,

1437 
IN
 
UINTN
 
SèπBô
,

1438 
IN
 
UINTN
 
EndBô
,

1439 
IN
 
UINT8
 
OrD©a


1470 
UINT8


1471 
EFIAPI


1472 
S3MmioBôFõldAnd8
 (

1473 
IN
 
UINTN
 
Addªss
,

1474 
IN
 
UINTN
 
SèπBô
,

1475 
IN
 
UINTN
 
EndBô
,

1476 
IN
 
UINT8
 
AndD©a


1510 
UINT8


1511 
EFIAPI


1512 
S3MmioBôFõldAndThíOr8
 (

1513 
IN
 
UINTN
 
Addªss
,

1514 
IN
 
UINTN
 
SèπBô
,

1515 
IN
 
UINTN
 
EndBô
,

1516 
IN
 
UINT8
 
AndD©a
,

1517 
IN
 
UINT8
 
OrD©a


1535 
UINT16


1536 
EFIAPI


1537 
S3MmioRód16
 (

1538 
IN
 
UINTN
 
Addªss


1558 
UINT16


1559 
EFIAPI


1560 
S3MmioWrôe16
 (

1561 
IN
 
UINTN
 
Addªss
,

1562 
IN
 
UINT16
 
VÆue


1584 
UINT16


1585 
EFIAPI


1586 
S3MmioOr16
 (

1587 
IN
 
UINTN
 
Addªss
,

1588 
IN
 
UINT16
 
OrD©a


1610 
UINT16


1611 
EFIAPI


1612 
S3MmioAnd16
 (

1613 
IN
 
UINTN
 
Addªss
,

1614 
IN
 
UINT16
 
AndD©a


1638 
UINT16


1639 
EFIAPI


1640 
S3MmioAndThíOr16
 (

1641 
IN
 
UINTN
 
Addªss
,

1642 
IN
 
UINT16
 
AndD©a
,

1643 
IN
 
UINT16
 
OrD©a


1667 
UINT16


1668 
EFIAPI


1669 
S3MmioBôFõldRód16
 (

1670 
IN
 
UINTN
 
Addªss
,

1671 
IN
 
UINTN
 
SèπBô
,

1672 
IN
 
UINTN
 
EndBô


1699 
UINT16


1700 
EFIAPI


1701 
S3MmioBôFõldWrôe16
 (

1702 
IN
 
UINTN
 
Addªss
,

1703 
IN
 
UINTN
 
SèπBô
,

1704 
IN
 
UINTN
 
EndBô
,

1705 
IN
 
UINT16
 
VÆue


1736 
UINT16


1737 
EFIAPI


1738 
S3MmioBôFõldOr16
 (

1739 
IN
 
UINTN
 
Addªss
,

1740 
IN
 
UINTN
 
SèπBô
,

1741 
IN
 
UINTN
 
EndBô
,

1742 
IN
 
UINT16
 
OrD©a


1773 
UINT16


1774 
EFIAPI


1775 
S3MmioBôFõldAnd16
 (

1776 
IN
 
UINTN
 
Addªss
,

1777 
IN
 
UINTN
 
SèπBô
,

1778 
IN
 
UINTN
 
EndBô
,

1779 
IN
 
UINT16
 
AndD©a


1813 
UINT16


1814 
EFIAPI


1815 
S3MmioBôFõldAndThíOr16
 (

1816 
IN
 
UINTN
 
Addªss
,

1817 
IN
 
UINTN
 
SèπBô
,

1818 
IN
 
UINTN
 
EndBô
,

1819 
IN
 
UINT16
 
AndD©a
,

1820 
IN
 
UINT16
 
OrD©a


1838 
UINT32


1839 
EFIAPI


1840 
S3MmioRód32
 (

1841 
IN
 
UINTN
 
Addªss


1860 
UINT32


1861 
EFIAPI


1862 
S3MmioWrôe32
 (

1863 
IN
 
UINTN
 
Addªss
,

1864 
IN
 
UINT32
 
VÆue


1886 
UINT32


1887 
EFIAPI


1888 
S3MmioOr32
 (

1889 
IN
 
UINTN
 
Addªss
,

1890 
IN
 
UINT32
 
OrD©a


1912 
UINT32


1913 
EFIAPI


1914 
S3MmioAnd32
 (

1915 
IN
 
UINTN
 
Addªss
,

1916 
IN
 
UINT32
 
AndD©a


1940 
UINT32


1941 
EFIAPI


1942 
S3MmioAndThíOr32
 (

1943 
IN
 
UINTN
 
Addªss
,

1944 
IN
 
UINT32
 
AndD©a
,

1945 
IN
 
UINT32
 
OrD©a


1969 
UINT32


1970 
EFIAPI


1971 
S3MmioBôFõldRód32
 (

1972 
IN
 
UINTN
 
Addªss
,

1973 
IN
 
UINTN
 
SèπBô
,

1974 
IN
 
UINTN
 
EndBô


2001 
UINT32


2002 
EFIAPI


2003 
S3MmioBôFõldWrôe32
 (

2004 
IN
 
UINTN
 
Addªss
,

2005 
IN
 
UINTN
 
SèπBô
,

2006 
IN
 
UINTN
 
EndBô
,

2007 
IN
 
UINT32
 
VÆue


2038 
UINT32


2039 
EFIAPI


2040 
S3MmioBôFõldOr32
 (

2041 
IN
 
UINTN
 
Addªss
,

2042 
IN
 
UINTN
 
SèπBô
,

2043 
IN
 
UINTN
 
EndBô
,

2044 
IN
 
UINT32
 
OrD©a


2075 
UINT32


2076 
EFIAPI


2077 
S3MmioBôFõldAnd32
 (

2078 
IN
 
UINTN
 
Addªss
,

2079 
IN
 
UINTN
 
SèπBô
,

2080 
IN
 
UINTN
 
EndBô
,

2081 
IN
 
UINT32
 
AndD©a


2115 
UINT32


2116 
EFIAPI


2117 
S3MmioBôFõldAndThíOr32
 (

2118 
IN
 
UINTN
 
Addªss
,

2119 
IN
 
UINTN
 
SèπBô
,

2120 
IN
 
UINTN
 
EndBô
,

2121 
IN
 
UINT32
 
AndD©a
,

2122 
IN
 
UINT32
 
OrD©a


2140 
UINT64


2141 
EFIAPI


2142 
S3MmioRód64
 (

2143 
IN
 
UINTN
 
Addªss


2162 
UINT64


2163 
EFIAPI


2164 
S3MmioWrôe64
 (

2165 
IN
 
UINTN
 
Addªss
,

2166 
IN
 
UINT64
 
VÆue


2188 
UINT64


2189 
EFIAPI


2190 
S3MmioOr64
 (

2191 
IN
 
UINTN
 
Addªss
,

2192 
IN
 
UINT64
 
OrD©a


2214 
UINT64


2215 
EFIAPI


2216 
S3MmioAnd64
 (

2217 
IN
 
UINTN
 
Addªss
,

2218 
IN
 
UINT64
 
AndD©a


2242 
UINT64


2243 
EFIAPI


2244 
S3MmioAndThíOr64
 (

2245 
IN
 
UINTN
 
Addªss
,

2246 
IN
 
UINT64
 
AndD©a
,

2247 
IN
 
UINT64
 
OrD©a


2271 
UINT64


2272 
EFIAPI


2273 
S3MmioBôFõldRód64
 (

2274 
IN
 
UINTN
 
Addªss
,

2275 
IN
 
UINTN
 
SèπBô
,

2276 
IN
 
UINTN
 
EndBô


2303 
UINT64


2304 
EFIAPI


2305 
S3MmioBôFõldWrôe64
 (

2306 
IN
 
UINTN
 
Addªss
,

2307 
IN
 
UINTN
 
SèπBô
,

2308 
IN
 
UINTN
 
EndBô
,

2309 
IN
 
UINT64
 
VÆue


2340 
UINT64


2341 
EFIAPI


2342 
S3MmioBôFõldOr64
 (

2343 
IN
 
UINTN
 
Addªss
,

2344 
IN
 
UINTN
 
SèπBô
,

2345 
IN
 
UINTN
 
EndBô
,

2346 
IN
 
UINT64
 
OrD©a


2377 
UINT64


2378 
EFIAPI


2379 
S3MmioBôFõldAnd64
 (

2380 
IN
 
UINTN
 
Addªss
,

2381 
IN
 
UINTN
 
SèπBô
,

2382 
IN
 
UINTN
 
EndBô
,

2383 
IN
 
UINT64
 
AndD©a


2417 
UINT64


2418 
EFIAPI


2419 
S3MmioBôFõldAndThíOr64
 (

2420 
IN
 
UINTN
 
Addªss
,

2421 
IN
 
UINTN
 
SèπBô
,

2422 
IN
 
UINTN
 
EndBô
,

2423 
IN
 
UINT64
 
AndD©a
,

2424 
IN
 
UINT64
 
OrD©a


2446 
UINT8
 *

2447 
EFIAPI


2448 
S3MmioRódBuf„r8
 (

2449 
IN
 
UINTN
 
SèπAddªss
,

2450 
IN
 
UINTN
 
Lígth
,

2451 
OUT
 
UINT8
 *
Buf„r


2477 
UINT16
 *

2478 
EFIAPI


2479 
S3MmioRódBuf„r16
 (

2480 
IN
 
UINTN
 
SèπAddªss
,

2481 
IN
 
UINTN
 
Lígth
,

2482 
OUT
 
UINT16
 *
Buf„r


2508 
UINT32
 *

2509 
EFIAPI


2510 
S3MmioRódBuf„r32
 (

2511 
IN
 
UINTN
 
SèπAddªss
,

2512 
IN
 
UINTN
 
Lígth
,

2513 
OUT
 
UINT32
 *
Buf„r


2539 
UINT64
 *

2540 
EFIAPI


2541 
S3MmioRódBuf„r64
 (

2542 
IN
 
UINTN
 
SèπAddªss
,

2543 
IN
 
UINTN
 
Lígth
,

2544 
OUT
 
UINT64
 *
Buf„r


2566 
UINT8
 *

2567 
EFIAPI


2568 
S3MmioWrôeBuf„r8
 (

2569 
IN
 
UINTN
 
SèπAddªss
,

2570 
IN
 
UINTN
 
Lígth
,

2571 
IN
 
CONST
 
UINT8
 *
Buf„r


2598 
UINT16
 *

2599 
EFIAPI


2600 
S3MmioWrôeBuf„r16
 (

2601 
IN
 
UINTN
 
SèπAddªss
,

2602 
IN
 
UINTN
 
Lígth
,

2603 
IN
 
CONST
 
UINT16
 *
Buf„r


2630 
UINT32
 *

2631 
EFIAPI


2632 
S3MmioWrôeBuf„r32
 (

2633 
IN
 
UINTN
 
SèπAddªss
,

2634 
IN
 
UINTN
 
Lígth
,

2635 
IN
 
CONST
 
UINT32
 *
Buf„r


2662 
UINT64
 *

2663 
EFIAPI


2664 
S3MmioWrôeBuf„r64
 (

2665 
IN
 
UINTN
 
SèπAddªss
,

2666 
IN
 
UINTN
 
Lígth
,

2667 
IN
 
CONST
 
UINT64
 *
Buf„r


	@S3PciLib.h

12 #i‚de‡
__S3_PCI_LIB_H__


13 
	#__S3_PCI_LIB_H__


	)

28 
	#S3_PCI_LIB_ADDRESS
(
Bus
,
Devi˚
,
Fun˘i⁄
,
Regi°î
Ë\

	)

29 (((
	gRegi°î
Ë& 0xfffË| (((
	gFun˘i⁄
Ë& 0x07Ë<< 12Ë| (((
	gDevi˚
Ë& 0x1fË<< 15Ë| (((
	gBus
) & 0xff) << 20))

46 
UINT8


47 
EFIAPI


48 
S3PciRód8
 (

49 
IN
 
UINTN
 
Addªss


69 
UINT8


70 
EFIAPI


71 
S3PciWrôe8
 (

72 
IN
 
UINTN
 
Addªss
,

73 
IN
 
UINT8
 
VÆue


96 
UINT8


97 
EFIAPI


98 
S3PciOr8
 (

99 
IN
 
UINTN
 
Addªss
,

100 
IN
 
UINT8
 
OrD©a


123 
UINT8


124 
EFIAPI


125 
S3PciAnd8
 (

126 
IN
 
UINTN
 
Addªss
,

127 
IN
 
UINT8
 
AndD©a


153 
UINT8


154 
EFIAPI


155 
S3PciAndThíOr8
 (

156 
IN
 
UINTN
 
Addªss
,

157 
IN
 
UINT8
 
AndD©a
,

158 
IN
 
UINT8
 
OrD©a


183 
UINT8


184 
EFIAPI


185 
S3PciBôFõldRód8
 (

186 
IN
 
UINTN
 
Addªss
,

187 
IN
 
UINTN
 
SèπBô
,

188 
IN
 
UINTN
 
EndBô


216 
UINT8


217 
EFIAPI


218 
S3PciBôFõldWrôe8
 (

219 
IN
 
UINTN
 
Addªss
,

220 
IN
 
UINTN
 
SèπBô
,

221 
IN
 
UINTN
 
EndBô
,

222 
IN
 
UINT8
 
VÆue


253 
UINT8


254 
EFIAPI


255 
S3PciBôFõldOr8
 (

256 
IN
 
UINTN
 
Addªss
,

257 
IN
 
UINTN
 
SèπBô
,

258 
IN
 
UINTN
 
EndBô
,

259 
IN
 
UINT8
 
OrD©a


290 
UINT8


291 
EFIAPI


292 
S3PciBôFõldAnd8
 (

293 
IN
 
UINTN
 
Addªss
,

294 
IN
 
UINTN
 
SèπBô
,

295 
IN
 
UINTN
 
EndBô
,

296 
IN
 
UINT8
 
AndD©a


330 
UINT8


331 
EFIAPI


332 
S3PciBôFõldAndThíOr8
 (

333 
IN
 
UINTN
 
Addªss
,

334 
IN
 
UINTN
 
SèπBô
,

335 
IN
 
UINTN
 
EndBô
,

336 
IN
 
UINT8
 
AndD©a
,

337 
IN
 
UINT8
 
OrD©a


357 
UINT16


358 
EFIAPI


359 
S3PciRód16
 (

360 
IN
 
UINTN
 
Addªss


381 
UINT16


382 
EFIAPI


383 
S3PciWrôe16
 (

384 
IN
 
UINTN
 
Addªss
,

385 
IN
 
UINT16
 
VÆue


409 
UINT16


410 
EFIAPI


411 
S3PciOr16
 (

412 
IN
 
UINTN
 
Addªss
,

413 
IN
 
UINT16
 
OrD©a


437 
UINT16


438 
EFIAPI


439 
S3PciAnd16
 (

440 
IN
 
UINTN
 
Addªss
,

441 
IN
 
UINT16
 
AndD©a


468 
UINT16


469 
EFIAPI


470 
S3PciAndThíOr16
 (

471 
IN
 
UINTN
 
Addªss
,

472 
IN
 
UINT16
 
AndD©a
,

473 
IN
 
UINT16
 
OrD©a


499 
UINT16


500 
EFIAPI


501 
S3PciBôFõldRód16
 (

502 
IN
 
UINTN
 
Addªss
,

503 
IN
 
UINTN
 
SèπBô
,

504 
IN
 
UINTN
 
EndBô


533 
UINT16


534 
EFIAPI


535 
S3PciBôFõldWrôe16
 (

536 
IN
 
UINTN
 
Addªss
,

537 
IN
 
UINTN
 
SèπBô
,

538 
IN
 
UINTN
 
EndBô
,

539 
IN
 
UINT16
 
VÆue


571 
UINT16


572 
EFIAPI


573 
S3PciBôFõldOr16
 (

574 
IN
 
UINTN
 
Addªss
,

575 
IN
 
UINTN
 
SèπBô
,

576 
IN
 
UINTN
 
EndBô
,

577 
IN
 
UINT16
 
OrD©a


609 
UINT16


610 
EFIAPI


611 
S3PciBôFõldAnd16
 (

612 
IN
 
UINTN
 
Addªss
,

613 
IN
 
UINTN
 
SèπBô
,

614 
IN
 
UINTN
 
EndBô
,

615 
IN
 
UINT16
 
AndD©a


650 
UINT16


651 
EFIAPI


652 
S3PciBôFõldAndThíOr16
 (

653 
IN
 
UINTN
 
Addªss
,

654 
IN
 
UINTN
 
SèπBô
,

655 
IN
 
UINTN
 
EndBô
,

656 
IN
 
UINT16
 
AndD©a
,

657 
IN
 
UINT16
 
OrD©a


677 
UINT32


678 
EFIAPI


679 
S3PciRód32
 (

680 
IN
 
UINTN
 
Addªss


701 
UINT32


702 
EFIAPI


703 
S3PciWrôe32
 (

704 
IN
 
UINTN
 
Addªss
,

705 
IN
 
UINT32
 
VÆue


729 
UINT32


730 
EFIAPI


731 
S3PciOr32
 (

732 
IN
 
UINTN
 
Addªss
,

733 
IN
 
UINT32
 
OrD©a


757 
UINT32


758 
EFIAPI


759 
S3PciAnd32
 (

760 
IN
 
UINTN
 
Addªss
,

761 
IN
 
UINT32
 
AndD©a


788 
UINT32


789 
EFIAPI


790 
S3PciAndThíOr32
 (

791 
IN
 
UINTN
 
Addªss
,

792 
IN
 
UINT32
 
AndD©a
,

793 
IN
 
UINT32
 
OrD©a


819 
UINT32


820 
EFIAPI


821 
S3PciBôFõldRód32
 (

822 
IN
 
UINTN
 
Addªss
,

823 
IN
 
UINTN
 
SèπBô
,

824 
IN
 
UINTN
 
EndBô


853 
UINT32


854 
EFIAPI


855 
S3PciBôFõldWrôe32
 (

856 
IN
 
UINTN
 
Addªss
,

857 
IN
 
UINTN
 
SèπBô
,

858 
IN
 
UINTN
 
EndBô
,

859 
IN
 
UINT32
 
VÆue


891 
UINT32


892 
EFIAPI


893 
S3PciBôFõldOr32
 (

894 
IN
 
UINTN
 
Addªss
,

895 
IN
 
UINTN
 
SèπBô
,

896 
IN
 
UINTN
 
EndBô
,

897 
IN
 
UINT32
 
OrD©a


929 
UINT32


930 
EFIAPI


931 
S3PciBôFõldAnd32
 (

932 
IN
 
UINTN
 
Addªss
,

933 
IN
 
UINTN
 
SèπBô
,

934 
IN
 
UINTN
 
EndBô
,

935 
IN
 
UINT32
 
AndD©a


970 
UINT32


971 
EFIAPI


972 
S3PciBôFõldAndThíOr32
 (

973 
IN
 
UINTN
 
Addªss
,

974 
IN
 
UINTN
 
SèπBô
,

975 
IN
 
UINTN
 
EndBô
,

976 
IN
 
UINT32
 
AndD©a
,

977 
IN
 
UINT32
 
OrD©a


1004 
UINTN


1005 
EFIAPI


1006 
S3PciRódBuf„r
 (

1007 
IN
 
UINTN
 
SèπAddªss
,

1008 
IN
 
UINTN
 
Size
,

1009 
OUT
 
VOID
 *
Buf„r


1037 
UINTN


1038 
EFIAPI


1039 
S3PciWrôeBuf„r
 (

1040 
IN
 
UINTN
 
SèπAddªss
,

1041 
IN
 
UINTN
 
Size
,

1042 
IN
 
VOID
 *
Buf„r


	@S3PciSegmentLib.h

11 #i‚de‡
__S3_PCI_SEGMENT_LIB__


12 
	#__S3_PCI_SEGMENT_LIB__


	)

32 
	#S3_PCI_SEGMENT_LIB_ADDRESS
(
Segmít
,
Bus
,
Devi˚
,
Fun˘i⁄
,
Regi°î
Ë\

	)

33 ((
	gSegmít
 != 0) ? \

34 –((
Regi°î
) & 0xfff) | \

35 (((
Fun˘i⁄
) & 0x07) << 12) | \

36 (((
Devi˚
) & 0x1f) << 15) | \

37 (((
Bus
) & 0xff) << 20) | \

38 (
LShi·U64
 ((
Segmít
) & 0xffff, 32)) \

40 –((
Regi°î
) & 0xfff) | \

41 (((
Fun˘i⁄
) & 0x07) << 12) | \

42 (((
Devi˚
) & 0x1f) << 15) | \

43 (((
Bus
) & 0xff) << 20) \

61 
UINT8


62 
EFIAPI


63 
S3PciSegmítRód8
 (

64 
IN
 
UINT64
 
Addªss


82 
UINT8


83 
EFIAPI


84 
S3PciSegmítWrôe8
 (

85 
IN
 
UINT64
 
Addªss
,

86 
IN
 
UINT8
 
VÆue


107 
UINT8


108 
EFIAPI


109 
S3PciSegmítOr8
 (

110 
IN
 
UINT64
 
Addªss
,

111 
IN
 
UINT8
 
OrD©a


131 
UINT8


132 
EFIAPI


133 
S3PciSegmítAnd8
 (

134 
IN
 
UINT64
 
Addªss
,

135 
IN
 
UINT8
 
AndD©a


159 
UINT8


160 
EFIAPI


161 
S3PciSegmítAndThíOr8
 (

162 
IN
 
UINT64
 
Addªss
,

163 
IN
 
UINT8
 
AndD©a
,

164 
IN
 
UINT8
 
OrD©a


189 
UINT8


190 
EFIAPI


191 
S3PciSegmítBôFõldRód8
 (

192 
IN
 
UINT64
 
Addªss
,

193 
IN
 
UINTN
 
SèπBô
,

194 
IN
 
UINTN
 
EndBô


222 
UINT8


223 
EFIAPI


224 
S3PciSegmítBôFõldWrôe8
 (

225 
IN
 
UINT64
 
Addªss
,

226 
IN
 
UINTN
 
SèπBô
,

227 
IN
 
UINTN
 
EndBô
,

228 
IN
 
UINT8
 
VÆue


259 
UINT8


260 
EFIAPI


261 
S3PciSegmítBôFõldOr8
 (

262 
IN
 
UINT64
 
Addªss
,

263 
IN
 
UINTN
 
SèπBô
,

264 
IN
 
UINTN
 
EndBô
,

265 
IN
 
UINT8
 
OrD©a


296 
UINT8


297 
EFIAPI


298 
S3PciSegmítBôFõldAnd8
 (

299 
IN
 
UINT64
 
Addªss
,

300 
IN
 
UINTN
 
SèπBô
,

301 
IN
 
UINTN
 
EndBô
,

302 
IN
 
UINT8
 
AndD©a


336 
UINT8


337 
EFIAPI


338 
S3PciSegmítBôFõldAndThíOr8
 (

339 
IN
 
UINT64
 
Addªss
,

340 
IN
 
UINTN
 
SèπBô
,

341 
IN
 
UINTN
 
EndBô
,

342 
IN
 
UINT8
 
AndD©a
,

343 
IN
 
UINT8
 
OrD©a


361 
UINT16


362 
EFIAPI


363 
S3PciSegmítRód16
 (

364 
IN
 
UINT64
 
Addªss


383 
UINT16


384 
EFIAPI


385 
S3PciSegmítWrôe16
 (

386 
IN
 
UINT64
 
Addªss
,

387 
IN
 
UINT16
 
VÆue


410 
UINT16


411 
EFIAPI


412 
S3PciSegmítOr16
 (

413 
IN
 
UINT64
 
Addªss
,

414 
IN
 
UINT16
 
OrD©a


436 
UINT16


437 
EFIAPI


438 
S3PciSegmítAnd16
 (

439 
IN
 
UINT64
 
Addªss
,

440 
IN
 
UINT16
 
AndD©a


465 
UINT16


466 
EFIAPI


467 
S3PciSegmítAndThíOr16
 (

468 
IN
 
UINT64
 
Addªss
,

469 
IN
 
UINT16
 
AndD©a
,

470 
IN
 
UINT16
 
OrD©a


496 
UINT16


497 
EFIAPI


498 
S3PciSegmítBôFõldRód16
 (

499 
IN
 
UINT64
 
Addªss
,

500 
IN
 
UINTN
 
SèπBô
,

501 
IN
 
UINTN
 
EndBô


530 
UINT16


531 
EFIAPI


532 
S3PciSegmítBôFõldWrôe16
 (

533 
IN
 
UINT64
 
Addªss
,

534 
IN
 
UINTN
 
SèπBô
,

535 
IN
 
UINTN
 
EndBô
,

536 
IN
 
UINT16
 
VÆue


568 
UINT16


569 
EFIAPI


570 
S3PciSegmítBôFõldOr16
 (

571 
IN
 
UINT64
 
Addªss
,

572 
IN
 
UINTN
 
SèπBô
,

573 
IN
 
UINTN
 
EndBô
,

574 
IN
 
UINT16
 
OrD©a


606 
UINT16


607 
EFIAPI


608 
S3PciSegmítBôFõldAnd16
 (

609 
IN
 
UINT64
 
Addªss
,

610 
IN
 
UINTN
 
SèπBô
,

611 
IN
 
UINTN
 
EndBô
,

612 
IN
 
UINT16
 
AndD©a


646 
UINT16


647 
EFIAPI


648 
S3PciSegmítBôFõldAndThíOr16
 (

649 
IN
 
UINT64
 
Addªss
,

650 
IN
 
UINTN
 
SèπBô
,

651 
IN
 
UINTN
 
EndBô
,

652 
IN
 
UINT16
 
AndD©a
,

653 
IN
 
UINT16
 
OrD©a


671 
UINT32


672 
EFIAPI


673 
S3PciSegmítRód32
 (

674 
IN
 
UINT64
 
Addªss


693 
UINT32


694 
EFIAPI


695 
S3PciSegmítWrôe32
 (

696 
IN
 
UINT64
 
Addªss
,

697 
IN
 
UINT32
 
VÆue


720 
UINT32


721 
EFIAPI


722 
S3PciSegmítOr32
 (

723 
IN
 
UINT64
 
Addªss
,

724 
IN
 
UINT32
 
OrD©a


746 
UINT32


747 
EFIAPI


748 
S3PciSegmítAnd32
 (

749 
IN
 
UINT64
 
Addªss
,

750 
IN
 
UINT32
 
AndD©a


775 
UINT32


776 
EFIAPI


777 
S3PciSegmítAndThíOr32
 (

778 
IN
 
UINT64
 
Addªss
,

779 
IN
 
UINT32
 
AndD©a
,

780 
IN
 
UINT32
 
OrD©a


806 
UINT32


807 
EFIAPI


808 
S3PciSegmítBôFõldRód32
 (

809 
IN
 
UINT64
 
Addªss
,

810 
IN
 
UINTN
 
SèπBô
,

811 
IN
 
UINTN
 
EndBô


840 
UINT32


841 
EFIAPI


842 
S3PciSegmítBôFõldWrôe32
 (

843 
IN
 
UINT64
 
Addªss
,

844 
IN
 
UINTN
 
SèπBô
,

845 
IN
 
UINTN
 
EndBô
,

846 
IN
 
UINT32
 
VÆue


878 
UINT32


879 
EFIAPI


880 
S3PciSegmítBôFõldOr32
 (

881 
IN
 
UINT64
 
Addªss
,

882 
IN
 
UINTN
 
SèπBô
,

883 
IN
 
UINTN
 
EndBô
,

884 
IN
 
UINT32
 
OrD©a


916 
UINT32


917 
EFIAPI


918 
S3PciSegmítBôFõldAnd32
 (

919 
IN
 
UINT64
 
Addªss
,

920 
IN
 
UINTN
 
SèπBô
,

921 
IN
 
UINTN
 
EndBô
,

922 
IN
 
UINT32
 
AndD©a


956 
UINT32


957 
EFIAPI


958 
S3PciSegmítBôFõldAndThíOr32
 (

959 
IN
 
UINT64
 
Addªss
,

960 
IN
 
UINTN
 
SèπBô
,

961 
IN
 
UINTN
 
EndBô
,

962 
IN
 
UINT32
 
AndD©a
,

963 
IN
 
UINT32
 
OrD©a


990 
UINTN


991 
EFIAPI


992 
S3PciSegmítRódBuf„r
 (

993 
IN
 
UINT64
 
SèπAddªss
,

994 
IN
 
UINTN
 
Size
,

995 
OUT
 
VOID
 *
Buf„r


1023 
UINTN


1024 
EFIAPI


1025 
S3PciSegmítWrôeBuf„r
 (

1026 
IN
 
UINT64
 
SèπAddªss
,

1027 
IN
 
UINTN
 
Size
,

1028 
IN
 
VOID
 *
Buf„r


	@S3SmbusLib.h

12 #i‚de‡
__S3_SMBUS_LIB_H__


13 
	#__S3_SMBUS_LIB_H__


	)

40 
VOID


41 
EFIAPI


42 
S3SmBusQuickRód
 (

43 
IN
 
UINTN
 
SmBusAddªss
,

44 
OUT
 
RETURN_STATUS
 *
Sètus
 
OPTIONAL


72 
VOID


73 
EFIAPI


74 
S3SmBusQuickWrôe
 (

75 
IN
 
UINTN
 
SmBusAddªss
,

76 
OUT
 
RETURN_STATUS
 *
Sètus
 
OPTIONAL


107 
UINT8


108 
EFIAPI


109 
S3SmBusRe˚iveByã
 (

110 
IN
 
UINTN
 
SmBusAddªss
,

111 
OUT
 
RETURN_STATUS
 *
Sètus
 
OPTIONAL


143 
UINT8


144 
EFIAPI


145 
S3SmBusSídByã
 (

146 
IN
 
UINTN
 
SmBusAddªss
,

147 
IN
 
UINT8
 
VÆue
,

148 
OUT
 
RETURN_STATUS
 *
Sètus
 
OPTIONAL


178 
UINT8


179 
EFIAPI


180 
S3SmBusRódD©aByã
 (

181 
IN
 
UINTN
 
SmBusAddªss
,

182 
OUT
 
RETURN_STATUS
 *
Sètus
 
OPTIONAL


214 
UINT8


215 
EFIAPI


216 
S3SmBusWrôeD©aByã
 (

217 
IN
 
UINTN
 
SmBusAddªss
,

218 
IN
 
UINT8
 
VÆue
,

219 
OUT
 
RETURN_STATUS
 *
Sètus
 
OPTIONAL


249 
UINT16


250 
EFIAPI


251 
S3SmBusRódD©aW‹d
 (

252 
IN
 
UINTN
 
SmBusAddªss
,

253 
OUT
 
RETURN_STATUS
 *
Sètus
 
OPTIONAL


285 
UINT16


286 
EFIAPI


287 
S3SmBusWrôeD©aW‹d
 (

288 
IN
 
UINTN
 
SmBusAddªss
,

289 
IN
 
UINT16
 
VÆue
,

290 
OUT
 
RETURN_STATUS
 *
Sètus
 
OPTIONAL


322 
UINT16


323 
EFIAPI


324 
S3SmBusPro˚ssCÆl
 (

325 
IN
 
UINTN
 
SmBusAddªss
,

326 
IN
 
UINT16
 
VÆue
,

327 
OUT
 
RETURN_STATUS
 *
Sètus
 
OPTIONAL


362 
UINTN


363 
EFIAPI


364 
S3SmBusRódBlock
 (

365 
IN
 
UINTN
 
SmBusAddªss
,

366 
OUT
 
VOID
 *
Buf„r
,

367 
OUT
 
RETURN_STATUS
 *
Sètus
 
OPTIONAL


399 
UINTN


400 
EFIAPI


401 
S3SmBusWrôeBlock
 (

402 
IN
 
UINTN
 
SmBusAddªss
,

403 
OUT
 
VOID
 *
Buf„r
,

404 
OUT
 
RETURN_STATUS
 *
Sètus
 
OPTIONAL


439 
UINTN


440 
EFIAPI


441 
S3SmBusBlockPro˚ssCÆl
 (

442 
IN
 
UINTN
 
SmBusAddªss
,

443 
IN
 
VOID
 *
WrôeBuf„r
,

444 
OUT
 
VOID
 *
RódBuf„r
,

445 
OUT
 
RETURN_STATUS
 *
Sètus
 
OPTIONAL


	@S3StallLib.h

12 #i‚de‡
__S3_STALL_LIB_H__


13 
	#__S3_STALL_LIB_H__


	)

26 
UINTN


27 
EFIAPI


28 
S3SèŒ
 (

29 
IN
 
UINTN
 
Mi¸oSec⁄ds


	@SafeIntLib.h

11 #i‚de‡
__INT_SAFE_LIB_H__


12 
	#__INT_SAFE_LIB_H__


	)

17 
	#INT8_ERROR
 ((
INT8
Ë-1)

	)

18 
	#UINT8_ERROR
 
MAX_UINT8


	)

19 
	#CHAR8_ERROR
 ((
CHAR8
)(
MAX_INT8
))

	)

20 
	#INT16_ERROR
 ((
INT16
Ë-1)

	)

21 
	#UINT16_ERROR
 
MAX_UINT16


	)

22 
	#CHAR16_ERROR
 
MAX_UINT16


	)

23 
	#INT32_ERROR
 ((
INT32
Ë-1)

	)

24 
	#UINT32_ERROR
 
MAX_UINT32


	)

25 
	#INT64_ERROR
 ((
INT64
Ë-1)

	)

26 
	#UINT64_ERROR
 
MAX_UINT64


	)

27 
	#INTN_ERROR
 ((
INTN
Ë-1)

	)

28 
	#UINTN_ERROR
 
MAX_UINTN


	)

34 
	#Sa„I¡8ToCh¨16
 
Sa„I¡8ToUöt16


	)

35 
	#Sa„I¡16ToCh¨16
 
Sa„I¡16ToUöt16


	)

36 
	#Sa„I¡32ToCh¨16
 
Sa„I¡32ToUöt16


	)

37 
	#Sa„Uöt32ToCh¨16
 
Sa„Uöt32ToUöt16


	)

38 
	#Sa„I¡64ToCh¨16
 
Sa„I¡64ToUöt16


	)

39 
	#Sa„Uöt64ToCh¨16
 
Sa„Uöt64ToUöt16


	)

40 
	#Sa„I¡nToCh¨16
 
Sa„I¡nToUöt16


	)

41 
	#Sa„UöäToCh¨16
 
Sa„UöäToUöt16


	)

43 
	#Sa„Ch¨16ToI¡8
 
Sa„Uöt16ToI¡8


	)

44 
	#Sa„Ch¨16ToUöt8
 
Sa„Uöt16ToUöt8


	)

45 
	#Sa„Ch¨16ToCh¨8
 
Sa„Uöt16ToCh¨8


	)

46 
	#Sa„Ch¨16ToI¡16
 
Sa„Uöt16ToI¡16


	)

48 
	#Sa„Ch¨16Mu…
 
Sa„Uöt16Mu…


	)

49 
	#Sa„Ch¨16Sub
 
Sa„Uöt16Sub


	)

50 
	#Sa„Ch¨16Add
 
Sa„Uöt16Add


	)

87 
RETURN_STATUS


88 
EFIAPI


89 
Sa„I¡8ToUöt8
 (

90 
IN
 
INT8
 
O≥ønd
,

91 
OUT
 
UINT8
 *
Resu…


114 
RETURN_STATUS


115 
EFIAPI


116 
Sa„I¡8ToCh¨8
 (

117 
IN
 
INT8
 
O≥ønd
,

118 
OUT
 
CHAR8
 *
Resu…


141 
RETURN_STATUS


142 
EFIAPI


143 
Sa„I¡8ToUöt16
 (

144 
IN
 
INT8
 
O≥ønd
,

145 
OUT
 
UINT16
 *
Resu…


168 
RETURN_STATUS


169 
EFIAPI


170 
Sa„I¡8ToUöt32
 (

171 
IN
 
INT8
 
O≥ønd
,

172 
OUT
 
UINT32
 *
Resu…


195 
RETURN_STATUS


196 
EFIAPI


197 
Sa„I¡8ToUöä
 (

198 
IN
 
INT8
 
O≥ønd
,

199 
OUT
 
UINTN
 *
Resu…


222 
RETURN_STATUS


223 
EFIAPI


224 
Sa„I¡8ToUöt64
 (

225 
IN
 
INT8
 
O≥ønd
,

226 
OUT
 
UINT64
 *
Resu…


249 
RETURN_STATUS


250 
EFIAPI


251 
Sa„Uöt8ToI¡8
 (

252 
IN
 
UINT8
 
O≥ønd
,

253 
OUT
 
INT8
 *
Resu…


276 
RETURN_STATUS


277 
EFIAPI


278 
Sa„Uöt8ToCh¨8
 (

279 
IN
 
UINT8
 
O≥ønd
,

280 
OUT
 
CHAR8
 *
Resu…


303 
RETURN_STATUS


304 
EFIAPI


305 
Sa„I¡16ToI¡8
 (

306 
IN
 
INT16
 
O≥ønd
,

307 
OUT
 
INT8
 *
Resu…


330 
RETURN_STATUS


331 
EFIAPI


332 
Sa„I¡16ToCh¨8
 (

333 
IN
 
INT16
 
O≥ønd
,

334 
OUT
 
CHAR8
 *
Resu…


357 
RETURN_STATUS


358 
EFIAPI


359 
Sa„I¡16ToUöt8
 (

360 
IN
 
INT16
 
O≥ønd
,

361 
OUT
 
UINT8
 *
Resu…


384 
RETURN_STATUS


385 
EFIAPI


386 
Sa„I¡16ToUöt16
 (

387 
IN
 
INT16
 
O≥ønd
,

388 
OUT
 
UINT16
 *
Resu…


411 
RETURN_STATUS


412 
EFIAPI


413 
Sa„I¡16ToUöt32
 (

414 
IN
 
INT16
 
O≥ønd
,

415 
OUT
 
UINT32
 *
Resu…


438 
RETURN_STATUS


439 
EFIAPI


440 
Sa„I¡16ToUöä
 (

441 
IN
 
INT16
 
O≥ønd
,

442 
OUT
 
UINTN
 *
Resu…


465 
RETURN_STATUS


466 
EFIAPI


467 
Sa„I¡16ToUöt64
 (

468 
IN
 
INT16
 
O≥ønd
,

469 
OUT
 
UINT64
 *
Resu…


492 
RETURN_STATUS


493 
EFIAPI


494 
Sa„Uöt16ToI¡8
 (

495 
IN
 
UINT16
 
O≥ønd
,

496 
OUT
 
INT8
 *
Resu…


519 
RETURN_STATUS


520 
EFIAPI


521 
Sa„Uöt16ToCh¨8
 (

522 
IN
 
UINT16
 
O≥ønd
,

523 
OUT
 
CHAR8
 *
Resu…


546 
RETURN_STATUS


547 
EFIAPI


548 
Sa„Uöt16ToUöt8
 (

549 
IN
 
UINT16
 
O≥ønd
,

550 
OUT
 
UINT8
 *
Resu…


573 
RETURN_STATUS


574 
EFIAPI


575 
Sa„Uöt16ToI¡16
 (

576 
IN
 
UINT16
 
O≥ønd
,

577 
OUT
 
INT16
 *
Resu…


600 
RETURN_STATUS


601 
EFIAPI


602 
Sa„I¡32ToI¡8
 (

603 
IN
 
INT32
 
O≥ønd
,

604 
OUT
 
INT8
 *
Resu…


627 
RETURN_STATUS


628 
EFIAPI


629 
Sa„I¡32ToCh¨8
 (

630 
IN
 
INT32
 
O≥ønd
,

631 
OUT
 
CHAR8
 *
Resu…


654 
RETURN_STATUS


655 
EFIAPI


656 
Sa„I¡32ToUöt8
 (

657 
IN
 
INT32
 
O≥ønd
,

658 
OUT
 
UINT8
 *
Resu…


681 
RETURN_STATUS


682 
EFIAPI


683 
Sa„I¡32ToI¡16
 (

684 
IN
 
INT32
 
O≥ønd
,

685 
OUT
 
INT16
 *
Resu…


708 
RETURN_STATUS


709 
EFIAPI


710 
Sa„I¡32ToUöt16
 (

711 
IN
 
INT32
 
O≥ønd
,

712 
OUT
 
UINT16
 *
Resu…


736 
RETURN_STATUS


737 
EFIAPI


738 
Sa„I¡32ToUöt32
 (

739 
IN
 
INT32
 
O≥ønd
,

740 
OUT
 
UINT32
 *
Resu…


763 
RETURN_STATUS


764 
EFIAPI


765 
Sa„I¡32ToUöä
 (

766 
IN
 
INT32
 
O≥ønd
,

767 
OUT
 
UINTN
 *
Resu…


790 
RETURN_STATUS


791 
EFIAPI


792 
Sa„I¡32ToUöt64
 (

793 
IN
 
INT32
 
O≥ønd
,

794 
OUT
 
UINT64
 *
Resu…


817 
RETURN_STATUS


818 
EFIAPI


819 
Sa„Uöt32ToI¡8
 (

820 
IN
 
UINT32
 
O≥ønd
,

821 
OUT
 
INT8
 *
Resu…


844 
RETURN_STATUS


845 
EFIAPI


846 
Sa„Uöt32ToCh¨8
 (

847 
IN
 
UINT32
 
O≥ønd
,

848 
OUT
 
CHAR8
 *
Resu…


871 
RETURN_STATUS


872 
EFIAPI


873 
Sa„Uöt32ToUöt8
 (

874 
IN
 
UINT32
 
O≥ønd
,

875 
OUT
 
UINT8
 *
Resu…


898 
RETURN_STATUS


899 
EFIAPI


900 
Sa„Uöt32ToI¡16
 (

901 
IN
 
UINT32
 
O≥ønd
,

902 
OUT
 
INT16
 *
Resu…


925 
RETURN_STATUS


926 
EFIAPI


927 
Sa„Uöt32ToUöt16
 (

928 
IN
 
UINT32
 
O≥ønd
,

929 
OUT
 
UINT16
 *
Resu…


952 
RETURN_STATUS


953 
EFIAPI


954 
Sa„Uöt32ToI¡32
 (

955 
IN
 
UINT32
 
O≥ønd
,

956 
OUT
 
INT32
 *
Resu…


979 
RETURN_STATUS


980 
EFIAPI


981 
Sa„Uöt32ToI¡n
 (

982 
IN
 
UINT32
 
O≥ønd
,

983 
OUT
 
INTN
 *
Resu…


1006 
RETURN_STATUS


1007 
EFIAPI


1008 
Sa„I¡nToI¡8
 (

1009 
IN
 
INTN
 
O≥ønd
,

1010 
OUT
 
INT8
 *
Resu…


1033 
RETURN_STATUS


1034 
EFIAPI


1035 
Sa„I¡nToCh¨8
 (

1036 
IN
 
INTN
 
O≥ønd
,

1037 
OUT
 
CHAR8
 *
Resu…


1060 
RETURN_STATUS


1061 
EFIAPI


1062 
Sa„I¡nToUöt8
 (

1063 
IN
 
INTN
 
O≥ønd
,

1064 
OUT
 
UINT8
 *
Resu…


1087 
RETURN_STATUS


1088 
EFIAPI


1089 
Sa„I¡nToI¡16
 (

1090 
IN
 
INTN
 
O≥ønd
,

1091 
OUT
 
INT16
 *
Resu…


1114 
RETURN_STATUS


1115 
EFIAPI


1116 
Sa„I¡nToUöt16
 (

1117 
IN
 
INTN
 
O≥ønd
,

1118 
OUT
 
UINT16
 *
Resu…


1141 
RETURN_STATUS


1142 
EFIAPI


1143 
Sa„I¡nToI¡32
 (

1144 
IN
 
INTN
 
O≥ønd
,

1145 
OUT
 
INT32
 *
Resu…


1168 
RETURN_STATUS


1169 
EFIAPI


1170 
Sa„I¡nToUöt32
 (

1171 
IN
 
INTN
 
O≥ønd
,

1172 
OUT
 
UINT32
 *
Resu…


1195 
RETURN_STATUS


1196 
EFIAPI


1197 
Sa„I¡nToUöä
 (

1198 
IN
 
INTN
 
O≥ønd
,

1199 
OUT
 
UINTN
 *
Resu…


1222 
RETURN_STATUS


1223 
EFIAPI


1224 
Sa„I¡nToUöt64
 (

1225 
IN
 
INTN
 
O≥ønd
,

1226 
OUT
 
UINT64
 *
Resu…


1249 
RETURN_STATUS


1250 
EFIAPI


1251 
Sa„UöäToI¡8
 (

1252 
IN
 
UINTN
 
O≥ønd
,

1253 
OUT
 
INT8
 *
Resu…


1276 
RETURN_STATUS


1277 
EFIAPI


1278 
Sa„UöäToCh¨8
 (

1279 
IN
 
UINTN
 
O≥ønd
,

1280 
OUT
 
CHAR8
 *
Resu…


1303 
RETURN_STATUS


1304 
EFIAPI


1305 
Sa„UöäToUöt8
 (

1306 
IN
 
UINTN
 
O≥ønd
,

1307 
OUT
 
UINT8
 *
Resu…


1330 
RETURN_STATUS


1331 
EFIAPI


1332 
Sa„UöäToI¡16
 (

1333 
IN
 
UINTN
 
O≥ønd
,

1334 
OUT
 
INT16
 *
Resu…


1357 
RETURN_STATUS


1358 
EFIAPI


1359 
Sa„UöäToUöt16
 (

1360 
IN
 
UINTN
 
O≥ønd
,

1361 
OUT
 
UINT16
 *
Resu…


1384 
RETURN_STATUS


1385 
EFIAPI


1386 
Sa„UöäToI¡32
 (

1387 
IN
 
UINTN
 
O≥ønd
,

1388 
OUT
 
INT32
 *
Resu…


1411 
RETURN_STATUS


1412 
EFIAPI


1413 
Sa„UöäToUöt32
 (

1414 
IN
 
UINTN
 
O≥ønd
,

1415 
OUT
 
UINT32
 *
Resu…


1438 
RETURN_STATUS


1439 
EFIAPI


1440 
Sa„UöäToI¡n
 (

1441 
IN
 
UINTN
 
O≥ønd
,

1442 
OUT
 
INTN
 *
Resu…


1465 
RETURN_STATUS


1466 
EFIAPI


1467 
Sa„UöäToI¡64
 (

1468 
IN
 
UINTN
 
O≥ønd
,

1469 
OUT
 
INT64
 *
Resu…


1492 
RETURN_STATUS


1493 
EFIAPI


1494 
Sa„I¡64ToI¡8
 (

1495 
IN
 
INT64
 
O≥ønd
,

1496 
OUT
 
INT8
 *
Resu…


1519 
RETURN_STATUS


1520 
EFIAPI


1521 
Sa„I¡64ToCh¨8
 (

1522 
IN
 
INT64
 
O≥ønd
,

1523 
OUT
 
CHAR8
 *
Resu…


1546 
RETURN_STATUS


1547 
EFIAPI


1548 
Sa„I¡64ToUöt8
 (

1549 
IN
 
INT64
 
O≥ønd
,

1550 
OUT
 
UINT8
 *
Resu…


1573 
RETURN_STATUS


1574 
EFIAPI


1575 
Sa„I¡64ToI¡16
 (

1576 
IN
 
INT64
 
O≥ønd
,

1577 
OUT
 
INT16
 *
Resu…


1600 
RETURN_STATUS


1601 
EFIAPI


1602 
Sa„I¡64ToUöt16
 (

1603 
IN
 
INT64
 
O≥ønd
,

1604 
OUT
 
UINT16
 *
Resu…


1627 
RETURN_STATUS


1628 
EFIAPI


1629 
Sa„I¡64ToI¡32
 (

1630 
IN
 
INT64
 
O≥ønd
,

1631 
OUT
 
INT32
 *
Resu…


1654 
RETURN_STATUS


1655 
EFIAPI


1656 
Sa„I¡64ToUöt32
 (

1657 
IN
 
INT64
 
O≥ønd
,

1658 
OUT
 
UINT32
 *
Resu…


1681 
RETURN_STATUS


1682 
EFIAPI


1683 
Sa„I¡64ToI¡n
 (

1684 
IN
 
INT64
 
O≥ønd
,

1685 
OUT
 
INTN
 *
Resu…


1708 
RETURN_STATUS


1709 
EFIAPI


1710 
Sa„I¡64ToUöä
 (

1711 
IN
 
INT64
 
O≥ønd
,

1712 
OUT
 
UINTN
 *
Resu…


1735 
RETURN_STATUS


1736 
EFIAPI


1737 
Sa„I¡64ToUöt64
 (

1738 
IN
 
INT64
 
O≥ønd
,

1739 
OUT
 
UINT64
 *
Resu…


1762 
RETURN_STATUS


1763 
EFIAPI


1764 
Sa„Uöt64ToI¡8
 (

1765 
IN
 
UINT64
 
O≥ønd
,

1766 
OUT
 
INT8
 *
Resu…


1789 
RETURN_STATUS


1790 
EFIAPI


1791 
Sa„Uöt64ToCh¨8
 (

1792 
IN
 
UINT64
 
O≥ønd
,

1793 
OUT
 
CHAR8
 *
Resu…


1816 
RETURN_STATUS


1817 
EFIAPI


1818 
Sa„Uöt64ToUöt8
 (

1819 
IN
 
UINT64
 
O≥ønd
,

1820 
OUT
 
UINT8
 *
Resu…


1843 
RETURN_STATUS


1844 
EFIAPI


1845 
Sa„Uöt64ToI¡16
 (

1846 
IN
 
UINT64
 
O≥ønd
,

1847 
OUT
 
INT16
 *
Resu…


1870 
RETURN_STATUS


1871 
EFIAPI


1872 
Sa„Uöt64ToUöt16
 (

1873 
IN
 
UINT64
 
O≥ønd
,

1874 
OUT
 
UINT16
 *
Resu…


1897 
RETURN_STATUS


1898 
EFIAPI


1899 
Sa„Uöt64ToI¡32
 (

1900 
IN
 
UINT64
 
O≥ønd
,

1901 
OUT
 
INT32
 *
Resu…


1924 
RETURN_STATUS


1925 
EFIAPI


1926 
Sa„Uöt64ToUöt32
 (

1927 
IN
 
UINT64
 
O≥ønd
,

1928 
OUT
 
UINT32
 *
Resu…


1951 
RETURN_STATUS


1952 
EFIAPI


1953 
Sa„Uöt64ToI¡n
 (

1954 
IN
 
UINT64
 
O≥ønd
,

1955 
OUT
 
INTN
 *
Resu…


1978 
RETURN_STATUS


1979 
EFIAPI


1980 
Sa„Uöt64ToUöä
 (

1981 
IN
 
UINT64
 
O≥ønd
,

1982 
OUT
 
UINTN
 *
Resu…


2005 
RETURN_STATUS


2006 
EFIAPI


2007 
Sa„Uöt64ToI¡64
 (

2008 
IN
 
UINT64
 
O≥ønd
,

2009 
OUT
 
INT64
 *
Resu…


2037 
RETURN_STATUS


2038 
EFIAPI


2039 
Sa„Uöt8Add
 (

2040 
IN
 
UINT8
 
Augíd
,

2041 
IN
 
UINT8
 
Addíd
,

2042 
OUT
 
UINT8
 *
Resu…


2066 
RETURN_STATUS


2067 
EFIAPI


2068 
Sa„Uöt16Add
 (

2069 
IN
 
UINT16
 
Augíd
,

2070 
IN
 
UINT16
 
Addíd
,

2071 
OUT
 
UINT16
 *
Resu…


2095 
RETURN_STATUS


2096 
EFIAPI


2097 
Sa„Uöt32Add
 (

2098 
IN
 
UINT32
 
Augíd
,

2099 
IN
 
UINT32
 
Addíd
,

2100 
OUT
 
UINT32
 *
Resu…


2124 
RETURN_STATUS


2125 
EFIAPI


2126 
Sa„UöäAdd
 (

2127 
IN
 
UINTN
 
Augíd
,

2128 
IN
 
UINTN
 
Addíd
,

2129 
OUT
 
UINTN
 *
Resu…


2153 
RETURN_STATUS


2154 
EFIAPI


2155 
Sa„Uöt64Add
 (

2156 
IN
 
UINT64
 
Augíd
,

2157 
IN
 
UINT64
 
Addíd
,

2158 
OUT
 
UINT64
 *
Resu…


2186 
RETURN_STATUS


2187 
EFIAPI


2188 
Sa„Uöt8Sub
 (

2189 
IN
 
UINT8
 
Möuíd
,

2190 
IN
 
UINT8
 
Subåahíd
,

2191 
OUT
 
UINT8
 *
Resu…


2215 
RETURN_STATUS


2216 
EFIAPI


2217 
Sa„Uöt16Sub
 (

2218 
IN
 
UINT16
 
Möuíd
,

2219 
IN
 
UINT16
 
Subåahíd
,

2220 
OUT
 
UINT16
 *
Resu…


2244 
RETURN_STATUS


2245 
EFIAPI


2246 
Sa„Uöt32Sub
 (

2247 
IN
 
UINT32
 
Möuíd
,

2248 
IN
 
UINT32
 
Subåahíd
,

2249 
OUT
 
UINT32
 *
Resu…


2273 
RETURN_STATUS


2274 
EFIAPI


2275 
Sa„UöäSub
 (

2276 
IN
 
UINTN
 
Möuíd
,

2277 
IN
 
UINTN
 
Subåahíd
,

2278 
OUT
 
UINTN
 *
Resu…


2302 
RETURN_STATUS


2303 
EFIAPI


2304 
Sa„Uöt64Sub
 (

2305 
IN
 
UINT64
 
Möuíd
,

2306 
IN
 
UINT64
 
Subåahíd
,

2307 
OUT
 
UINT64
 *
Resu…


2335 
RETURN_STATUS


2336 
EFIAPI


2337 
Sa„Uöt8Mu…
 (

2338 
IN
 
UINT8
 
Mu…ùliˇnd
,

2339 
IN
 
UINT8
 
Mu…ùlõr
,

2340 
OUT
 
UINT8
 *
Resu…


2364 
RETURN_STATUS


2365 
EFIAPI


2366 
Sa„Uöt16Mu…
 (

2367 
IN
 
UINT16
 
Mu…ùliˇnd
,

2368 
IN
 
UINT16
 
Mu…ùlõr
,

2369 
OUT
 
UINT16
 *
Resu…


2393 
RETURN_STATUS


2394 
EFIAPI


2395 
Sa„Uöt32Mu…
 (

2396 
IN
 
UINT32
 
Mu…ùliˇnd
,

2397 
IN
 
UINT32
 
Mu…ùlõr
,

2398 
OUT
 
UINT32
 *
Resu…


2422 
RETURN_STATUS


2423 
EFIAPI


2424 
Sa„UöäMu…
 (

2425 
IN
 
UINTN
 
Mu…ùliˇnd
,

2426 
IN
 
UINTN
 
Mu…ùlõr
,

2427 
OUT
 
UINTN
 *
Resu…


2451 
RETURN_STATUS


2452 
EFIAPI


2453 
Sa„Uöt64Mu…
 (

2454 
IN
 
UINT64
 
Mu…ùliˇnd
,

2455 
IN
 
UINT64
 
Mu…ùlõr
,

2456 
OUT
 
UINT64
 *
Resu…


2504 
RETURN_STATUS


2505 
EFIAPI


2506 
Sa„I¡8Add
 (

2507 
IN
 
INT8
 
Augíd
,

2508 
IN
 
INT8
 
Addíd
,

2509 
OUT
 
INT8
 *
Resu…


2533 
RETURN_STATUS


2534 
EFIAPI


2535 
Sa„Ch¨8Add
 (

2536 
IN
 
CHAR8
 
Augíd
,

2537 
IN
 
CHAR8
 
Addíd
,

2538 
OUT
 
CHAR8
 *
Resu…


2562 
RETURN_STATUS


2563 
EFIAPI


2564 
Sa„I¡16Add
 (

2565 
IN
 
INT16
 
Augíd
,

2566 
IN
 
INT16
 
Addíd
,

2567 
OUT
 
INT16
 *
Resu…


2591 
RETURN_STATUS


2592 
EFIAPI


2593 
Sa„I¡32Add
 (

2594 
IN
 
INT32
 
Augíd
,

2595 
IN
 
INT32
 
Addíd
,

2596 
OUT
 
INT32
 *
Resu…


2620 
RETURN_STATUS


2621 
EFIAPI


2622 
Sa„I¡nAdd
 (

2623 
IN
 
INTN
 
Augíd
,

2624 
IN
 
INTN
 
Addíd
,

2625 
OUT
 
INTN
 *
Resu…


2649 
RETURN_STATUS


2650 
EFIAPI


2651 
Sa„I¡64Add
 (

2652 
IN
 
INT64
 
Augíd
,

2653 
IN
 
INT64
 
Addíd
,

2654 
OUT
 
INT64
 *
Resu…


2682 
RETURN_STATUS


2683 
EFIAPI


2684 
Sa„I¡8Sub
 (

2685 
IN
 
INT8
 
Möuíd
,

2686 
IN
 
INT8
 
Subåahíd
,

2687 
OUT
 
INT8
 *
Resu…


2711 
RETURN_STATUS


2712 
EFIAPI


2713 
Sa„Ch¨8Sub
 (

2714 
IN
 
CHAR8
 
Möuíd
,

2715 
IN
 
CHAR8
 
Subåahíd
,

2716 
OUT
 
CHAR8
 *
Resu…


2740 
RETURN_STATUS


2741 
EFIAPI


2742 
Sa„I¡16Sub
 (

2743 
IN
 
INT16
 
Möuíd
,

2744 
IN
 
INT16
 
Subåahíd
,

2745 
OUT
 
INT16
 *
Resu…


2769 
RETURN_STATUS


2770 
EFIAPI


2771 
Sa„I¡32Sub
 (

2772 
IN
 
INT32
 
Möuíd
,

2773 
IN
 
INT32
 
Subåahíd
,

2774 
OUT
 
INT32
 *
Resu…


2798 
RETURN_STATUS


2799 
EFIAPI


2800 
Sa„I¡nSub
 (

2801 
IN
 
INTN
 
Möuíd
,

2802 
IN
 
INTN
 
Subåahíd
,

2803 
OUT
 
INTN
 *
Resu…


2827 
RETURN_STATUS


2828 
EFIAPI


2829 
Sa„I¡64Sub
 (

2830 
IN
 
INT64
 
Möuíd
,

2831 
IN
 
INT64
 
Subåahíd
,

2832 
OUT
 
INT64
 *
Resu…


2860 
RETURN_STATUS


2861 
EFIAPI


2862 
Sa„I¡8Mu…
 (

2863 
IN
 
INT8
 
Mu…ùliˇnd
,

2864 
IN
 
INT8
 
Mu…ùlõr
,

2865 
OUT
 
INT8
 *
Resu…


2889 
RETURN_STATUS


2890 
EFIAPI


2891 
Sa„Ch¨8Mu…
 (

2892 
IN
 
CHAR8
 
Mu…ùliˇnd
,

2893 
IN
 
CHAR8
 
Mu…ùlõr
,

2894 
OUT
 
CHAR8
 *
Resu…


2918 
RETURN_STATUS


2919 
EFIAPI


2920 
Sa„I¡16Mu…
 (

2921 
IN
 
INT16
 
Mu…ùliˇnd
,

2922 
IN
 
INT16
 
Mu…ùlõr
,

2923 
OUT
 
INT16
 *
Resu…


2947 
RETURN_STATUS


2948 
EFIAPI


2949 
Sa„I¡32Mu…
 (

2950 
IN
 
INT32
 
Mu…ùliˇnd
,

2951 
IN
 
INT32
 
Mu…ùlõr
,

2952 
OUT
 
INT32
 *
Resu…


2976 
RETURN_STATUS


2977 
EFIAPI


2978 
Sa„I¡nMu…
 (

2979 
IN
 
INTN
 
Mu…ùliˇnd
,

2980 
IN
 
INTN
 
Mu…ùlõr
,

2981 
OUT
 
INTN
 *
Resu…


3005 
RETURN_STATUS


3006 
EFIAPI


3007 
Sa„I¡64Mu…
 (

3008 
IN
 
INT64
 
Mu…ùliˇnd
,

3009 
IN
 
INT64
 
Mu…ùlõr
,

3010 
OUT
 
INT64
 *
Resu…


	@SerialPortLib.h

10 #i‚de‡
__SERIAL_PORT_LIB__


11 
	#__SERIAL_PORT_LIB__


	)

13 
	~<Uefi/UefiBa£Ty≥.h
>

14 
	~<PrŸocﬁ/SîülIo.h
>

27 
RETURN_STATUS


28 
EFIAPI


29 
SîülP‹tInôülize
 (

30 
VOID


50 
UINTN


51 
EFIAPI


52 
SîülP‹tWrôe
 (

53 
IN
 
UINT8
 *
Buf„r
,

54 
IN
 
UINTN
 
NumbîOfByãs


74 
UINTN


75 
EFIAPI


76 
SîülP‹tRód
 (

77 
OUT
 
UINT8
 *
Buf„r
,

78 
IN
 
UINTN
 
NumbîOfByãs


92 
BOOLEAN


93 
EFIAPI


94 
SîülP‹tPﬁl
 (

95 
VOID


108 
RETURN_STATUS


109 
EFIAPI


110 
SîülP‹tSëC⁄åﬁ
 (

111 
IN
 
UINT32
 
C⁄åﬁ


124 
RETURN_STATUS


125 
EFIAPI


126 
SîülP‹tGëC⁄åﬁ
 (

127 
OUT
 
UINT32
 *
C⁄åﬁ


163 
RETURN_STATUS


164 
EFIAPI


165 
SîülP‹tSëAâribuãs
 (

166 
IN
 
OUT
 
UINT64
 *
BaudR©e
,

167 
IN
 
OUT
 
UINT32
 *
Re˚iveFifoDïth
,

168 
IN
 
OUT
 
UINT32
 *
Timeout
,

169 
IN
 
OUT
 
EFI_PARITY_TYPE
 *
P¨ôy
,

170 
IN
 
OUT
 
UINT8
 *
D©aBôs
,

171 
IN
 
OUT
 
EFI_STOP_BITS_TYPE
 *
St›Bôs


	@SmbusLib.h

10 #i‚de‡
__SMBUS_LIB__


11 
	#__SMBUS_LIB__


	)

27 
	#SMBUS_LIB_ADDRESS
(
SœveAddªss
,
Comm™d
,
Lígth
,
Pec
Ë\

	)

28 –((
	gPec
Ë? 
	gBIT22
: 0) | \

29 (((
SœveAddªss
) & 0x7f) << 1) | \

30 (((
Comm™d
) & 0xff) << 8) | \

31 (((
Lígth
) & 0x3f) << 16) \

39 
	#SMBUS_LIB_SLAVE_ADDRESS
(
SmBusAddªss
Ë(((SmBusAddªssË>> 1Ë& 0x7f)

	)

46 
	#SMBUS_LIB_COMMAND
(
SmBusAddªss
Ë(((SmBusAddªssË>> 8Ë& 0xff)

	)

53 
	#SMBUS_LIB_LENGTH
(
SmBusAddªss
Ë(((SmBusAddªssË>> 16Ë& 0x3f)

	)

60 
	#SMBUS_LIB_PEC
(
SmBusAddªss
Ë((
BOOLEAN
Ë(((SmBusAddªssË& 
BIT22
Ë!0))

	)

67 
	#SMBUS_LIB_RESERVED
(
SmBusAddªss
Ë((SmBusAddªssË& ~(
BIT23
 - 2))

	)

93 
VOID


94 
EFIAPI


95 
SmBusQuickRód
 (

96 
IN
 
UINTN
 
SmBusAddªss
,

97 
OUT
 
RETURN_STATUS
 *
Sètus
 
OPTIONAL


124 
VOID


125 
EFIAPI


126 
SmBusQuickWrôe
 (

127 
IN
 
UINTN
 
SmBusAddªss
,

128 
OUT
 
RETURN_STATUS
 *
Sètus
 
OPTIONAL


158 
UINT8


159 
EFIAPI


160 
SmBusRe˚iveByã
 (

161 
IN
 
UINTN
 
SmBusAddªss
,

162 
OUT
 
RETURN_STATUS
 *
Sètus
 
OPTIONAL


193 
UINT8


194 
EFIAPI


195 
SmBusSídByã
 (

196 
IN
 
UINTN
 
SmBusAddªss
,

197 
IN
 
UINT8
 
VÆue
,

198 
OUT
 
RETURN_STATUS
 *
Sètus
 
OPTIONAL


227 
UINT8


228 
EFIAPI


229 
SmBusRódD©aByã
 (

230 
IN
 
UINTN
 
SmBusAddªss
,

231 
OUT
 
RETURN_STATUS
 *
Sètus
 
OPTIONAL


262 
UINT8


263 
EFIAPI


264 
SmBusWrôeD©aByã
 (

265 
IN
 
UINTN
 
SmBusAddªss
,

266 
IN
 
UINT8
 
VÆue
,

267 
OUT
 
RETURN_STATUS
 *
Sètus
 
OPTIONAL


296 
UINT16


297 
EFIAPI


298 
SmBusRódD©aW‹d
 (

299 
IN
 
UINTN
 
SmBusAddªss
,

300 
OUT
 
RETURN_STATUS
 *
Sètus
 
OPTIONAL


331 
UINT16


332 
EFIAPI


333 
SmBusWrôeD©aW‹d
 (

334 
IN
 
UINTN
 
SmBusAddªss
,

335 
IN
 
UINT16
 
VÆue
,

336 
OUT
 
RETURN_STATUS
 *
Sètus
 
OPTIONAL


367 
UINT16


368 
EFIAPI


369 
SmBusPro˚ssCÆl
 (

370 
IN
 
UINTN
 
SmBusAddªss
,

371 
IN
 
UINT16
 
VÆue
,

372 
OUT
 
RETURN_STATUS
 *
Sètus
 
OPTIONAL


406 
UINTN


407 
EFIAPI


408 
SmBusRódBlock
 (

409 
IN
 
UINTN
 
SmBusAddªss
,

410 
OUT
 
VOID
 *
Buf„r
,

411 
OUT
 
RETURN_STATUS
 *
Sètus
 
OPTIONAL


442 
UINTN


443 
EFIAPI


444 
SmBusWrôeBlock
 (

445 
IN
 
UINTN
 
SmBusAddªss
,

446 
OUT
 
VOID
 *
Buf„r
,

447 
OUT
 
RETURN_STATUS
 *
Sètus
 
OPTIONAL


481 
UINTN


482 
EFIAPI


483 
SmBusBlockPro˚ssCÆl
 (

484 
IN
 
UINTN
 
SmBusAddªss
,

485 
IN
 
VOID
 *
WrôeBuf„r
,

486 
OUT
 
VOID
 *
RódBuf„r
,

487 
OUT
 
RETURN_STATUS
 *
Sètus
 
OPTIONAL


	@SmiHandlerProfileLib.h

20 #i‚de‡
__SMI_HANDLER_PROFILE_LIB_H__


21 
	#__SMI_HANDLER_PROFILE_LIB_H__


	)

23 
	~<PiSmm.h
>

45 
EFI_STATUS


46 
EFIAPI


47 
SmiH™dÀrProfûeRegi°îH™dÀr
 (

48 
IN
 
EFI_GUID
 *
H™dÀrGuid
,

49 
IN
 
EFI_SMM_HANDLER_ENTRY_POINT2
 
H™dÀr
,

50 
IN
 
PHYSICAL_ADDRESS
 
CÆÀrAddªss
,

51 
IN
 
VOID
 *
C⁄ãxt
, 
OPTIONAL


52 
IN
 
UINTN
 
C⁄ãxtSize
 
OPTIONAL


72 
EFI_STATUS


73 
EFIAPI


74 
SmiH™dÀrProfûeUƒegi°îH™dÀr
 (

75 
IN
 
EFI_GUID
 *
H™dÀrGuid
,

76 
IN
 
EFI_SMM_HANDLER_ENTRY_POINT2
 
H™dÀr
,

77 
IN
 
VOID
 *
C⁄ãxt
, 
OPTIONAL


78 
IN
 
UINTN
 
C⁄ãxtSize
 
OPTIONAL


	@SmmIoLib.h

11 #i‚de‡
_SMM_IO_LIB_H_


12 
	#_SMM_IO_LIB_H_


	)

27 
BOOLEAN


28 
EFIAPI


29 
SmmIsMmioVÆid
 (

30 
IN
 
EFI_PHYSICAL_ADDRESS
 
Ba£Addªss
,

31 
IN
 
UINT64
 
Lígth
,

32 
IN
 
EFI_GUID
 *
Ow√r
 
OPTIONAL


	@SmmLib.h

11 #i‚de‡
__SMM_LIB_H__


12 
	#__SMM_LIB_H__


	)

21 
VOID


22 
EFIAPI


23 
TriggîBoŸSîvi˚So·w¨eSmi
 (

24 
VOID


34 
VOID


35 
EFIAPI


36 
TriggîRu¡imeSo·w¨eSmi
 (

37 
VOID


51 
BOOLEAN


52 
EFIAPI


53 
IsBoŸSîvi˚So·w¨eSmi
 (

54 
VOID


68 
BOOLEAN


69 
EFIAPI


70 
IsRu¡imeSo·w¨eSmi
 (

71 
VOID


78 
VOID


79 
EFIAPI


80 
CÀ¨Smi
 (

81 
VOID


	@SmmMemLib.h

13 #i‚de‡
_SMM_MEM_LIB_H_


14 
	#_SMM_MEM_LIB_H_


	)

25 
BOOLEAN


26 
EFIAPI


27 
SmmIsBuf„rOutsideSmmVÆid
 (

28 
IN
 
EFI_PHYSICAL_ADDRESS
 
Buf„r
,

29 
IN
 
UINT64
 
Lígth


49 
EFI_STATUS


50 
EFIAPI


51 
SmmC›yMemToSmøm
 (

52 
OUT
 
VOID
 *
De°ö©i⁄Buf„r
,

53 
IN
 
CONST
 
VOID
 *
Sour˚Buf„r
,

54 
IN
 
UINTN
 
Lígth


74 
EFI_STATUS


75 
EFIAPI


76 
SmmC›yMemFromSmøm
 (

77 
OUT
 
VOID
 *
De°ö©i⁄Buf„r
,

78 
IN
 
CONST
 
VOID
 *
Sour˚Buf„r
,

79 
IN
 
UINTN
 
Lígth


100 
EFI_STATUS


101 
EFIAPI


102 
SmmC›yMem
 (

103 
OUT
 
VOID
 *
De°ö©i⁄Buf„r
,

104 
IN
 
CONST
 
VOID
 *
Sour˚Buf„r
,

105 
IN
 
UINTN
 
Lígth


124 
EFI_STATUS


125 
EFIAPI


126 
SmmSëMem
 (

127 
OUT
 
VOID
 *
Buf„r
,

128 
IN
 
UINTN
 
Lígth
,

129 
IN
 
UINT8
 
VÆue


	@SmmPeriodicSmiLib.h

9 #i‚de‡
__PERIODIC_SMI_LIB_H__


10 
	#__PERIODIC_SMI_LIB_H__


	)

12 
	#PERIODIC_SMI_LIBRARY_ANY_CPU
 0xffffffff

	)

26 
UINT64
 *

27 
EFIAPI


28 
PîiodicSmiSuµ‹ãdTickPîiod
 (

29 
VOID


43 
UINT64


44 
EFIAPI


45 
PîiodicSmiExecuti⁄Time
 (

46 
VOID


57 
VOID


58 
EFIAPI


59 
PîiodicSmiExô
 (

60 
VOID


80 
UINT64


81 
EFIAPI


82 
PîiodicSmiYõld
 (

83 
VOID


98 
	gVOID


99 (
	tEFIAPI
 *
	tPERIODIC_SMI_LIBRARY_HANDLER
) (

100 
	tIN
 
	tCONST
 
	tVOID
 *
	tC⁄ãxt
 
	tOPTIONAL
,

101 
	tIN
 
	tUINT64
 
	tEœp£dTime


144 
EFI_STATUS


145 
EFIAPI


146 
PîiodicSmiE«bÀ
 (

147 
IN
 
OUT
 
EFI_HANDLE
 *
Di•©chH™dÀ
, 
OPTIONAL


148 
IN
 
PERIODIC_SMI_LIBRARY_HANDLER
 
Di•©chFun˘i⁄
,

149 
IN
 
CONST
 
VOID
 *
C⁄ãxt
, 
OPTIONAL


150 
IN
 
UINT64
 
TickPîiod
,

151 
IN
 
UINTN
 
Cpu
,

152 
IN
 
UINTN
 
SèckSize


172 
BOOLEAN


173 
EFIAPI


174 
PîiodicSmiDißbÀ
 (

175 
IN
 
EFI_HANDLE
 
Di•©chH™dÀ
 
OPTIONAL


	@SmmServicesTableLib.h

10 #i‚de‡
__SMM_SERVICES_TABLE_LIB_H__


11 
	#__SMM_SERVICES_TABLE_LIB_H__


	)

13 
	~<PiSmm.h
>

18 
EFI_SMM_SYSTEM_TABLE2
 *
gSm°
;

31 
BOOLEAN


32 
EFIAPI


33 
InSmm
 (

34 
VOID


	@StandaloneMmDriverEntryPoint.h

12 #i‚de‡
__MODULE_ENTRY_POINT_H__


13 
	#__MODULE_ENTRY_POINT_H__


	)

19 
CONST
 
UINT32
 
_gMmRevisi⁄
;

43 
EFI_STATUS


44 
EFIAPI


45 
_ModuÀE¡ryPoöt
 (

46 
IN
 
EFI_HANDLE
 
ImageH™dÀ
,

47 
IN
 
EFI_MM_SYSTEM_TABLE
 *
MmSy°emTabÀ


69 
VOID


70 
EFIAPI


71 
Pro˚ssLibøryC⁄°ru˘‹Li°
 (

72 
IN
 
EFI_HANDLE
 
ImageH™dÀ
,

73 
IN
 
EFI_MM_SYSTEM_TABLE
 *
MmSy°emTabÀ


95 
VOID


96 
EFIAPI


97 
Pro˚ssLibøryDe°ru˘‹Li°
 (

98 
IN
 
EFI_HANDLE
 
ImageH™dÀ
,

99 
IN
 
EFI_MM_SYSTEM_TABLE
 *
MmSy°emTabÀ


118 
EFI_STATUS


119 
EFIAPI


120 
Pro˚ssModuÀE¡ryPoötLi°
 (

121 
IN
 
EFI_HANDLE
 
ImageH™dÀ
,

122 
IN
 
EFI_MM_SYSTEM_TABLE
 *
MmSy°emTabÀ


	@SynchronizationLib.h

9 #i‚de‡
__SYNCHRONIZATION_LIB__


10 
	#__SYNCHRONIZATION_LIB__


	)

15 vﬁ©ûê
	tUINTN
 
	tSPIN_LOCK
;

34 
UINTN


35 
EFIAPI


36 
GëSpöLockPr›îtõs
 (

37 
VOID


57 
SPIN_LOCK
 *

58 
EFIAPI


59 
InôülizeSpöLock
 (

60 
OUT
 
SPIN_LOCK
 *
SpöLock


84 
SPIN_LOCK
 *

85 
EFIAPI


86 
AcquúeSpöLock
 (

87 
IN
 
OUT
 
SPIN_LOCK
 *
SpöLock


108 
BOOLEAN


109 
EFIAPI


110 
AcquúeSpöLockOrFaû
 (

111 
IN
 
OUT
 
SPIN_LOCK
 *
SpöLock


129 
SPIN_LOCK
 *

130 
EFIAPI


131 
Rñó£SpöLock
 (

132 
IN
 
OUT
 
SPIN_LOCK
 *
SpöLock


150 
UINT32


151 
EFIAPI


152 
I¡îlockedIn¸emít
 (

153 
IN
 vﬁ©ûê
UINT32
 *
VÆue


171 
UINT32


172 
EFIAPI


173 
I¡îlockedDe¸emít
 (

174 
IN
 vﬁ©ûê
UINT32
 *
VÆue


196 
UINT16


197 
EFIAPI


198 
I¡îlockedCom∑ªExch™ge16
 (

199 
IN
 
OUT
 vﬁ©ûê
UINT16
 *
VÆue
,

200 
IN
 
UINT16
 
Com∑ªVÆue
,

201 
IN
 
UINT16
 
Exch™geVÆue


223 
UINT32


224 
EFIAPI


225 
I¡îlockedCom∑ªExch™ge32
 (

226 
IN
 
OUT
 vﬁ©ûê
UINT32
 *
VÆue
,

227 
IN
 
UINT32
 
Com∑ªVÆue
,

228 
IN
 
UINT32
 
Exch™geVÆue


250 
UINT64


251 
EFIAPI


252 
I¡îlockedCom∑ªExch™ge64
 (

253 
IN
 
OUT
 vﬁ©ûê
UINT64
 *
VÆue
,

254 
IN
 
UINT64
 
Com∑ªVÆue
,

255 
IN
 
UINT64
 
Exch™geVÆue


277 
VOID
 *

278 
EFIAPI


279 
I¡îlockedCom∑ªExch™gePoöãr
 (

280 
IN
 
OUT
 
VOID
 * vﬁ©ûê*
VÆue
,

281 
IN
 
VOID
 *
Com∑ªVÆue
,

282 
IN
 
VOID
 *
Exch™geVÆue


	@TimerLib.h

9 #i‚de‡
__TIMER_LIB__


10 
	#__TIMER_LIB__


	)

22 
UINTN


23 
EFIAPI


24 
Mi¸oSec⁄dDñay
 (

25 
IN
 
UINTN
 
Mi¸oSec⁄ds


38 
UINTN


39 
EFIAPI


40 
N™oSec⁄dDñay
 (

41 
IN
 
UINTN
 
N™oSec⁄ds


55 
UINT64


56 
EFIAPI


57 
GëPîf‹m™˚Cou¡î
 (

58 
VOID


84 
UINT64


85 
EFIAPI


86 
GëPîf‹m™˚Cou¡îPr›îtõs
 (

87 
OUT
 
UINT64
 *
SèπVÆue
, 
OPTIONAL


88 
OUT
 
UINT64
 *
EndVÆue
 
OPTIONAL


102 
UINT64


103 
EFIAPI


104 
GëTimeInN™oSec⁄d
 (

105 
IN
 
UINT64
 
Ticks


	@UefiApplicationEntryPoint.h

9 #i‚de‡
__UEFI_APPLICATION_ENTRY_POINT_H__


10 
	#__UEFI_APPLICATION_ENTRY_POINT_H__


	)

15 
CONST
 
UINT32
 
_gUefiDrivîRevisi⁄
;

35 
EFI_STATUS


36 
EFIAPI


37 
_ModuÀE¡ryPoöt
 (

38 
IN
 
EFI_HANDLE
 
ImageH™dÀ
,

39 
IN
 
EFI_SYSTEM_TABLE
 *
Sy°emTabÀ


54 
EFI_STATUS


55 
EFIAPI


56 
EfiMaö
 (

57 
IN
 
EFI_HANDLE
 
ImageH™dÀ
,

58 
IN
 
EFI_SYSTEM_TABLE
 *
Sy°emTabÀ


72 
VOID


73 
EFIAPI


74 
Exô
 (

75 
IN
 
EFI_STATUS
 
Sètus


96 
VOID


97 
EFIAPI


98 
Pro˚ssLibøryC⁄°ru˘‹Li°
 (

99 
IN
 
EFI_HANDLE
 
ImageH™dÀ
,

100 
IN
 
EFI_SYSTEM_TABLE
 *
Sy°emTabÀ


121 
VOID


122 
EFIAPI


123 
Pro˚ssLibøryDe°ru˘‹Li°
 (

124 
IN
 
EFI_HANDLE
 
ImageH™dÀ
,

125 
IN
 
EFI_SYSTEM_TABLE
 *
Sy°emTabÀ


141 
EFI_STATUS


142 
EFIAPI


143 
Pro˚ssModuÀE¡ryPoötLi°
 (

144 
IN
 
EFI_HANDLE
 
ImageH™dÀ
,

145 
IN
 
EFI_SYSTEM_TABLE
 *
Sy°emTabÀ


	@UefiBootServicesTableLib.h

10 #i‚de‡
__UEFI_BOOT_SERVICES_TABLE_LIB_H__


11 
	#__UEFI_BOOT_SERVICES_TABLE_LIB_H__


	)

16 
EFI_HANDLE
 
gImageH™dÀ
;

21 
EFI_SYSTEM_TABLE
 *
gST
;

26 
EFI_BOOT_SERVICES
 *
gBS
;

	@UefiDecompressLib.h

14 #i‚de‡
__UEFI_DECPOMPRESS_LIB_H__


15 
	#__UEFI_DECPOMPRESS_LIB_H__


	)

56 
RETURN_STATUS


57 
EFIAPI


58 
UefiDecom¥essGëInfo
 (

59 
IN
 
CONST
 
VOID
 *
Sour˚
,

60 
IN
 
UINT32
 
Sour˚Size
,

61 
OUT
 
UINT32
 *
De°ö©i⁄Size
,

62 
OUT
 
UINT32
 *
S¸©chSize


94 
RETURN_STATUS


95 
EFIAPI


96 
UefiDecom¥ess
 (

97 
IN
 
CONST
 
VOID
 *
Sour˚
,

98 
IN
 
OUT
 
VOID
 *
De°ö©i⁄
,

99 
IN
 
OUT
 
VOID
 *
S¸©ch
 
OPTIONAL


	@UefiDriverEntryPoint.h

10 #i‚de‡
__MODULE_ENTRY_POINT_H__


11 
	#__MODULE_ENTRY_POINT_H__


	)

16 
CONST
 
UINT32
 
_gDxeRevisi⁄
;

21 
CONST
 
UINT32
 
_gUefiDrivîRevisi⁄
;

26 
CONST
 
UINT8
 
_gDrivîU∆ﬂdImageCou¡
;

52 
EFI_STATUS


53 
EFIAPI


54 
_ModuÀE¡ryPoöt
 (

55 
IN
 
EFI_HANDLE
 
ImageH™dÀ
,

56 
IN
 
EFI_SYSTEM_TABLE
 *
Sy°emTabÀ


73 
EFI_STATUS


74 
EFIAPI


75 
EfiMaö
 (

76 
IN
 
EFI_HANDLE
 
ImageH™dÀ
,

77 
IN
 
EFI_SYSTEM_TABLE
 *
Sy°emTabÀ


91 
VOID


92 
EFIAPI


93 
ExôDrivî
 (

94 
IN
 
EFI_STATUS
 
Sètus


115 
VOID


116 
EFIAPI


117 
Pro˚ssLibøryC⁄°ru˘‹Li°
 (

118 
IN
 
EFI_HANDLE
 
ImageH™dÀ
,

119 
IN
 
EFI_SYSTEM_TABLE
 *
Sy°emTabÀ


139 
VOID


140 
EFIAPI


141 
Pro˚ssLibøryDe°ru˘‹Li°
 (

142 
IN
 
EFI_HANDLE
 
ImageH™dÀ
,

143 
IN
 
EFI_SYSTEM_TABLE
 *
Sy°emTabÀ


161 
EFI_STATUS


162 
EFIAPI


163 
Pro˚ssModuÀE¡ryPoötLi°
 (

164 
IN
 
EFI_HANDLE
 
ImageH™dÀ
,

165 
IN
 
EFI_SYSTEM_TABLE
 *
Sy°emTabÀ


183 
EFI_STATUS


184 
EFIAPI


185 
Pro˚ssModuÀU∆ﬂdLi°
 (

186 
IN
 
EFI_HANDLE
 
ImageH™dÀ


	@UefiLib.h

21 #i‚de‡
__UEFI_LIB_H__


22 
	#__UEFI_LIB_H__


	)

24 
	~<Indu°rySènd¨d/A˝i.h
>

26 
	~<PrŸocﬁ/DrivîBödög.h
>

27 
	~<PrŸocﬁ/DrivîC⁄figuøti⁄.h
>

28 
	~<PrŸocﬁ/Comp⁄ítName.h
>

29 
	~<PrŸocﬁ/Comp⁄ítName2.h
>

30 
	~<PrŸocﬁ/DrivîDügno°ics.h
>

31 
	~<PrŸocﬁ/DrivîDügno°ics2.h
>

32 
	~<PrŸocﬁ/GøphicsOuçut.h
>

33 
	~<PrŸocﬁ/Devi˚P©h.h
>

34 
	~<PrŸocﬁ/Sim∂eFûeSy°em.h
>

36 
	~<Libøry/Ba£Lib.h
>

42 
CHAR8
 *
	mL™guage
;

43 
CHAR16
 *
	mUnicodeSåög
;

44 } 
	tEFI_UNICODE_STRING_TABLE
;

50 
	mEfiLockUnöôülized
 = 0,

51 
	mEfiLockRñó£d
 = 1,

52 
	mEfiLockAcquúed
 = 2

53 } 
	tEFI_LOCK_STATE
;

59 
EFI_TPL
 
	mT∂
;

60 
EFI_TPL
 
	mOw√rT∂
;

61 
EFI_LOCK_STATE
 
	mLock
;

62 } 
	tEFI_LOCK
;

74 
	#EFI_TIMER_PERIOD_MICROSECONDS
(
Mi¸o£c⁄ds
Ë
	`Mu…U64x32
((
UINT64
)(Mi¸o£c⁄ds), 10)

	)

86 
	#EFI_TIMER_PERIOD_MILLISECONDS
(
Mûli£c⁄ds
Ë
	`Mu…U64x32
((
UINT64
)(Mûli£c⁄ds), 10000)

	)

98 
	#EFI_TIMER_PERIOD_SECONDS
(
Sec⁄ds
Ë
	`Mu…U64x32
((
UINT64
)(Sec⁄ds), 10000000)

	)

111 
	#NEXT_MEMORY_DESCRIPTOR
(
Mem‹yDes¸ùt‹
, 
Size
Ë\

	)

112 ((
	gEFI_MEMORY_DESCRIPTOR
 *)((
	gUINT8
 *)(
	gMem‹yDes¸ùt‹
Ë+ (
	gSize
)))

132 
EFI_STATUS


133 
EFIAPI


134 
EfiGëSy°emC⁄figuøti⁄TabÀ
 (

135 
IN
 
EFI_GUID
 *
TabÀGuid
,

136 
OUT
 
VOID
 **
TabÀ


166 
EFI_EVENT


167 
EFIAPI


168 
EfiCª©ePrŸocﬁNŸifyEvít
(

169 
IN
 
EFI_GUID
 *
PrŸocﬁGuid
,

170 
IN
 
EFI_TPL
 
NŸifyT∂
,

171 
IN
 
EFI_EVENT_NOTIFY
 
NŸifyFun˘i⁄
,

172 
IN
 
VOID
 *
NŸifyC⁄ãxt
, 
OPTIONAL


173 
OUT
 
VOID
 **
Regi°øti⁄


196 
EFI_STATUS


197 
EFIAPI


198 
EfiNamedEvítLi°í
 (

199 
IN
 
CONST
 
EFI_GUID
 *
Name
,

200 
IN
 
EFI_TPL
 
NŸifyT∂
,

201 
IN
 
EFI_EVENT_NOTIFY
 
NŸifyFun˘i⁄
,

202 
IN
 
CONST
 
VOID
 *
NŸifyC⁄ãxt
, 
OPTIONAL


203 
OUT
 
VOID
 *
Regi°øti⁄
 
OPTIONAL


219 
EFI_STATUS


220 
EFIAPI


221 
EfiNamedEvítSig«l
 (

222 
IN
 
CONST
 
EFI_GUID
 *
Name


237 
EFI_STATUS


238 
EFIAPI


239 
EfiEvítGroupSig«l
 (

240 
IN
 
CONST
 
EFI_GUID
 *
EvítGroup


252 
VOID


253 
EFIAPI


254 
EfiEvítEm±yFun˘i⁄
 (

255 
IN
 
EFI_EVENT
 
Evít
,

256 
IN
 
VOID
 *
C⁄ãxt


271 
EFI_TPL


272 
EFIAPI


273 
EfiGëCuºítT∂
 (

274 
VOID


293 
EFI_LOCK
 *

294 
EFIAPI


295 
EfiInôülizeLock
 (

296 
IN
 
OUT
 
EFI_LOCK
 *
Lock
,

297 
IN
 
EFI_TPL
 
Pri‹ôy


313 
	#EFI_INITIALIZE_LOCK_VARIABLE
(
Pri‹ôy
Ë\

	)

314 {
	gPri‹ôy
, 
	gTPL_APPLICATION
, 
	gEfiLockRñó£d
 }

331 #i‡!
deföed
(
MDEPKG_NDEBUG
)

332 
	#ASSERT_LOCKED
(
LockP¨amëî
Ë\

	)

334 i‡(
DebugAs£πE«bÀd
 ()) { \

335 
ASSERT
 (
LockP¨amëî
 !
NULL
); \

336 i‡((
	gLockP¨amëî
)->
	gLock
 !
EfiLockAcquúed
) { \

337 
_ASSERT
 (
LockP¨amëî
 
nŸ
 
locked
); \

340 } 
FALSE
)

342 
	#ASSERT_LOCKED
(
LockP¨amëî
)

	)

359 
VOID


360 
EFIAPI


361 
	`EfiAcquúeLock
 (

362 
IN
 
EFI_LOCK
 *
Lock


381 
EFI_STATUS


382 
EFIAPI


383 
	`EfiAcquúeLockOrFaû
 (

384 
IN
 
EFI_LOCK
 *
Lock


400 
VOID


401 
EFIAPI


402 
	`EfiRñó£Lock
 (

403 
IN
 
EFI_LOCK
 *
Lock


429 
EFI_STATUS


430 
EFIAPI


431 
	`EfiTe°M™agedDevi˚
 (

432 
IN
 
CONST
 
EFI_HANDLE
 
C⁄åﬁÀrH™dÀ
,

433 
IN
 
CONST
 
EFI_HANDLE
 
DrivîBödögH™dÀ
,

434 
IN
 
CONST
 
EFI_GUID
 *
PrŸocﬁGuid


456 
EFI_STATUS


457 
EFIAPI


458 
	`EfiTe°ChûdH™dÀ
 (

459 
IN
 
CONST
 
EFI_HANDLE
 
C⁄åﬁÀrH™dÀ
,

460 
IN
 
CONST
 
EFI_HANDLE
 
ChûdH™dÀ
,

461 
IN
 
CONST
 
EFI_GUID
 *
PrŸocﬁGuid


475 
EFI_STATUS


476 
EFIAPI


477 
	`IsL™guageSuµ‹ãd
 (

478 
IN
 
CONST
 
CHAR8
 *
Suµ‹ãdL™guages
,

479 
IN
 
CONST
 
CHAR8
 *
T¨gëL™guage


512 
EFI_STATUS


513 
EFIAPI


514 
	`LookupUnicodeSåög
 (

515 
IN
 
CONST
 
CHAR8
 *
L™guage
,

516 
IN
 
CONST
 
CHAR8
 *
Suµ‹ãdL™guages
,

517 
IN
 
CONST
 
EFI_UNICODE_STRING_TABLE
 *
UnicodeSåögTabÀ
,

518 
OUT
 
CHAR16
 **
UnicodeSåög


561 
EFI_STATUS


562 
EFIAPI


563 
	`LookupUnicodeSåög2
 (

564 
IN
 
CONST
 
CHAR8
 *
L™guage
,

565 
IN
 
CONST
 
CHAR8
 *
Suµ‹ãdL™guages
,

566 
IN
 
CONST
 
EFI_UNICODE_STRING_TABLE
 *
UnicodeSåögTabÀ
,

567 
OUT
 
CHAR16
 **
UnicodeSåög
,

568 
IN
 
BOOLEAN
 
Iso639L™guage


604 
EFI_STATUS


605 
EFIAPI


606 
	`AddUnicodeSåög
 (

607 
IN
 
CONST
 
CHAR8
 *
L™guage
,

608 
IN
 
CONST
 
CHAR8
 *
Suµ‹ãdL™guages
,

609 
IN
 
OUT
 
EFI_UNICODE_STRING_TABLE
 **
UnicodeSåögTabÀ
,

610 
IN
 
CONST
 
CHAR16
 *
UnicodeSåög


655 
EFI_STATUS


656 
EFIAPI


657 
	`AddUnicodeSåög2
 (

658 
IN
 
CONST
 
CHAR8
 *
L™guage
,

659 
IN
 
CONST
 
CHAR8
 *
Suµ‹ãdL™guages
,

660 
IN
 
OUT
 
EFI_UNICODE_STRING_TABLE
 **
UnicodeSåögTabÀ
,

661 
IN
 
CONST
 
CHAR16
 *
UnicodeSåög
,

662 
IN
 
BOOLEAN
 
Iso639L™guage


677 
EFI_STATUS


678 
EFIAPI


679 
	`FªeUnicodeSåögTabÀ
 (

680 
IN
 
EFI_UNICODE_STRING_TABLE
 *
UnicodeSåögTabÀ


704 
EFI_STATUS


705 
EFIAPI


706 
	`GëV¨übÀ2
 (

707 
IN
 
CONST
 
CHAR16
 *
Name
,

708 
IN
 
CONST
 
EFI_GUID
 *
Guid
,

709 
OUT
 
VOID
 **
VÆue
,

710 
OUT
 
UINTN
 *
Size
 
OPTIONAL


732 
EFI_STATUS


733 
EFIAPI


734 
	`GëEfiGlobÆV¨übÀ2
 (

735 
IN
 
CONST
 
CHAR16
 *
Name
,

736 
OUT
 
VOID
 **
VÆue
,

737 
OUT
 
UINTN
 *
Size
 
OPTIONAL


763 
EFI_STATUS


764 
EFIAPI


765 
	`GëV¨übÀ3
(

766 
IN
 
CONST
 
CHAR16
 *
Name
,

767 
IN
 
CONST
 
EFI_GUID
 *
Guid
,

768 
OUT
 
VOID
 **
VÆue
,

769 
OUT
 
UINTN
 *
Size
 
OPTIONAL
,

770 
OUT
 
UINT32
 *
Aâr
 
OPTIONAL


814 
CHAR8
 *

815 
EFIAPI


816 
	`GëBe°L™guage
 (

817 
IN
 
CONST
 
CHAR8
 *
Suµ‹ãdL™guages
,

818 
IN
 
UINTN
 
Iso639L™guage
,

840 
VOID


841 
EFIAPI


842 
	`Cª©eP›Up
 (

843 
IN
 
UINTN
 
Aâribuã
,

844 
OUT
 
EFI_INPUT_KEY
 *
Key
, 
OPTIONAL


861 
UINTN


862 
EFIAPI


863 
	`GëGlyphWidth
 (

864 
IN
 
CHAR16
 
UnicodeCh¨


883 
UINTN


884 
EFIAPI


885 
	`UnicodeSåögDi•œyLígth
 (

886 
IN
 
CONST
 
CHAR16
 *
Såög


901 
VOID


902 
EFIAPI


903 
	`EfiSig«lEvítRódyToBoŸ
 (

904 
VOID


916 
VOID


917 
EFIAPI


918 
	`EfiSig«lEvítLegacyBoŸ
 (

919 
VOID


939 
EFI_STATUS


940 
EFIAPI


941 
	`EfiCª©eEvítLegacyBoŸ
 (

942 
OUT
 
EFI_EVENT
 *
LegacyBoŸEvít


964 
EFI_STATUS


965 
EFIAPI


966 
	`EfiCª©eEvítLegacyBoŸEx
 (

967 
IN
 
EFI_TPL
 
NŸifyT∂
,

968 
IN
 
EFI_EVENT_NOTIFY
 
NŸifyFun˘i⁄
, 
OPTIONAL


969 
IN
 
VOID
 *
NŸifyC⁄ãxt
, 
OPTIONAL


970 
OUT
 
EFI_EVENT
 *
LegacyBoŸEvít


990 
EFI_STATUS


991 
EFIAPI


992 
	`EfiCª©eEvítRódyToBoŸ
 (

993 
OUT
 
EFI_EVENT
 *
RódyToBoŸEvít


1015 
EFI_STATUS


1016 
EFIAPI


1017 
	`EfiCª©eEvítRódyToBoŸEx
 (

1018 
IN
 
EFI_TPL
 
NŸifyT∂
,

1019 
IN
 
EFI_EVENT_NOTIFY
 
NŸifyFun˘i⁄
, 
OPTIONAL


1020 
IN
 
VOID
 *
NŸifyC⁄ãxt
, 
OPTIONAL


1021 
OUT
 
EFI_EVENT
 *
RódyToBoŸEvít


1040 
VOID


1041 
EFIAPI


1042 
	`EfiInôülizeFwVﬁDevi˚∑thNode
 (

1043 
IN
 
OUT
 
MEDIA_FW_VOL_FILEPATH_DEVICE_PATH
 *
FvDevi˚P©hNode
,

1044 
IN
 
CONST
 
EFI_GUID
 *
NameGuid


1065 
EFI_GUID
 *

1066 
EFIAPI


1067 
	`EfiGëNameGuidFromFwVﬁDevi˚P©hNode
 (

1068 
IN
 
CONST
 
MEDIA_FW_VOL_FILEPATH_DEVICE_PATH
 *
FvDevi˚P©hNode


1091 
UINTN


1092 
EFIAPI


1093 
	`Pröt
 (

1094 
IN
 
CONST
 
CHAR16
 *
F‹m©
,

1118 
UINTN


1119 
EFIAPI


1120 
	`Eº‹Pröt
 (

1121 
IN
 
CONST
 
CHAR16
 *
F‹m©
,

1144 
UINTN


1145 
EFIAPI


1146 
	`AsciiPröt
 (

1147 
IN
 
CONST
 
CHAR8
 *
F‹m©
,

1170 
UINTN


1171 
EFIAPI


1172 
	`AsciiEº‹Pröt
 (

1173 
IN
 
CONST
 
CHAR8
 *
F‹m©
,

1218 
UINTN


1219 
EFIAPI


1220 
	`PrötXY
 (

1221 
IN
 
UINTN
 
PoötX
,

1222 
IN
 
UINTN
 
PoötY
,

1223 
IN
 
EFI_GRAPHICS_OUTPUT_BLT_PIXEL
 *
F‹eGround
, 
OPTIONAL


1224 
IN
 
EFI_GRAPHICS_OUTPUT_BLT_PIXEL
 *
BackGround
, 
OPTIONAL


1225 
IN
 
CONST
 
CHAR16
 *
F‹m©
,

1268 
UINTN


1269 
EFIAPI


1270 
	`AsciiPrötXY
 (

1271 
IN
 
UINTN
 
PoötX
,

1272 
IN
 
UINTN
 
PoötY
,

1273 
IN
 
EFI_GRAPHICS_OUTPUT_BLT_PIXEL
 *
F‹eGround
, 
OPTIONAL


1274 
IN
 
EFI_GRAPHICS_OUTPUT_BLT_PIXEL
 *
BackGround
, 
OPTIONAL


1275 
IN
 
CONST
 
CHAR8
 *
F‹m©
,

1302 
EFI_STATUS


1303 
EFIAPI


1304 
	`EfiLibIn°ÆlDrivîBödög
 (

1305 
IN
 
CONST
 
EFI_HANDLE
 
ImageH™dÀ
,

1306 
IN
 
CONST
 
EFI_SYSTEM_TABLE
 *
Sy°emTabÀ
,

1307 
IN
 
EFI_DRIVER_BINDING_PROTOCOL
 *
DrivîBödög
,

1308 
IN
 
EFI_HANDLE
 
DrivîBödögH™dÀ


1324 
EFI_STATUS


1325 
EFIAPI


1326 
	`EfiLibUnö°ÆlDrivîBödög
 (

1327 
IN
 
EFI_DRIVER_BINDING_PROTOCOL
 *
DrivîBödög


1357 
EFI_STATUS


1358 
EFIAPI


1359 
	`EfiLibIn°ÆlAŒDrivîPrŸocﬁs
 (

1360 
IN
 
CONST
 
EFI_HANDLE
 
ImageH™dÀ
,

1361 
IN
 
CONST
 
EFI_SYSTEM_TABLE
 *
Sy°emTabÀ
,

1362 
IN
 
EFI_DRIVER_BINDING_PROTOCOL
 *
DrivîBödög
,

1363 
IN
 
EFI_HANDLE
 
DrivîBödögH™dÀ
,

1364 
IN
 
CONST
 
EFI_COMPONENT_NAME_PROTOCOL
 *
Comp⁄ítName
, 
OPTIONAL


1365 
IN
 
CONST
 
EFI_DRIVER_CONFIGURATION_PROTOCOL
 *
DrivîC⁄figuøti⁄
, 
OPTIONAL


1366 
IN
 
CONST
 
EFI_DRIVER_DIAGNOSTICS_PROTOCOL
 *
DrivîDügno°ics
 
OPTIONAL


1386 
EFI_STATUS


1387 
EFIAPI


1388 
	`EfiLibUnö°ÆlAŒDrivîPrŸocﬁs
 (

1389 
IN
 
EFI_DRIVER_BINDING_PROTOCOL
 *
DrivîBödög
,

1390 
IN
 
CONST
 
EFI_COMPONENT_NAME_PROTOCOL
 *
Comp⁄ítName
, 
OPTIONAL


1391 
IN
 
CONST
 
EFI_DRIVER_CONFIGURATION_PROTOCOL
 *
DrivîC⁄figuøti⁄
, 
OPTIONAL


1392 
IN
 
CONST
 
EFI_DRIVER_DIAGNOSTICS_PROTOCOL
 *
DrivîDügno°ics
 
OPTIONAL


1419 
EFI_STATUS


1420 
EFIAPI


1421 
	`EfiLibIn°ÆlDrivîBödögComp⁄ítName2
 (

1422 
IN
 
CONST
 
EFI_HANDLE
 
ImageH™dÀ
,

1423 
IN
 
CONST
 
EFI_SYSTEM_TABLE
 *
Sy°emTabÀ
,

1424 
IN
 
EFI_DRIVER_BINDING_PROTOCOL
 *
DrivîBödög
,

1425 
IN
 
EFI_HANDLE
 
DrivîBödögH™dÀ
,

1426 
IN
 
CONST
 
EFI_COMPONENT_NAME_PROTOCOL
 *
Comp⁄ítName
, 
OPTIONAL


1427 
IN
 
CONST
 
EFI_COMPONENT_NAME2_PROTOCOL
 *
Comp⁄ítName2
 
OPTIONAL


1445 
EFI_STATUS


1446 
EFIAPI


1447 
	`EfiLibUnö°ÆlDrivîBödögComp⁄ítName2
 (

1448 
IN
 
EFI_DRIVER_BINDING_PROTOCOL
 *
DrivîBödög
,

1449 
IN
 
CONST
 
EFI_COMPONENT_NAME_PROTOCOL
 *
Comp⁄ítName
, 
OPTIONAL


1450 
IN
 
CONST
 
EFI_COMPONENT_NAME2_PROTOCOL
 *
Comp⁄ítName2
 
OPTIONAL


1483 
EFI_STATUS


1484 
EFIAPI


1485 
	`EfiLibIn°ÆlAŒDrivîPrŸocﬁs2
 (

1486 
IN
 
CONST
 
EFI_HANDLE
 
ImageH™dÀ
,

1487 
IN
 
CONST
 
EFI_SYSTEM_TABLE
 *
Sy°emTabÀ
,

1488 
IN
 
EFI_DRIVER_BINDING_PROTOCOL
 *
DrivîBödög
,

1489 
IN
 
EFI_HANDLE
 
DrivîBödögH™dÀ
,

1490 
IN
 
CONST
 
EFI_COMPONENT_NAME_PROTOCOL
 *
Comp⁄ítName
, 
OPTIONAL


1491 
IN
 
CONST
 
EFI_COMPONENT_NAME2_PROTOCOL
 *
Comp⁄ítName2
, 
OPTIONAL


1492 
IN
 
CONST
 
EFI_DRIVER_CONFIGURATION_PROTOCOL
 *
DrivîC⁄figuøti⁄
, 
OPTIONAL


1493 
IN
 
CONST
 
EFI_DRIVER_CONFIGURATION2_PROTOCOL
 *
DrivîC⁄figuøti⁄2
, 
OPTIONAL


1494 
IN
 
CONST
 
EFI_DRIVER_DIAGNOSTICS_PROTOCOL
 *
DrivîDügno°ics
, 
OPTIONAL


1495 
IN
 
CONST
 
EFI_DRIVER_DIAGNOSTICS2_PROTOCOL
 *
DrivîDügno°ics2
 
OPTIONAL


1519 
EFI_STATUS


1520 
EFIAPI


1521 
	`EfiLibUnö°ÆlAŒDrivîPrŸocﬁs2
 (

1522 
IN
 
EFI_DRIVER_BINDING_PROTOCOL
 *
DrivîBödög
,

1523 
IN
 
CONST
 
EFI_COMPONENT_NAME_PROTOCOL
 *
Comp⁄ítName
, 
OPTIONAL


1524 
IN
 
CONST
 
EFI_COMPONENT_NAME2_PROTOCOL
 *
Comp⁄ítName2
, 
OPTIONAL


1525 
IN
 
CONST
 
EFI_DRIVER_CONFIGURATION_PROTOCOL
 *
DrivîC⁄figuøti⁄
, 
OPTIONAL


1526 
IN
 
CONST
 
EFI_DRIVER_CONFIGURATION2_PROTOCOL
 *
DrivîC⁄figuøti⁄2
, 
OPTIONAL


1527 
IN
 
CONST
 
EFI_DRIVER_DIAGNOSTICS_PROTOCOL
 *
DrivîDügno°ics
, 
OPTIONAL


1528 
IN
 
CONST
 
EFI_DRIVER_DIAGNOSTICS2_PROTOCOL
 *
DrivîDügno°ics2
 
OPTIONAL


1553 
CHAR16
*

1554 
EFIAPI


1555 
	`C©VSPröt
 (

1556 
IN
 
CHAR16
 *
Såög
, 
OPTIONAL


1557 
IN
 
CONST
 
CHAR16
 *
F‹m©Såög
,

1558 
IN
 
VA_LIST
 
M¨kî


1584 
CHAR16
 *

1585 
EFIAPI


1586 
	`C©SPröt
 (

1587 
IN
 
CHAR16
 *
Såög
, 
OPTIONAL


1588 
IN
 
CONST
 
CHAR16
 *
F‹m©Såög
,

1615 
EFI_STATUS


1616 
EFIAPI


1617 
	`EfiLoˇãPrŸocﬁBuf„r
 (

1618 
IN
 
EFI_GUID
 *
PrŸocﬁ
,

1619 
OUT
 
UINTN
 *
NoPrŸocﬁs
,

1620 
OUT
 
VOID
 ***
Buf„r


1687 
EFI_STATUS


1688 
EFIAPI


1689 
	`EfiO≥nFûeByDevi˚P©h
 (

1690 
IN
 
OUT
 
EFI_DEVICE_PATH_PROTOCOL
 **
FûeP©h
,

1691 
OUT
 
EFI_FILE_PROTOCOL
 **
Fûe
,

1692 
IN
 
UINT64
 
O≥nMode
,

1693 
IN
 
UINT64
 
Aâribuãs


1731 
EFI_ACPI_COMMON_HEADER
 *

1732 
EFIAPI


1733 
	`EfiLoˇãNextA˝iTabÀ
 (

1734 
IN
 
UINT32
 
Sig«tuª
,

1735 
IN
 
EFI_ACPI_COMMON_HEADER
 *
PªviousTabÀ
 
OPTIONAL


1755 
EFI_ACPI_COMMON_HEADER
 *

1756 
EFIAPI


1757 
	`EfiLoˇãFú°A˝iTabÀ
 (

1758 
IN
 
UINT32
 
Sig«tuª


	@UefiRuntimeLib.h

9 #i‚de‡
__UEFI_RUNTIME_LIB__


10 
	#__UEFI_RUNTIME_LIB__


	)

24 
BOOLEAN


25 
EFIAPI


26 
EfiAtRu¡ime
 (

27 
VOID


42 
BOOLEAN


43 
EFIAPI


44 
EfiG⁄eVútuÆ
 (

45 
VOID


69 
EFI_STATUS


70 
EFIAPI


71 
EfiGëTime
 (

72 
OUT
 
EFI_TIME
 *
Time
,

73 
OUT
 
EFI_TIME_CAPABILITIES
 *
C≠abûôõs
 
OPTIONAL


98 
EFI_STATUS


99 
EFIAPI


100 
EfiSëTime
 (

101 
IN
 
EFI_TIME
 *
Time


125 
EFI_STATUS


126 
EFIAPI


127 
EfiGëWakeupTime
 (

128 
OUT
 
BOOLEAN
 *
E«bÀd
,

129 
OUT
 
BOOLEAN
 *
Pídög
,

130 
OUT
 
EFI_TIME
 *
Time


155 
EFI_STATUS


156 
EFIAPI


157 
EfiSëWakeupTime
 (

158 
IN
 
BOOLEAN
 
E«bÀ
,

159 
IN
 
EFI_TIME
 *
Time
 
OPTIONAL


192 
EFI_STATUS


193 
EFIAPI


194 
EfiGëV¨übÀ
 (

195 
IN
 
CHAR16
 *
V¨übÀName
,

196 
IN
 
EFI_GUID
 *
Víd‹Guid
,

197 
OUT
 
UINT32
 *
Aâribuãs
 
OPTIONAL
,

198 
IN
 
OUT
 
UINTN
 *
D©aSize
,

199 
OUT
 
VOID
 *
D©a


232 
EFI_STATUS


233 
EFIAPI


234 
EfiGëNextV¨übÀName
 (

235 
IN
 
OUT
 
UINTN
 *
V¨übÀNameSize
,

236 
IN
 
OUT
 
CHAR16
 *
V¨übÀName
,

237 
IN
 
OUT
 
EFI_GUID
 *
Víd‹Guid


269 
EFI_STATUS


270 
EFIAPI


271 
EfiSëV¨übÀ
 (

272 
IN
 
CHAR16
 *
V¨übÀName
,

273 
IN
 
EFI_GUID
 *
Víd‹Guid
,

274 
IN
 
UINT32
 
Aâribuãs
,

275 
IN
 
UINTN
 
D©aSize
,

276 
IN
 
VOID
 *
D©a


295 
EFI_STATUS


296 
EFIAPI


297 
EfiGëNextHighM⁄Ÿ⁄icCou¡
 (

298 
OUT
 
UINT32
 *
HighCou¡


329 
VOID


330 
EFIAPI


331 
EfiRe£tSy°em
 (

332 
IN
 
EFI_RESET_TYPE
 
Re£tTy≥
,

333 
IN
 
EFI_STATUS
 
Re£tSètus
,

334 
IN
 
UINTN
 
D©aSize
,

335 
IN
 
VOID
 *
Re£tD©a
 
OPTIONAL


356 
EFI_STATUS


357 
EFIAPI


358 
EfiC⁄vîtPoöãr
 (

359 
IN
 
UINTN
 
DebugDi•osôi⁄
,

360 
IN
 
OUT
 
VOID
 **
Addªss


385 
EFI_STATUS


386 
EFIAPI


387 
EfiC⁄vîtFun˘i⁄Poöãr
 (

388 
IN
 
UINTN
 
DebugDi•osôi⁄
,

389 
IN
 
OUT
 
VOID
 **
Addªss


418 
EFI_STATUS


419 
EFIAPI


420 
EfiSëVútuÆAddªssM≠
 (

421 
IN
 
UINTN
 
Mem‹yM≠Size
,

422 
IN
 
UINTN
 
Des¸ùt‹Size
,

423 
IN
 
UINT32
 
Des¸ùt‹Vîsi⁄
,

424 
IN
 
CONST
 
EFI_MEMORY_DESCRIPTOR
 *
VútuÆM≠


442 
EFI_STATUS


443 
EFIAPI


444 
EfiC⁄vîtLi°
 (

445 
IN
 
UINTN
 
DebugDi•osôi⁄
,

446 
IN
 
OUT
 
LIST_ENTRY
 *
Li°Hód


484 
EFI_STATUS


485 
EFIAPI


486 
EfiUpd©eC≠suÀ
 (

487 
IN
 
EFI_CAPSULE_HEADER
 **
C≠suÀHódîAºay
,

488 
IN
 
UINTN
 
C≠suÀCou¡
,

489 
IN
 
EFI_PHYSICAL_ADDRESS
 
SˇâîG©hîLi°
 
OPTIONAL


527 
EFI_STATUS


528 
EFIAPI


529 
EfiQuîyC≠suÀC≠abûôõs
 (

530 
IN
 
EFI_CAPSULE_HEADER
 **
C≠suÀHódîAºay
,

531 
IN
 
UINTN
 
C≠suÀCou¡
,

532 
OUT
 
UINT64
 *
MaximumC≠suÀSize
,

533 
OUT
 
EFI_RESET_TYPE
 *
Re£tTy≥


571 
EFI_STATUS


572 
EFIAPI


573 
EfiQuîyV¨übÀInfo
 (

574 
IN
 
UINT32
 
Aâribuãs
,

575 
OUT
 
UINT64
 *
MaximumV¨übÀSt‹ageSize
,

576 
OUT
 
UINT64
 *
RemaöögV¨übÀSt‹ageSize
,

577 
OUT
 
UINT64
 *
MaximumV¨übÀSize


	@UefiRuntimeServicesTableLib.h

18 #i‚de‡
__UEFI_RUNTIME_SERVICES_TABLE_LIB_H__


19 
	#__UEFI_RUNTIME_SERVICES_TABLE_LIB_H__


	)

24 
EFI_RUNTIME_SERVICES
 *
gRT
;

	@UefiScsiLib.h

13 #i‚de‡
__SCSI_LIB_H__


14 
	#__SCSI_LIB_H__


	)

16 
	~<PrŸocﬁ/ScsiIo.h
>

85 
EFI_STATUS


86 
EFIAPI


87 
ScsiTe°UnôRódyComm™d
 (

88 
IN
 
EFI_SCSI_IO_PROTOCOL
 *
ScsiIo
,

89 
IN
 
UINT64
 
Timeout
,

90 
IN
 
OUT
 
VOID
 *
Sí£D©a
, 
OPTIONAL


91 
IN
 
OUT
 
UINT8
 *
Sí£D©aLígth
,

92 
OUT
 
UINT8
 *
Ho°Ad≠ãrSètus
,

93 
OUT
 
UINT8
 *
T¨gëSètus


184 
EFI_STATUS


185 
EFIAPI


186 
ScsiInquúyComm™d
 (

187 
IN
 
EFI_SCSI_IO_PROTOCOL
 *
ScsiIo
,

188 
IN
 
UINT64
 
Timeout
,

189 
IN
 
OUT
 
VOID
 *
Sí£D©a
, 
OPTIONAL


190 
IN
 
OUT
 
UINT8
 *
Sí£D©aLígth
,

191 
OUT
 
UINT8
 *
Ho°Ad≠ãrSètus
,

192 
OUT
 
UINT8
 *
T¨gëSètus
,

193 
IN
 
OUT
 
VOID
 *
InquúyD©aBuf„r
, 
OPTIONAL


194 
IN
 
OUT
 
UINT32
 *
InquúyD©aLígth
,

195 
IN
 
BOOLEAN
 
E«bÀVôÆProdu˘D©a


288 
EFI_STATUS


289 
EFIAPI


290 
ScsiInquúyComm™dEx
 (

291 
IN
 
EFI_SCSI_IO_PROTOCOL
 *
ScsiIo
,

292 
IN
 
UINT64
 
Timeout
,

293 
IN
 
OUT
 
VOID
 *
Sí£D©a
, 
OPTIONAL


294 
IN
 
OUT
 
UINT8
 *
Sí£D©aLígth
,

295 
OUT
 
UINT8
 *
Ho°Ad≠ãrSètus
,

296 
OUT
 
UINT8
 *
T¨gëSètus
,

297 
IN
 
OUT
 
VOID
 *
InquúyD©aBuf„r
, 
OPTIONAL


298 
IN
 
OUT
 
UINT32
 *
InquúyD©aLígth
,

299 
IN
 
BOOLEAN
 
E«bÀVôÆProdu˘D©a
,

300 
IN
 
UINT8
 
PageCode


393 
EFI_STATUS


394 
EFIAPI


395 
ScsiModeSí£10Comm™d
 (

396 
IN
 
EFI_SCSI_IO_PROTOCOL
 *
ScsiIo
,

397 
IN
 
UINT64
 
Timeout
,

398 
IN
 
OUT
 
VOID
 *
Sí£D©a
, 
OPTIONAL


399 
IN
 
OUT
 
UINT8
 *
Sí£D©aLígth
,

400 
OUT
 
UINT8
 *
Ho°Ad≠ãrSètus
,

401 
OUT
 
UINT8
 *
T¨gëSètus
,

402 
IN
 
OUT
 
VOID
 *
D©aBuf„r
, 
OPTIONAL


403 
IN
 
OUT
 
UINT32
 *
D©aLígth
,

404 
IN
 
UINT8
 
DBDFõld
, 
OPTIONAL


405 
IN
 
UINT8
 
PageC⁄åﬁ
,

406 
IN
 
UINT8
 
PageCode


443 
EFI_STATUS


444 
EFIAPI


445 
ScsiReque°Sí£Comm™d
 (

446 
IN
 
EFI_SCSI_IO_PROTOCOL
 *
ScsiIo
,

447 
IN
 
UINT64
 
Timeout
,

448 
IN
 
OUT
 
VOID
 *
Sí£D©a
, 
OPTIONAL


449 
IN
 
OUT
 
UINT8
 *
Sí£D©aLígth
,

450 
OUT
 
UINT8
 *
Ho°Ad≠ãrSètus
,

451 
OUT
 
UINT8
 *
T¨gëSètus


499 
EFI_STATUS


500 
EFIAPI


501 
ScsiRódC≠acôyComm™d
 (

502 
IN
 
EFI_SCSI_IO_PROTOCOL
 *
ScsiIo
,

503 
IN
 
UINT64
 
Timeout
,

504 
IN
 
OUT
 
VOID
 *
Sí£D©a
, 
OPTIONAL


505 
IN
 
OUT
 
UINT8
 *
Sí£D©aLígth
,

506 
OUT
 
UINT8
 *
Ho°Ad≠ãrSètus
,

507 
OUT
 
UINT8
 *
T¨gëSètus
,

508 
IN
 
OUT
 
VOID
 *
D©aBuf„r
, 
OPTIONAL


509 
IN
 
OUT
 
UINT32
 *
D©aLígth
,

510 
IN
 
BOOLEAN
 
Pmi


558 
EFI_STATUS


559 
EFIAPI


560 
ScsiRódC≠acôy16Comm™d
 (

561 
IN
 
EFI_SCSI_IO_PROTOCOL
 *
ScsiIo
,

562 
IN
 
UINT64
 
Timeout
,

563 
IN
 
OUT
 
VOID
 *
Sí£D©a
, 
OPTIONAL


564 
IN
 
OUT
 
UINT8
 *
Sí£D©aLígth
,

565 
OUT
 
UINT8
 *
Ho°Ad≠ãrSètus
,

566 
OUT
 
UINT8
 *
T¨gëSètus
,

567 
IN
 
OUT
 
VOID
 *
D©aBuf„r
, 
OPTIONAL


568 
IN
 
OUT
 
UINT32
 *
D©aLígth
,

569 
IN
 
BOOLEAN
 
Pmi


618 
EFI_STATUS


619 
EFIAPI


620 
ScsiRód10Comm™d
 (

621 
IN
 
EFI_SCSI_IO_PROTOCOL
 *
ScsiIo
,

622 
IN
 
UINT64
 
Timeout
,

623 
IN
 
OUT
 
VOID
 *
Sí£D©a
, 
OPTIONAL


624 
IN
 
OUT
 
UINT8
 *
Sí£D©aLígth
,

625 
OUT
 
UINT8
 *
Ho°Ad≠ãrSètus
,

626 
OUT
 
UINT8
 *
T¨gëSètus
,

627 
IN
 
OUT
 
VOID
 *
D©aBuf„r
, 
OPTIONAL


628 
IN
 
OUT
 
UINT32
 *
D©aLígth
,

629 
IN
 
UINT32
 
SèπLba
,

630 
IN
 
UINT32
 
Se˘‹Size


679 
EFI_STATUS


680 
EFIAPI


681 
ScsiWrôe10Comm™d
 (

682 
IN
 
EFI_SCSI_IO_PROTOCOL
 *
ScsiIo
,

683 
IN
 
UINT64
 
Timeout
,

684 
IN
 
OUT
 
VOID
 *
Sí£D©a
, 
OPTIONAL


685 
IN
 
OUT
 
UINT8
 *
Sí£D©aLígth
,

686 
OUT
 
UINT8
 *
Ho°Ad≠ãrSètus
,

687 
OUT
 
UINT8
 *
T¨gëSètus
,

688 
IN
 
OUT
 
VOID
 *
D©aBuf„r
, 
OPTIONAL


689 
IN
 
OUT
 
UINT32
 *
D©aLígth
,

690 
IN
 
UINT32
 
SèπLba
,

691 
IN
 
UINT32
 
Se˘‹Size


739 
EFI_STATUS


740 
EFIAPI


741 
ScsiRód16Comm™d
 (

742 
IN
 
EFI_SCSI_IO_PROTOCOL
 *
ScsiIo
,

743 
IN
 
UINT64
 
Timeout
,

744 
IN
 
OUT
 
VOID
 *
Sí£D©a
, 
OPTIONAL


745 
IN
 
OUT
 
UINT8
 *
Sí£D©aLígth
,

746 
OUT
 
UINT8
 *
Ho°Ad≠ãrSètus
,

747 
OUT
 
UINT8
 *
T¨gëSètus
,

748 
IN
 
OUT
 
VOID
 *
D©aBuf„r
, 
OPTIONAL


749 
IN
 
OUT
 
UINT32
 *
D©aLígth
,

750 
IN
 
UINT64
 
SèπLba
,

751 
IN
 
UINT32
 
Se˘‹Size


800 
EFI_STATUS


801 
EFIAPI


802 
ScsiWrôe16Comm™d
 (

803 
IN
 
EFI_SCSI_IO_PROTOCOL
 *
ScsiIo
,

804 
IN
 
UINT64
 
Timeout
,

805 
IN
 
OUT
 
VOID
 *
Sí£D©a
, 
OPTIONAL


806 
IN
 
OUT
 
UINT8
 *
Sí£D©aLígth
,

807 
OUT
 
UINT8
 *
Ho°Ad≠ãrSètus
,

808 
OUT
 
UINT8
 *
T¨gëSètus
,

809 
IN
 
OUT
 
VOID
 *
D©aBuf„r
, 
OPTIONAL


810 
IN
 
OUT
 
UINT32
 *
D©aLígth
,

811 
IN
 
UINT64
 
SèπLba
,

812 
IN
 
UINT32
 
Se˘‹Size


864 
EFI_STATUS


865 
EFIAPI


866 
ScsiSecurôyPrŸocﬁInComm™d
 (

867 
IN
 
EFI_SCSI_IO_PROTOCOL
 *
ScsiIo
,

868 
IN
 
UINT64
 
Timeout
,

869 
IN
 
OUT
 
VOID
 *
Sí£D©a
, 
OPTIONAL


870 
IN
 
OUT
 
UINT8
 *
Sí£D©aLígth
,

871 
OUT
 
UINT8
 *
Ho°Ad≠ãrSètus
,

872 
OUT
 
UINT8
 *
T¨gëSètus
,

873 
IN
 
UINT8
 
SecurôyPrŸocﬁ
,

874 
IN
 
UINT16
 
SecurôyPrŸocﬁS≥cific
,

875 
IN
 
BOOLEAN
 
Inc512
,

876 
IN
 
UINTN
 
D©aLígth
,

877 
IN
 
OUT
 
VOID
 *
D©aBuf„r
, 
OPTIONAL


878 
OUT
 
UINTN
 *
Tøns„rLígth


927 
EFI_STATUS


928 
EFIAPI


929 
ScsiSecurôyPrŸocﬁOutComm™d
 (

930 
IN
 
EFI_SCSI_IO_PROTOCOL
 *
ScsiIo
,

931 
IN
 
UINT64
 
Timeout
,

932 
IN
 
OUT
 
VOID
 *
Sí£D©a
, 
OPTIONAL


933 
IN
 
OUT
 
UINT8
 *
Sí£D©aLígth
,

934 
OUT
 
UINT8
 *
Ho°Ad≠ãrSètus
,

935 
OUT
 
UINT8
 *
T¨gëSètus
,

936 
IN
 
UINT8
 
SecurôyPrŸocﬁ
,

937 
IN
 
UINT16
 
SecurôyPrŸocﬁS≥cific
,

938 
IN
 
BOOLEAN
 
Inc512
,

939 
IN
 
UINTN
 
D©aLígth
,

940 
IN
 
OUT
 
VOID
 *
D©aBuf„r
 
OPTIONAL


1017 
EFI_STATUS


1018 
EFIAPI


1019 
ScsiRód10Comm™dEx
 (

1020 
IN
 
EFI_SCSI_IO_PROTOCOL
 *
ScsiIo
,

1021 
IN
 
UINT64
 
Timeout
,

1022 
IN
 
OUT
 
VOID
 *
Sí£D©a
, 
OPTIONAL


1023 
IN
 
OUT
 
UINT8
 *
Sí£D©aLígth
,

1024 
OUT
 
UINT8
 *
Ho°Ad≠ãrSètus
,

1025 
OUT
 
UINT8
 *
T¨gëSètus
,

1026 
IN
 
OUT
 
VOID
 *
D©aBuf„r
, 
OPTIONAL


1027 
IN
 
OUT
 
UINT32
 *
D©aLígth
,

1028 
IN
 
UINT32
 
SèπLba
,

1029 
IN
 
UINT32
 
Se˘‹Size
,

1030 
IN
 
EFI_EVENT
 
Evít
 
OPTIONAL


1107 
EFI_STATUS


1108 
EFIAPI


1109 
ScsiWrôe10Comm™dEx
 (

1110 
IN
 
EFI_SCSI_IO_PROTOCOL
 *
ScsiIo
,

1111 
IN
 
UINT64
 
Timeout
,

1112 
IN
 
OUT
 
VOID
 *
Sí£D©a
, 
OPTIONAL


1113 
IN
 
OUT
 
UINT8
 *
Sí£D©aLígth
,

1114 
OUT
 
UINT8
 *
Ho°Ad≠ãrSètus
,

1115 
OUT
 
UINT8
 *
T¨gëSètus
,

1116 
IN
 
OUT
 
VOID
 *
D©aBuf„r
, 
OPTIONAL


1117 
IN
 
OUT
 
UINT32
 *
D©aLígth
,

1118 
IN
 
UINT32
 
SèπLba
,

1119 
IN
 
UINT32
 
Se˘‹Size
,

1120 
IN
 
EFI_EVENT
 
Evít
 
OPTIONAL


1197 
EFI_STATUS


1198 
EFIAPI


1199 
ScsiRód16Comm™dEx
 (

1200 
IN
 
EFI_SCSI_IO_PROTOCOL
 *
ScsiIo
,

1201 
IN
 
UINT64
 
Timeout
,

1202 
IN
 
OUT
 
VOID
 *
Sí£D©a
, 
OPTIONAL


1203 
IN
 
OUT
 
UINT8
 *
Sí£D©aLígth
,

1204 
OUT
 
UINT8
 *
Ho°Ad≠ãrSètus
,

1205 
OUT
 
UINT8
 *
T¨gëSètus
,

1206 
IN
 
OUT
 
VOID
 *
D©aBuf„r
, 
OPTIONAL


1207 
IN
 
OUT
 
UINT32
 *
D©aLígth
,

1208 
IN
 
UINT64
 
SèπLba
,

1209 
IN
 
UINT32
 
Se˘‹Size
,

1210 
IN
 
EFI_EVENT
 
Evít
 
OPTIONAL


1287 
EFI_STATUS


1288 
EFIAPI


1289 
ScsiWrôe16Comm™dEx
 (

1290 
IN
 
EFI_SCSI_IO_PROTOCOL
 *
ScsiIo
,

1291 
IN
 
UINT64
 
Timeout
,

1292 
IN
 
OUT
 
VOID
 *
Sí£D©a
, 
OPTIONAL


1293 
IN
 
OUT
 
UINT8
 *
Sí£D©aLígth
,

1294 
OUT
 
UINT8
 *
Ho°Ad≠ãrSètus
,

1295 
OUT
 
UINT8
 *
T¨gëSètus
,

1296 
IN
 
OUT
 
VOID
 *
D©aBuf„r
, 
OPTIONAL


1297 
IN
 
OUT
 
UINT32
 *
D©aLígth
,

1298 
IN
 
UINT64
 
SèπLba
,

1299 
IN
 
UINT32
 
Se˘‹Size
,

1300 
IN
 
EFI_EVENT
 
Evít
 
OPTIONAL


	@UefiUsbLib.h

11 #i‚de‡
__USB_DXE_LIB_H__


12 
	#__USB_DXE_LIB_H__


	)

14 
	~<PrŸocﬁ/UsbIo.h
>

35 
EFI_STATUS


36 
EFIAPI


37 
UsbGëHidDes¸ùt‹
 (

38 
IN
 
EFI_USB_IO_PROTOCOL
 *
UsbIo
,

39 
IN
 
UINT8
 
I¡îÁ˚
,

40 
OUT
 
EFI_USB_HID_DESCRIPTOR
 *
HidDes¸ùt‹


65 
EFI_STATUS


66 
EFIAPI


67 
UsbGëRï‹tDes¸ùt‹
 (

68 
IN
 
EFI_USB_IO_PROTOCOL
 *
UsbIo
,

69 
IN
 
UINT8
 
I¡îÁ˚
,

70 
IN
 
UINT16
 
Des¸ùt‹Lígth
,

71 
OUT
 
UINT8
 *
Des¸ùt‹Buf„r


91 
EFI_STATUS


92 
EFIAPI


93 
UsbGëPrŸocﬁReque°
 (

94 
IN
 
EFI_USB_IO_PROTOCOL
 *
UsbIo
,

95 
IN
 
UINT8
 
I¡îÁ˚
,

96 
OUT
 
UINT8
 *
PrŸocﬁ


115 
EFI_STATUS


116 
EFIAPI


117 
UsbSëPrŸocﬁReque°
 (

118 
IN
 
EFI_USB_IO_PROTOCOL
 *
UsbIo
,

119 
IN
 
UINT8
 
I¡îÁ˚
,

120 
IN
 
UINT8
 
PrŸocﬁ


140 
EFI_STATUS


141 
EFIAPI


142 
UsbSëIdÀReque°
 (

143 
IN
 
EFI_USB_IO_PROTOCOL
 *
UsbIo
,

144 
IN
 
UINT8
 
I¡îÁ˚
,

145 
IN
 
UINT8
 
Rï‹tId
,

146 
IN
 
UINT8
 
Duøti⁄


167 
EFI_STATUS


168 
EFIAPI


169 
UsbGëIdÀReque°
 (

170 
IN
 
EFI_USB_IO_PROTOCOL
 *
UsbIo
,

171 
IN
 
UINT8
 
I¡îÁ˚
,

172 
IN
 
UINT8
 
Rï‹tId
,

173 
OUT
 
UINT8
 *
Duøti⁄


197 
EFI_STATUS


198 
EFIAPI


199 
UsbSëRï‹tReque°
 (

200 
IN
 
EFI_USB_IO_PROTOCOL
 *
UsbIo
,

201 
IN
 
UINT8
 
I¡îÁ˚
,

202 
IN
 
UINT8
 
Rï‹tId
,

203 
IN
 
UINT8
 
Rï‹tTy≥
,

204 
IN
 
UINT16
 
Rï‹tLí
,

205 
IN
 
UINT8
 *
Rï‹t


232 
EFI_STATUS


233 
EFIAPI


234 
UsbGëRï‹tReque°
 (

235 
IN
 
EFI_USB_IO_PROTOCOL
 *
UsbIo
,

236 
IN
 
UINT8
 
I¡îÁ˚
,

237 
IN
 
UINT8
 
Rï‹tId
,

238 
IN
 
UINT8
 
Rï‹tTy≥
,

239 
IN
 
UINT16
 
Rï‹tLí
,

240 
OUT
 
UINT8
 *
Rï‹t


269 
EFI_STATUS


270 
EFIAPI


271 
UsbGëDes¸ùt‹
 (

272 
IN
 
EFI_USB_IO_PROTOCOL
 *
UsbIo
,

273 
IN
 
UINT16
 
VÆue
,

274 
IN
 
UINT16
 
Index
,

275 
IN
 
UINT16
 
Des¸ùt‹Lígth
,

276 
OUT
 
VOID
 *
Des¸ùt‹
,

277 
OUT
 
UINT32
 *
Sètus


303 
EFI_STATUS


304 
EFIAPI


305 
UsbSëDes¸ùt‹
 (

306 
IN
 
EFI_USB_IO_PROTOCOL
 *
UsbIo
,

307 
IN
 
UINT16
 
VÆue
,

308 
IN
 
UINT16
 
Index
,

309 
IN
 
UINT16
 
Des¸ùt‹Lígth
,

310 
IN
 
VOID
 *
Des¸ùt‹
,

311 
OUT
 
UINT32
 *
Sètus


335 
EFI_STATUS


336 
EFIAPI


337 
UsbGëI¡îÁ˚
 (

338 
IN
 
EFI_USB_IO_PROTOCOL
 *
UsbIo
,

339 
IN
 
UINT16
 
I¡îÁ˚
,

340 
OUT
 
UINT16
 *
A…î«ãSëtög
,

341 
OUT
 
UINT32
 *
Sètus


364 
EFI_STATUS


365 
EFIAPI


366 
UsbSëI¡îÁ˚
 (

367 
IN
 
EFI_USB_IO_PROTOCOL
 *
UsbIo
,

368 
IN
 
UINT16
 
I¡îÁ˚
,

369 
IN
 
UINT16
 
A…î«ãSëtög
,

370 
OUT
 
UINT32
 *
Sètus


393 
EFI_STATUS


394 
EFIAPI


395 
UsbGëC⁄figuøti⁄
 (

396 
IN
 
EFI_USB_IO_PROTOCOL
 *
UsbIo
,

397 
OUT
 
UINT16
 *
C⁄figuøti⁄VÆue
,

398 
OUT
 
UINT32
 *
Sètus


420 
EFI_STATUS


421 
EFIAPI


422 
UsbSëC⁄figuøti⁄
 (

423 
IN
 
EFI_USB_IO_PROTOCOL
 *
UsbIo
,

424 
IN
 
UINT16
 
C⁄figuøti⁄VÆue
,

425 
OUT
 
UINT32
 *
Sètus


451 
EFI_STATUS


452 
EFIAPI


453 
UsbSëFótuª
 (

454 
IN
 
EFI_USB_IO_PROTOCOL
 *
UsbIo
,

455 
IN
 
USB_TYPES_DEFINITION
 
Recùõ¡
,

456 
IN
 
UINT16
 
VÆue
,

457 
IN
 
UINT16
 
T¨gë
,

458 
OUT
 
UINT32
 *
Sètus


484 
EFI_STATUS


485 
EFIAPI


486 
UsbCÀ¨Fótuª
 (

487 
IN
 
EFI_USB_IO_PROTOCOL
 *
UsbIo
,

488 
IN
 
USB_TYPES_DEFINITION
 
Recùõ¡
,

489 
IN
 
UINT16
 
VÆue
,

490 
IN
 
UINT16
 
T¨gë
,

491 
OUT
 
UINT32
 *
Sètus


518 
EFI_STATUS


519 
EFIAPI


520 
UsbGëSètus
 (

521 
IN
 
EFI_USB_IO_PROTOCOL
 *
UsbIo
,

522 
IN
 
USB_TYPES_DEFINITION
 
Recùõ¡
,

523 
IN
 
UINT16
 
T¨gë
,

524 
OUT
 
UINT16
 *
Devi˚Sètus
,

525 
OUT
 
UINT32
 *
Sètus


549 
EFI_STATUS


550 
EFIAPI


551 
UsbCÀ¨EndpoötHÆt
 (

552 
IN
 
EFI_USB_IO_PROTOCOL
 *
UsbIo
,

553 
IN
 
UINT8
 
Endpoöt
,

554 
OUT
 
UINT32
 *
Sètus


	@UnitTestLib.h

10 #i‚de‡
__UNIT_TEST_LIB_H__


11 
	#__UNIT_TEST_LIB_H__


	)

16 
UINT32
 
	tUNIT_TEST_STATUS
;

17 
	#UNIT_TEST_PASSED
 (0)

	)

18 
	#UNIT_TEST_ERROR_PREREQUISITE_NOT_MET
 (1)

	)

19 
	#UNIT_TEST_ERROR_TEST_FAILED
 (2)

	)

20 
	#UNIT_TEST_ERROR_CLEANUP_FAILED
 (3)

	)

21 
	#UNIT_TEST_SKIPPED
 (0xFFFFFFFD)

	)

22 
	#UNIT_TEST_RUNNING
 (0xFFFFFFFE)

	)

23 
	#UNIT_TEST_PENDING
 (0xFFFFFFFF)

	)

28 
	#UNIT_TEST_LOG_LEVEL_ERROR
 
BIT0


	)

29 
	#UNIT_TEST_LOG_LEVEL_WARN
 
BIT1


	)

30 
	#UNIT_TEST_LOG_LEVEL_INFO
 
BIT2


	)

31 
	#UNIT_TEST_LOG_LEVEL_VERBOSE
 
BIT3


	)

36 
	gUNIT_TEST_FRAMEWORK_OBJECT
;

37 
UNIT_TEST_FRAMEWORK_OBJECT
 *
	tUNIT_TEST_FRAMEWORK_HANDLE
;

42 
	gUNIT_TEST_SUITE_OBJECT
;

43 
UNIT_TEST_SUITE_OBJECT
 *
	tUNIT_TEST_SUITE_HANDLE
;

48 
	gUNIT_TEST_OBJECT
;

49 
UNIT_TEST_OBJECT
 *
	tUNIT_TEST_HANDLE
;

54 
VOID
* 
	tUNIT_TEST_CONTEXT
;

76 
	gUNIT_TEST_STATUS


77 (
	tEFIAPI
 *
	tUNIT_TEST_FUNCTION
)(

78 
	tIN
 
	tUNIT_TEST_CONTEXT
 
	tC⁄ãxt


102 
	gUNIT_TEST_STATUS


103 (
	tEFIAPI
 *
	tUNIT_TEST_PREREQUISITE
)(

104 
	tIN
 
	tUNIT_TEST_CONTEXT
 
	tC⁄ãxt


129 
	gVOID


130 (
	tEFIAPI
 *
	tUNIT_TEST_CLEANUP
)(

131 
	tIN
 
	tUNIT_TEST_CONTEXT
 
	tC⁄ãxt


143 
	gVOID


144 (
	tEFIAPI
 *
	tUNIT_TEST_SUITE_SETUP
)(

145 
	tVOID


157 
	gVOID


158 (
	tEFIAPI
 *
	tUNIT_TEST_SUITE_TEARDOWN
)(

159 
	tVOID


186 
EFI_STATUS


187 
EFIAPI


188 
InôUnôTe°Fømew‹k
 (

189 
OUT
 
UNIT_TEST_FRAMEWORK_HANDLE
 *
Fømew‹kH™dÀ
,

190 
IN
 
CHAR8
 *
TôÀ
,

191 
IN
 
CHAR8
 *
Sh‹tTôÀ
,

192 
IN
 
CHAR8
 *
Vîsi⁄Såög


221 
EFI_STATUS


222 
EFIAPI


223 
Cª©eUnôTe°Suôe
 (

224 
OUT
 
UNIT_TEST_SUITE_HANDLE
 *
SuôeH™dÀ
,

225 
IN
 
UNIT_TEST_FRAMEWORK_HANDLE
 
Fømew‹kH™dÀ
,

226 
IN
 
CHAR8
 *
TôÀ
,

227 
IN
 
CHAR8
 *
Name
,

228 
IN
 
UNIT_TEST_SUITE_SETUP
 
Sëup
 
OPTIONAL
,

229 
IN
 
UNIT_TEST_SUITE_TEARDOWN
 
Tórdown
 
OPTIONAL


256 
EFI_STATUS


257 
EFIAPI


258 
AddTe°Ca£
 (

259 
IN
 
UNIT_TEST_SUITE_HANDLE
 
SuôeH™dÀ
,

260 
IN
 
CHAR8
 *
Des¸ùti⁄
,

261 
IN
 
CHAR8
 *
Name
,

262 
IN
 
UNIT_TEST_FUNCTION
 
Fun˘i⁄
,

263 
IN
 
UNIT_TEST_PREREQUISITE
 
Pªªquisôe
 
OPTIONAL
,

264 
IN
 
UNIT_TEST_CLEANUP
 
CÀ™Up
 
OPTIONAL
,

265 
IN
 
UNIT_TEST_CONTEXT
 
C⁄ãxt
 
OPTIONAL


282 
EFI_STATUS


283 
EFIAPI


284 
RunAŒTe°Suôes
 (

285 
IN
 
UNIT_TEST_FRAMEWORK_HANDLE
 
Fømew‹kH™dÀ


302 
EFI_STATUS


303 
EFIAPI


304 
FªeUnôTe°Fømew‹k
 (

305 
IN
 
UNIT_TEST_FRAMEWORK_HANDLE
 
Fømew‹kH™dÀ


336 
EFI_STATUS


337 
EFIAPI


338 
SaveFømew‹kSèã
 (

339 
IN
 
UNIT_TEST_CONTEXT
 
C⁄ãxtToSave
 
OPTIONAL
,

340 
IN
 
UINTN
 
C⁄ãxtToSaveSize


350 
	#UT_ASSERT_TRUE
(
Ex¥essi⁄
Ë\

	)

351 if(!
UnôTe°As£πTrue
 ((
Ex¥essi⁄
), 
__FUNCTION__
, 
__LINE__
, 
__FILE__
, #Expression)) { \

352  
	gUNIT_TEST_ERROR_TEST_FAILED
; \

362 
	#UT_ASSERT_FALSE
(
Ex¥essi⁄
Ë\

	)

363 if(!
UnôTe°As£πFÆ£
 ((
Ex¥essi⁄
), 
__FUNCTION__
, 
__LINE__
, 
__FILE__
, #Expression)) { \

364  
	gUNIT_TEST_ERROR_TEST_FAILED
; \

375 
	#UT_ASSERT_EQUAL
(
VÆueA
, 
VÆueB
Ë\

	)

376 if(!
UnôTe°As£πEquÆ
 ((
UINT64
)(
VÆueA
), (UINT64)(
VÆueB
), 
__FUNCTION__
, 
__LINE__
, 
__FILE__
, #ValueA, #ValueB)) { \

377  
	gUNIT_TEST_ERROR_TEST_FAILED
; \

389 
	#UT_ASSERT_MEM_EQUAL
(
Buf„rA
, 
Buf„rB
, 
Lígth
Ë\

	)

390 if(!
UnôTe°As£πMemEquÆ
 ((
VOID
 *)(
UINTN
)(
Buf„rA
), (VOID *)(UINTN)(
Buf„rB
), (UINTN)
Lígth
, 
__FUNCTION__
, 
__LINE__
, 
__FILE__
, #BufferA, #BufferB)) { \

391  
	gUNIT_TEST_ERROR_TEST_FAILED
; \

402 
	#UT_ASSERT_NOT_EQUAL
(
VÆueA
, 
VÆueB
Ë\

	)

403 if(!
UnôTe°As£πNŸEquÆ
 ((
UINT64
)(
VÆueA
), (UINT64)(
VÆueB
), 
__FUNCTION__
, 
__LINE__
, 
__FILE__
, #ValueA, #ValueB)) { \

404  
	gUNIT_TEST_ERROR_TEST_FAILED
; \

414 
	#UT_ASSERT_NOT_EFI_ERROR
(
Sètus
Ë\

	)

415 if(!
UnôTe°As£πNŸEfiEº‹
 ((
Sètus
), 
__FUNCTION__
, 
__LINE__
, 
__FILE__
, #Status)) { \

416  
	gUNIT_TEST_ERROR_TEST_FAILED
; \

427 
	#UT_ASSERT_STATUS_EQUAL
(
Sètus
, 
Ex≥˘ed
Ë\

	)

428 if(!
UnôTe°As£πSètusEquÆ
 ((
Sètus
), (
Ex≥˘ed
), 
__FUNCTION__
, 
__LINE__
, 
__FILE__
, #Status)) { \

429  
	gUNIT_TEST_ERROR_TEST_FAILED
; \

439 
	#UT_ASSERT_NOT_NULL
(
Poöãr
Ë\

	)

440 if(!
UnôTe°As£πNŸNuŒ
 ((
Poöãr
), 
__FUNCTION__
, 
__LINE__
, 
__FILE__
, #Pointer)) { \

441  
	gUNIT_TEST_ERROR_TEST_FAILED
; \

459 #i‡
deföed
 (
EDKII_UNIT_TEST_FRAMEWORK_ENABLED
)

460 
	~<Libøry/Ba£Lib.h
>

466 
BASE_LIBRARY_JUMP_BUFFER
 *
gUnôTe°Ex≥˘As£πFaûuªJumpBuf„r
;

468 
	#UT_EXPECT_ASSERT_FAILURE
(
Fun˘i⁄CÆl
, 
Sètus
Ë\

	)

470 
UNIT_TEST_STATUS
 
	gUnôTe°JumpSètus
; \

471 
BASE_LIBRARY_JUMP_BUFFER
 
	gUnôTe°JumpBuf„r
; \

472 
	gUnôTe°JumpSètus
 = 
UNIT_TEST_SKIPPED
; \

473 i‡(
DebugAs£πE«bÀd
 ()) { \

474 
	ggUnôTe°Ex≥˘As£πFaûuªJumpBuf„r
 = &
UnôTe°JumpBuf„r
; \

475 i‡(
SëJump
 (
gUnôTe°Ex≥˘As£πFaûuªJumpBuf„r
) == 0) { \

476 
Fun˘i⁄CÆl
; \

477 
	gUnôTe°JumpSètus
 = 
UNIT_TEST_ERROR_TEST_FAILED
; \

479 
	gUnôTe°JumpSètus
 = 
UNIT_TEST_PASSED
; \

481 
	ggUnôTe°Ex≥˘As£πFaûuªJumpBuf„r
 = 
NULL
; \

483 i‡(!
UnôTe°Ex≥˘As£πFaûuª
 ( \

484 
UnôTe°JumpSètus
, \

485 
__FUNCTION__
, 
__LINE__
, 
__FILE__
, \

486 #Fun˘i⁄CÆl, 
Sètus
)) { \

487  
	gUNIT_TEST_ERROR_TEST_FAILED
; \

489 } 
FALSE
)

491 
	#UT_EXPECT_ASSERT_FAILURE
(
Fun˘i⁄CÆl
, 
Sètus
ËFun˘i⁄CÆl;

	)

512 
BOOLEAN


513 
EFIAPI


514 
	`UnôTe°As£πTrue
 (

515 
IN
 
BOOLEAN
 
Ex¥essi⁄
,

516 
IN
 
CONST
 
CHAR8
 *
Fun˘i⁄Name
,

517 
IN
 
UINTN
 
LöeNumbî
,

518 
IN
 
CONST
 
CHAR8
 *
FûeName
,

519 
IN
 
CONST
 
CHAR8
 *
Des¸ùti⁄


540 
BOOLEAN


541 
EFIAPI


542 
	`UnôTe°As£πFÆ£
 (

543 
IN
 
BOOLEAN
 
Ex¥essi⁄
,

544 
IN
 
CONST
 
CHAR8
 *
Fun˘i⁄Name
,

545 
IN
 
UINTN
 
LöeNumbî
,

546 
IN
 
CONST
 
CHAR8
 *
FûeName
,

547 
IN
 
CONST
 
CHAR8
 *
Des¸ùti⁄


568 
BOOLEAN


569 
EFIAPI


570 
	`UnôTe°As£πNŸEfiEº‹
 (

571 
IN
 
EFI_STATUS
 
Sètus
,

572 
IN
 
CONST
 
CHAR8
 *
Fun˘i⁄Name
,

573 
IN
 
UINTN
 
LöeNumbî
,

574 
IN
 
CONST
 
CHAR8
 *
FûeName
,

575 
IN
 
CONST
 
CHAR8
 *
Des¸ùti⁄


599 
BOOLEAN


600 
EFIAPI


601 
	`UnôTe°As£πEquÆ
 (

602 
IN
 
UINT64
 
VÆueA
,

603 
IN
 
UINT64
 
VÆueB
,

604 
IN
 
CONST
 
CHAR8
 *
Fun˘i⁄Name
,

605 
IN
 
UINTN
 
LöeNumbî
,

606 
IN
 
CONST
 
CHAR8
 *
FûeName
,

607 
IN
 
CONST
 
CHAR8
 *
Des¸ùti⁄A
,

608 
IN
 
CONST
 
CHAR8
 *
Des¸ùti⁄B


636 
BOOLEAN


637 
EFIAPI


638 
	`UnôTe°As£πMemEquÆ
 (

639 
IN
 
VOID
 *
Buf„rA
,

640 
IN
 
VOID
 *
Buf„rB
,

641 
IN
 
UINTN
 
Lígth
,

642 
IN
 
CONST
 
CHAR8
 *
Fun˘i⁄Name
,

643 
IN
 
UINTN
 
LöeNumbî
,

644 
IN
 
CONST
 
CHAR8
 *
FûeName
,

645 
IN
 
CONST
 
CHAR8
 *
Des¸ùti⁄A
,

646 
IN
 
CONST
 
CHAR8
 *
Des¸ùti⁄B


670 
BOOLEAN


671 
EFIAPI


672 
	`UnôTe°As£πNŸEquÆ
 (

673 
IN
 
UINT64
 
VÆueA
,

674 
IN
 
UINT64
 
VÆueB
,

675 
IN
 
CONST
 
CHAR8
 *
Fun˘i⁄Name
,

676 
IN
 
UINTN
 
LöeNumbî
,

677 
IN
 
CONST
 
CHAR8
 *
FûeName
,

678 
IN
 
CONST
 
CHAR8
 *
Des¸ùti⁄A
,

679 
IN
 
CONST
 
CHAR8
 *
Des¸ùti⁄B


702 
BOOLEAN


703 
EFIAPI


704 
	`UnôTe°As£πSètusEquÆ
 (

705 
IN
 
EFI_STATUS
 
Sètus
,

706 
IN
 
EFI_STATUS
 
Ex≥˘ed
,

707 
IN
 
CONST
 
CHAR8
 *
Fun˘i⁄Name
,

708 
IN
 
UINTN
 
LöeNumbî
,

709 
IN
 
CONST
 
CHAR8
 *
FûeName
,

710 
IN
 
CONST
 
CHAR8
 *
Des¸ùti⁄


733 
BOOLEAN


734 
EFIAPI


735 
	`UnôTe°As£πNŸNuŒ
 (

736 
IN
 
VOID
 *
Poöãr
,

737 
IN
 
CONST
 
CHAR8
 *
Fun˘i⁄Name
,

738 
IN
 
UINTN
 
LöeNumbî
,

739 
IN
 
CONST
 
CHAR8
 *
FûeName
,

740 
IN
 
CONST
 
CHAR8
 *
PoöãrName


772 
BOOLEAN


773 
EFIAPI


774 
	`UnôTe°Ex≥˘As£πFaûuª
 (

775 
IN
 
UNIT_TEST_STATUS
 
UnôTe°Sètus
,

776 
IN
 
CONST
 
CHAR8
 *
Fun˘i⁄Name
,

777 
IN
 
UINTN
 
LöeNumbî
,

778 
IN
 
CONST
 
CHAR8
 *
FûeName
,

779 
IN
 
CONST
 
CHAR8
 *
Fun˘i⁄CÆl
,

780 
OUT
 
UNIT_TEST_STATUS
 *
Resu…Sètus
 
OPTIONAL


791 
	#UT_LOG_ERROR
(
F‹m©
, ...Ë\

	)

792 
	`UnôTe°Log
 (
UNIT_TEST_LOG_LEVEL_ERROR
, 
F‹m©
, ##
__VA_ARGS__
)

802 
	#UT_LOG_WARNING
(
F‹m©
, ...Ë\

	)

803 
	`UnôTe°Log
 (
UNIT_TEST_LOG_LEVEL_WARN
, 
F‹m©
, ##
__VA_ARGS__
)

813 
	#UT_LOG_INFO
(
F‹m©
, ...Ë\

	)

814 
	`UnôTe°Log
 (
UNIT_TEST_LOG_LEVEL_INFO
, 
F‹m©
, ##
__VA_ARGS__
)

824 
	#UT_LOG_VERBOSE
(
F‹m©
, ...Ë\

	)

825 
	`UnôTe°Log
 (
UNIT_TEST_LOG_LEVEL_VERBOSE
, 
F‹m©
, ##
__VA_ARGS__
)

836 
VOID


837 
EFIAPI


838 
	`UnôTe°Log
 (

839 
IN
 
UINTN
 
Eº‹Levñ
,

840 
IN
 
CONST
 
CHAR8
 *
F‹m©
,

	@
1
.
1
/usr/include
65
1106
BaseLib.h
BaseMemoryLib.h
CacheMaintenanceLib.h
CpuLib.h
DebugLib.h
DebugPrintErrorLevelLib.h
DevicePathLib.h
DxeCoreEntryPoint.h
DxeServicesLib.h
DxeServicesTableLib.h
ExtractGuidedSectionLib.h
FileHandleLib.h
HobLib.h
HstiLib.h
IoLib.h
MemoryAllocationLib.h
MmServicesTableLib.h
OrderedCollectionLib.h
PcdLib.h
PciCf8Lib.h
PciExpressLib.h
PciLib.h
PciSegmentInfoLib.h
PciSegmentLib.h
PeCoffExtraActionLib.h
PeCoffGetEntryPointLib.h
PeCoffLib.h
PeiCoreEntryPoint.h
PeiServicesLib.h
PeiServicesTablePointerLib.h
PeimEntryPoint.h
PerformanceLib.h
PostCodeLib.h
PrintLib.h
ReportStatusCodeLib.h
ResourcePublicationLib.h
RngLib.h
S3BootScriptLib.h
S3IoLib.h
S3PciLib.h
S3PciSegmentLib.h
S3SmbusLib.h
S3StallLib.h
SafeIntLib.h
SerialPortLib.h
SmbusLib.h
SmiHandlerProfileLib.h
SmmIoLib.h
SmmLib.h
SmmMemLib.h
SmmPeriodicSmiLib.h
SmmServicesTableLib.h
StandaloneMmDriverEntryPoint.h
SynchronizationLib.h
TimerLib.h
UefiApplicationEntryPoint.h
UefiBootServicesTableLib.h
UefiDecompressLib.h
UefiDriverEntryPoint.h
UefiLib.h
UefiRuntimeLib.h
UefiRuntimeServicesTableLib.h
UefiScsiLib.h
UefiUsbLib.h
UnitTestLib.h
